id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/7528:57122,Security,secur,security,57122,l to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:57471,Security,secur,security,57471,provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:57660,Security,secur,security,57660, checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:57780,Security,secur,security,57780,to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:58128,Security,secur,security,58128,ot provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:58317,Security,secur,security,58317,ary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:58437,Security,secur,security,58437,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:58785,Security,secur,security,58785,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:58974,Security,secur,security,58974,dary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:59094,Security,secur,security,59094,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:59442,Security,secur,security,59442,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:59631,Security,secur,security,59631,dary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:59751,Security,secur,security,59751,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:60099,Security,secur,security,60099,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:60288,Security,secur,security,60288,dary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:60408,Security,secur,security,60408,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:60757,Security,secur,security,60757,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:60946,Security,secur,security,60946,ary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:61066,Security,secur,security,61066,ll to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12859; /opt/root_src/net/http/civetweb/civetweb.c:14262:2: warning: Call to function 'memset' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:61415,Security,secur,security,61415,ot provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12859; /opt/root_src/net/http/civetweb/civetweb.c:14262:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:61604,Security,secur,security,61604,ry checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12859; /opt/root_src/net/http/civetweb/civetweb.c:14262:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:61724,Security,secur,security,61724,ll to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12859; /opt/root_src/net/http/civetweb/civetweb.c:14262:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:62072,Security,secur,security,62072,ot provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12859; /opt/root_src/net/http/civetweb/civetweb.c:14262:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:62261,Security,secur,security,62261,ary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12859; /opt/root_src/net/http/civetweb/civetweb.c:14262:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:62381,Security,secur,security,62381,all to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12859; /opt/root_src/net/http/civetweb/civetweb.c:14262:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:62729,Security,secur,security,62729,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12859; /opt/root_src/net/http/civetweb/civetweb.c:14262:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:62918,Security,secur,security,62918,dary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12859; /opt/root_src/net/http/civetweb/civetweb.c:14262:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:63038,Security,secur,security,63038,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:63387,Security,secur,security,63387,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:63576,Security,secur,security,63576,ary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:63696,Security,secur,security,63696,ll to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14308; /opt/root_src/net/http/civetweb/civetweb.c:14332:3: warning: Call to function 'memcpy' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:64045,Security,secur,security,64045,ot provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14308; /opt/root_src/net/http/civetweb/civetweb.c:14332:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:64234,Security,secur,security,64234,ry checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14308; /opt/root_src/net/http/civetweb/civetweb.c:14332:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:64354,Security,secur,security,64354,ll to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14308; /opt/root_src/net/http/civetweb/civetweb.c:14332:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:64702,Security,secur,security,64702,ot provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14308; /opt/root_src/net/http/civetweb/civetweb.c:14332:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:64891,Security,secur,security,64891,ary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14308; /opt/root_src/net/http/civetweb/civetweb.c:14332:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:65011,Security,secur,security,65011,all to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14308; /opt/root_src/net/http/civetweb/civetweb.c:14332:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:65359,Security,secur,security,65359,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14308; /opt/root_src/net/http/civetweb/civetweb.c:14332:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:65548,Security,secur,security,65548,dary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14308; /opt/root_src/net/http/civetweb/civetweb.c:14332:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:65668,Security,secur,security,65668,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:66016,Security,secur,security,66016,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:66205,Security,secur,security,66205,dary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:66325,Security,secur,security,66325,all to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:66673,Security,secur,security,66673,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:66862,Security,secur,security,66862,dary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:66982,Security,secur,security,66982,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:67330,Security,secur,security,67330,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:67519,Security,secur,security,67519,dary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:67639,Security,secur,security,67639,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:67987,Security,secur,security,67987,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:68176,Security,secur,security,68176,dary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:68296,Security,secur,security,68296,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:68644,Security,secur,security,68644,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security check,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:68833,Security,secur,security,68833,dary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmov,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:68953,Security,secur,security,68953,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17584; /opt/root_src/net/http/civetweb/civetweb.c:17916:2: warning: Call to function 'memset' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:69302,Security,secur,security,69302,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17584; /opt/root_src/net/http/civetweb/civetweb.c:17916:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security check,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:69492,Security,secur,security,69492,ry checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17584; /opt/root_src/net/http/civetweb/civetweb.c:17916:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:69613,Security,secur,security,69613,l to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17584; /opt/root_src/net/http/civetweb/civetweb.c:17916:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17916; /opt/root_src/net/http/civetweb/civetweb.c:17939:29: warning: 1st function call argument i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:69962,Security,secur,security,69962,provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17584; /opt/root_src/net/http/civetweb/civetweb.c:17916:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17916; /opt/root_src/net/http/civetweb/civetweb.c:17939:29: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]; 1: Calling 'master_thread_run' in /opt/root_src/net/http/civetweb/civetweb.c:18156; 2: Assuming 'ctx' is non-null in /opt/root_src/net/http/civetweb/civetweb.c:18021; 3: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:18021; 4: Assuming field 'init_thread' is null in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:70151,Security,secur,security,70151, checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17584; /opt/root_src/net/http/civetweb/civetweb.c:17916:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17916; /opt/root_src/net/http/civetweb/civetweb.c:17939:29: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]; 1: Calling 'master_thread_run' in /opt/root_src/net/http/civetweb/civetweb.c:18156; 2: Assuming 'ctx' is non-null in /opt/root_src/net/http/civetweb/civetweb.c:18021; 3: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:18021; 4: Assuming field 'init_thread' is null in /opt/root_src/net/http/civetweb/civetweb.c:18049; 5: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:18049; 6: Assuming field 'stop,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:70271,Security,secur,security,70271,to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17584; /opt/root_src/net/http/civetweb/civetweb.c:17916:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17916; /opt/root_src/net/http/civetweb/civetweb.c:17939:29: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]; 1: Calling 'master_thread_run' in /opt/root_src/net/http/civetweb/civetweb.c:18156; 2: Assuming 'ctx' is non-null in /opt/root_src/net/http/civetweb/civetweb.c:18021; 3: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:18021; 4: Assuming field 'init_thread' is null in /opt/root_src/net/http/civetweb/civetweb.c:18049; 5: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:18049; 6: Assuming field 'stop_flag' is equal to 0 in /opt/root_src/net/http/civetweb/civetweb.c:18059; 7: Loop condition is true. Entering loop body in /opt/root_src/net/http/civetweb/civet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:72770,Security,secur,security,72770,civetweb.c:18065; 13: Taking true branch in /opt/root_src/net/http/civetweb/civetweb.c:18065; 14: Loop condition is true. Entering loop body in /opt/root_src/net/http/civetweb/civetweb.c:18066; 15: Field 'stop_flag' is equal to 0 in /opt/root_src/net/http/civetweb/civetweb.c:18072; 16: Left side of '&&' is true in /opt/root_src/net/http/civetweb/civetweb.c:18072; 17: Assuming the condition is true in /opt/root_src/net/http/civetweb/civetweb.c:18072; 18: Taking true branch in /opt/root_src/net/http/civetweb/civetweb.c:18072; 19: Calling 'accept_new_connection' in /opt/root_src/net/http/civetweb/civetweb.c:18073; 20: Assuming the condition is false in /opt/root_src/net/http/civetweb/civetweb.c:17937; 21: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:17937; 22: 1st function call argument is an uninitialized value in /opt/root_src/net/http/civetweb/civetweb.c:17939; /opt/root_src/net/http/civetweb/civetweb.c:18152:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:72959,Security,secur,security,72959,y in /opt/root_src/net/http/civetweb/civetweb.c:18066; 15: Field 'stop_flag' is equal to 0 in /opt/root_src/net/http/civetweb/civetweb.c:18072; 16: Left side of '&&' is true in /opt/root_src/net/http/civetweb/civetweb.c:18072; 17: Assuming the condition is true in /opt/root_src/net/http/civetweb/civetweb.c:18072; 18: Taking true branch in /opt/root_src/net/http/civetweb/civetweb.c:18072; 19: Calling 'accept_new_connection' in /opt/root_src/net/http/civetweb/civetweb.c:18073; 20: Assuming the condition is false in /opt/root_src/net/http/civetweb/civetweb.c:17937; 21: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:17937; 22: 1st function call argument is an uninitialized value in /opt/root_src/net/http/civetweb/civetweb.c:17939; /opt/root_src/net/http/civetweb/civetweb.c:18152:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:73079,Security,secur,security,73079,'&&' is true in /opt/root_src/net/http/civetweb/civetweb.c:18072; 17: Assuming the condition is true in /opt/root_src/net/http/civetweb/civetweb.c:18072; 18: Taking true branch in /opt/root_src/net/http/civetweb/civetweb.c:18072; 19: Calling 'accept_new_connection' in /opt/root_src/net/http/civetweb/civetweb.c:18073; 20: Assuming the condition is false in /opt/root_src/net/http/civetweb/civetweb.c:17937; 21: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:17937; 22: 1st function call argument is an uninitialized value in /opt/root_src/net/http/civetweb/civetweb.c:17939; /opt/root_src/net/http/civetweb/civetweb.c:18152:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18334; /opt/root_src/net/http/civetweb/civetweb.c:18899:3: warning: Call to function 'strcat' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:73427,Security,secur,security,73427, /opt/root_src/net/http/civetweb/civetweb.c:17937; 21: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:17937; 22: 1st function call argument is an uninitialized value in /opt/root_src/net/http/civetweb/civetweb.c:17939; /opt/root_src/net/http/civetweb/civetweb.c:18152:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18334; /opt/root_src/net/http/civetweb/civetweb.c:18899:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it d,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:73616,Security,secur,security,73616,ction call argument is an uninitialized value in /opt/root_src/net/http/civetweb/civetweb.c:17939; /opt/root_src/net/http/civetweb/civetweb.c:18152:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18334; /opt/root_src/net/http/civetweb/civetweb.c:18899:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:73736,Security,secur,security,73736,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18334; /opt/root_src/net/http/civetweb/civetweb.c:18899:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18899; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:74246,Security,secur,security,74246,n case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18334; /opt/root_src/net/http/civetweb/civetweb.c:18899:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18899; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18914:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:74995,Security,secur,security,74995,vetweb/civetweb.c:18899:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18899; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18914:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18914; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18969:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support le,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:75582,Security,secur,security,75582,WE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18899; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18914:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18914; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18969:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18969; /opt/root_src/net/http/civetweb/civetweb.c:18984:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it d,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:75771,Security,secur,security,75771,18868; /opt/root_src/net/http/civetweb/civetweb.c:18914:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18914; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18969:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18969; /opt/root_src/net/http/civetweb/civetweb.c:18984:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:75891,Security,secur,security,75891,eplace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18914; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18969:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18969; /opt/root_src/net/http/civetweb/civetweb.c:18984:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18984; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:76401,Security,secur,security,76401,cro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18969:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18969; /opt/root_src/net/http/civetweb/civetweb.c:18984:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18984; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19012:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:77150,Security,secur,security,77150,vetweb/civetweb.c:18984:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18984; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19012:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19012; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19071:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:77899,Security,secur,security,77899,vetweb/civetweb.c:19012:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19012; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19071:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19071; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19143:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:78648,Security,secur,security,78648,vetweb/civetweb.c:19071:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19071; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19143:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19143; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19234:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:79397,Security,secur,security,79397,vetweb/civetweb.c:19143:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19143; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19234:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19234; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19241:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:80146,Security,secur,security,80146,vetweb/civetweb.c:19234:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19234; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19241:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19241; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19242:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/issues/7528:80895,Security,secur,security,80895,vetweb/civetweb.c:19241:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19241; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19242:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19242; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/net/src/TNetFile.cxx:697:7: warning: Value stored to 'read' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'read' is never read in /opt/root_src/net/net/src/TNetFile.cxx:697; /opt/root_src/net/net/src/TNetFile.cxx:722:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/net/net/src/TNetFile.cxx:722; /opt/root_src/net/net/src/TNetFile.cxx:728:7: warning: Value stored to 'update' is ne,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7528
https://github.com/root-project/root/pull/7529:0,Energy Efficiency,Allocate,Allocated,0,Allocated memory should be cleanup with `free` function.; In all three places where it was used it was **WRONG!**.; Either `delete` or `delete []` or just do nothing. Plus small adjustment for clang-tidy warnings!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7529
https://github.com/root-project/root/issues/7531:4674,Deployability,release,released,4674,ve/src/TEveElement.cxx:664; 12: Left side of '&&' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 13: Assuming field 'fTopItemCnt' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 14: Left side of '&&' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 15: Assuming field 'fDestroyOnZeroRefCnt' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:665; 16: Left side of '&&' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 17: Assuming field 'fDenyDestroy' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:665; 18: Taking true branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 19: Assuming the condition is false in /opt/root_src/graf3d/eve/src/TEveElement.cxx:667; 20: Taking false branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:667; 21: Assuming 'gDebug' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:677; 22: Taking false branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:677; 23: Memory is released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:681; 24: Returning; memory was released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:650; 25: Returning; memory was released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:1345; 26: Returning; memory was released via 1st parameter in /opt/root_src/graf3d/eve/src/TEveElement.cxx:359; 27: Use of memory after it is freed in /opt/root_src/graf3d/eve/src/TEveElement.cxx:361; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:65:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:65; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:83:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:83; /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:86:11: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:4762,Deployability,release,released,4762,eve/src/TEveElement.cxx:664; 13: Assuming field 'fTopItemCnt' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 14: Left side of '&&' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 15: Assuming field 'fDestroyOnZeroRefCnt' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:665; 16: Left side of '&&' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 17: Assuming field 'fDenyDestroy' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:665; 18: Taking true branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 19: Assuming the condition is false in /opt/root_src/graf3d/eve/src/TEveElement.cxx:667; 20: Taking false branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:667; 21: Assuming 'gDebug' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:677; 22: Taking false branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:677; 23: Memory is released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:681; 24: Returning; memory was released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:650; 25: Returning; memory was released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:1345; 26: Returning; memory was released via 1st parameter in /opt/root_src/graf3d/eve/src/TEveElement.cxx:359; 27: Use of memory after it is freed in /opt/root_src/graf3d/eve/src/TEveElement.cxx:361; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:65:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:65; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:83:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:83; /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:86:11: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TEveGeoNode::DumpShapeTree' in /opt/root_src/graf3d/eve/src/TEveGeoNod,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:4850,Deployability,release,released,4850,raf3d/eve/src/TEveElement.cxx:664; 14: Left side of '&&' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 15: Assuming field 'fDestroyOnZeroRefCnt' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:665; 16: Left side of '&&' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 17: Assuming field 'fDenyDestroy' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:665; 18: Taking true branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 19: Assuming the condition is false in /opt/root_src/graf3d/eve/src/TEveElement.cxx:667; 20: Taking false branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:667; 21: Assuming 'gDebug' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:677; 22: Taking false branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:677; 23: Memory is released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:681; 24: Returning; memory was released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:650; 25: Returning; memory was released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:1345; 26: Returning; memory was released via 1st parameter in /opt/root_src/graf3d/eve/src/TEveElement.cxx:359; 27: Use of memory after it is freed in /opt/root_src/graf3d/eve/src/TEveElement.cxx:361; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:65:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:65; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:83:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:83; /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:86:11: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TEveGeoNode::DumpShapeTree' in /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:303; 2: Assuming 'tnode' is equal to null in /opt/root_src/graf3d/eve/src/TEveGeoN,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:4939,Deployability,release,released,4939,TEveElement.cxx:664; 15: Assuming field 'fDestroyOnZeroRefCnt' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:665; 16: Left side of '&&' is true in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 17: Assuming field 'fDenyDestroy' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:665; 18: Taking true branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:664; 19: Assuming the condition is false in /opt/root_src/graf3d/eve/src/TEveElement.cxx:667; 20: Taking false branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:667; 21: Assuming 'gDebug' is <= 0 in /opt/root_src/graf3d/eve/src/TEveElement.cxx:677; 22: Taking false branch in /opt/root_src/graf3d/eve/src/TEveElement.cxx:677; 23: Memory is released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:681; 24: Returning; memory was released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:650; 25: Returning; memory was released in /opt/root_src/graf3d/eve/src/TEveElement.cxx:1345; 26: Returning; memory was released via 1st parameter in /opt/root_src/graf3d/eve/src/TEveElement.cxx:359; 27: Use of memory after it is freed in /opt/root_src/graf3d/eve/src/TEveElement.cxx:361; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:65:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:65; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:83:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx:83; /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:86:11: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TEveGeoNode::DumpShapeTree' in /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:303; 2: Assuming 'tnode' is equal to null in /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:324; 3: Assuming pointer value is null in /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx:324,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:20162,Deployability,release,released,20162,se branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 50: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 51: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 52: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 53: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 54: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 55: expanded from macro 'assert' in /usr/include/assert.h:109; 56: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 57: expanded from macro 'assert' in /usr/include/assert.h:109; 58: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 59: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 60: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 61: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 62: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 63: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:803; /opt/root_src/graf3d/eve7/glu/sweep.c:808:10: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 4: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 5: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1326; 6: Assum,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:20325,Deployability,release,released,20325,e branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 50: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 51: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 52: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 53: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 54: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 55: expanded from macro 'assert' in /usr/include/assert.h:109; 56: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 57: expanded from macro 'assert' in /usr/include/assert.h:109; 58: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 59: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 60: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 61: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 62: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 63: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:803; /opt/root_src/graf3d/eve7/glu/sweep.c:808:10: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 4: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 5: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1326; 6: Assuming 'vNext' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 7: Left side of '||' is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 8: Assumi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:26887,Deployability,release,released,26887,ssuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 66: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 67: Field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 68: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 69: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 70: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 71: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 72: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 73: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 74: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 75: expanded from macro 'assert' in /usr/include/assert.h:109; 76: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 77: expanded from macro 'assert' in /usr/include/assert.h:109; 78: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 79: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 80: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 81: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 82: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 83: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:808; /opt/root_src/graf3d/eve7/glu/sweep.c:885:22: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 4: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 5: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1326; 6: Assum,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:27050,Deployability,release,released,27050,e' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 68: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 69: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 70: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 71: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 72: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 73: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 74: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 75: expanded from macro 'assert' in /usr/include/assert.h:109; 76: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 77: expanded from macro 'assert' in /usr/include/assert.h:109; 78: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 79: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 80: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 81: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 82: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 83: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:808; /opt/root_src/graf3d/eve7/glu/sweep.c:885:22: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 4: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 5: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1326; 6: Assuming 'vNext' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 7: Left side of '||' is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 8: Assumi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:29842,Deployability,release,released,29842,c/graf3d/eve7/glu/sweep.c:1102; 18: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1102; 19: Calling 'FinishLeftRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:1105; 20: 'regPrev' is not equal to 'regLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:304; 21: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:304; 22: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:308; 23: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:308; 24: Assuming field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:309; 25: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:309; 26: Calling 'FinishRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:316; 27: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:280; 28: Field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 29: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 30: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 31: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 32: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:280; 33: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:316; 34: Execution continues on line 336 in /opt/root_src/graf3d/eve7/glu/sweep.c:317; 35: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:1105; 36: Assuming 'eTopLeft' is equal to field 'Onext' in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 38: Calling 'ConnectRightVertex' in /opt/root_src/graf3d/eve7/glu/sweep.c:1114; 39: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:885; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceVal' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking true,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:30005,Deployability,release,released,30005,/sweep.c:1105; 20: 'regPrev' is not equal to 'regLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:304; 21: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:304; 22: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:308; 23: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:308; 24: Assuming field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:309; 25: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:309; 26: Calling 'FinishRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:316; 27: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:280; 28: Field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 29: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 30: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 31: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 32: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:280; 33: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:316; 34: Execution continues on line 336 in /opt/root_src/graf3d/eve7/glu/sweep.c:317; 35: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:1105; 36: Assuming 'eTopLeft' is equal to field 'Onext' in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 38: Calling 'ConnectRightVertex' in /opt/root_src/graf3d/eve7/glu/sweep.c:1114; 39: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:885; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceVal' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking true branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1043; 3: Assuming 'phiBin' is > 'nPhi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:30104,Deployability,release,released,30104,4; 21: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:304; 22: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:308; 23: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:308; 24: Assuming field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:309; 25: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:309; 26: Calling 'FinishRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:316; 27: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:280; 28: Field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 29: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 30: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 31: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 32: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:280; 33: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:316; 34: Execution continues on line 336 in /opt/root_src/graf3d/eve7/glu/sweep.c:317; 35: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:1105; 36: Assuming 'eTopLeft' is equal to field 'Onext' in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 38: Calling 'ConnectRightVertex' in /opt/root_src/graf3d/eve7/glu/sweep.c:1114; 39: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:885; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceVal' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking true branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1043; 3: Assuming 'phiBin' is > 'nPhiBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 4: Loop condition is false. Execution jum,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:30285,Deployability,release,released,30285,weep.c:308; 23: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:308; 24: Assuming field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:309; 25: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:309; 26: Calling 'FinishRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:316; 27: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:280; 28: Field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 29: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 30: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 31: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 32: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:280; 33: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:316; 34: Execution continues on line 336 in /opt/root_src/graf3d/eve7/glu/sweep.c:317; 35: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:1105; 36: Assuming 'eTopLeft' is equal to field 'Onext' in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 38: Calling 'ConnectRightVertex' in /opt/root_src/graf3d/eve7/glu/sweep.c:1114; 39: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:885; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceVal' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking true branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1043; 3: Assuming 'phiBin' is > 'nPhiBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 5: Potential leak of memory pointed to by 'sliceVal' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:37189,Deployability,release,released,37189, 13: Taking false branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:891; 14: Calling 'REveElement::CheckReferenceCount' in /opt/root_src/graf3d/eve7/src/REveElement.cxx:899; 15: Assuming field 'fDestructing' is equal to kNone in /opt/root_src/graf3d/eve7/src/REveElement.cxx:541; 16: Taking false branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:541; 17: Left side of '&&' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 18: Assuming field 'fDestroyOnZeroRefCnt' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 19: Left side of '&&' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 20: Assuming field 'fDenyDestroy' is <= 0 in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 21: Taking true branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 22: Assuming 'gDebug' is <= 0 in /opt/root_src/graf3d/eve7/src/REveElement.cxx:546; 23: Taking false branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:546; 24: Memory is released in /opt/root_src/graf3d/eve7/src/REveElement.cxx:551; 25: Returning; memory was released in /opt/root_src/graf3d/eve7/src/REveElement.cxx:899; 26: Returning; memory was released via 1st parameter in /opt/root_src/graf3d/eve7/src/REveElement.cxx:1205; 27: Use of memory after it is freed in /opt/root_src/graf3d/eve7/src/REveElement.cxx:1210; /opt/root_src/graf3d/eve7/src/REveEllipsoid.cxx:204:10: warning: Value stored to 'max' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'max' is never read in /opt/root_src/graf3d/eve7/src/REveEllipsoid.cxx:204; /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:65:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:65; /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:83:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve7/src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:37278,Deployability,release,released,37278,Calling 'REveElement::CheckReferenceCount' in /opt/root_src/graf3d/eve7/src/REveElement.cxx:899; 15: Assuming field 'fDestructing' is equal to kNone in /opt/root_src/graf3d/eve7/src/REveElement.cxx:541; 16: Taking false branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:541; 17: Left side of '&&' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 18: Assuming field 'fDestroyOnZeroRefCnt' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 19: Left side of '&&' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 20: Assuming field 'fDenyDestroy' is <= 0 in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 21: Taking true branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 22: Assuming 'gDebug' is <= 0 in /opt/root_src/graf3d/eve7/src/REveElement.cxx:546; 23: Taking false branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:546; 24: Memory is released in /opt/root_src/graf3d/eve7/src/REveElement.cxx:551; 25: Returning; memory was released in /opt/root_src/graf3d/eve7/src/REveElement.cxx:899; 26: Returning; memory was released via 1st parameter in /opt/root_src/graf3d/eve7/src/REveElement.cxx:1205; 27: Use of memory after it is freed in /opt/root_src/graf3d/eve7/src/REveElement.cxx:1210; /opt/root_src/graf3d/eve7/src/REveEllipsoid.cxx:204:10: warning: Value stored to 'max' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'max' is never read in /opt/root_src/graf3d/eve7/src/REveEllipsoid.cxx:204; /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:65:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:65; /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:83:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:83; /opt/root_src/graf3d/eve7/src/REveGeoPolyShape.cxx:55:38: warn,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:37367,Deployability,release,released,37367,5: Assuming field 'fDestructing' is equal to kNone in /opt/root_src/graf3d/eve7/src/REveElement.cxx:541; 16: Taking false branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:541; 17: Left side of '&&' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 18: Assuming field 'fDestroyOnZeroRefCnt' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 19: Left side of '&&' is true in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 20: Assuming field 'fDenyDestroy' is <= 0 in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 21: Taking true branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:544; 22: Assuming 'gDebug' is <= 0 in /opt/root_src/graf3d/eve7/src/REveElement.cxx:546; 23: Taking false branch in /opt/root_src/graf3d/eve7/src/REveElement.cxx:546; 24: Memory is released in /opt/root_src/graf3d/eve7/src/REveElement.cxx:551; 25: Returning; memory was released in /opt/root_src/graf3d/eve7/src/REveElement.cxx:899; 26: Returning; memory was released via 1st parameter in /opt/root_src/graf3d/eve7/src/REveElement.cxx:1205; 27: Use of memory after it is freed in /opt/root_src/graf3d/eve7/src/REveElement.cxx:1210; /opt/root_src/graf3d/eve7/src/REveEllipsoid.cxx:204:10: warning: Value stored to 'max' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'max' is never read in /opt/root_src/graf3d/eve7/src/REveEllipsoid.cxx:204; /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:65:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:65; /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:83:40: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/graf3d/eve7/src/REveFrameBox.cxx:83; /opt/root_src/graf3d/eve7/src/REveGeoPolyShape.cxx:55:38: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'MakeGeoMe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:30929,Energy Efficiency,allocate,allocated,30929,_src/graf3d/eve7/glu/memalloc.h:41; 32: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:280; 33: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:316; 34: Execution continues on line 336 in /opt/root_src/graf3d/eve7/glu/sweep.c:317; 35: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:1105; 36: Assuming 'eTopLeft' is equal to field 'Onext' in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 38: Calling 'ConnectRightVertex' in /opt/root_src/graf3d/eve7/glu/sweep.c:1114; 39: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:885; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceVal' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking true branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1043; 3: Assuming 'phiBin' is > 'nPhiBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 5: Potential leak of memory pointed to by 'sliceVal' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValRef' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking true branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1044; 3: Assuming 'phiBin' is > 'nPhiBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 5: Potential leak of memory pointed to by 'sliceValRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:31552,Energy Efficiency,allocate,allocated,31552,/root_src/graf3d/eve7/glu/sweep.c:1114; 39: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:885; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceVal' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking true branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1043; 3: Assuming 'phiBin' is > 'nPhiBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 5: Potential leak of memory pointed to by 'sliceVal' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValRef' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking true branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1044; 3: Assuming 'phiBin' is > 'nPhiBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 5: Potential leak of memory pointed to by 'sliceValRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsLow' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1091; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsLow' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:32180,Energy Efficiency,allocate,allocated,32180,xx:1046; 5: Potential leak of memory pointed to by 'sliceVal' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValRef' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking true branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1044; 3: Assuming 'phiBin' is > 'nPhiBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 5: Potential leak of memory pointed to by 'sliceValRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsLow' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1091; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsLow' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsLowRef' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1093; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsLowRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:116,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:32812,Energy Efficiency,allocate,allocated,32812,5: Potential leak of memory pointed to by 'sliceValRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsLow' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1091; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsLow' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsLowRef' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1093; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsLowRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsUp' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1090; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsUp' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:33443,Energy Efficiency,allocate,allocated,33443,Potential leak of memory pointed to by 'sliceValsLow' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsLowRef' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1093; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsLowRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsUp' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1090; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsUp' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsUpRef' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1092; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsUpRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:34073,Energy Efficiency,allocate,allocated,34073,: Potential leak of memory pointed to by 'sliceValsLowRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsUp' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1090; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsUp' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsUpRef' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1092; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsUpRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCaloData.cxx:679:9: warning: Value stored to 'hist' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'hist' during its initialization is never read in /opt/root_src/graf3d/eve7/src/REveCaloData.cxx:679; /opt/root_src/graf3d/eve7/src/REveDataCollection.cxx:162:10: warning: Value stored to 'data' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'data' during its initialization is never read in /opt/root_src/graf3d/eve7/src/REveDataCollection.cxx:162; /opt/root_src/graf3d/eve7/src/REveElement.cxx:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:58123,Modifiability,Variab,Variable,58123,ntent' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maxContent' is never read in /opt/root_src/graf3d/gl/src/TGLBoxPainter.cxx:411; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500:7: warning: Value stored to 'logicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'logicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510:7: warning: Value stored to 'physicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'physicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510; /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270:7: warning: Value stored to 'maxContent' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maxContent' is never read in /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270; /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509; /opt/root_src/graf3d/x3d/src/x3d.c:730:10: warning: Value stored to 'index2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'index2' is never read in /opt/root_src/graf3d/x3d/src/x3d.c:730; /opt/root_src/graf3d/x3d/src/x3d.c:761:10: warning: Value stored to 'index2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'index2' is never read in /opt/root_src/graf3d/x3d/src/x3d.c:761; /opt/root_src/graf3d/x3d/src/x3d.c:3166:8: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:58255,Modifiability,Variab,Variable,58255,inter.cxx:411; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500:7: warning: Value stored to 'logicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'logicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510:7: warning: Value stored to 'physicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'physicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510; /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270:7: warning: Value stored to 'maxContent' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maxContent' is never read in /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270; /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509; /opt/root_src/graf3d/x3d/src/x3d.c:730:10: warning: Value stored to 'index2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'index2' is never read in /opt/root_src/graf3d/x3d/src/x3d.c:730; /opt/root_src/graf3d/x3d/src/x3d.c:761:10: warning: Value stored to 'index2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'index2' is never read in /opt/root_src/graf3d/x3d/src/x3d.c:761; /opt/root_src/graf3d/x3d/src/x3d.c:3166:8: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length argume,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:7613,Performance,load,loaded,7613,"zer-deadcode.DeadStores]; 1: Value stored to 'pMinor' during its initialization is never read in /opt/root_src/graf3d/eve/src/TEveProjectionAxesGL.cxx:185; /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:232:46: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:328; 2: Passing value via 1st parameter 'el' in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:330; 3: Calling 'TEveProjectionManager::ImportElementsRecurse' in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:330; 4: Calling 'TEveProjectionManager::ShouldImport' in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:217; 5: Assuming field 'fImportEmpty' is true in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:173; 6: Taking true branch in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:173; 7: Returning the value 1 (loaded from 'kTRUE'), which participates in a condition later in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:174; 8: Returning from 'TEveProjectionManager::ShouldImport' in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:217; 9: Taking true branch in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:217; 10: Assuming 'pble' is null in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:221; 11: Taking false branch in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:221; 12: Called C++ object pointer is null in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:232; /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:371:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Loop condition is false. Execution continues on line 335 in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:328; 2: Assuming the condition is true in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:335; 3: Taking true branch in /opt/root_src/graf3d/eve/src/TEveProjectionM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:41225,Performance,load,loaded,41225,"6; 4: Taking true branch in /opt/root_src/graf3d/eve7/src/REveManager.cxx:286; 5: Called C++ object pointer is null in /opt/root_src/graf3d/eve7/src/REveManager.cxx:290; /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:219:39: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: 'c' initialized here in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:315; 2: Passing value via 1st parameter 'el' in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:316; 3: Calling 'REveProjectionManager::ImportElementsRecurse' in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:316; 4: Calling 'REveProjectionManager::ShouldImport' in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:204; 5: Assuming field 'fImportEmpty' is true in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:151; 6: Taking true branch in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:151; 7: Returning the value 1 (loaded from 'kTRUE'), which participates in a condition later in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:152; 8: Returning from 'REveProjectionManager::ShouldImport' in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:204; 9: Taking true branch in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:204; 10: Assuming 'pble' is null in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:208; 11: Taking false branch in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:208; 12: Called C++ object pointer is null in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:219; /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:355:19: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is true in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:321; 2: Taking true branch in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:321; 3: 'nel' initialized here in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:324; 4: Passi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:58224,Security,secur,security,58224,ntent' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maxContent' is never read in /opt/root_src/graf3d/gl/src/TGLBoxPainter.cxx:411; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500:7: warning: Value stored to 'logicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'logicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510:7: warning: Value stored to 'physicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'physicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510; /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270:7: warning: Value stored to 'maxContent' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maxContent' is never read in /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270; /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509; /opt/root_src/graf3d/x3d/src/x3d.c:730:10: warning: Value stored to 'index2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'index2' is never read in /opt/root_src/graf3d/x3d/src/x3d.c:730; /opt/root_src/graf3d/x3d/src/x3d.c:761:10: warning: Value stored to 'index2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'index2' is never read in /opt/root_src/graf3d/x3d/src/x3d.c:761; /opt/root_src/graf3d/x3d/src/x3d.c:3166:8: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:59104,Security,secur,security,59104,werGUI.cxx:509:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509; /opt/root_src/graf3d/x3d/src/x3d.c:730:10: warning: Value stored to 'index2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'index2' is never read in /opt/root_src/graf3d/x3d/src/x3d.c:730; /opt/root_src/graf3d/x3d/src/x3d.c:761:10: warning: Value stored to 'index2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'index2' is never read in /opt/root_src/graf3d/x3d/src/x3d.c:761; /opt/root_src/graf3d/x3d/src/x3d.c:3166:8: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3166; /opt/root_src/graf3d/x3d/src/x3d.c:3170:8: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3170; /opt/root_src/graf3d/x3d/src/x3d.c:3174:8: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Repla,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:59663,Security,secur,security,59663,0: warning: Value stored to 'index2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'index2' is never read in /opt/root_src/graf3d/x3d/src/x3d.c:761; /opt/root_src/graf3d/x3d/src/x3d.c:3166:8: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3166; /opt/root_src/graf3d/x3d/src/x3d.c:3170:8: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3170; /opt/root_src/graf3d/x3d/src/x3d.c:3174:8: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3174; /opt/root_src/graf3d/x3d/src/x3d.c:3175:8: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Repla,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:60222,Security,secur,security,60222,memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3166; /opt/root_src/graf3d/x3d/src/x3d.c:3170:8: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3170; /opt/root_src/graf3d/x3d/src/x3d.c:3174:8: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3174; /opt/root_src/graf3d/x3d/src/x3d.c:3175:8: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3175; /opt/root_src/core/cont/inc/TList.h; /opt/root_src/graf3d/eve/src/TEveElement.cxx; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx; /opt/root_src/graf3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:60781,Security,secur,security,60781,memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3170; /opt/root_src/graf3d/x3d/src/x3d.c:3174:8: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3174; /opt/root_src/graf3d/x3d/src/x3d.c:3175:8: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/graf3d/x3d/src/x3d.c:3175; /opt/root_src/core/cont/inc/TList.h; /opt/root_src/graf3d/eve/src/TEveElement.cxx; /opt/root_src/graf3d/eve/src/TEveFrameBox.cxx; /opt/root_src/graf3d/eve/src/TEveGeoNode.cxx; /opt/root_src/graf3d/eve/src/TEveJetConeGL.cxx; /opt/root_src/graf3d/eve/src/TEveLine.cxx; /opt/root_src/graf3d/eve/src/TEveProjectionAxesGL.cxx; /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx; /opt/root_src/graf3d/eve/src/TEveWindow.cxx; /opt/root_src/graf3d/eve7/glu/mesh.c; /opt/root_src/graf3d/eve7/glu/normal.c; /opt/root_src/graf3d/eve7/glu/sweep.c; /opt/root_src/graf3d/eve7/src/REveCalo.cxx; /opt/root_src/graf3d/eve7/src/REveCaloData.cxx; /opt/root_src/graf3d/eve7/src/REveDataCollection.cxx; /opt/root_src/graf3d/e,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:1093,Testability,log,log,1093,ore.CallAndMessage]; 1: Calling 'TGLScenePad::PadPaint' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:222; 2: 'pad' is equal to field 'fPad' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:235; 3: Taking false branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:235; 4: Calling 'TGLScenePad::SubPadPaint' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:242; 5: Assuming the condition is false in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:171; 6: Taking false branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:171; 7: Assuming 'prims' is non-null in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:174; 8: '?' condition is true in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:174; 9: Loop condition is true. Entering loop body in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:175; 10: Loop condition is true. Entering loop body in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:175; 11: Calling 'TGLScenePad::ObjectPaint' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:176; 12: Assuming 'log' is null in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:192; 13: Taking false branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:192; 14: Assuming the condition is false in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:197; 15: Taking false branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:197; 16: Assuming the condition is true in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:202; 17: Taking true branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:202; 18: Calling 'TGLScenePad::SubPadPaint' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:204; 19: Assuming the condition is true in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:171; 20: Taking true branch in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:171; 21: Calling 'TGLScenePad::ComposePolymarker' in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:172; 22: Loop condition is true. Entering loop body in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:709; 23: Assuming 'dPm' is null in /opt/root_src/graf3d/gl/src/TGLScenePad.cxx:711; 24: Assuming pointer v,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:17549,Testability,assert,assert,17549,ng true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 13: Execution continues on line 1347 in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 14: Calling 'SweepEvent' in /opt/root_src/graf3d/eve7/glu/sweep.c:1347; 15: Assuming field 'activeRegion' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1085; 16: Loop condition is false. Execution continues on line 1101 in /opt/root_src/graf3d/eve7/glu/sweep.c:1085; 17: 'regUp' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1102; 18: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1102; 19: Assuming 'eTopLeft' is not equal to field 'Onext' in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 20: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 21: Calling 'AddRightEdges' in /opt/root_src/graf3d/eve7/glu/sweep.c:1116; 22: Assuming '' is < '' in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 23: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 24: expanded from macro 'assert' in /usr/include/assert.h:109; 25: Left side of '||' is true in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:17573,Testability,assert,assert,17573,ng true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 13: Execution continues on line 1347 in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 14: Calling 'SweepEvent' in /opt/root_src/graf3d/eve7/glu/sweep.c:1347; 15: Assuming field 'activeRegion' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1085; 16: Loop condition is false. Execution continues on line 1101 in /opt/root_src/graf3d/eve7/glu/sweep.c:1085; 17: 'regUp' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1102; 18: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1102; 19: Assuming 'eTopLeft' is not equal to field 'Onext' in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 20: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 21: Calling 'AddRightEdges' in /opt/root_src/graf3d/eve7/glu/sweep.c:1116; 22: Assuming '' is < '' in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 23: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 24: expanded from macro 'assert' in /usr/include/assert.h:109; 25: Left side of '||' is true in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:18511,Testability,assert,assert,18511,lu/geom.h:50; 24: expanded from macro 'assert' in /usr/include/assert.h:109; 25: Left side of '||' is true in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:18535,Testability,assert,assert,18535,lu/geom.h:50; 24: expanded from macro 'assert' in /usr/include/assert.h:109; 25: Left side of '||' is true in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:18643,Testability,assert,assert,18643,ve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 50: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 51: Callin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:18667,Testability,assert,assert,18667,ve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 50: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 51: Callin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:19978,Testability,assert,assert,19978,.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 50: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 51: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 52: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 53: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 54: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 55: expanded from macro 'assert' in /usr/include/assert.h:109; 56: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 57: expanded from macro 'assert' in /usr/include/assert.h:109; 58: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 59: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 60: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 61: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 62: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 63: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:803; /opt/root_src/graf3d/eve7/glu/sweep.c:808:10: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:13,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:20002,Testability,assert,assert,20002,.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 50: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 51: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 52: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 53: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 54: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 55: expanded from macro 'assert' in /usr/include/assert.h:109; 56: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 57: expanded from macro 'assert' in /usr/include/assert.h:109; 58: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 59: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 60: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 61: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 62: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 63: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:803; /opt/root_src/graf3d/eve7/glu/sweep.c:808:10: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:13,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:20110,Testability,assert,assert,20110, is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 50: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 51: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 52: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 53: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 54: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 55: expanded from macro 'assert' in /usr/include/assert.h:109; 56: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 57: expanded from macro 'assert' in /usr/include/assert.h:109; 58: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 59: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 60: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 61: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 62: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 63: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:803; /opt/root_src/graf3d/eve7/glu/sweep.c:808:10: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 4: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 5: Loop condition is true. Entering,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:20134,Testability,assert,assert,20134, is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 49: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 50: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 51: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 52: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 53: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 54: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 55: expanded from macro 'assert' in /usr/include/assert.h:109; 56: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 57: expanded from macro 'assert' in /usr/include/assert.h:109; 58: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 59: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 60: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:800; 61: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 62: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:801; 63: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:803; /opt/root_src/graf3d/eve7/glu/sweep.c:808:10: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 4: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 5: Loop condition is true. Entering,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:22653,Testability,assert,assert,22653,ng true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 13: Execution continues on line 1347 in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 14: Calling 'SweepEvent' in /opt/root_src/graf3d/eve7/glu/sweep.c:1347; 15: Assuming field 'activeRegion' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1085; 16: Loop condition is false. Execution continues on line 1101 in /opt/root_src/graf3d/eve7/glu/sweep.c:1085; 17: 'regUp' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1102; 18: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1102; 19: Assuming 'eTopLeft' is not equal to field 'Onext' in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 20: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 21: Calling 'AddRightEdges' in /opt/root_src/graf3d/eve7/glu/sweep.c:1116; 22: Assuming '' is < '' in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 23: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 24: expanded from macro 'assert' in /usr/include/assert.h:109; 25: Left side of '||' is true in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:22677,Testability,assert,assert,22677,ng true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 13: Execution continues on line 1347 in /opt/root_src/graf3d/eve7/glu/sweep.c:1328; 14: Calling 'SweepEvent' in /opt/root_src/graf3d/eve7/glu/sweep.c:1347; 15: Assuming field 'activeRegion' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1085; 16: Loop condition is false. Execution continues on line 1101 in /opt/root_src/graf3d/eve7/glu/sweep.c:1085; 17: 'regUp' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:1102; 18: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1102; 19: Assuming 'eTopLeft' is not equal to field 'Onext' in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 20: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1112; 21: Calling 'AddRightEdges' in /opt/root_src/graf3d/eve7/glu/sweep.c:1116; 22: Assuming '' is < '' in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 23: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 24: expanded from macro 'assert' in /usr/include/assert.h:109; 25: Left side of '||' is true in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:23615,Testability,assert,assert,23615,lu/geom.h:50; 24: expanded from macro 'assert' in /usr/include/assert.h:109; 25: Left side of '||' is true in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Assuming 'eUp->Org' is not equal to 'eLo->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:812; 49: Taking true bran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:23639,Testability,assert,assert,23639,lu/geom.h:50; 24: expanded from macro 'assert' in /usr/include/assert.h:109; 25: Left side of '||' is true in /opt/root_src/graf3d/eve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Assuming 'eUp->Org' is not equal to 'eLo->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:812; 49: Taking true bran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:23747,Testability,assert,assert,23747,ve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Assuming 'eUp->Org' is not equal to 'eLo->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:812; 49: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:812; 50: 'eUp->Dst' is equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:813;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:23771,Testability,assert,assert,23771,ve7/glu/sweep.c:361; 26: expanded from macro 'VertLeq' in /opt/root_src/graf3d/eve7/glu/geom.h:50; 27: Assuming 'e' is equal to 'eLast' in /opt/root_src/graf3d/eve7/glu/sweep.c:364; 28: Loop condition is false. Exiting loop in /opt/root_src/graf3d/eve7/glu/sweep.c:360; 29: 'eTopLeft' is not equal to NULL in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 30: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:370; 31: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:375; 32: Assuming 'e->Org' is not equal to 'ePrev->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 33: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 34: Execution continues on line 402 in /opt/root_src/graf3d/eve7/glu/sweep.c:378; 35: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 36: expanded from macro 'assert' in /usr/include/assert.h:109; 37: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:403; 38: expanded from macro 'assert' in /usr/include/assert.h:109; 39: 'cleanUp' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 40: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:405; 41: Calling 'WalkDirtyRegions' in /opt/root_src/graf3d/eve7/glu/sweep.c:407; 42: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:773; 43: Loop condition is false. Execution continues on line 779 in /opt/root_src/graf3d/eve7/glu/sweep.c:775; 44: Field 'dirty' is 1 in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 45: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:779; 46: Assuming 'eUp->Dst' is equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 47: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 48: Assuming 'eUp->Org' is not equal to 'eLo->Org' in /opt/root_src/graf3d/eve7/glu/sweep.c:812; 49: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:812; 50: 'eUp->Dst' is equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:813;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:26703,Testability,assert,assert,26703,af3d/eve7/glu/sweep.c:782; 63: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 64: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 65: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 66: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 67: Field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 68: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 69: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 70: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 71: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 72: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 73: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 74: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 75: expanded from macro 'assert' in /usr/include/assert.h:109; 76: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 77: expanded from macro 'assert' in /usr/include/assert.h:109; 78: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 79: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 80: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 81: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 82: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 83: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:808; /opt/root_src/graf3d/eve7/glu/sweep.c:885:22: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:13,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:26727,Testability,assert,assert,26727,af3d/eve7/glu/sweep.c:782; 63: Assuming 'eUp->Dst' is not equal to 'eLo->Dst' in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 64: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 65: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 66: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 67: Field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 68: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 69: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 70: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 71: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 72: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 73: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 74: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 75: expanded from macro 'assert' in /usr/include/assert.h:109; 76: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 77: expanded from macro 'assert' in /usr/include/assert.h:109; 78: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 79: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 80: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 81: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 82: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 83: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:808; /opt/root_src/graf3d/eve7/glu/sweep.c:885:22: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:13,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:26835,Testability,assert,assert,26835,ng true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 65: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 66: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 67: Field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 68: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 69: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 70: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 71: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 72: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 73: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 74: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 75: expanded from macro 'assert' in /usr/include/assert.h:109; 76: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 77: expanded from macro 'assert' in /usr/include/assert.h:109; 78: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 79: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 80: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 81: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 82: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 83: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:808; /opt/root_src/graf3d/eve7/glu/sweep.c:885:22: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 4: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 5: Loop condition is true. Entering,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:26859,Testability,assert,assert,26859,ng true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:791; 65: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 66: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:793; 67: Field 'fixUpperEdge' is 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 68: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:799; 69: Assuming field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 70: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:804; 71: Calling 'DeleteRegion' in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 72: Field 'fixUpperEdge' is not equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 73: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:153; 74: Assuming field 'winding' is equal to 0 in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 75: expanded from macro 'assert' in /usr/include/assert.h:109; 76: Taking true branch in /opt/root_src/graf3d/eve7/glu/sweep.c:158; 77: expanded from macro 'assert' in /usr/include/assert.h:109; 78: Memory is released in /opt/root_src/graf3d/eve7/glu/sweep.c:162; 79: expanded from macro 'memFree' in /opt/root_src/graf3d/eve7/glu/memalloc.h:41; 80: Returning; memory was released via 2nd parameter in /opt/root_src/graf3d/eve7/glu/sweep.c:805; 81: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 82: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:806; 83: Use of memory after it is freed in /opt/root_src/graf3d/eve7/glu/sweep.c:808; /opt/root_src/graf3d/eve7/glu/sweep.c:885:22: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 2: Taking false branch in /opt/root_src/graf3d/eve7/glu/sweep.c:1321; 3: Assuming the condition is true in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 4: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve7/glu/sweep.c:1325; 5: Loop condition is true. Entering,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:57402,Testability,log,logicalShape,57402,"' is never read in /opt/root_src/graf3d/g3d/src/TView3D.cxx:687; /opt/root_src/graf3d/g3d/src/TView3D.cxx:1741:20: warning: Value stored to 'count' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'count' is never read in /opt/root_src/graf3d/g3d/src/TView3D.cxx:1741; /opt/root_src/graf3d/g3d/src/TXTRU.cxx:800:14: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/graf3d/g3d/src/TXTRU.cxx:800; /opt/root_src/graf3d/gl/src/TGLBoxPainter.cxx:411:7: warning: Value stored to 'maxContent' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maxContent' is never read in /opt/root_src/graf3d/gl/src/TGLBoxPainter.cxx:411; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500:7: warning: Value stored to 'logicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'logicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510:7: warning: Value stored to 'physicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'physicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510; /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270:7: warning: Value stored to 'maxContent' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maxContent' is never read in /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270; /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509; /opt/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7531:57488,Testability,log,logicalShape,57488,"iew3D.cxx:1741:20: warning: Value stored to 'count' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'count' is never read in /opt/root_src/graf3d/g3d/src/TView3D.cxx:1741; /opt/root_src/graf3d/g3d/src/TXTRU.cxx:800:14: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/graf3d/g3d/src/TXTRU.cxx:800; /opt/root_src/graf3d/gl/src/TGLBoxPainter.cxx:411:7: warning: Value stored to 'maxContent' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maxContent' is never read in /opt/root_src/graf3d/gl/src/TGLBoxPainter.cxx:411; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500:7: warning: Value stored to 'logicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'logicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1500; /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510:7: warning: Value stored to 'physicalShape' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'physicalShape' is never read in /opt/root_src/graf3d/gl/src/TGLScene.cxx:1510; /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270:7: warning: Value stored to 'maxContent' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maxContent' is never read in /opt/root_src/graf3d/gl/src/TGLVoxelPainter.cxx:270; /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/graf3d/gviz3d/src/TStructViewerGUI.cxx:509; /opt/root_src/graf3d/x3d/src/x3d.c:730:10: warning: Value stored to 'index2' is never read [clang-analyze",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7531
https://github.com/root-project/root/issues/7533:53778,Energy Efficiency,allocate,allocated,53778,d to 'nrows' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nrows' is never read in /opt/root_src/gui/gui/src/TGTable.cxx:1399; /opt/root_src/gui/gui/src/TGTable.cxx:1508:4: warning: Value stored to 'pos' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'pos' is never read in /opt/root_src/gui/gui/src/TGTable.cxx:1508; /opt/root_src/gui/gui/src/TGText.cxx:171:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:171; /opt/root_src/gui/gui/src/TGText.cxx:196:22: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Calling 'TGText::InsText' in /opt/root_src/gui/gui/src/TGText.cxx:922; 2: Field 'fY' is <= field 'fRowCount' in /opt/root_src/gui/gui/src/TGText.cxx:801; 3: Taking false branch in /opt/root_src/gui/gui/src/TGText.cxx:801; 4: Field 'fY' is equal to field 'fRowCount' in /opt/root_src/gui/gui/src/TGText.cxx:810; 5: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:810; 6: Assuming 'start_src.fY' is equal to 'end_src.fY' in /opt/root_src/gui/gui/src/TGText.cxx:824; 7: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:824; 8: 'len' is > 0 in /opt/root_src/gui/gui/src/TGText.cxx:830; 9: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:830; 10: Calling 'TGText::GetLine' in /opt/root_src/gui/gui/src/TGText.cxx:831; 11: Assuming the condition is true in /opt/root_src/gui/gui/src/TGText.cxx:1000; 12: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:1000; 13: Calling 'TGTextLine::GetText' in /opt/root_src/g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:55129,Energy Efficiency,allocate,allocated,55129,x:810; 5: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:810; 6: Assuming 'start_src.fY' is equal to 'end_src.fY' in /opt/root_src/gui/gui/src/TGText.cxx:824; 7: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:824; 8: 'len' is > 0 in /opt/root_src/gui/gui/src/TGText.cxx:830; 9: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:830; 10: Calling 'TGText::GetLine' in /opt/root_src/gui/gui/src/TGText.cxx:831; 11: Assuming the condition is true in /opt/root_src/gui/gui/src/TGText.cxx:1000; 12: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:1000; 13: Calling 'TGTextLine::GetText' in /opt/root_src/gui/gui/src/TGText.cxx:1001; 14: Assuming 'pos' is < field 'fLength' in /opt/root_src/gui/gui/src/TGText.cxx:187; 15: Taking false branch in /opt/root_src/gui/gui/src/TGText.cxx:187; 16: Assuming the condition is false in /opt/root_src/gui/gui/src/TGText.cxx:191; 17: Taking false branch in /opt/root_src/gui/gui/src/TGText.cxx:191; 18: Memory is allocated in /opt/root_src/gui/gui/src/TGText.cxx:195; 19: Use of zero-allocated memory in /opt/root_src/gui/gui/src/TGText.cxx:196; /opt/root_src/gui/gui/src/TGText.cxx:630:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:630; /opt/root_src/gui/gui/src/TGText.cxx:671:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:55200,Energy Efficiency,allocate,allocated,55200,6: Assuming 'start_src.fY' is equal to 'end_src.fY' in /opt/root_src/gui/gui/src/TGText.cxx:824; 7: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:824; 8: 'len' is > 0 in /opt/root_src/gui/gui/src/TGText.cxx:830; 9: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:830; 10: Calling 'TGText::GetLine' in /opt/root_src/gui/gui/src/TGText.cxx:831; 11: Assuming the condition is true in /opt/root_src/gui/gui/src/TGText.cxx:1000; 12: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:1000; 13: Calling 'TGTextLine::GetText' in /opt/root_src/gui/gui/src/TGText.cxx:1001; 14: Assuming 'pos' is < field 'fLength' in /opt/root_src/gui/gui/src/TGText.cxx:187; 15: Taking false branch in /opt/root_src/gui/gui/src/TGText.cxx:187; 16: Assuming the condition is false in /opt/root_src/gui/gui/src/TGText.cxx:191; 17: Taking false branch in /opt/root_src/gui/gui/src/TGText.cxx:191; 18: Memory is allocated in /opt/root_src/gui/gui/src/TGText.cxx:195; 19: Use of zero-allocated memory in /opt/root_src/gui/gui/src/TGText.cxx:196; /opt/root_src/gui/gui/src/TGText.cxx:630:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:630; /opt/root_src/gui/gui/src/TGText.cxx:671:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the mem,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:58806,Energy Efficiency,allocate,allocated,58806,"OD static (TString) [clazy-non-pod-global-static]; /opt/root_src/gui/gui/src/TGTextEntry.cxx:1608:10: warning: Value stored to 'charWidth' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'charWidth' is never read in /opt/root_src/gui/gui/src/TGTextEntry.cxx:1608; /opt/root_src/gui/gui/src/TGTextEntry.cxx:1619:10: warning: Value stored to 'charWidth' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'charWidth' is never read in /opt/root_src/gui/gui/src/TGTextEntry.cxx:1619; /opt/root_src/gui/gui/src/TGTextView.cxx:1003:15: warning: Although the value stored to 'temp_len' is used in the enclosing expression, the value is never actually read from 'temp_len' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'temp_len' is used in the enclosing expression, the value is never actually read from 'temp_len' in /opt/root_src/gui/gui/src/TGTextView.cxx:1003; /opt/root_src/gui/gui/src/TGTextView.cxx:1016:16: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGTextView.cxx:986; 2: Taking false branch in /opt/root_src/gui/gui/src/TGTextView.cxx:986; 3: Assuming the condition is false in /opt/root_src/gui/gui/src/TGTextView.cxx:996; 4: Loop condition is false. Execution continues on line 999 in /opt/root_src/gui/gui/src/TGTextView.cxx:996; 5: Memory is allocated in /opt/root_src/gui/gui/src/TGTextView.cxx:1002; 6: Loop condition is false. Execution continues on line 1016 in /opt/root_src/gui/gui/src/TGTextView.cxx:1004; 7: Use of zero-allocated memory in /opt/root_src/gui/gui/src/TGTextView.cxx:1016; /opt/root_src/gui/gui/src/TGTextView.cxx:1027:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:59223,Energy Efficiency,allocate,allocated,59223,"1: Value stored to 'charWidth' is never read in /opt/root_src/gui/gui/src/TGTextEntry.cxx:1619; /opt/root_src/gui/gui/src/TGTextView.cxx:1003:15: warning: Although the value stored to 'temp_len' is used in the enclosing expression, the value is never actually read from 'temp_len' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'temp_len' is used in the enclosing expression, the value is never actually read from 'temp_len' in /opt/root_src/gui/gui/src/TGTextView.cxx:1003; /opt/root_src/gui/gui/src/TGTextView.cxx:1016:16: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGTextView.cxx:986; 2: Taking false branch in /opt/root_src/gui/gui/src/TGTextView.cxx:986; 3: Assuming the condition is false in /opt/root_src/gui/gui/src/TGTextView.cxx:996; 4: Loop condition is false. Execution continues on line 999 in /opt/root_src/gui/gui/src/TGTextView.cxx:996; 5: Memory is allocated in /opt/root_src/gui/gui/src/TGTextView.cxx:1002; 6: Loop condition is false. Execution continues on line 1016 in /opt/root_src/gui/gui/src/TGTextView.cxx:1004; 7: Use of zero-allocated memory in /opt/root_src/gui/gui/src/TGTextView.cxx:1016; /opt/root_src/gui/gui/src/TGTextView.cxx:1027:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGTextView.cxx:1027; /opt/root_src/gui/gui/src/TRootApplication.cxx:83:12: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Calling 'TRootApplicati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:59409,Energy Efficiency,allocate,allocated,59409,"p_len' is used in the enclosing expression, the value is never actually read from 'temp_len' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'temp_len' is used in the enclosing expression, the value is never actually read from 'temp_len' in /opt/root_src/gui/gui/src/TGTextView.cxx:1003; /opt/root_src/gui/gui/src/TGTextView.cxx:1016:16: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGTextView.cxx:986; 2: Taking false branch in /opt/root_src/gui/gui/src/TGTextView.cxx:986; 3: Assuming the condition is false in /opt/root_src/gui/gui/src/TGTextView.cxx:996; 4: Loop condition is false. Execution continues on line 999 in /opt/root_src/gui/gui/src/TGTextView.cxx:996; 5: Memory is allocated in /opt/root_src/gui/gui/src/TGTextView.cxx:1002; 6: Loop condition is false. Execution continues on line 1016 in /opt/root_src/gui/gui/src/TGTextView.cxx:1004; 7: Use of zero-allocated memory in /opt/root_src/gui/gui/src/TGTextView.cxx:1016; /opt/root_src/gui/gui/src/TGTextView.cxx:1027:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGTextView.cxx:1027; /opt/root_src/gui/gui/src/TRootApplication.cxx:83:12: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Calling 'TRootApplication::GetOptions' in /opt/root_src/gui/gui/src/TRootApplication.cxx:41; 2: Assuming 'argc' is non-null in /opt/root_src/gui/gui/src/TRootApplication.cxx:79; 3: Taking false branch in /opt/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:18773,Modifiability,variab,variable,18773,82; 54: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:276; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445:4: warning: Value stored to 'type' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'type' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446:4: warning: Value stored to 'is_link' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'is_link' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741:10: warning: Value stored to 'item' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'item' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741; /opt/root_src/gui/gui/src/TGFileDialog.cxx:63:1: warning: non-POD static (TGFileInfo) [clazy-non-pod-global-static]; /opt/root_src/gui/gui/src/TGFont.cxx:849:11: warning: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') [clang-analyzer-core.NullDereference]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:741; 11: Assuming 'special' is < 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 12: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:21450,Modifiability,variab,variable,21450,alse branch in /opt/root_src/gui/gui/src/TGFont.cxx:809; 23: Assuming 'start' is >= 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:706; 24: Loop condition is false. Execution continues on line 832 in /opt/root_src/gui/gui/src/TGFont.cxx:706; 25: Assuming field 'fNumChunks' is > 0 in /opt/root_src/gui/gui/src/TGFont.cxx:832; 26: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:832; 27: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:832; 28: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:832; 29: Value assigned to 'chunk' in /opt/root_src/gui/gui/src/TGFont.cxx:844; 30: Assuming 'chunk' is null in /opt/root_src/gui/gui/src/TGFont.cxx:845; 31: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:845; 32: 'n' is < field 'fNumChunks' in /opt/root_src/gui/gui/src/TGFont.cxx:846; 33: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:846; 34: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') in /opt/root_src/gui/gui/src/TGFont.cxx:849; /opt/root_src/gui/gui/src/TGFont.cxx:853:24: warning: The right operand of '-' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:48239,Modifiability,variab,variable,48239,lcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574; /opt/root_src/gui/gui/src/TGPack.cxx:561:30: warning: Access to field 'fFrame' results in a dereference of a null pointer (loaded from variable 'f0') [clang-analyzer-core.NullDereference]; 1: Assuming 'delta' is >= 'min_dec' in /opt/root_src/gui/gui/src/TGPack.cxx:532; 2: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:532; 3: 'f0' initialized to a null pointer value in /opt/root_src/gui/gui/src/TGPack.cxx:537; 4: Calling 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 5: Loop condition is false. Execution continues on line 226 in /opt/root_src/gui/gui/src/TGPack.cxx:217; 6: Returning without writing to 'f0' in /opt/root_src/gui/gui/src/TGPack.cxx:227; 7: Returning from 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 8: Assuming field 'fDragOverflow' is >= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:540; 9: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:540; 10: Assuming field 'fDragOverflow' is <= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:550; 11: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:550; 12: Access to f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:49276,Modifiability,variab,variable,49276,[clang-analyzer-core.NullDereference]; 1: Assuming 'delta' is >= 'min_dec' in /opt/root_src/gui/gui/src/TGPack.cxx:532; 2: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:532; 3: 'f0' initialized to a null pointer value in /opt/root_src/gui/gui/src/TGPack.cxx:537; 4: Calling 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 5: Loop condition is false. Execution continues on line 226 in /opt/root_src/gui/gui/src/TGPack.cxx:217; 6: Returning without writing to 'f0' in /opt/root_src/gui/gui/src/TGPack.cxx:227; 7: Returning from 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 8: Assuming field 'fDragOverflow' is >= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:540; 9: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:540; 10: Assuming field 'fDragOverflow' is <= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:550; 11: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:550; 12: Access to field 'fFrame' results in a dereference of a null pointer (loaded from variable 'f0') in /opt/root_src/gui/gui/src/TGPack.cxx:561; /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53:12: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 2: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 3: Assuming 'pname' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 4: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 5: Value assigned to field 'fImage' in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:50177,Modifiability,Variab,Variable,50177,sults in a dereference of a null pointer (loaded from variable 'f0') in /opt/root_src/gui/gui/src/TGPack.cxx:561; /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53:12: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 2: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 3: Assuming 'pname' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 4: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 5: Value assigned to field 'fImage' in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:462; /opt/root_src/gui/gui/src/TGSpeedo.cxx:470:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:470; /opt/root_src/gui/gui/src/TGSplitFrame.cxx:260:15: warning: Access to field 'fSplitTool' results in a dereference of a null pointer [clang-analyzer-core.NullDereference]; 1: Assuming field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 2: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 3: Calling 'TGSplitFrame::SplitVertical' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:595; 4: Field 'fFrame' is null in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:50309,Modifiability,Variab,Variable,50309,rc/TGShapedFrame.cxx:53:12: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 2: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 3: Assuming 'pname' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 4: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 5: Value assigned to field 'fImage' in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:462; /opt/root_src/gui/gui/src/TGSpeedo.cxx:470:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:470; /opt/root_src/gui/gui/src/TGSplitFrame.cxx:260:15: warning: Access to field 'fSplitTool' results in a dereference of a null pointer [clang-analyzer-core.NullDereference]; 1: Assuming field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 2: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 3: Calling 'TGSplitFrame::SplitVertical' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:595; 4: Field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 5: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 6: Calling 'TGSplitFrame::,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:50496,Modifiability,Variab,Variable,50496,rame.cxx:37; 2: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 3: Assuming 'pname' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 4: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 5: Value assigned to field 'fImage' in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:462; /opt/root_src/gui/gui/src/TGSpeedo.cxx:470:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:470; /opt/root_src/gui/gui/src/TGSplitFrame.cxx:260:15: warning: Access to field 'fSplitTool' results in a dereference of a null pointer [clang-analyzer-core.NullDereference]; 1: Assuming field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 2: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 3: Calling 'TGSplitFrame::SplitVertical' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:595; 4: Field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 5: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 6: Calling 'TGSplitFrame::VSplit' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:621; 7: Assuming field 'fSplitter' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 8: Left side of '||' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:50628,Modifiability,Variab,Variable,50628,ui/src/TGShapedFrame.cxx:45; 4: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 5: Value assigned to field 'fImage' in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:462; /opt/root_src/gui/gui/src/TGSpeedo.cxx:470:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:470; /opt/root_src/gui/gui/src/TGSplitFrame.cxx:260:15: warning: Access to field 'fSplitTool' results in a dereference of a null pointer [clang-analyzer-core.NullDereference]; 1: Assuming field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 2: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 3: Calling 'TGSplitFrame::SplitVertical' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:595; 4: Field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 5: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 6: Calling 'TGSplitFrame::VSplit' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:621; 7: Assuming field 'fSplitter' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 8: Left side of '||' is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 9: Assuming field 'fFirst' is equal to null in /opt/root_src/gui/gui/src/TGSplitF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:18761,Performance,load,loaded,18761,82; 54: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:276; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445:4: warning: Value stored to 'type' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'type' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446:4: warning: Value stored to 'is_link' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'is_link' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741:10: warning: Value stored to 'item' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'item' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741; /opt/root_src/gui/gui/src/TGFileDialog.cxx:63:1: warning: non-POD static (TGFileInfo) [clazy-non-pod-global-static]; /opt/root_src/gui/gui/src/TGFont.cxx:849:11: warning: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') [clang-analyzer-core.NullDereference]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:741; 11: Assuming 'special' is < 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 12: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:21438,Performance,load,loaded,21438,alse branch in /opt/root_src/gui/gui/src/TGFont.cxx:809; 23: Assuming 'start' is >= 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:706; 24: Loop condition is false. Execution continues on line 832 in /opt/root_src/gui/gui/src/TGFont.cxx:706; 25: Assuming field 'fNumChunks' is > 0 in /opt/root_src/gui/gui/src/TGFont.cxx:832; 26: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:832; 27: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:832; 28: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:832; 29: Value assigned to 'chunk' in /opt/root_src/gui/gui/src/TGFont.cxx:844; 30: Assuming 'chunk' is null in /opt/root_src/gui/gui/src/TGFont.cxx:845; 31: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:845; 32: 'n' is < field 'fNumChunks' in /opt/root_src/gui/gui/src/TGFont.cxx:846; 33: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:846; 34: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') in /opt/root_src/gui/gui/src/TGFont.cxx:849; /opt/root_src/gui/gui/src/TGFont.cxx:853:24: warning: The right operand of '-' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:48227,Performance,load,loaded,48227,lcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574; /opt/root_src/gui/gui/src/TGPack.cxx:561:30: warning: Access to field 'fFrame' results in a dereference of a null pointer (loaded from variable 'f0') [clang-analyzer-core.NullDereference]; 1: Assuming 'delta' is >= 'min_dec' in /opt/root_src/gui/gui/src/TGPack.cxx:532; 2: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:532; 3: 'f0' initialized to a null pointer value in /opt/root_src/gui/gui/src/TGPack.cxx:537; 4: Calling 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 5: Loop condition is false. Execution continues on line 226 in /opt/root_src/gui/gui/src/TGPack.cxx:217; 6: Returning without writing to 'f0' in /opt/root_src/gui/gui/src/TGPack.cxx:227; 7: Returning from 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 8: Assuming field 'fDragOverflow' is >= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:540; 9: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:540; 10: Assuming field 'fDragOverflow' is <= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:550; 11: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:550; 12: Access to f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:49264,Performance,load,loaded,49264,[clang-analyzer-core.NullDereference]; 1: Assuming 'delta' is >= 'min_dec' in /opt/root_src/gui/gui/src/TGPack.cxx:532; 2: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:532; 3: 'f0' initialized to a null pointer value in /opt/root_src/gui/gui/src/TGPack.cxx:537; 4: Calling 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 5: Loop condition is false. Execution continues on line 226 in /opt/root_src/gui/gui/src/TGPack.cxx:217; 6: Returning without writing to 'f0' in /opt/root_src/gui/gui/src/TGPack.cxx:227; 7: Returning from 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 8: Assuming field 'fDragOverflow' is >= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:540; 9: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:540; 10: Assuming field 'fDragOverflow' is <= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:550; 11: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:550; 12: Access to field 'fFrame' results in a dereference of a null pointer (loaded from variable 'f0') in /opt/root_src/gui/gui/src/TGPack.cxx:561; /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53:12: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 2: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 3: Assuming 'pname' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 4: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 5: Value assigned to field 'fImage' in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:73412,Performance,load,loaded,73412,"ition is true in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 84: Left side of '&&' is true in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 85: Calling 'TGuiBldDragManager::IsGrabDisabled' in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 86: 'f' is non-null, which participates in a condition later in /opt/root_src/gui/guibuilder/inc/TGuiBldDragManager.h:103; 87: Left side of '&&' is true in /opt/root_src/gui/guibuilder/inc/TGuiBldDragManager.h:103; 88: Returning value, which participates in a condition later in /opt/root_src/gui/guibuilder/inc/TGuiBldDragManager.h:103; 89: Returning from 'TGuiBldDragManager::IsGrabDisabled' in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 90: Assuming the condition is true in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 91: Taking true branch in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 92: Returning pointer (loaded from 'parent'), which participates in a condition later in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5264; 93: Returning from 'TGuiBldDragManager::GetEditableParent' in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:2481; 94: 'p' is non-null in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:2483; 95: Taking true branch in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:2483; 96: Called C++ object pointer is null in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:2484; /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3338:7: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case kSaveAct:' at line 4795 in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:4699; 2: Assuming field 'fBuilder' is null in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:4796; 3: Taking false branch in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:4796; 4: Calling 'TGuiBldDragManager::Save' in /opt/root_src/gui/guibui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:96943,Performance,load,loaded,96943, arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:370; /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:276:4: warning: Value stored to 'height1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'height1' is never read in /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:276; /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:277:4: warning: Value stored to 'width1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'width1' is never read in /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:277; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2673:9: warning: Access to field 'fStatus' results in a dereference of a null pointer (loaded from field 'fActQuery') [clang-analyzer-core.NullDereference]; 1: Calling 'TSessionQueryFrame::Progress' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2739; 2: Assuming field 'fProof' is non-null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2621; 3: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2621; 4: Assuming 'sender' is non-null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 5: Left side of '||' is false in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 6: Assuming 'sender' is equal to field 'fProof' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 7: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 8: Assuming field 'fActQuery' is null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2628; 9: Assuming pointer value is null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2628; 10: Left side of '&&' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:98855,Performance,load,loaded,98855,/sessionviewer/src/TSessionViewer.cxx:2628; 10: Left side of '&&' is false in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2628; 11: Assuming 'total' is >= 0 in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2640; 12: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2640; 13: Assuming 'processed' is not equal to field 'fPrevProcessed' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2646; 14: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2646; 15: Assuming 'total' is equal to field 'fEntries' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2651; 16: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2651; 17: Assuming the condition is false in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2667; 18: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2667; 19: Access to field 'fStatus' results in a dereference of a null pointer (loaded from field 'fActQuery') in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2673; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3788:13: warning: Value stored to 's' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' is never read in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3788; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3841:13: warning: Value stored to 's' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' is never read in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3841; /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:337:10: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:280; 2: Left side of '&&' is true in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:284; 3: Assuming 'version' is <= 0 in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:284; 4: '?' condition is false i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:18696,Security,Access,Access,18696,82; 54: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:276; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445:4: warning: Value stored to 'type' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'type' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446:4: warning: Value stored to 'is_link' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'is_link' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741:10: warning: Value stored to 'item' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'item' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741; /opt/root_src/gui/gui/src/TGFileDialog.cxx:63:1: warning: non-POD static (TGFileInfo) [clazy-non-pod-global-static]; /opt/root_src/gui/gui/src/TGFont.cxx:849:11: warning: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') [clang-analyzer-core.NullDereference]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:741; 11: Assuming 'special' is < 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 12: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:21373,Security,Access,Access,21373,alse branch in /opt/root_src/gui/gui/src/TGFont.cxx:809; 23: Assuming 'start' is >= 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:706; 24: Loop condition is false. Execution continues on line 832 in /opt/root_src/gui/gui/src/TGFont.cxx:706; 25: Assuming field 'fNumChunks' is > 0 in /opt/root_src/gui/gui/src/TGFont.cxx:832; 26: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:832; 27: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:832; 28: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:832; 29: Value assigned to 'chunk' in /opt/root_src/gui/gui/src/TGFont.cxx:844; 30: Assuming 'chunk' is null in /opt/root_src/gui/gui/src/TGFont.cxx:845; 31: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:845; 32: 'n' is < field 'fNumChunks' in /opt/root_src/gui/gui/src/TGFont.cxx:846; 33: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:846; 34: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') in /opt/root_src/gui/gui/src/TGFont.cxx:849; /opt/root_src/gui/gui/src/TGFont.cxx:853:24: warning: The right operand of '-' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:25098,Security,access,access,25098,x:849; 33: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:849; 34: Assuming 'justify' is not equal to kTextCenterX in /opt/root_src/gui/gui/src/TGFont.cxx:854; 35: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:854; 36: Assuming 'justify' is not equal to kTextRight in /opt/root_src/gui/gui/src/TGFont.cxx:856; 37: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:856; 38: Assuming 'n' is < field 'fNumChunks' in /opt/root_src/gui/gui/src/TGFont.cxx:846; 39: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:846; 40: Assuming 'y' is not equal to field 'fY' in /opt/root_src/gui/gui/src/TGFont.cxx:849; 41: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:849; 42: The value 1 is assigned to 'curLine' in /opt/root_src/gui/gui/src/TGFont.cxx:850; 43: The right operand of '-' is a garbage value in /opt/root_src/gui/gui/src/TGFont.cxx:853; /opt/root_src/gui/gui/src/TGFont.cxx:2129:11: warning: Array access results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 's' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1700; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1700; 3: Assuming 's' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1705; 4: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1705; 5: Calling 'TGFontPool::GetFont' in /opt/root_src/gui/gui/src/TGFont.cxx:1709; 6: 'font' is non-null in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 7: Left side of '||' is false in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 8: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 9: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 10: Assuming 'f' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1564; 11: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1564; 12: Assuming 'nf' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1571; 13: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1571; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:29140,Security,access,access,29140,nch in /opt/root_src/gui/gui/src/TGFont.cxx:2101; 41: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2104; 42: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2104; 43: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2107; 44: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2107; 45: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2110; 46: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2110; 47: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2113; 48: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2113; 49: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2121; 50: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2121; 51: Assuming the condition is true in /opt/root_src/gui/gui/src/TGFont.cxx:2128; 52: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:2128; 53: Array access results in a null pointer dereference in /opt/root_src/gui/gui/src/TGFont.cxx:2129; /opt/root_src/gui/gui/src/TGFont.cxx:2154:11: warning: Array access results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 's' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1700; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1700; 3: Assuming 's' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1705; 4: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1705; 5: Calling 'TGFontPool::GetFont' in /opt/root_src/gui/gui/src/TGFont.cxx:1709; 6: 'font' is non-null in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 7: Left side of '||' is false in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 8: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 9: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 10: Assuming 'f' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1564; 11: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1564; 12:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:29292,Security,access,access,29292,g false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2104; 43: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2107; 44: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2107; 45: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2110; 46: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2110; 47: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2113; 48: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2113; 49: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2121; 50: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2121; 51: Assuming the condition is true in /opt/root_src/gui/gui/src/TGFont.cxx:2128; 52: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:2128; 53: Array access results in a null pointer dereference in /opt/root_src/gui/gui/src/TGFont.cxx:2129; /opt/root_src/gui/gui/src/TGFont.cxx:2154:11: warning: Array access results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 's' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1700; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1700; 3: Assuming 's' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1705; 4: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1705; 5: Calling 'TGFontPool::GetFont' in /opt/root_src/gui/gui/src/TGFont.cxx:1709; 6: 'font' is non-null in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 7: Left side of '||' is false in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 8: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 9: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 10: Assuming 'f' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1564; 11: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1564; 12: Assuming 'nf' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1571; 13: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1571; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:33486,Security,access,access,33486,nch in /opt/root_src/gui/gui/src/TGFont.cxx:2104; 43: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2107; 44: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2107; 45: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2110; 46: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2110; 47: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2113; 48: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2113; 49: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2121; 50: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2121; 51: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:2128; 52: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:2128; 53: Assuming the condition is true in /opt/root_src/gui/gui/src/TGFont.cxx:2153; 54: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:2153; 55: Array access results in a null pointer dereference in /opt/root_src/gui/gui/src/TGFont.cxx:2154; /opt/root_src/gui/gui/src/TGFont.cxx:2188:23: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 's' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1700; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1700; 3: Assuming 's' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1705; 4: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1705; 5: Calling 'TGFontPool::GetFont' in /opt/root_src/gui/gui/src/TGFont.cxx:1709; 6: 'font' is non-null in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 7: Left side of '||' is false in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 8: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 9: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:1557; 10: Assuming 'f' is null in /opt/root_src/gui/gui/src/TGFont.cxx:1564; 11: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:39539,Security,secur,security,39539,-POD static (TString) [clazy-non-pod-global-static]; /opt/root_src/gui/gui/src/TGFontDialog.cxx:631:7: warning: Value stored to 'n1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'n1' is never read in /opt/root_src/gui/gui/src/TGFontDialog.cxx:631; /opt/root_src/gui/gui/src/TGFontDialog.cxx:884:4: warning: Value stored to 'n1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'n1' is never read in /opt/root_src/gui/gui/src/TGFontDialog.cxx:884; /opt/root_src/gui/gui/src/TGInputDialog.cxx:82:4: warning: Value stored to 'height' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'height' is never read in /opt/root_src/gui/gui/src/TGInputDialog.cxx:82; /opt/root_src/gui/gui/src/TGInputDialog.cxx:154:22: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGInputDialog.cxx:154; /opt/root_src/gui/gui/src/TGInputDialog.cxx:180:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGInputDialog.cxx:180; /opt/root_src/gui/gui/src/TGLayout.cxx:286:16: warning: Value stored to 'y' is never read [clang-analyzer-deadcode.DeadStore,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:40115,Security,secur,security,40115,"t' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'height' is never read in /opt/root_src/gui/gui/src/TGInputDialog.cxx:82; /opt/root_src/gui/gui/src/TGInputDialog.cxx:154:22: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGInputDialog.cxx:154; /opt/root_src/gui/gui/src/TGInputDialog.cxx:180:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGInputDialog.cxx:180; /opt/root_src/gui/gui/src/TGLayout.cxx:286:16: warning: Value stored to 'y' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'y' is never read in /opt/root_src/gui/gui/src/TGLayout.cxx:286; /opt/root_src/gui/gui/src/TGLayout.cxx:450:16: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/gui/gui/src/TGLayout.cxx:450; /opt/root_src/gui/gui/src/TGLayout.cxx:811:12: warning: Although the value stored to 'ptr' is used in the enclosing expression, the value is never actually read from 'ptr' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'ptr' is used in the enclosing exp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:46087,Security,secur,security,46087,root_src/gui/gui/src/TGListTree.cxx:1528; /opt/root_src/gui/gui/src/TGListTree.cxx:1531:7: warning: Value stored to 'yline' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'yline' is never read in /opt/root_src/gui/gui/src/TGListTree.cxx:1531; /opt/root_src/gui/gui/src/TGListView.cxx:854:7: warning: Value stored to 'select_frame' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'select_frame' is never read in /opt/root_src/gui/gui/src/TGListView.cxx:854; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:311:7: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:311; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:439:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:439; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449:7: warning: Call to function 'strcpy' is insecure as it does not provide boun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:46662,Security,secur,security,46662,d to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:311; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:439:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:439; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574:7: warning: Call to function 'strcpy' is insecure as it does not provide boun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:47237,Security,secur,security,47237, copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:439; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574; /opt/root_src/gui/gui/src/TGPack.cxx:561:30: warning: Access to field 'fFrame' results in a dereference of a null pointer (lo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:47812,Security,secur,security,47812, copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574; /opt/root_src/gui/gui/src/TGPack.cxx:561:30: warning: Access to field 'fFrame' results in a dereference of a null pointer (loaded from variable 'f0') [clang-analyzer-core.NullDereference]; 1: Assuming 'delta' is >= 'min_dec' in /opt/root_src/gui/gui/src/TGPack.cxx:532; 2: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:532; 3: 'f0' initialized to a null pointer value in /opt/root_src/gui/gui/src/TGPack.cxx:537; 4: Calling 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 5: Loop condition is false. Execution continues on line 226 in /opt/root_src/gui/gui/src/TGPack.cxx:217; 6: Returning without writing to 'f0' in /opt/root_src/gui/gui/src/TGPack.cxx:227; 7: Return,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:48158,Security,Access,Access,48158,lcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574; /opt/root_src/gui/gui/src/TGPack.cxx:561:30: warning: Access to field 'fFrame' results in a dereference of a null pointer (loaded from variable 'f0') [clang-analyzer-core.NullDereference]; 1: Assuming 'delta' is >= 'min_dec' in /opt/root_src/gui/gui/src/TGPack.cxx:532; 2: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:532; 3: 'f0' initialized to a null pointer value in /opt/root_src/gui/gui/src/TGPack.cxx:537; 4: Calling 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 5: Loop condition is false. Execution continues on line 226 in /opt/root_src/gui/gui/src/TGPack.cxx:217; 6: Returning without writing to 'f0' in /opt/root_src/gui/gui/src/TGPack.cxx:227; 7: Returning from 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 8: Assuming field 'fDragOverflow' is >= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:540; 9: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:540; 10: Assuming field 'fDragOverflow' is <= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:550; 11: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:550; 12: Access to f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:49195,Security,Access,Access,49195,[clang-analyzer-core.NullDereference]; 1: Assuming 'delta' is >= 'min_dec' in /opt/root_src/gui/gui/src/TGPack.cxx:532; 2: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:532; 3: 'f0' initialized to a null pointer value in /opt/root_src/gui/gui/src/TGPack.cxx:537; 4: Calling 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 5: Loop condition is false. Execution continues on line 226 in /opt/root_src/gui/gui/src/TGPack.cxx:217; 6: Returning without writing to 'f0' in /opt/root_src/gui/gui/src/TGPack.cxx:227; 7: Returning from 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 8: Assuming field 'fDragOverflow' is >= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:540; 9: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:540; 10: Assuming field 'fDragOverflow' is <= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:550; 11: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:550; 12: Access to field 'fFrame' results in a dereference of a null pointer (loaded from variable 'f0') in /opt/root_src/gui/gui/src/TGPack.cxx:561; /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53:12: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 2: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 3: Assuming 'pname' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 4: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 5: Value assigned to field 'fImage' in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:50278,Security,secur,security,50278,sults in a dereference of a null pointer (loaded from variable 'f0') in /opt/root_src/gui/gui/src/TGPack.cxx:561; /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53:12: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 2: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 3: Assuming 'pname' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 4: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 5: Value assigned to field 'fImage' in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:462; /opt/root_src/gui/gui/src/TGSpeedo.cxx:470:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:470; /opt/root_src/gui/gui/src/TGSplitFrame.cxx:260:15: warning: Access to field 'fSplitTool' results in a dereference of a null pointer [clang-analyzer-core.NullDereference]; 1: Assuming field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 2: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 3: Calling 'TGSplitFrame::SplitVertical' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:595; 4: Field 'fFrame' is null in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:50597,Security,secur,security,50597,rame.cxx:37; 2: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 3: Assuming 'pname' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 4: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 5: Value assigned to field 'fImage' in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:462; /opt/root_src/gui/gui/src/TGSpeedo.cxx:470:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:470; /opt/root_src/gui/gui/src/TGSplitFrame.cxx:260:15: warning: Access to field 'fSplitTool' results in a dereference of a null pointer [clang-analyzer-core.NullDereference]; 1: Assuming field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 2: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 3: Calling 'TGSplitFrame::SplitVertical' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:595; 4: Field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 5: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 6: Calling 'TGSplitFrame::VSplit' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:621; 7: Assuming field 'fSplitter' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 8: Left side of '||' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:50820,Security,Access,Access,50820,ame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:462; /opt/root_src/gui/gui/src/TGSpeedo.cxx:470:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:470; /opt/root_src/gui/gui/src/TGSplitFrame.cxx:260:15: warning: Access to field 'fSplitTool' results in a dereference of a null pointer [clang-analyzer-core.NullDereference]; 1: Assuming field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 2: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 3: Calling 'TGSplitFrame::SplitVertical' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:595; 4: Field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 5: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 6: Calling 'TGSplitFrame::VSplit' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:621; 7: Assuming field 'fSplitter' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 8: Left side of '||' is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 9: Assuming field 'fFirst' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 10: Left side of '||' is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 11: Assuming field 'fSecond' is equal to null in /opt/root_src/gui/gui/src/TGSpli,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:52367,Security,Access,Access,52367,; 7: Assuming field 'fSplitter' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 8: Left side of '||' is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 9: Assuming field 'fFirst' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 10: Left side of '||' is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 11: Assuming field 'fSecond' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 12: Left side of '||' is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 13: Field 'fFrame' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 14: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 15: 'w' is <= 0 in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:457; 16: '?' condition is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:457; 17: Calling default constructor for 'TGSplitFrame' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:461; 18: Access to field 'fSplitTool' results in a dereference of a null pointer in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:260; /opt/root_src/gui/gui/src/TGTable.cxx:1387:10: warning: Value stored to 'ncolumns' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ncolumns' is never read in /opt/root_src/gui/gui/src/TGTable.cxx:1387; /opt/root_src/gui/gui/src/TGTable.cxx:1399:10: warning: Value stored to 'nrows' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nrows' is never read in /opt/root_src/gui/gui/src/TGTable.cxx:1399; /opt/root_src/gui/gui/src/TGTable.cxx:1508:4: warning: Value stored to 'pos' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'pos' is never read in /opt/root_src/gui/gui/src/TGTable.cxx:1508; /opt/root_src/gui/gui/src/TGText.cxx:171:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:53427,Security,secur,security,53427,e of a null pointer in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:260; /opt/root_src/gui/gui/src/TGTable.cxx:1387:10: warning: Value stored to 'ncolumns' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ncolumns' is never read in /opt/root_src/gui/gui/src/TGTable.cxx:1387; /opt/root_src/gui/gui/src/TGTable.cxx:1399:10: warning: Value stored to 'nrows' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nrows' is never read in /opt/root_src/gui/gui/src/TGTable.cxx:1399; /opt/root_src/gui/gui/src/TGTable.cxx:1508:4: warning: Value stored to 'pos' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'pos' is never read in /opt/root_src/gui/gui/src/TGTable.cxx:1508; /opt/root_src/gui/gui/src/TGText.cxx:171:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:171; /opt/root_src/gui/gui/src/TGText.cxx:196:22: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Calling 'TGText::InsText' in /opt/root_src/gui/gui/src/TGText.cxx:922; 2: Field 'fY' is <= field 'fRowCount' in /opt/root_src/gui/gui/src/TGText.cxx:801; 3: Taking false branch in /opt/root_src/gui/gui/src/TGText.cxx:801; 4: Field 'fY' is equal to field 'fRowCount' in /opt/root_src/gui/gui/src/TGText.cxx:810; 5: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:810; 6: Assuming 'start_src.fY' is equal to 'end_src.fY' in /opt/root_src/gui/gui/src/TGText.cxx:824; 7: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:824; 8: 'len' is > 0 in /opt/root_src/gui/gui/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:55539,Security,secur,security,55539,ine' in /opt/root_src/gui/gui/src/TGText.cxx:831; 11: Assuming the condition is true in /opt/root_src/gui/gui/src/TGText.cxx:1000; 12: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:1000; 13: Calling 'TGTextLine::GetText' in /opt/root_src/gui/gui/src/TGText.cxx:1001; 14: Assuming 'pos' is < field 'fLength' in /opt/root_src/gui/gui/src/TGText.cxx:187; 15: Taking false branch in /opt/root_src/gui/gui/src/TGText.cxx:187; 16: Assuming the condition is false in /opt/root_src/gui/gui/src/TGText.cxx:191; 17: Taking false branch in /opt/root_src/gui/gui/src/TGText.cxx:191; 18: Memory is allocated in /opt/root_src/gui/gui/src/TGText.cxx:195; 19: Use of zero-allocated memory in /opt/root_src/gui/gui/src/TGText.cxx:196; /opt/root_src/gui/gui/src/TGText.cxx:630:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:630; /opt/root_src/gui/gui/src/TGText.cxx:671:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:671; /opt/root_src/gui/gui/src/TGText.cxx:1106:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:56101,Security,secur,security,56101,i/src/TGText.cxx:191; 18: Memory is allocated in /opt/root_src/gui/gui/src/TGText.cxx:195; 19: Use of zero-allocated memory in /opt/root_src/gui/gui/src/TGText.cxx:196; /opt/root_src/gui/gui/src/TGText.cxx:630:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:630; /opt/root_src/gui/gui/src/TGText.cxx:671:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:671; /opt/root_src/gui/gui/src/TGText.cxx:1106:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:1106; /opt/root_src/gui/gui/src/TGTextEdit.cxx:504:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:56664,Security,secur,security,56664,buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:630; /opt/root_src/gui/gui/src/TGText.cxx:671:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:671; /opt/root_src/gui/gui/src/TGText.cxx:1106:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:1106; /opt/root_src/gui/gui/src/TGTextEdit.cxx:504:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGTextEdit.cxx:504; /opt/root_src/gui/gui/src/TGTextEdit.cxx:1873:10: warning: Value stored to 'len' is never read [clang-analyzer-deadcode.DeadStores]; 1: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:57231,Security,secur,security,57231,r. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:671; /opt/root_src/gui/gui/src/TGText.cxx:1106:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:1106; /opt/root_src/gui/gui/src/TGTextEdit.cxx:504:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGTextEdit.cxx:504; /opt/root_src/gui/gui/src/TGTextEdit.cxx:1873:10: warning: Value stored to 'len' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'len' is never read in /opt/root_src/gui/gui/src/TGTextEdit.cxx:1873; /opt/root_src/gui/gui/src/TGTextEditDialogs.cxx:55:1: warning: non-POD static (TString) [clazy-non-pod-global-static]; /opt/root_src/gui/gui/src/TGTextEntry.cxx:1608:10: warning: Value stored to 'charWidth' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'charWidth' is never read in /opt/root_src/gui/gui/src/TGTextEntry.cxx:1608; /opt/root_src/gui/gui/src/TGTextEntry.cxx:1619:10: warning: Value stored to 'charWidth' is never read [clang-analyzer-deadcode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:59758,Security,secur,security,59758,ui/gui/src/TGTextView.cxx:1016:16: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGTextView.cxx:986; 2: Taking false branch in /opt/root_src/gui/gui/src/TGTextView.cxx:986; 3: Assuming the condition is false in /opt/root_src/gui/gui/src/TGTextView.cxx:996; 4: Loop condition is false. Execution continues on line 999 in /opt/root_src/gui/gui/src/TGTextView.cxx:996; 5: Memory is allocated in /opt/root_src/gui/gui/src/TGTextView.cxx:1002; 6: Loop condition is false. Execution continues on line 1016 in /opt/root_src/gui/gui/src/TGTextView.cxx:1004; 7: Use of zero-allocated memory in /opt/root_src/gui/gui/src/TGTextView.cxx:1016; /opt/root_src/gui/gui/src/TGTextView.cxx:1027:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGTextView.cxx:1027; /opt/root_src/gui/gui/src/TRootApplication.cxx:83:12: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Calling 'TRootApplication::GetOptions' in /opt/root_src/gui/gui/src/TRootApplication.cxx:41; 2: Assuming 'argc' is non-null in /opt/root_src/gui/gui/src/TRootApplication.cxx:79; 3: Taking false branch in /opt/root_src/gui/gui/src/TRootApplication.cxx:79; 4: Assuming the condition is true in /opt/root_src/gui/gui/src/TRootApplication.cxx:82; 5: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TRootApplication.cxx:82; 6: Taking true branch in /opt/root_src/gui/gui/src/TRootApplication.cxx:83; 7: Assuming the c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:77314,Security,secur,security,77314,agManager.cxx:3335; 24: expanded from macro 'gVirtualX' in /opt/root_src/core/base/inc/TVirtualX.h:338; 25: Taking false branch in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3335; 26: 'file' is non-null in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3336; 27: '?' condition is true in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3336; 28: Called C++ object pointer is null in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3338; /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3806:7: warning: Value stored to 'ok' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ok' is never read in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3806; /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:149:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:149; /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:208:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:208; /opt/root_src/gui/guihtml/src/TGHtmlIndex.cxx:394:13: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:77891,Security,secur,security,77891, read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ok' is never read in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3806; /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:149:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:149; /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:208:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:208; /opt/root_src/gui/guihtml/src/TGHtmlIndex.cxx:394:13: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/gui/guihtml/src/TGHtmlIndex.cxx:394; /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:469:33: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:469; /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:498:19: warning: Value stored to 'descent2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'descent2' is never read in /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:498; /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:79166,Security,secur,security,79166,l/src/TGHtmlDraw.cxx:208; /opt/root_src/gui/guihtml/src/TGHtmlIndex.cxx:394:13: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/gui/guihtml/src/TGHtmlIndex.cxx:394; /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:469:33: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:469; /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:498:19: warning: Value stored to 'descent2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'descent2' is never read in /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:498; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1095:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1095; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1107:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1107; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1147:10: warning: Call to function 'strcpy' is insecure as it does not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:79747,Security,secur,security,79747,ead [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'descent2' is never read in /opt/root_src/gui/guihtml/src/TGHtmlLayout.cxx:498; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1095:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1095; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1107:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1107; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1147:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1147; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1389:10: warning: Call to function 'strcat' is insecure as it does no,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:80329,Security,secur,security,80329,ns with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1095; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1107:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1107; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1147:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1147; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1389:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1389; /opt/root_src/gui/guihtml/src/TGHtmlSizer.cxx:1109:24: warning: Called C++ object pointer is null [clang-analyzer-c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:80911,Security,secur,security,80911,s with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1107; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1147:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1147; /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1389:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlParse.cxx:1389; /opt/root_src/gui/guihtml/src/TGHtmlSizer.cxx:1109:24: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: 'font' initialized to a null pointer value in /opt/root_src/gui/guihtml/src/TGHtmlSizer.cxx:1080; 2: Assuming field 'fPFirst' is not equal to null in /opt/root_src/gui/guihtml/src/TGHtmlSizer.cxx:1086; 3: Taking false branch in /opt/root_src/gui/guihtml/src/TGHtmlSizer.cxx:1086; 4: Assuming field 'fLastSized' is equal to null in /opt/root_src/gui/guihtml/src/TGHtmlSizer.cxx:1088; 5: Taking true branch in /opt/root_src/gui/guihtml/src/TGHtmlSizer.cxx:1088; 6: 'stop' is 0 in /opt/root_src/gui/guihtml/src/TGHtmlSizer.cxx:1095; 7: Left side of '&&' is true,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:94249,Security,secur,security,94249,body in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:653; 30: Taking false branch in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:657; 31: Left side of '||' is false in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:663; 32: Taking false branch in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:663; 33: Loop condition is true. Entering loop body in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:681; 34: Assigned value is garbage or undefined in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:687; /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:1226:4: warning: Value stored to 'z' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'z' is never read in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:1226; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:230:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:230; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:353:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:353; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:357:16: warning: Call to function 'strcpy' is insecure as it does not provide bo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:94825,Security,secur,security,94825, 'z' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'z' is never read in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:1226; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:230:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:230; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:353:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:353; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:357:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:357; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:370:19: warning: Call to function 'strcpy' is insecure as it does not provide bo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:95401,Security,secur,security,95401,opy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:230; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:353:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:353; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:357:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:357; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:370:19: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:370; /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:276:4: warning: Value stored to 'height1' is never read [clang-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:95977,Security,secur,security,95977,opy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:353; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:357:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:357; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:370:19: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:370; /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:276:4: warning: Value stored to 'height1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'height1' is never read in /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:276; /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:277:4: warning: Value stored to 'width1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'width1' is never read in /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:277; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2673:9: warning: Access to field 'fStatus' results in a dereference of a null pointer (loaded from field 'fActQue,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:96873,Security,Access,Access,96873, arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:370; /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:276:4: warning: Value stored to 'height1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'height1' is never read in /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:276; /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:277:4: warning: Value stored to 'width1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'width1' is never read in /opt/root_src/gui/sessionviewer/src/TProofProgressDialog.cxx:277; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2673:9: warning: Access to field 'fStatus' results in a dereference of a null pointer (loaded from field 'fActQuery') [clang-analyzer-core.NullDereference]; 1: Calling 'TSessionQueryFrame::Progress' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2739; 2: Assuming field 'fProof' is non-null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2621; 3: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2621; 4: Assuming 'sender' is non-null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 5: Left side of '||' is false in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 6: Assuming 'sender' is equal to field 'fProof' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 7: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2625; 8: Assuming field 'fActQuery' is null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2628; 9: Assuming pointer value is null in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2628; 10: Left side of '&&' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7533:98785,Security,Access,Access,98785,/sessionviewer/src/TSessionViewer.cxx:2628; 10: Left side of '&&' is false in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2628; 11: Assuming 'total' is >= 0 in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2640; 12: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2640; 13: Assuming 'processed' is not equal to field 'fPrevProcessed' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2646; 14: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2646; 15: Assuming 'total' is equal to field 'fEntries' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2651; 16: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2651; 17: Assuming the condition is false in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2667; 18: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2667; 19: Access to field 'fStatus' results in a dereference of a null pointer (loaded from field 'fActQuery') in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2673; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3788:13: warning: Value stored to 's' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' is never read in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3788; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3841:13: warning: Value stored to 's' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' is never read in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3841; /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:337:10: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:280; 2: Left side of '&&' is true in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:284; 3: Assuming 'version' is <= 0 in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:284; 4: '?' condition is false i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7533
https://github.com/root-project/root/issues/7534:8283,Safety,Safe,SafeDelete,8283,/proof/proof/src/TDataSetManager.cxx:1267; 30: '?' condition is false in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1267; 31: Value assigned to 'newStagedFiles' in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1267; 32: Assuming 'newStagedFiles' is equal to 'flist' in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1268; 33: Taking false branch in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1268; 34: Assuming 'mss' is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1270; 35: Left side of '&&' is false in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1270; 36: 'stager' is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1271; 37: '?' condition is false in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1271; 38: Loop condition is false. Execution continues on line 1304 in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1280; 39: 'stager' is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1304; 40: expanded from macro 'SafeDelete' in /opt/root_src/core/foundation/inc/ROOT/RConfig.hxx:522; 41: Taking false branch in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1304; 42: expanded from macro 'SafeDelete' in /opt/root_src/core/foundation/inc/ROOT/RConfig.hxx:522; 43: 'getlistonly' is true in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1307; 44: Taking true branch in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1307; 45: Assuming 'dbg' is true in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1308; 46: Left side of '&&' is true in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1308; 47: Called C++ object pointer is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1308; /opt/root_src/proof/proof/src/TDataSetManager.cxx:1774:4: warning: Value stored to 'rc' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rc' is never read in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1774; /opt/root_src/proof/proof/src/TDataSetManagerFile.cxx:1553:12: warning: Although the val,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:8462,Safety,Safe,SafeDelete,8462,"t_src/proof/proof/src/TDataSetManager.cxx:1267; 32: Assuming 'newStagedFiles' is equal to 'flist' in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1268; 33: Taking false branch in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1268; 34: Assuming 'mss' is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1270; 35: Left side of '&&' is false in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1270; 36: 'stager' is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1271; 37: '?' condition is false in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1271; 38: Loop condition is false. Execution continues on line 1304 in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1280; 39: 'stager' is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1304; 40: expanded from macro 'SafeDelete' in /opt/root_src/core/foundation/inc/ROOT/RConfig.hxx:522; 41: Taking false branch in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1304; 42: expanded from macro 'SafeDelete' in /opt/root_src/core/foundation/inc/ROOT/RConfig.hxx:522; 43: 'getlistonly' is true in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1307; 44: Taking true branch in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1307; 45: Assuming 'dbg' is true in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1308; 46: Left side of '&&' is true in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1308; 47: Called C++ object pointer is null in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1308; /opt/root_src/proof/proof/src/TDataSetManager.cxx:1774:4: warning: Value stored to 'rc' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rc' is never read in /opt/root_src/proof/proof/src/TDataSetManager.cxx:1774; /opt/root_src/proof/proof/src/TDataSetManagerFile.cxx:1553:12: warning: Although the value stored to 'rc' is used in the enclosing expression, the value is never actually read from 'rc' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'rc' is use",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:13477,Safety,timeout,timeout,13477,c/TProof.cxx:10517; 2: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:10517; 3: Assuming 'sl' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:10522; 4: Left side of '||' is false in /opt/root_src/proof/proof/src/TProof.cxx:10522; 5: Assuming the condition is false in /opt/root_src/proof/proof/src/TProof.cxx:10522; 6: Left side of '||' is false in /opt/root_src/proof/proof/src/TProof.cxx:10522; 7: Assuming 's' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:10522; 8: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:10522; 9: Assuming the condition is true in /opt/root_src/proof/proof/src/TProof.cxx:10527; 10: Left side of '||' is true in /opt/root_src/proof/proof/src/TProof.cxx:10527; 11: 'shutdown' is true in /opt/root_src/proof/proof/src/TProof.cxx:10530; 12: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:10530; 13: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:10530; 14: Assuming 'timeout' is <= 20 in /opt/root_src/proof/proof/src/TProof.cxx:10535; 15: '?' condition is false in /opt/root_src/proof/proof/src/TProof.cxx:10535; 16: Calling 'TProof::Collect' in /opt/root_src/proof/proof/src/TProof.cxx:10539; 17: 'list' is not equal to kAll in /opt/root_src/proof/proof/src/TProof.cxx:2728; 18: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:2728; 19: 'list' is equal to kActive in /opt/root_src/proof/proof/src/TProof.cxx:2729; 20: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:2729; 21: Value assigned to 'mon' in /opt/root_src/proof/proof/src/TProof.cxx:2729; 22: 'list' is not equal to kUnique in /opt/root_src/proof/proof/src/TProof.cxx:2730; 23: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:2730; 24: 'list' is not equal to kAllUnique in /opt/root_src/proof/proof/src/TProof.cxx:2731; 25: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:2731; 26: Assuming 'mon' is equal to field 'fCurrentMonitor' in /opt/root_src/proof/pr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:24508,Testability,Test,TestBit,24508,"2; 21: Calling 'TIter::operator()' in /opt/root_src/proof/proof/src/TProof.cxx:5148; 22: Calling 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 23: Assuming field 'fIterator' is non-null in /opt/root_src/core/cont/inc/TCollection.h:249; 24: '?' condition is true in /opt/root_src/core/cont/inc/TCollection.h:249; 25: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 26: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 27: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:248; 28: Returning from 'TIter::operator()' in /opt/root_src/proof/proof/src/TProof.cxx:5148; 29: Loop condition is true. Entering loop body in /opt/root_src/proof/proof/src/TProof.cxx:5148; 30: 'pof' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:5150; 31: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5150; 32: Calling 'TObject::TestBit' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 33: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 34: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 35: Returning from 'TObject::TestBit' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 36: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:5151; 37: Calling 'TString::IsNull' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 38: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407; 39: Returning from 'TString::IsNull' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 40: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5151; 41: 'pof' is not equal to 'pf' in /opt/root_src/proof/proof/src/TProof.cxx:5152; 42: Left side of '&&' is false in /opt/root_src/proof/proof/src/TProof.cxx:5152; 43: Called C++ object pointer is null in /opt/root_src/proof/proof/src/TProof.cx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:24790,Testability,Test,TestBit,24790,"in /opt/root_src/core/cont/inc/TCollection.h:249; 25: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 26: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 27: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:248; 28: Returning from 'TIter::operator()' in /opt/root_src/proof/proof/src/TProof.cxx:5148; 29: Loop condition is true. Entering loop body in /opt/root_src/proof/proof/src/TProof.cxx:5148; 30: 'pof' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:5150; 31: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5150; 32: Calling 'TObject::TestBit' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 33: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 34: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 35: Returning from 'TObject::TestBit' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 36: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:5151; 37: Calling 'TString::IsNull' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 38: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407; 39: Returning from 'TString::IsNull' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 40: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5151; 41: 'pof' is not equal to 'pf' in /opt/root_src/proof/proof/src/TProof.cxx:5152; 42: Left side of '&&' is false in /opt/root_src/proof/proof/src/TProof.cxx:5152; 43: Called C++ object pointer is null in /opt/root_src/proof/proof/src/TProof.cxx:5154; /opt/root_src/proof/proof/src/TProof.cxx:5165:38: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'action' is not equal to 0 in /opt/root_src/proof/proof/src/TProof.cxx:4936; 2: Taking false branch in /opt/root_src/proof/proof/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:28114,Testability,Test,TestBit,28114,"2; 19: Calling 'TIter::operator()' in /opt/root_src/proof/proof/src/TProof.cxx:5148; 20: Calling 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 21: Assuming field 'fIterator' is non-null in /opt/root_src/core/cont/inc/TCollection.h:249; 22: '?' condition is true in /opt/root_src/core/cont/inc/TCollection.h:249; 23: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 24: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 25: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:248; 26: Returning from 'TIter::operator()' in /opt/root_src/proof/proof/src/TProof.cxx:5148; 27: Loop condition is true. Entering loop body in /opt/root_src/proof/proof/src/TProof.cxx:5148; 28: 'pof' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:5150; 29: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5150; 30: Calling 'TObject::TestBit' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 31: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 32: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning from 'TObject::TestBit' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 34: Left side of '&&' is false in /opt/root_src/proof/proof/src/TProof.cxx:5151; 35: Calling 'TProofOutputFile::IsRetrieve' in /opt/root_src/proof/proof/src/TProof.cxx:5163; 36: '?' condition is true in /opt/root_src/proof/proof/inc/TProofOutputFile.h:111; 37: Returning the value 1, which participates in a condition later in /opt/root_src/proof/proof/inc/TProofOutputFile.h:111; 38: Returning from 'TProofOutputFile::IsRetrieve' in /opt/root_src/proof/proof/src/TProof.cxx:5163; 39: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5163; 40: Called C++ object pointer is null in /opt/root_src/proof/proof/src/TProof.cxx:5165; /opt/root_src/proof/proof/src/TP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:28390,Testability,Test,TestBit,28390," true in /opt/root_src/core/cont/inc/TCollection.h:249; 23: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 24: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 25: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:248; 26: Returning from 'TIter::operator()' in /opt/root_src/proof/proof/src/TProof.cxx:5148; 27: Loop condition is true. Entering loop body in /opt/root_src/proof/proof/src/TProof.cxx:5148; 28: 'pof' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:5150; 29: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5150; 30: Calling 'TObject::TestBit' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 31: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 32: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 33: Returning from 'TObject::TestBit' in /opt/root_src/proof/proof/src/TProof.cxx:5151; 34: Left side of '&&' is false in /opt/root_src/proof/proof/src/TProof.cxx:5151; 35: Calling 'TProofOutputFile::IsRetrieve' in /opt/root_src/proof/proof/src/TProof.cxx:5163; 36: '?' condition is true in /opt/root_src/proof/proof/inc/TProofOutputFile.h:111; 37: Returning the value 1, which participates in a condition later in /opt/root_src/proof/proof/inc/TProofOutputFile.h:111; 38: Returning from 'TProofOutputFile::IsRetrieve' in /opt/root_src/proof/proof/src/TProof.cxx:5163; 39: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5163; 40: Called C++ object pointer is null in /opt/root_src/proof/proof/src/TProof.cxx:5165; /opt/root_src/proof/proof/src/TProof.cxx:5628:25: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fProtocol' is >= 13 in /opt/root_src/proof/proof/src/TProof.cxx:5503; 2: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:5503; 3: Assuming t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:37171,Testability,Test,TestBit,37171,"of/src/TProof.cxx:5623; 38: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:5623; 39: Assuming the condition is false in /opt/root_src/proof/proof/src/TProof.cxx:5623; 40: expanded from macro 'gDirectory' in /opt/root_src/core/base/inc/TDirectory.h:290; 41: Left side of '&&' is false in /opt/root_src/proof/proof/src/TProof.cxx:5623; 42: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:5623; 43: 'el' is null in /opt/root_src/proof/proof/src/TProof.cxx:5632; 44: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5632; 45: Assuming the condition is true in /opt/root_src/proof/proof/src/TProof.cxx:5633; 46: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5633; 47: Assuming 'f' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:5635; 48: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:5635; 49: Calling 'TObject::IsZombie' in /opt/root_src/proof/proof/src/TProof.cxx:5635; 50: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 51: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 52: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 53: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 54: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 55: Returning from 'TObject::IsZombie' in /opt/root_src/proof/proof/src/TProof.cxx:5635; 56: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:5635; 57: Assuming the condition is true in /opt/root_src/proof/proof/src/TProof.cxx:5635; 58: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5635; 59: Calling 'TIter::operator()' in /opt/root_src/proof/proof/src/TProof.cxx:5638; 60: Calling 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 61: Assuming field 'fIterator' is non-null in /opt/root_src/core/cont/inc/TCollection.h:24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:37443,Testability,Test,TestBit,37443,":290; 41: Left side of '&&' is false in /opt/root_src/proof/proof/src/TProof.cxx:5623; 42: Taking false branch in /opt/root_src/proof/proof/src/TProof.cxx:5623; 43: 'el' is null in /opt/root_src/proof/proof/src/TProof.cxx:5632; 44: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5632; 45: Assuming the condition is true in /opt/root_src/proof/proof/src/TProof.cxx:5633; 46: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5633; 47: Assuming 'f' is non-null in /opt/root_src/proof/proof/src/TProof.cxx:5635; 48: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:5635; 49: Calling 'TObject::IsZombie' in /opt/root_src/proof/proof/src/TProof.cxx:5635; 50: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 51: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 52: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 53: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 54: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 55: Returning from 'TObject::IsZombie' in /opt/root_src/proof/proof/src/TProof.cxx:5635; 56: Left side of '&&' is true in /opt/root_src/proof/proof/src/TProof.cxx:5635; 57: Assuming the condition is true in /opt/root_src/proof/proof/src/TProof.cxx:5635; 58: Taking true branch in /opt/root_src/proof/proof/src/TProof.cxx:5635; 59: Calling 'TIter::operator()' in /opt/root_src/proof/proof/src/TProof.cxx:5638; 60: Calling 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:248; 61: Assuming field 'fIterator' is non-null in /opt/root_src/core/cont/inc/TCollection.h:249; 62: '?' condition is true in /opt/root_src/core/cont/inc/TCollection.h:249; 63: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/inc/TCollection.h:249; 64: Returning from 'TIter::Next' in /opt/root_src/core/cont/inc/TCollection.h:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:54183,Testability,Test,TestBit,54183,"4960; /opt/root_src/proof/proof/src/TProofServ.cxx:5159:18: warning: Although the value stored to 'st' is used in the enclosing expression, the value is never actually read from 'st' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'st' is used in the enclosing expression, the value is never actually read from 'st' in /opt/root_src/proof/proof/src/TProofServ.cxx:5159; /opt/root_src/proof/proofbench/src/TProofBench.cxx:499:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'fout' is non-null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 2: Left side of '||' is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 3: 'fout' is non-null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 4: Left side of '&&' is true in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 5: Calling 'TObject::IsZombie' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 6: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 10: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 11: Returning from 'TObject::IsZombie' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 12: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 13: Assuming 'nmdesc' is null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:422; 14: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:422; 15: '?' condition is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:426; 16: Left side of '||' is true in /opt/root_src/proof/proofbench/src/TProofBench.cxx:427; 17: Calling 'TString::Contains' in /opt/root_src/pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:54452,Testability,Test,TestBit,54452,"in the enclosing expression, the value is never actually read from 'st' in /opt/root_src/proof/proof/src/TProofServ.cxx:5159; /opt/root_src/proof/proofbench/src/TProofBench.cxx:499:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'fout' is non-null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 2: Left side of '||' is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 3: 'fout' is non-null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 4: Left side of '&&' is true in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 5: Calling 'TObject::IsZombie' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 6: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 10: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 11: Returning from 'TObject::IsZombie' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 12: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:414; 13: Assuming 'nmdesc' is null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:422; 14: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:422; 15: '?' condition is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:426; 16: Left side of '||' is true in /opt/root_src/proof/proofbench/src/TProofBench.cxx:427; 17: Calling 'TString::Contains' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:429; 18: 's' is non-null in /opt/root_src/core/base/inc/TString.h:625; 19: '?' condition is true in /opt/root_src/core/base/inc/TString.h:625; 20: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:625; 21: Retu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:58300,Testability,Test,TestBit,58300,"_src/proof/proofbench/src/TProofBench.cxx:472; 43: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:472; 44: 'isNorm' is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:496; 45: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:496; 46: Called C++ object pointer is null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:499; /opt/root_src/proof/proofbench/src/TProofBench.cxx:1077:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'fout' is non-null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 2: Left side of '||' is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 3: 'fout' is non-null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 4: Left side of '&&' is true in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 5: Calling 'TObject::IsZombie' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 6: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 10: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 11: Returning from 'TObject::IsZombie' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 12: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 13: Assuming 'nmdesc' is null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:993; 14: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:993; 15: '?' condition is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:997; 16: Left side of '||' is true in /opt/root_src/proof/proofbench/src/TProofBench.cxx:998; 17: Left side of '||' is false in /opt/root_src/pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/issues/7534:58569,Testability,Test,TestBit,58569,"ch/src/TProofBench.cxx:496; 46: Called C++ object pointer is null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:499; /opt/root_src/proof/proofbench/src/TProofBench.cxx:1077:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'fout' is non-null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 2: Left side of '||' is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 3: 'fout' is non-null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 4: Left side of '&&' is true in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 5: Calling 'TObject::IsZombie' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 6: Calling 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 7: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 8: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 9: Returning from 'TObject::TestBit' in /opt/root_src/core/base/inc/TObject.h:149; 10: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:149; 11: Returning from 'TObject::IsZombie' in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 12: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:985; 13: Assuming 'nmdesc' is null in /opt/root_src/proof/proofbench/src/TProofBench.cxx:993; 14: Taking false branch in /opt/root_src/proof/proofbench/src/TProofBench.cxx:993; 15: '?' condition is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:997; 16: Left side of '||' is true in /opt/root_src/proof/proofbench/src/TProofBench.cxx:998; 17: Left side of '||' is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:999; 18: '?' condition is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:999; 19: Left side of '||' is false in /opt/root_src/proof/proofbench/src/TProofBench.cxx:1000; 20: '?' condition is false in /opt/root_src/proof/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7534
https://github.com/root-project/root/pull/7535:37,Testability,log,log,37,"Events handling was not correct with log axes.; `x0,y0` values where not converted and interpreted wrong during mouse moving. Also simplify pad name handling in TPad::SavePrimitive. And apply few other clang-tidy warnings from #7432",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7535
https://github.com/root-project/root/pull/7535:131,Usability,simpl,simplify,131,"Events handling was not correct with log axes.; `x0,y0` values where not converted and interpreted wrong during mouse moving. Also simplify pad name handling in TPad::SavePrimitive. And apply few other clang-tidy warnings from #7432",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7535
https://github.com/root-project/root/pull/7539:208,Deployability,install,installation,208,"Hey! One commit I found locally, may be used to fix #7441 . - Enabled by the XRDCL_LIB_ONLY=ON cmake flag; - Prevents building the client binaries such as xrdcp in our build dir; but not exposing them in the installation. Fixes #7441",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7539
https://github.com/root-project/root/issues/7541:767,Testability,test,tests,767,"### Describe the bug; It's not possible to catch exceptions in the interactive `root` prompt on Apple Silicon, nor does `TRint` take care of uncaught exceptions. ### Expected behavior; The user should be able to catch exceptions, or at least the fallback handler should prevent process termination. ### To Reproduce; The most simple examples are; ```; root [0] try { throw 1; } catch (...) { }; libc++abi.dylib: terminating with uncaught exception of type int; ```; and; ```; root [0] throw 1;; libc++abi.dylib: terminating with uncaught exception of type int; ```; (which should be handled in `TRint::HandleTermInput()`). ### Setup; ROOT 6.25/01 on `macphsft25`. ### Additional context; Plenty:; * #7100 fixed catching exceptions from constructors on macOS (and has tests, including unwinding through multiple JIT recursions).; * [ROOT-10703](https://sft.its.cern.ch/jira/browse/ROOT-10703) and [ROOT-10962](https://sft.its.cern.ch/jira/browse/ROOT-10962) for the original reports. #### Edit:; Same in 6.22/07, tested on `macphsft24`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7541
https://github.com/root-project/root/issues/7541:1012,Testability,test,tested,1012,"### Describe the bug; It's not possible to catch exceptions in the interactive `root` prompt on Apple Silicon, nor does `TRint` take care of uncaught exceptions. ### Expected behavior; The user should be able to catch exceptions, or at least the fallback handler should prevent process termination. ### To Reproduce; The most simple examples are; ```; root [0] try { throw 1; } catch (...) { }; libc++abi.dylib: terminating with uncaught exception of type int; ```; and; ```; root [0] throw 1;; libc++abi.dylib: terminating with uncaught exception of type int; ```; (which should be handled in `TRint::HandleTermInput()`). ### Setup; ROOT 6.25/01 on `macphsft25`. ### Additional context; Plenty:; * #7100 fixed catching exceptions from constructors on macOS (and has tests, including unwinding through multiple JIT recursions).; * [ROOT-10703](https://sft.its.cern.ch/jira/browse/ROOT-10703) and [ROOT-10962](https://sft.its.cern.ch/jira/browse/ROOT-10962) for the original reports. #### Edit:; Same in 6.22/07, tested on `macphsft24`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7541
https://github.com/root-project/root/issues/7541:326,Usability,simpl,simple,326,"### Describe the bug; It's not possible to catch exceptions in the interactive `root` prompt on Apple Silicon, nor does `TRint` take care of uncaught exceptions. ### Expected behavior; The user should be able to catch exceptions, or at least the fallback handler should prevent process termination. ### To Reproduce; The most simple examples are; ```; root [0] try { throw 1; } catch (...) { }; libc++abi.dylib: terminating with uncaught exception of type int; ```; and; ```; root [0] throw 1;; libc++abi.dylib: terminating with uncaught exception of type int; ```; (which should be handled in `TRint::HandleTermInput()`). ### Setup; ROOT 6.25/01 on `macphsft25`. ### Additional context; Plenty:; * #7100 fixed catching exceptions from constructors on macOS (and has tests, including unwinding through multiple JIT recursions).; * [ROOT-10703](https://sft.its.cern.ch/jira/browse/ROOT-10703) and [ROOT-10962](https://sft.its.cern.ch/jira/browse/ROOT-10962) for the original reports. #### Edit:; Same in 6.22/07, tested on `macphsft24`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7541
https://github.com/root-project/root/pull/7542:17,Integrability,rout,route,17,"If we follow the route to disable all unnecessary binaries coming from builtins, here also the commit to disable them for lzma.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7542
https://github.com/root-project/root/pull/7544:137,Deployability,configurat,configurations,137,"Initial Commit for TMVA SOFIE under TMVA::Experimental::SOFIE. including support for transpose, relu and gemm operators. including cmake configurations for building sofie when protobuf is found. this PR is experimental only and made to accommodate timeline for GSoC selection tests related to TMVA SOFIE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7544
https://github.com/root-project/root/pull/7544:137,Modifiability,config,configurations,137,"Initial Commit for TMVA SOFIE under TMVA::Experimental::SOFIE. including support for transpose, relu and gemm operators. including cmake configurations for building sofie when protobuf is found. this PR is experimental only and made to accommodate timeline for GSoC selection tests related to TMVA SOFIE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7544
https://github.com/root-project/root/pull/7544:276,Testability,test,tests,276,"Initial Commit for TMVA SOFIE under TMVA::Experimental::SOFIE. including support for transpose, relu and gemm operators. including cmake configurations for building sofie when protobuf is found. this PR is experimental only and made to accommodate timeline for GSoC selection tests related to TMVA SOFIE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7544
https://github.com/root-project/root/issues/7547:539,Availability,failure,failure,539,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following snippet causes a nullptr dereference (or a corresponding assertion failure in debug builds):. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; auto df = ROOT::RDataFrame(10000);; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Snapshot(""Events"", ""A.root"", colNames, opts);; std::cout << c.GetValue() << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7547
https://github.com/root-project/root/issues/7547:529,Testability,assert,assertion,529,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following snippet causes a nullptr dereference (or a corresponding assertion failure in debug builds):. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; auto df = ROOT::RDataFrame(10000);; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Snapshot(""Events"", ""A.root"", colNames, opts);; std::cout << c.GetValue() << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7547
https://github.com/root-project/root/issues/7547:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following snippet causes a nullptr dereference (or a corresponding assertion failure in debug builds):. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; auto df = ROOT::RDataFrame(10000);; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Snapshot(""Events"", ""A.root"", colNames, opts);; std::cout << c.GetValue() << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7547
https://github.com/root-project/root/pull/7548:0,Deployability,Update,Updates,0,Updates the Interpreter section in the release notes for v6.24. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7548
https://github.com/root-project/root/pull/7548:39,Deployability,release,release,39,Updates the Interpreter section in the release notes for v6.24. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7548
https://github.com/root-project/root/pull/7549:22,Deployability,release,release,22,Backport of the v6.24 release notes update introduced in commit 167039e2b4eb. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7549
https://github.com/root-project/root/pull/7549:36,Deployability,update,update,36,Backport of the v6.24 release notes update introduced in commit 167039e2b4eb. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7549
https://github.com/root-project/root/pull/7551:74,Performance,load,loading,74,Resolve majority of warnings from lgtm.com analyzer; Fix bug with MathJax loading,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7551
https://github.com/root-project/root/pull/7554:10,Testability,test,tests,10,Feature + tests!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7554
https://github.com/root-project/root/pull/7557:36,Testability,test,tested,36,Leaf name with dot was not properly tested,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7557
https://github.com/root-project/root/issues/7558:493,Availability,error,error,493,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7558
https://github.com/root-project/root/issues/7558:511,Availability,Error,Error,511,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7558
https://github.com/root-project/root/issues/7558:838,Availability,Error,Error,838,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7558
https://github.com/root-project/root/issues/7558:1432,Deployability,install,installed,1432,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7558
https://github.com/root-project/root/issues/7558:1457,Deployability,install,installed,1457,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7558
https://github.com/root-project/root/issues/7558:610,Integrability,message,message,610,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7558
https://github.com/root-project/root/issues/7558:725,Testability,log,log,725,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7558
https://github.com/root-project/root/issues/7558:749,Testability,log,logfiles,749,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7558
https://github.com/root-project/root/issues/7558:1101,Usability,simpl,simple,1101,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7558
https://github.com/root-project/root/issues/7561:77,Integrability,interface,interface,77,"**Edit:** I'll post the newest version always at the bottom of the feed. The interface here at the top is not state-of-the-art!. ---. I've created this issue to discuss how the feature should look like, see the attached PR for the impl. My current interface looks as follows:. ```python; import ROOT. df = ROOT.RDataFrame(1)\; .Define('myInt', 'int(1)')\; .Define('myFloat', 'float(1)')\; .Define('myVec', 'ROOT::RVec<float>({1, 2, 3})'). print(df.GetSchema()); # Prints you this:; '''; Column Type; ------ ----; myInt int; myFloat float; myVec ROOT::VecOps::RVec<float>; '''; ```. - ~Do we like the name of the function?~ Describe is better; - ~Do we like that it returns a string rather than printing to stdout?~ We like strings!; - ~Should we add a header to the table?~ Edit: Done, see above!; - ~Should we add any other information (see `TTree::Print`)?~ Yes, see below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7561
https://github.com/root-project/root/issues/7561:248,Integrability,interface,interface,248,"**Edit:** I'll post the newest version always at the bottom of the feed. The interface here at the top is not state-of-the-art!. ---. I've created this issue to discuss how the feature should look like, see the attached PR for the impl. My current interface looks as follows:. ```python; import ROOT. df = ROOT.RDataFrame(1)\; .Define('myInt', 'int(1)')\; .Define('myFloat', 'float(1)')\; .Define('myVec', 'ROOT::RVec<float>({1, 2, 3})'). print(df.GetSchema()); # Prints you this:; '''; Column Type; ------ ----; myInt int; myFloat float; myVec ROOT::VecOps::RVec<float>; '''; ```. - ~Do we like the name of the function?~ Describe is better; - ~Do we like that it returns a string rather than printing to stdout?~ We like strings!; - ~Should we add a header to the table?~ Edit: Done, see above!; - ~Should we add any other information (see `TTree::Print`)?~ Yes, see below",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7561
https://github.com/root-project/root/pull/7563:268,Deployability,configurat,configuration,268,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7563
https://github.com/root-project/root/pull/7563:749,Energy Efficiency,allocate,allocated,749,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7563
https://github.com/root-project/root/pull/7563:55,Integrability,message,message,55,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7563
https://github.com/root-project/root/pull/7563:268,Modifiability,config,configuration,268,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7563
https://github.com/root-project/root/issues/7565:820,Availability,error,error,820,"Dear ROOTers,. I suspect there is a bug in ROOT while I read trees created with an old version (let say 5.34.36) using a new one (6.22.06). I bet that wasn't spotted because nobody really uses `int8_t` (maybe one needs to use internal ROOT types instead). But interestingly enough, that if I use the same old version of ROOT, everything looks fine. So I write a value in a tree like that:; ```; int j;; TFile f (file_name.c_str (), ""RECREATE"", ""test uint8_t"",; ROOT::CompressionSettings (ROOT::kLZMA, 7));; TTree t (""tree"", ""test int8_t"");; t.Branch (""i"", &i, ""i/B"");; ```; and read like that:; ```; int8_t i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```; and it works perfectly fine with 5.34.36, but fails to read if I compile the last code with 6.22.06 with error; ```; The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; ```. If you want to try to reproduce the possible bug, please download my example here: [br.tar.gz](https://github.com/root-project/root/files/6157333/br.tar.gz). You need to have two versions of ROOT: 5, and 6, and set up your Makefile accordingly. My compiler is gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) running on CentOS 7 (Linux kernel 3.10.0-1160.15.2.el7.x86_64). When I run the test on my host I see the following (I removed make output):; ```; Test with the same ROOT version: /root/x86-64/5.34.36/system/root; Test Ok. Test with different ROOT versions: /root/x86-64/5.34.36/system/root /root/x86-64/6.22.06/system/root. Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; Read is corrupt: 0!=0 ; Read is corrupt: 0!=1 ; Read is corrupt: 0!=2 ; Read is corrupt: 0!=3 ; Read is corrupt: 0!=4 ; ...; Test failed.; ```. Best regards; Andrei",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7565
https://github.com/root-project/root/issues/7565:1007,Availability,down,download,1007,"Dear ROOTers,. I suspect there is a bug in ROOT while I read trees created with an old version (let say 5.34.36) using a new one (6.22.06). I bet that wasn't spotted because nobody really uses `int8_t` (maybe one needs to use internal ROOT types instead). But interestingly enough, that if I use the same old version of ROOT, everything looks fine. So I write a value in a tree like that:; ```; int j;; TFile f (file_name.c_str (), ""RECREATE"", ""test uint8_t"",; ROOT::CompressionSettings (ROOT::kLZMA, 7));; TTree t (""tree"", ""test int8_t"");; t.Branch (""i"", &i, ""i/B"");; ```; and read like that:; ```; int8_t i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```; and it works perfectly fine with 5.34.36, but fails to read if I compile the last code with 6.22.06 with error; ```; The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; ```. If you want to try to reproduce the possible bug, please download my example here: [br.tar.gz](https://github.com/root-project/root/files/6157333/br.tar.gz). You need to have two versions of ROOT: 5, and 6, and set up your Makefile accordingly. My compiler is gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) running on CentOS 7 (Linux kernel 3.10.0-1160.15.2.el7.x86_64). When I run the test on my host I see the following (I removed make output):; ```; Test with the same ROOT version: /root/x86-64/5.34.36/system/root; Test Ok. Test with different ROOT versions: /root/x86-64/5.34.36/system/root /root/x86-64/6.22.06/system/root. Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; Read is corrupt: 0!=0 ; Read is corrupt: 0!=1 ; Read is corrupt: 0!=2 ; Read is corrupt: 0!=3 ; Read is corrupt: 0!=4 ; ...; Test failed.; ```. Best regards; Andrei",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7565
https://github.com/root-project/root/issues/7565:1585,Availability,Error,Error,1585,"Dear ROOTers,. I suspect there is a bug in ROOT while I read trees created with an old version (let say 5.34.36) using a new one (6.22.06). I bet that wasn't spotted because nobody really uses `int8_t` (maybe one needs to use internal ROOT types instead). But interestingly enough, that if I use the same old version of ROOT, everything looks fine. So I write a value in a tree like that:; ```; int j;; TFile f (file_name.c_str (), ""RECREATE"", ""test uint8_t"",; ROOT::CompressionSettings (ROOT::kLZMA, 7));; TTree t (""tree"", ""test int8_t"");; t.Branch (""i"", &i, ""i/B"");; ```; and read like that:; ```; int8_t i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```; and it works perfectly fine with 5.34.36, but fails to read if I compile the last code with 6.22.06 with error; ```; The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; ```. If you want to try to reproduce the possible bug, please download my example here: [br.tar.gz](https://github.com/root-project/root/files/6157333/br.tar.gz). You need to have two versions of ROOT: 5, and 6, and set up your Makefile accordingly. My compiler is gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) running on CentOS 7 (Linux kernel 3.10.0-1160.15.2.el7.x86_64). When I run the test on my host I see the following (I removed make output):; ```; Test with the same ROOT version: /root/x86-64/5.34.36/system/root; Test Ok. Test with different ROOT versions: /root/x86-64/5.34.36/system/root /root/x86-64/6.22.06/system/root. Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; Read is corrupt: 0!=0 ; Read is corrupt: 0!=1 ; Read is corrupt: 0!=2 ; Read is corrupt: 0!=3 ; Read is corrupt: 0!=4 ; ...; Test failed.; ```. Best regards; Andrei",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7565
https://github.com/root-project/root/issues/7565:445,Testability,test,test,445,"Dear ROOTers,. I suspect there is a bug in ROOT while I read trees created with an old version (let say 5.34.36) using a new one (6.22.06). I bet that wasn't spotted because nobody really uses `int8_t` (maybe one needs to use internal ROOT types instead). But interestingly enough, that if I use the same old version of ROOT, everything looks fine. So I write a value in a tree like that:; ```; int j;; TFile f (file_name.c_str (), ""RECREATE"", ""test uint8_t"",; ROOT::CompressionSettings (ROOT::kLZMA, 7));; TTree t (""tree"", ""test int8_t"");; t.Branch (""i"", &i, ""i/B"");; ```; and read like that:; ```; int8_t i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```; and it works perfectly fine with 5.34.36, but fails to read if I compile the last code with 6.22.06 with error; ```; The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; ```. If you want to try to reproduce the possible bug, please download my example here: [br.tar.gz](https://github.com/root-project/root/files/6157333/br.tar.gz). You need to have two versions of ROOT: 5, and 6, and set up your Makefile accordingly. My compiler is gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) running on CentOS 7 (Linux kernel 3.10.0-1160.15.2.el7.x86_64). When I run the test on my host I see the following (I removed make output):; ```; Test with the same ROOT version: /root/x86-64/5.34.36/system/root; Test Ok. Test with different ROOT versions: /root/x86-64/5.34.36/system/root /root/x86-64/6.22.06/system/root. Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; Read is corrupt: 0!=0 ; Read is corrupt: 0!=1 ; Read is corrupt: 0!=2 ; Read is corrupt: 0!=3 ; Read is corrupt: 0!=4 ; ...; Test failed.; ```. Best regards; Andrei",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7565
https://github.com/root-project/root/issues/7565:525,Testability,test,test,525,"Dear ROOTers,. I suspect there is a bug in ROOT while I read trees created with an old version (let say 5.34.36) using a new one (6.22.06). I bet that wasn't spotted because nobody really uses `int8_t` (maybe one needs to use internal ROOT types instead). But interestingly enough, that if I use the same old version of ROOT, everything looks fine. So I write a value in a tree like that:; ```; int j;; TFile f (file_name.c_str (), ""RECREATE"", ""test uint8_t"",; ROOT::CompressionSettings (ROOT::kLZMA, 7));; TTree t (""tree"", ""test int8_t"");; t.Branch (""i"", &i, ""i/B"");; ```; and read like that:; ```; int8_t i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```; and it works perfectly fine with 5.34.36, but fails to read if I compile the last code with 6.22.06 with error; ```; The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; ```. If you want to try to reproduce the possible bug, please download my example here: [br.tar.gz](https://github.com/root-project/root/files/6157333/br.tar.gz). You need to have two versions of ROOT: 5, and 6, and set up your Makefile accordingly. My compiler is gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) running on CentOS 7 (Linux kernel 3.10.0-1160.15.2.el7.x86_64). When I run the test on my host I see the following (I removed make output):; ```; Test with the same ROOT version: /root/x86-64/5.34.36/system/root; Test Ok. Test with different ROOT versions: /root/x86-64/5.34.36/system/root /root/x86-64/6.22.06/system/root. Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; Read is corrupt: 0!=0 ; Read is corrupt: 0!=1 ; Read is corrupt: 0!=2 ; Read is corrupt: 0!=3 ; Read is corrupt: 0!=4 ; ...; Test failed.; ```. Best regards; Andrei",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7565
https://github.com/root-project/root/issues/7565:1340,Testability,test,test,1340,"Dear ROOTers,. I suspect there is a bug in ROOT while I read trees created with an old version (let say 5.34.36) using a new one (6.22.06). I bet that wasn't spotted because nobody really uses `int8_t` (maybe one needs to use internal ROOT types instead). But interestingly enough, that if I use the same old version of ROOT, everything looks fine. So I write a value in a tree like that:; ```; int j;; TFile f (file_name.c_str (), ""RECREATE"", ""test uint8_t"",; ROOT::CompressionSettings (ROOT::kLZMA, 7));; TTree t (""tree"", ""test int8_t"");; t.Branch (""i"", &i, ""i/B"");; ```; and read like that:; ```; int8_t i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```; and it works perfectly fine with 5.34.36, but fails to read if I compile the last code with 6.22.06 with error; ```; The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; ```. If you want to try to reproduce the possible bug, please download my example here: [br.tar.gz](https://github.com/root-project/root/files/6157333/br.tar.gz). You need to have two versions of ROOT: 5, and 6, and set up your Makefile accordingly. My compiler is gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) running on CentOS 7 (Linux kernel 3.10.0-1160.15.2.el7.x86_64). When I run the test on my host I see the following (I removed make output):; ```; Test with the same ROOT version: /root/x86-64/5.34.36/system/root; Test Ok. Test with different ROOT versions: /root/x86-64/5.34.36/system/root /root/x86-64/6.22.06/system/root. Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; Read is corrupt: 0!=0 ; Read is corrupt: 0!=1 ; Read is corrupt: 0!=2 ; Read is corrupt: 0!=3 ; Read is corrupt: 0!=4 ; ...; Test failed.; ```. Best regards; Andrei",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7565
https://github.com/root-project/root/issues/7565:1407,Testability,Test,Test,1407,"Dear ROOTers,. I suspect there is a bug in ROOT while I read trees created with an old version (let say 5.34.36) using a new one (6.22.06). I bet that wasn't spotted because nobody really uses `int8_t` (maybe one needs to use internal ROOT types instead). But interestingly enough, that if I use the same old version of ROOT, everything looks fine. So I write a value in a tree like that:; ```; int j;; TFile f (file_name.c_str (), ""RECREATE"", ""test uint8_t"",; ROOT::CompressionSettings (ROOT::kLZMA, 7));; TTree t (""tree"", ""test int8_t"");; t.Branch (""i"", &i, ""i/B"");; ```; and read like that:; ```; int8_t i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```; and it works perfectly fine with 5.34.36, but fails to read if I compile the last code with 6.22.06 with error; ```; The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; ```. If you want to try to reproduce the possible bug, please download my example here: [br.tar.gz](https://github.com/root-project/root/files/6157333/br.tar.gz). You need to have two versions of ROOT: 5, and 6, and set up your Makefile accordingly. My compiler is gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) running on CentOS 7 (Linux kernel 3.10.0-1160.15.2.el7.x86_64). When I run the test on my host I see the following (I removed make output):; ```; Test with the same ROOT version: /root/x86-64/5.34.36/system/root; Test Ok. Test with different ROOT versions: /root/x86-64/5.34.36/system/root /root/x86-64/6.22.06/system/root. Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; Read is corrupt: 0!=0 ; Read is corrupt: 0!=1 ; Read is corrupt: 0!=2 ; Read is corrupt: 0!=3 ; Read is corrupt: 0!=4 ; ...; Test failed.; ```. Best regards; Andrei",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7565
https://github.com/root-project/root/issues/7565:1474,Testability,Test,Test,1474,"Dear ROOTers,. I suspect there is a bug in ROOT while I read trees created with an old version (let say 5.34.36) using a new one (6.22.06). I bet that wasn't spotted because nobody really uses `int8_t` (maybe one needs to use internal ROOT types instead). But interestingly enough, that if I use the same old version of ROOT, everything looks fine. So I write a value in a tree like that:; ```; int j;; TFile f (file_name.c_str (), ""RECREATE"", ""test uint8_t"",; ROOT::CompressionSettings (ROOT::kLZMA, 7));; TTree t (""tree"", ""test int8_t"");; t.Branch (""i"", &i, ""i/B"");; ```; and read like that:; ```; int8_t i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```; and it works perfectly fine with 5.34.36, but fails to read if I compile the last code with 6.22.06 with error; ```; The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; ```. If you want to try to reproduce the possible bug, please download my example here: [br.tar.gz](https://github.com/root-project/root/files/6157333/br.tar.gz). You need to have two versions of ROOT: 5, and 6, and set up your Makefile accordingly. My compiler is gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) running on CentOS 7 (Linux kernel 3.10.0-1160.15.2.el7.x86_64). When I run the test on my host I see the following (I removed make output):; ```; Test with the same ROOT version: /root/x86-64/5.34.36/system/root; Test Ok. Test with different ROOT versions: /root/x86-64/5.34.36/system/root /root/x86-64/6.22.06/system/root. Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; Read is corrupt: 0!=0 ; Read is corrupt: 0!=1 ; Read is corrupt: 0!=2 ; Read is corrupt: 0!=3 ; Read is corrupt: 0!=4 ; ...; Test failed.; ```. Best regards; Andrei",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7565
https://github.com/root-project/root/issues/7565:1483,Testability,Test,Test,1483,"Dear ROOTers,. I suspect there is a bug in ROOT while I read trees created with an old version (let say 5.34.36) using a new one (6.22.06). I bet that wasn't spotted because nobody really uses `int8_t` (maybe one needs to use internal ROOT types instead). But interestingly enough, that if I use the same old version of ROOT, everything looks fine. So I write a value in a tree like that:; ```; int j;; TFile f (file_name.c_str (), ""RECREATE"", ""test uint8_t"",; ROOT::CompressionSettings (ROOT::kLZMA, 7));; TTree t (""tree"", ""test int8_t"");; t.Branch (""i"", &i, ""i/B"");; ```; and read like that:; ```; int8_t i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```; and it works perfectly fine with 5.34.36, but fails to read if I compile the last code with 6.22.06 with error; ```; The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; ```. If you want to try to reproduce the possible bug, please download my example here: [br.tar.gz](https://github.com/root-project/root/files/6157333/br.tar.gz). You need to have two versions of ROOT: 5, and 6, and set up your Makefile accordingly. My compiler is gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) running on CentOS 7 (Linux kernel 3.10.0-1160.15.2.el7.x86_64). When I run the test on my host I see the following (I removed make output):; ```; Test with the same ROOT version: /root/x86-64/5.34.36/system/root; Test Ok. Test with different ROOT versions: /root/x86-64/5.34.36/system/root /root/x86-64/6.22.06/system/root. Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; Read is corrupt: 0!=0 ; Read is corrupt: 0!=1 ; Read is corrupt: 0!=2 ; Read is corrupt: 0!=3 ; Read is corrupt: 0!=4 ; ...; Test failed.; ```. Best regards; Andrei",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7565
https://github.com/root-project/root/issues/7565:1859,Testability,Test,Test,1859,"Dear ROOTers,. I suspect there is a bug in ROOT while I read trees created with an old version (let say 5.34.36) using a new one (6.22.06). I bet that wasn't spotted because nobody really uses `int8_t` (maybe one needs to use internal ROOT types instead). But interestingly enough, that if I use the same old version of ROOT, everything looks fine. So I write a value in a tree like that:; ```; int j;; TFile f (file_name.c_str (), ""RECREATE"", ""test uint8_t"",; ROOT::CompressionSettings (ROOT::kLZMA, 7));; TTree t (""tree"", ""test int8_t"");; t.Branch (""i"", &i, ""i/B"");; ```; and read like that:; ```; int8_t i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```; and it works perfectly fine with 5.34.36, but fails to read if I compile the last code with 6.22.06 with error; ```; The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; ```. If you want to try to reproduce the possible bug, please download my example here: [br.tar.gz](https://github.com/root-project/root/files/6157333/br.tar.gz). You need to have two versions of ROOT: 5, and 6, and set up your Makefile accordingly. My compiler is gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) running on CentOS 7 (Linux kernel 3.10.0-1160.15.2.el7.x86_64). When I run the test on my host I see the following (I removed make output):; ```; Test with the same ROOT version: /root/x86-64/5.34.36/system/root; Test Ok. Test with different ROOT versions: /root/x86-64/5.34.36/system/root /root/x86-64/6.22.06/system/root. Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; Read is corrupt: 0!=0 ; Read is corrupt: 0!=1 ; Read is corrupt: 0!=2 ; Read is corrupt: 0!=3 ; Read is corrupt: 0!=4 ; ...; Test failed.; ```. Best regards; Andrei",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7565
https://github.com/root-project/root/issues/7567:1613,Availability,reliab,reliable,1613,"OOT 6.20/06. Minimum example to be executed with `$ root -b -l read_tree.cxx` is:. ```; using namespace std::chrono;. void process_tree(TString name, int nFiles, bool DoGetEntries, bool DoDeactivateBranches ) {. // any root files with a TTree; const TString filename = (""/cvmfs/cms.cern.ch/slc6_amd64_gcc530/lcg/root/6.06.00-ikhhed6/tutorials/hsimple.root"");. TChain* chain = new TChain(""ntuple"");; for ( int i = 0 ; i<nFiles ;i++ ) {; chain->Add(filename);; }. long nEntries = -1;; if ( DoGetEntries ) nEntries = chain->GetEntries();. if ( DoDeactivateBranches ); chain->SetBranchStatus(""*"",0); // this line, together with a previous GetEntries() causes a bug, but only if a single file is passed to the TChain!. // read a single branch; float px,py,pz,random=0.333333;; TBranch* b_random;; chain->SetBranchAddress(""random"", &random, &b_random); // initialize one branch only. auto start = high_resolution_clock::now();// timer start. double sum = 0;; int iev = 0;; int nerrors=0;; const int nrepetitions = 100; // read files more often for a more reliable timing.; for ( int n = 0 ; n<nrepetitions ; n++ ) { // more repetitions for more accurate timing; for ( int i = 0 ; i<chain->GetEntries() ; i++, iev++ ){ // read tree; int bytes = chain->GetEntry(i);; if ( !bytes ) { // some printout (if something goes wrong ;) ); if ( nerrors++ < 3 ) cout<<""Error! No bytes were read!""<<endl; // this prints errors; if ( nerrors==3 ) cout<<""Omiting to print further errors ...""<<endl;; }; sum += random;; }; }. // print out results and timing; auto stop = high_resolution_clock::now();; auto ms_int = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);; cout<<""Processing of '""<<name<<""' took ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:1915,Availability,Error,Error,1915," = (""/cvmfs/cms.cern.ch/slc6_amd64_gcc530/lcg/root/6.06.00-ikhhed6/tutorials/hsimple.root"");. TChain* chain = new TChain(""ntuple"");; for ( int i = 0 ; i<nFiles ;i++ ) {; chain->Add(filename);; }. long nEntries = -1;; if ( DoGetEntries ) nEntries = chain->GetEntries();. if ( DoDeactivateBranches ); chain->SetBranchStatus(""*"",0); // this line, together with a previous GetEntries() causes a bug, but only if a single file is passed to the TChain!. // read a single branch; float px,py,pz,random=0.333333;; TBranch* b_random;; chain->SetBranchAddress(""random"", &random, &b_random); // initialize one branch only. auto start = high_resolution_clock::now();// timer start. double sum = 0;; int iev = 0;; int nerrors=0;; const int nrepetitions = 100; // read files more often for a more reliable timing.; for ( int n = 0 ; n<nrepetitions ; n++ ) { // more repetitions for more accurate timing; for ( int i = 0 ; i<chain->GetEntries() ; i++, iev++ ){ // read tree; int bytes = chain->GetEntry(i);; if ( !bytes ) { // some printout (if something goes wrong ;) ); if ( nerrors++ < 3 ) cout<<""Error! No bytes were read!""<<endl; // this prints errors; if ( nerrors==3 ) cout<<""Omiting to print further errors ...""<<endl;; }; sum += random;; }; }. // print out results and timing; auto stop = high_resolution_clock::now();; auto ms_int = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);; cout<<""Processing of '""<<name<<""' took ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:1965,Availability,error,errors,1965," = (""/cvmfs/cms.cern.ch/slc6_amd64_gcc530/lcg/root/6.06.00-ikhhed6/tutorials/hsimple.root"");. TChain* chain = new TChain(""ntuple"");; for ( int i = 0 ; i<nFiles ;i++ ) {; chain->Add(filename);; }. long nEntries = -1;; if ( DoGetEntries ) nEntries = chain->GetEntries();. if ( DoDeactivateBranches ); chain->SetBranchStatus(""*"",0); // this line, together with a previous GetEntries() causes a bug, but only if a single file is passed to the TChain!. // read a single branch; float px,py,pz,random=0.333333;; TBranch* b_random;; chain->SetBranchAddress(""random"", &random, &b_random); // initialize one branch only. auto start = high_resolution_clock::now();// timer start. double sum = 0;; int iev = 0;; int nerrors=0;; const int nrepetitions = 100; // read files more often for a more reliable timing.; for ( int n = 0 ; n<nrepetitions ; n++ ) { // more repetitions for more accurate timing; for ( int i = 0 ; i<chain->GetEntries() ; i++, iev++ ){ // read tree; int bytes = chain->GetEntry(i);; if ( !bytes ) { // some printout (if something goes wrong ;) ); if ( nerrors++ < 3 ) cout<<""Error! No bytes were read!""<<endl; // this prints errors; if ( nerrors==3 ) cout<<""Omiting to print further errors ...""<<endl;; }; sum += random;; }; }. // print out results and timing; auto stop = high_resolution_clock::now();; auto ms_int = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);; cout<<""Processing of '""<<name<<""' took ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:2023,Availability,error,errors,2023," = (""/cvmfs/cms.cern.ch/slc6_amd64_gcc530/lcg/root/6.06.00-ikhhed6/tutorials/hsimple.root"");. TChain* chain = new TChain(""ntuple"");; for ( int i = 0 ; i<nFiles ;i++ ) {; chain->Add(filename);; }. long nEntries = -1;; if ( DoGetEntries ) nEntries = chain->GetEntries();. if ( DoDeactivateBranches ); chain->SetBranchStatus(""*"",0); // this line, together with a previous GetEntries() causes a bug, but only if a single file is passed to the TChain!. // read a single branch; float px,py,pz,random=0.333333;; TBranch* b_random;; chain->SetBranchAddress(""random"", &random, &b_random); // initialize one branch only. auto start = high_resolution_clock::now();// timer start. double sum = 0;; int iev = 0;; int nerrors=0;; const int nrepetitions = 100; // read files more often for a more reliable timing.; for ( int n = 0 ; n<nrepetitions ; n++ ) { // more repetitions for more accurate timing; for ( int i = 0 ; i<chain->GetEntries() ; i++, iev++ ){ // read tree; int bytes = chain->GetEntry(i);; if ( !bytes ) { // some printout (if something goes wrong ;) ); if ( nerrors++ < 3 ) cout<<""Error! No bytes were read!""<<endl; // this prints errors; if ( nerrors==3 ) cout<<""Omiting to print further errors ...""<<endl;; }; sum += random;; }; }. // print out results and timing; auto stop = high_resolution_clock::now();; auto ms_int = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);; cout<<""Processing of '""<<name<<""' took ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:2452,Availability,Error,Errors,2452,"dom"", &random, &b_random); // initialize one branch only. auto start = high_resolution_clock::now();// timer start. double sum = 0;; int iev = 0;; int nerrors=0;; const int nrepetitions = 100; // read files more often for a more reliable timing.; for ( int n = 0 ; n<nrepetitions ; n++ ) { // more repetitions for more accurate timing; for ( int i = 0 ; i<chain->GetEntries() ; i++, iev++ ){ // read tree; int bytes = chain->GetEntry(i);; if ( !bytes ) { // some printout (if something goes wrong ;) ); if ( nerrors++ < 3 ) cout<<""Error! No bytes were read!""<<endl; // this prints errors; if ( nerrors==3 ) cout<<""Omiting to print further errors ...""<<endl;; }; sum += random;; }; }. // print out results and timing; auto stop = high_resolution_clock::now();; auto ms_int = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);; cout<<""Processing of '""<<name<<""' took ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:3078,Availability,Error,Errors,3078,"::now();; auto ms_int = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);; cout<<""Processing of '""<<name<<""' took ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:3210,Availability,Error,Errors,3210,"k ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:3341,Availability,Error,Errors,3341,"nches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only a single file is passed to the TChain.; Note, that the code works well if the TChain is initialized with 2 or more files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:3472,Availability,Error,Errors,3472,"nches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only a single file is passed to the TChain.; Note, that the code works well if the TChain is initialized with 2 or more files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:3603,Availability,Error,Errors,3603,"nches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only a single file is passed to the TChain.; Note, that the code works well if the TChain is initialized with 2 or more files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:3734,Availability,Error,Errors,3734,"nches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only a single file is passed to the TChain.; Note, that the code works well if the TChain is initialized with 2 or more files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:3865,Availability,Error,Errors,3865,"nches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only a single file is passed to the TChain.; Note, that the code works well if the TChain is initialized with 2 or more files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:3876,Availability,Error,Error,3876,"nches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only a single file is passed to the TChain.; Note, that the code works well if the TChain is initialized with 2 or more files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:3904,Availability,Error,Error,3904,"nches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only a single file is passed to the TChain.; Note, that the code works well if the TChain is initialized with 2 or more files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:3932,Availability,Error,Error,3932,"nches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only a single file is passed to the TChain.; Note, that the code works well if the TChain is initialized with 2 or more files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:3985,Availability,error,errors,3985,"nches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only a single file is passed to the TChain.; Note, that the code works well if the TChain is initialized with 2 or more files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:4117,Availability,Error,Errors,4117,"nches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only a single file is passed to the TChain.; Note, that the code works well if the TChain is initialized with 2 or more files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/issues/7567:74,Performance,perform,performance,74,"We read a TTree in the classical way with TBranch pointers.; For improved performance, we deactivate all branches using TTree::SetBranchStatus(""*"",0) as advised at:; https://root.cern.ch/doc/master/classTTree.html#a9fc48df5560fce1a2d63ecd1ac5b40cb. If one first gets the number of entries, then one deactivates all branches, all goes commonly well. But if the TChain is initialized only with a *single* file, then the tree is not read! . This appears to be a bug, since the functionality of a TChain should be independent on the number of input files. I am using ROOT 6.20/06. Minimum example to be executed with `$ root -b -l read_tree.cxx` is:. ```; using namespace std::chrono;. void process_tree(TString name, int nFiles, bool DoGetEntries, bool DoDeactivateBranches ) {. // any root files with a TTree; const TString filename = (""/cvmfs/cms.cern.ch/slc6_amd64_gcc530/lcg/root/6.06.00-ikhhed6/tutorials/hsimple.root"");. TChain* chain = new TChain(""ntuple"");; for ( int i = 0 ; i<nFiles ;i++ ) {; chain->Add(filename);; }. long nEntries = -1;; if ( DoGetEntries ) nEntries = chain->GetEntries();. if ( DoDeactivateBranches ); chain->SetBranchStatus(""*"",0); // this line, together with a previous GetEntries() causes a bug, but only if a single file is passed to the TChain!. // read a single branch; float px,py,pz,random=0.333333;; TBranch* b_random;; chain->SetBranchAddress(""random"", &random, &b_random); // initialize one branch only. auto start = high_resolution_clock::now();// timer start. double sum = 0;; int iev = 0;; int nerrors=0;; const int nrepetitions = 100; // read files more often for a more reliable timing.; for ( int n = 0 ; n<nrepetitions ; n++ ) { // more repetitions for more accurate timing; for ( int i = 0 ; i<chain->GetEntries() ; i++, iev++ ){ // read tree; int bytes = chain->GetEntry(i);; if ( !bytes ) { // some printout (if something goes wrong ;) ); if ( nerrors++ < 3 ) cout<<""Error! No bytes were read!""<<endl; // this prints errors; if ( nerrors==3 ) cout<<""Omi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7567
https://github.com/root-project/root/pull/7568:85,Deployability,patch,patches,85,make minimal adjustments (for removed headers) to boost modulemap for boost 1.75.0 (+patches for missing includes). Can build boost pcms for same set of packages with boost 1.72 with these updates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7568
https://github.com/root-project/root/pull/7568:189,Deployability,update,updates,189,make minimal adjustments (for removed headers) to boost modulemap for boost 1.75.0 (+patches for missing includes). Can build boost pcms for same set of packages with boost 1.72 with these updates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7568
https://github.com/root-project/root/pull/7569:8,Integrability,depend,dependency,8,"It is a dependency of ROOTDataFrame which is already included in; ROOT_LIBRARIES, so we want it there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7569
https://github.com/root-project/root/pull/7573:36,Testability,test,tested,36,Leaf name with dot was not properly tested,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7573
https://github.com/root-project/root/pull/7574:36,Testability,test,tested,36,Leaf name with dot was not properly tested,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7574
https://github.com/root-project/root/pull/7579:8,Integrability,depend,dependency,8,"It is a dependency of ROOTDataFrame which is already included in; ROOT_LIBRARIES, so we want it there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7579
https://github.com/root-project/root/pull/7580:8,Integrability,depend,dependency,8,"It is a dependency of ROOTDataFrame which is already included in; ROOT_LIBRARIES, so we want it there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7580
https://github.com/root-project/root/pull/7581:8,Integrability,depend,dependency,8,"It is a dependency of ROOTDataFrame which is already included in; ROOT_LIBRARIES, so we want it there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7581
https://github.com/root-project/root/pull/7583:21,Testability,test,test,21,"Due to an aggressive test threshold, the RF RDF action helpers test was; failing. Here, the RNG is removed, making it fully deterministic. Well, not fully. The *generation* is fully deterministic in the sense that the same numbers are generated, but the order of events is unspecified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7583
https://github.com/root-project/root/pull/7583:63,Testability,test,test,63,"Due to an aggressive test threshold, the RF RDF action helpers test was; failing. Here, the RNG is removed, making it fully deterministic. Well, not fully. The *generation* is fully deterministic in the sense that the same numbers are generated, but the order of events is unspecified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7583
https://github.com/root-project/root/issues/7584:1251,Availability,down,download,1251,"- [x] Checked for duplicates. ### Describe the bug; Distributed RDataFrame has support for friend trees, but it seems something is missing. See the gist at https://gist.github.com/vepadulano/b42343bff7297958c46675577bce46a9 :; 1. Two RDF are created and one column is filled; 2. They are both snapshotted to disk and merged into a single file through `hadd`; 3. A TChain is created with one column from the merged file and a friend TChain is attached to it with the second column from the merged file; 4. A distributed RDataFrame with spark is created using the TChain as input, then one histogram per column is booked and drawn to a canvas; 5. The operation fails with; ```; TypeError: Template method resolution failed:; none of the 4 overloaded methods succeeded. Full details:; ROOT::RDF::RResultPtr<TH1D> ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void>::Histo1D(experimental::basic_string_view<char,char_traits<char> > vName) =>; runtime_error: Unknown column: myfriend.rnd; ```. ### Expected behavior; The program should not fail, in fact substituting the distributed rdataframe object with a plain rdataframe gives the correct output image. ### To Reproduce; 1. Source an environment with ROOT master; 2. download the linked gist; 3. `python friendtrees_spark.py`. ### Setup. Fedora 32; ROOT version: master; Built from source; ### Additional context; Thanks to @Zeguivert for originally reporting this issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7584
https://github.com/root-project/root/pull/7586:104,Availability,failure,failures,104,"After the latest LLVM upgrade, changes in cling's symbol resolution; logic cause some unresolved symbol failures in RDF jitting. Adding RJittedAction to the rootmap should help cling autoloading; and work around the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7586
https://github.com/root-project/root/pull/7586:22,Deployability,upgrade,upgrade,22,"After the latest LLVM upgrade, changes in cling's symbol resolution; logic cause some unresolved symbol failures in RDF jitting. Adding RJittedAction to the rootmap should help cling autoloading; and work around the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7586
https://github.com/root-project/root/pull/7586:69,Testability,log,logic,69,"After the latest LLVM upgrade, changes in cling's symbol resolution; logic cause some unresolved symbol failures in RDF jitting. Adding RJittedAction to the rootmap should help cling autoloading; and work around the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7586
https://github.com/root-project/root/pull/7593:47,Deployability,update,updated,47,"Fixes #7528 ; Civetweb not touched, need to be updated soon anyway",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7593
https://github.com/root-project/root/issues/7601:921,Availability,error,error,921,"### Describe the bug; Building from scratch on Fedora 33, gcc 10.2.1, master version of ROOT. The problem probably appeared after [this commit](https://github.com/root-project/root/commit/05fb923c75ec41f999723e834bd3d61b2fa2356e) (compilation from 07.03 is OK).; ```; $ cmake /cern/root_master_source/ -Droofit=OFF -Dtmva=OFF -Dmathmore=OFF -Dhttp=ON -DXROOTD_ROOT_DIR=/cern/xrootd/ -DCMAKE_INSTALL_PREFIX=/cern/root_master/ -Drpath=ON; $ make -j 12. [ 60%] Built target G__ROOTDataFrame; [ 60%] Building CXX object tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o; /cern/root_master_source/tree/dataframe/src/RNTupleDS.cxx: In member function ‘std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> ROOT::Experimental::Detail::RNTupleColumnReader::MakeField(const string&, ROOT::Experimental::Detail::RNTupleColumnReader::RPageSource&)’:; /cern/root_master_source/tree/dataframe/src/RNTupleDS.cxx:50:43: error: ‘const class ROOT::Experimental::RFieldDescriptor’ has no member named ‘CreateField’; 50 | auto fieldBasePtr = fieldDescriptor.CreateField(descriptor);; | ^~~~~~~~~~~; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:394: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:29856: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; make: *** [Makefile:171: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7601
https://github.com/root-project/root/issues/7601:1235,Availability,Error,Error,1235,"### Describe the bug; Building from scratch on Fedora 33, gcc 10.2.1, master version of ROOT. The problem probably appeared after [this commit](https://github.com/root-project/root/commit/05fb923c75ec41f999723e834bd3d61b2fa2356e) (compilation from 07.03 is OK).; ```; $ cmake /cern/root_master_source/ -Droofit=OFF -Dtmva=OFF -Dmathmore=OFF -Dhttp=ON -DXROOTD_ROOT_DIR=/cern/xrootd/ -DCMAKE_INSTALL_PREFIX=/cern/root_master/ -Drpath=ON; $ make -j 12. [ 60%] Built target G__ROOTDataFrame; [ 60%] Building CXX object tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o; /cern/root_master_source/tree/dataframe/src/RNTupleDS.cxx: In member function ‘std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> ROOT::Experimental::Detail::RNTupleColumnReader::MakeField(const string&, ROOT::Experimental::Detail::RNTupleColumnReader::RPageSource&)’:; /cern/root_master_source/tree/dataframe/src/RNTupleDS.cxx:50:43: error: ‘const class ROOT::Experimental::RFieldDescriptor’ has no member named ‘CreateField’; 50 | auto fieldBasePtr = fieldDescriptor.CreateField(descriptor);; | ^~~~~~~~~~~; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:394: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:29856: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; make: *** [Makefile:171: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7601
https://github.com/root-project/root/issues/7601:1335,Availability,Error,Error,1335,"### Describe the bug; Building from scratch on Fedora 33, gcc 10.2.1, master version of ROOT. The problem probably appeared after [this commit](https://github.com/root-project/root/commit/05fb923c75ec41f999723e834bd3d61b2fa2356e) (compilation from 07.03 is OK).; ```; $ cmake /cern/root_master_source/ -Droofit=OFF -Dtmva=OFF -Dmathmore=OFF -Dhttp=ON -DXROOTD_ROOT_DIR=/cern/xrootd/ -DCMAKE_INSTALL_PREFIX=/cern/root_master/ -Drpath=ON; $ make -j 12. [ 60%] Built target G__ROOTDataFrame; [ 60%] Building CXX object tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o; /cern/root_master_source/tree/dataframe/src/RNTupleDS.cxx: In member function ‘std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> ROOT::Experimental::Detail::RNTupleColumnReader::MakeField(const string&, ROOT::Experimental::Detail::RNTupleColumnReader::RPageSource&)’:; /cern/root_master_source/tree/dataframe/src/RNTupleDS.cxx:50:43: error: ‘const class ROOT::Experimental::RFieldDescriptor’ has no member named ‘CreateField’; 50 | auto fieldBasePtr = fieldDescriptor.CreateField(descriptor);; | ^~~~~~~~~~~; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:394: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:29856: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; make: *** [Makefile:171: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7601
https://github.com/root-project/root/issues/7601:1374,Availability,Error,Error,1374,"### Describe the bug; Building from scratch on Fedora 33, gcc 10.2.1, master version of ROOT. The problem probably appeared after [this commit](https://github.com/root-project/root/commit/05fb923c75ec41f999723e834bd3d61b2fa2356e) (compilation from 07.03 is OK).; ```; $ cmake /cern/root_master_source/ -Droofit=OFF -Dtmva=OFF -Dmathmore=OFF -Dhttp=ON -DXROOTD_ROOT_DIR=/cern/xrootd/ -DCMAKE_INSTALL_PREFIX=/cern/root_master/ -Drpath=ON; $ make -j 12. [ 60%] Built target G__ROOTDataFrame; [ 60%] Building CXX object tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o; /cern/root_master_source/tree/dataframe/src/RNTupleDS.cxx: In member function ‘std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> ROOT::Experimental::Detail::RNTupleColumnReader::MakeField(const string&, ROOT::Experimental::Detail::RNTupleColumnReader::RPageSource&)’:; /cern/root_master_source/tree/dataframe/src/RNTupleDS.cxx:50:43: error: ‘const class ROOT::Experimental::RFieldDescriptor’ has no member named ‘CreateField’; 50 | auto fieldBasePtr = fieldDescriptor.CreateField(descriptor);; | ^~~~~~~~~~~; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:394: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:29856: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; make: *** [Makefile:171: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7601
https://github.com/root-project/root/issues/7604:469,Modifiability,config,config,469,"I've got my hands on a DF workflow, which produces in a pretty large DF graph around 10k histograms in a single event loop. The graph consists of roughly 130k nodes (I can tell from the jitted code) and is assembled in Python. Even though probably the actual solution would be slimming the DF graph, it poses a nice challenge for us to push jitting to its limits. See the file attached in the archive, simply jit it or compile it with `your_compiler compile.cxx $(root-config --cflags --libs)`. The file has 130k lines and around 60 mio characters (60 MB file) and is extracted from the code, which is jitted by DF. Stats I've collected so far:; - Jitting with current master (llvm9): 1.5h and >25GB maxres size; - Compiling with O0 and clang10: 1.5h and 20GB maxres size (fits the jitting); - Compiling with O0 and gcc4.8.5 and gcc10: More than 12h compile time, more than 80GB maxres size at that time (I stopped it); - Compiling with O1 and clang10: More than 10h in, I'll probably stop it soon. Here's the file:; [compile.tar.gz](https://github.com/root-project/root/files/6169676/compile.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7604
https://github.com/root-project/root/issues/7604:402,Usability,simpl,simply,402,"I've got my hands on a DF workflow, which produces in a pretty large DF graph around 10k histograms in a single event loop. The graph consists of roughly 130k nodes (I can tell from the jitted code) and is assembled in Python. Even though probably the actual solution would be slimming the DF graph, it poses a nice challenge for us to push jitting to its limits. See the file attached in the archive, simply jit it or compile it with `your_compiler compile.cxx $(root-config --cflags --libs)`. The file has 130k lines and around 60 mio characters (60 MB file) and is extracted from the code, which is jitted by DF. Stats I've collected so far:; - Jitting with current master (llvm9): 1.5h and >25GB maxres size; - Compiling with O0 and clang10: 1.5h and 20GB maxres size (fits the jitting); - Compiling with O0 and gcc4.8.5 and gcc10: More than 12h compile time, more than 80GB maxres size at that time (I stopped it); - Compiling with O1 and clang10: More than 10h in, I'll probably stop it soon. Here's the file:; [compile.tar.gz](https://github.com/root-project/root/files/6169676/compile.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7604
https://github.com/root-project/root/pull/7606:268,Deployability,configurat,configuration,268,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context. (cherry picked from commit f481e8fe6df177ec1a50a10b7d76df5fb0b5c2a2). v6.24 version of #7563",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7606
https://github.com/root-project/root/pull/7606:749,Energy Efficiency,allocate,allocated,749,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context. (cherry picked from commit f481e8fe6df177ec1a50a10b7d76df5fb0b5c2a2). v6.24 version of #7563",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7606
https://github.com/root-project/root/pull/7606:55,Integrability,message,message,55,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context. (cherry picked from commit f481e8fe6df177ec1a50a10b7d76df5fb0b5c2a2). v6.24 version of #7563",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7606
https://github.com/root-project/root/pull/7606:268,Modifiability,config,configuration,268,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context. (cherry picked from commit f481e8fe6df177ec1a50a10b7d76df5fb0b5c2a2). v6.24 version of #7563",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7606
https://github.com/root-project/root/pull/7607:45,Energy Efficiency,Power,PowerPC,45,v6.22 version of #7563 plus the same fix for PowerPC,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7607
https://github.com/root-project/root/pull/7608:45,Energy Efficiency,Power,PowerPC,45,v6.20 version of #7563 plus the same fix for PowerPC (see also #7607),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7608
https://github.com/root-project/root/pull/7612:0,Usability,Simpl,Simplify,0,Simplify complex code to build URI string from components,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7612
https://github.com/root-project/root/issues/7614:366,Availability,Error,Error,366,"### Is your feature request related to a problem? Please describe. It's not relevant for this feature request, but: this would allow CMS to trace autoparsing by setting an environment variable, after https://github.com/root-project/root/pull/7609 is merged. ### Describe the solution you'd like. ```bash; export ROOT_LOG='ROOT.InterpreterPerf=Debug(3),ROOT.RBrowser=Error'; ```; should set verbosity for `ROOT.InterpreterPerf` to `kDebug+3` and for `ROOT.RBrowser` to `kError`. ### Describe alternatives you've considered; `.` in variable names is forbidden in bash, so `export ROOT_LOG_ROOT.InterpreterPerf='Debug(3)'` doesn't work, and we'd need to mangle this. That's ugly and complex. We could also have an entry in `.rootrc` - but it brings in a dependency for `RLogger` on `TEnv` that I'd like to avoid. ### Additional context. https://github.com/root-project/root/issues/6931",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7614
https://github.com/root-project/root/issues/7614:751,Integrability,depend,dependency,751,"### Is your feature request related to a problem? Please describe. It's not relevant for this feature request, but: this would allow CMS to trace autoparsing by setting an environment variable, after https://github.com/root-project/root/pull/7609 is merged. ### Describe the solution you'd like. ```bash; export ROOT_LOG='ROOT.InterpreterPerf=Debug(3),ROOT.RBrowser=Error'; ```; should set verbosity for `ROOT.InterpreterPerf` to `kDebug+3` and for `ROOT.RBrowser` to `kError`. ### Describe alternatives you've considered; `.` in variable names is forbidden in bash, so `export ROOT_LOG_ROOT.InterpreterPerf='Debug(3)'` doesn't work, and we'd need to mangle this. That's ugly and complex. We could also have an entry in `.rootrc` - but it brings in a dependency for `RLogger` on `TEnv` that I'd like to avoid. ### Additional context. https://github.com/root-project/root/issues/6931",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7614
https://github.com/root-project/root/issues/7614:184,Modifiability,variab,variable,184,"### Is your feature request related to a problem? Please describe. It's not relevant for this feature request, but: this would allow CMS to trace autoparsing by setting an environment variable, after https://github.com/root-project/root/pull/7609 is merged. ### Describe the solution you'd like. ```bash; export ROOT_LOG='ROOT.InterpreterPerf=Debug(3),ROOT.RBrowser=Error'; ```; should set verbosity for `ROOT.InterpreterPerf` to `kDebug+3` and for `ROOT.RBrowser` to `kError`. ### Describe alternatives you've considered; `.` in variable names is forbidden in bash, so `export ROOT_LOG_ROOT.InterpreterPerf='Debug(3)'` doesn't work, and we'd need to mangle this. That's ugly and complex. We could also have an entry in `.rootrc` - but it brings in a dependency for `RLogger` on `TEnv` that I'd like to avoid. ### Additional context. https://github.com/root-project/root/issues/6931",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7614
https://github.com/root-project/root/issues/7614:530,Modifiability,variab,variable,530,"### Is your feature request related to a problem? Please describe. It's not relevant for this feature request, but: this would allow CMS to trace autoparsing by setting an environment variable, after https://github.com/root-project/root/pull/7609 is merged. ### Describe the solution you'd like. ```bash; export ROOT_LOG='ROOT.InterpreterPerf=Debug(3),ROOT.RBrowser=Error'; ```; should set verbosity for `ROOT.InterpreterPerf` to `kDebug+3` and for `ROOT.RBrowser` to `kError`. ### Describe alternatives you've considered; `.` in variable names is forbidden in bash, so `export ROOT_LOG_ROOT.InterpreterPerf='Debug(3)'` doesn't work, and we'd need to mangle this. That's ugly and complex. We could also have an entry in `.rootrc` - but it brings in a dependency for `RLogger` on `TEnv` that I'd like to avoid. ### Additional context. https://github.com/root-project/root/issues/6931",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7614
https://github.com/root-project/root/issues/7614:803,Safety,avoid,avoid,803,"### Is your feature request related to a problem? Please describe. It's not relevant for this feature request, but: this would allow CMS to trace autoparsing by setting an environment variable, after https://github.com/root-project/root/pull/7609 is merged. ### Describe the solution you'd like. ```bash; export ROOT_LOG='ROOT.InterpreterPerf=Debug(3),ROOT.RBrowser=Error'; ```; should set verbosity for `ROOT.InterpreterPerf` to `kDebug+3` and for `ROOT.RBrowser` to `kError`. ### Describe alternatives you've considered; `.` in variable names is forbidden in bash, so `export ROOT_LOG_ROOT.InterpreterPerf='Debug(3)'` doesn't work, and we'd need to mangle this. That's ugly and complex. We could also have an entry in `.rootrc` - but it brings in a dependency for `RLogger` on `TEnv` that I'd like to avoid. ### Additional context. https://github.com/root-project/root/issues/6931",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7614
https://github.com/root-project/root/pull/7616:773,Availability,error,errors,773,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:1006,Availability,redundant,redundantly,1006,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:1513,Availability,redundant,redundant,1513,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:885,Deployability,configurat,configuration,885,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:1157,Deployability,configurat,configuration,1157,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:885,Modifiability,config,configuration,885,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:1157,Modifiability,config,configuration,1157,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:1171,Modifiability,refactor,refactor,1171,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:174,Performance,cache,cache,174,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:180,Performance,optimiz,optimization,180,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:228,Performance,cache,cache,228,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:234,Performance,optimiz,optimization,234,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:1198,Performance,cache,cache,1198,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:1204,Performance,optimiz,optimization,1204,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:794,Safety,avoid,avoided,794,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:1006,Safety,redund,redundantly,1006,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:1513,Safety,redund,redundant,1513,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:1325,Testability,test,tested,1325,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7616:1380,Testability,test,test,1380,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7616
https://github.com/root-project/root/pull/7624:32,Deployability,release,release,32,Added PyTorch TMVA Interface to release notes. PTAL @lmoneta,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7624
https://github.com/root-project/root/pull/7624:19,Integrability,Interface,Interface,19,Added PyTorch TMVA Interface to release notes. PTAL @lmoneta,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7624
https://github.com/root-project/root/pull/7625:236,Availability,resilien,resilient,236,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build against. However, this means that binary releases become sensitive to minor sdk upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact that the current sdk's parent directory has a symlink MacOSX.sdk which points to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7625
https://github.com/root-project/root/pull/7625:115,Deployability,release,releases,115,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build against. However, this means that binary releases become sensitive to minor sdk upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact that the current sdk's parent directory has a symlink MacOSX.sdk which points to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7625
https://github.com/root-project/root/pull/7625:154,Deployability,upgrade,upgrades,154,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build against. However, this means that binary releases become sensitive to minor sdk upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact that the current sdk's parent directory has a symlink MacOSX.sdk which points to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7625
https://github.com/root-project/root/pull/7625:268,Deployability,patch,patch,268,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build against. However, this means that binary releases become sensitive to minor sdk upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact that the current sdk's parent directory has a symlink MacOSX.sdk which points to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7625
https://github.com/root-project/root/issues/7626:391,Usability,clear,clear,391,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Dear ROOT developers, . since, I believe, introduction of ROOT v6, after one redirects /dev/stdout to a file, by typing, for example, ; "".> a.txt"", one can no longer see what he is typing on the command line - the typed characters are saved ; to a.txt, but are not duplicated on the screen. . Moreover, pressing the up-arrow key brings to the screen usual escape characters (as shown in the example below - ; ""^[[A"" corresponds to me pressing up-arrow) and a user has to remember the contents of the command stack till he finally ; types "".>"" and gets visibility of the command prompt back. -- many thanks for taking time and looking into it, Pasha. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The desired (a'la ROOT 5) behavior is that after the redirection, the output of the compiled code is redirected ; to the specified file, everything coming from /usr/stdin is also sent to that file, but also duplicated on the screen, ; so the command line is fully visible and editable at any time. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; <pre>; murat@mu2e01:/data/murat/mu2e_dev>root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.22/06 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7626
https://github.com/root-project/root/issues/7626:1139,Usability,clear,clear,1139,"cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Dear ROOT developers, . since, I believe, introduction of ROOT v6, after one redirects /dev/stdout to a file, by typing, for example, ; "".> a.txt"", one can no longer see what he is typing on the command line - the typed characters are saved ; to a.txt, but are not duplicated on the screen. . Moreover, pressing the up-arrow key brings to the screen usual escape characters (as shown in the example below - ; ""^[[A"" corresponds to me pressing up-arrow) and a user has to remember the contents of the command stack till he finally ; types "".>"" and gets visibility of the command prompt back. -- many thanks for taking time and looking into it, Pasha. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The desired (a'la ROOT 5) behavior is that after the redirection, the output of the compiled code is redirected ; to the specified file, everything coming from /usr/stdin is also sent to that file, but also duplicated on the screen, ; so the command line is fully visible and editable at any time. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; <pre>; murat@mu2e01:/data/murat/mu2e_dev>root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.22/06 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2020, 15:14:08 |; | From tags/v6-22-06@v6-22-06 |; | Try '.help', '.demo', '.license', '.credi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7626
https://github.com/root-project/root/issues/7627:308,Deployability,integrat,integrated,308,"- [x] Checked for duplicates. ### Describe the bug; In TMVA documentation at ; https://root.cern/doc/master/group__TMVA.html; there is a link ""The full description of the Multi Variate Analysis package"", which leads to ; http://tmva.sourceforge.net/. On that site it's written: ""In 2013, TMVA was completely integrated into ROOT and is now released as part of it. The new official home can be found at the ROOT website (here). "", where the link ""here"" leads to; https://root.cern/tmva/; which doesn't exist. The same link is in TMVA's sourceforge page as ""Project Page"". Also I note that in the [TMVA Reference guide](https://root.cern/doc/master/group__TMVA.html) there are links to ; The TMVA Users Guide.; The TMVA Options Reference,; that all lead to sourceforge.net (and they are both broken). Probably they should be moved to root.cern?. ### Expected behavior; If the sourceforge link should be deleted, remove that. If it is relevant, then please fix the link to root.cern there or the page at root.cern/tmva .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7627
https://github.com/root-project/root/issues/7627:340,Deployability,release,released,340,"- [x] Checked for duplicates. ### Describe the bug; In TMVA documentation at ; https://root.cern/doc/master/group__TMVA.html; there is a link ""The full description of the Multi Variate Analysis package"", which leads to ; http://tmva.sourceforge.net/. On that site it's written: ""In 2013, TMVA was completely integrated into ROOT and is now released as part of it. The new official home can be found at the ROOT website (here). "", where the link ""here"" leads to; https://root.cern/tmva/; which doesn't exist. The same link is in TMVA's sourceforge page as ""Project Page"". Also I note that in the [TMVA Reference guide](https://root.cern/doc/master/group__TMVA.html) there are links to ; The TMVA Users Guide.; The TMVA Options Reference,; that all lead to sourceforge.net (and they are both broken). Probably they should be moved to root.cern?. ### Expected behavior; If the sourceforge link should be deleted, remove that. If it is relevant, then please fix the link to root.cern there or the page at root.cern/tmva .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7627
https://github.com/root-project/root/issues/7627:308,Integrability,integrat,integrated,308,"- [x] Checked for duplicates. ### Describe the bug; In TMVA documentation at ; https://root.cern/doc/master/group__TMVA.html; there is a link ""The full description of the Multi Variate Analysis package"", which leads to ; http://tmva.sourceforge.net/. On that site it's written: ""In 2013, TMVA was completely integrated into ROOT and is now released as part of it. The new official home can be found at the ROOT website (here). "", where the link ""here"" leads to; https://root.cern/tmva/; which doesn't exist. The same link is in TMVA's sourceforge page as ""Project Page"". Also I note that in the [TMVA Reference guide](https://root.cern/doc/master/group__TMVA.html) there are links to ; The TMVA Users Guide.; The TMVA Options Reference,; that all lead to sourceforge.net (and they are both broken). Probably they should be moved to root.cern?. ### Expected behavior; If the sourceforge link should be deleted, remove that. If it is relevant, then please fix the link to root.cern there or the page at root.cern/tmva .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7627
https://github.com/root-project/root/issues/7627:611,Usability,guid,guide,611,"- [x] Checked for duplicates. ### Describe the bug; In TMVA documentation at ; https://root.cern/doc/master/group__TMVA.html; there is a link ""The full description of the Multi Variate Analysis package"", which leads to ; http://tmva.sourceforge.net/. On that site it's written: ""In 2013, TMVA was completely integrated into ROOT and is now released as part of it. The new official home can be found at the ROOT website (here). "", where the link ""here"" leads to; https://root.cern/tmva/; which doesn't exist. The same link is in TMVA's sourceforge page as ""Project Page"". Also I note that in the [TMVA Reference guide](https://root.cern/doc/master/group__TMVA.html) there are links to ; The TMVA Users Guide.; The TMVA Options Reference,; that all lead to sourceforge.net (and they are both broken). Probably they should be moved to root.cern?. ### Expected behavior; If the sourceforge link should be deleted, remove that. If it is relevant, then please fix the link to root.cern there or the page at root.cern/tmva .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7627
https://github.com/root-project/root/issues/7627:701,Usability,Guid,Guide,701,"- [x] Checked for duplicates. ### Describe the bug; In TMVA documentation at ; https://root.cern/doc/master/group__TMVA.html; there is a link ""The full description of the Multi Variate Analysis package"", which leads to ; http://tmva.sourceforge.net/. On that site it's written: ""In 2013, TMVA was completely integrated into ROOT and is now released as part of it. The new official home can be found at the ROOT website (here). "", where the link ""here"" leads to; https://root.cern/tmva/; which doesn't exist. The same link is in TMVA's sourceforge page as ""Project Page"". Also I note that in the [TMVA Reference guide](https://root.cern/doc/master/group__TMVA.html) there are links to ; The TMVA Users Guide.; The TMVA Options Reference,; that all lead to sourceforge.net (and they are both broken). Probably they should be moved to root.cern?. ### Expected behavior; If the sourceforge link should be deleted, remove that. If it is relevant, then please fix the link to root.cern there or the page at root.cern/tmva .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7627
https://github.com/root-project/root/pull/7628:239,Availability,resilien,resilient,239,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build; against. However, this means that binary releases become sensitive to minor sdk; upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is; relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact; that the current sdk's parent directory has a symlink MacOSX.sdk which points; to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7628
https://github.com/root-project/root/pull/7628:116,Deployability,release,releases,116,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build; against. However, this means that binary releases become sensitive to minor sdk; upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is; relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact; that the current sdk's parent directory has a symlink MacOSX.sdk which points; to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7628
https://github.com/root-project/root/pull/7628:156,Deployability,upgrade,upgrades,156,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build; against. However, this means that binary releases become sensitive to minor sdk; upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is; relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact; that the current sdk's parent directory has a symlink MacOSX.sdk which points; to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7628
https://github.com/root-project/root/pull/7628:271,Deployability,patch,patch,271,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build; against. However, this means that binary releases become sensitive to minor sdk; upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is; relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact; that the current sdk's parent directory has a symlink MacOSX.sdk which points; to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7628
https://github.com/root-project/root/pull/7629:239,Availability,resilien,resilient,239,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build; against. However, this means that binary releases become sensitive to minor sdk; upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is; relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact; that the current sdk's parent directory has a symlink MacOSX.sdk which points; to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7629
https://github.com/root-project/root/pull/7629:116,Deployability,release,releases,116,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build; against. However, this means that binary releases become sensitive to minor sdk; upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is; relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact; that the current sdk's parent directory has a symlink MacOSX.sdk which points; to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7629
https://github.com/root-project/root/pull/7629:156,Deployability,upgrade,upgrades,156,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build; against. However, this means that binary releases become sensitive to minor sdk; upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is; relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact; that the current sdk's parent directory has a symlink MacOSX.sdk which points; to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7629
https://github.com/root-project/root/pull/7629:271,Deployability,patch,patch,271,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build; against. However, this means that binary releases become sensitive to minor sdk; upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is; relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact; that the current sdk's parent directory has a symlink MacOSX.sdk which points; to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7629
https://github.com/root-project/root/pull/7630:223,Usability,simpl,simplified,223,"Allow Book to be used with RDataFrame without explicitly specifying the column types. This re-uses as much as possible the machinery which was already in place to do this for Fill, Histo1D, etc. Template overloads are also simplified for Fill, which allows the jitted version at least to be called from python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7630
https://github.com/root-project/root/issues/7633:823,Integrability,depend,depends,823,"Copy post from Mattermost:. Normally one writes:; ```; TList *lst = new TList(); ; TIter iter(lst);; ```. This works fine. In many places of RooFit (and also in some other classes) one can see following syntax:; ```; TIter iter = lst->MakeIterator();; ```. It is also fine while where is constructor signature TIter(TIterator *it).; But if one does again:; ```; iter = lst->MakeIterator();; ```. One do not get that one expects. While C++ does:. 1. creates temporary TIter instance, ; 2. Calls TIter &operator=(const TIter &rhs) ; 3. deletes temporary `TIter` instance with original `TIterator` object which was created by `lst->MakeIterator()`. Means we have unnecessary duplication of `TIterator` in between. Moreover, following code **MAY** produce wrong results:; ```; iter = lst->MakeIterator(kIterBackward);; ```. It depends if assign operator implemented properly for derived `TIterator` classes.; Probably, we should define assign operator abstract:; ```; virtual TIterator &operator=(const TIterator &) = 0;; ```; To ensure that all derived classes implement it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7633
https://github.com/root-project/root/pull/7643:11,Safety,avoid,avoid,11,"This is to avoid having to call `new` and `delete` in the context of; caching in RooFit, as it has lead to memory leaks in the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7643
https://github.com/root-project/root/issues/7644:165,Modifiability,config,config,165,"Hi all,. It makes sense to compile software with ROOT using exactly the same C++ standard.; However, there is no nice way to obtain this information from ROOT cmake config.; Everything that is provided is a list of C++ flags. ### Describe the solution you'd like; Have a CMake variable ROOT_CXX_STANDARD in ROOT cmake config. ### Describe alternatives you've considered; Parsing the ROOT_CXX_FLAGS and hoping for the best. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7644
https://github.com/root-project/root/issues/7644:277,Modifiability,variab,variable,277,"Hi all,. It makes sense to compile software with ROOT using exactly the same C++ standard.; However, there is no nice way to obtain this information from ROOT cmake config.; Everything that is provided is a list of C++ flags. ### Describe the solution you'd like; Have a CMake variable ROOT_CXX_STANDARD in ROOT cmake config. ### Describe alternatives you've considered; Parsing the ROOT_CXX_FLAGS and hoping for the best. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7644
https://github.com/root-project/root/issues/7644:318,Modifiability,config,config,318,"Hi all,. It makes sense to compile software with ROOT using exactly the same C++ standard.; However, there is no nice way to obtain this information from ROOT cmake config.; Everything that is provided is a list of C++ flags. ### Describe the solution you'd like; Have a CMake variable ROOT_CXX_STANDARD in ROOT cmake config. ### Describe alternatives you've considered; Parsing the ROOT_CXX_FLAGS and hoping for the best. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7644
https://github.com/root-project/root/pull/7645:58,Availability,error,errors,58,"Resolves root-project/cling#399; Fix the following linker errors:; ```; 253>cling.exp : error LNK2001: unresolved external symbol ""public: static class std::basic_string<char,struct std::char_traits,class std::allocator > __cdecl clang::QualType::getAsString(class clang::Type const *,class clang::Qualifiers)"" (?getAsString@QualType@clang@@sa?AV?$basic_string@DU?$char_traits@D@std@@v?$allocator@D@2@@std@@PEBVType@2@VQualifiers@2@@z); 253>cling.exp : error LNK2001: unresolved external symbol ""private: virtual void __cdecl llvm::raw_ostream::handle(void)"" (?handle@raw_ostream@llvm@@EEAAXXZ); 253>D:\work\libs\cling\src\build\Release\bin\cling.exe : fatal error LNK1120: 2 unresolved externals; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7645
https://github.com/root-project/root/pull/7645:88,Availability,error,error,88,"Resolves root-project/cling#399; Fix the following linker errors:; ```; 253>cling.exp : error LNK2001: unresolved external symbol ""public: static class std::basic_string<char,struct std::char_traits,class std::allocator > __cdecl clang::QualType::getAsString(class clang::Type const *,class clang::Qualifiers)"" (?getAsString@QualType@clang@@sa?AV?$basic_string@DU?$char_traits@D@std@@v?$allocator@D@2@@std@@PEBVType@2@VQualifiers@2@@z); 253>cling.exp : error LNK2001: unresolved external symbol ""private: virtual void __cdecl llvm::raw_ostream::handle(void)"" (?handle@raw_ostream@llvm@@EEAAXXZ); 253>D:\work\libs\cling\src\build\Release\bin\cling.exe : fatal error LNK1120: 2 unresolved externals; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7645
https://github.com/root-project/root/pull/7645:453,Availability,error,error,453,"Resolves root-project/cling#399; Fix the following linker errors:; ```; 253>cling.exp : error LNK2001: unresolved external symbol ""public: static class std::basic_string<char,struct std::char_traits,class std::allocator > __cdecl clang::QualType::getAsString(class clang::Type const *,class clang::Qualifiers)"" (?getAsString@QualType@clang@@sa?AV?$basic_string@DU?$char_traits@D@std@@v?$allocator@D@2@@std@@PEBVType@2@VQualifiers@2@@z); 253>cling.exp : error LNK2001: unresolved external symbol ""private: virtual void __cdecl llvm::raw_ostream::handle(void)"" (?handle@raw_ostream@llvm@@EEAAXXZ); 253>D:\work\libs\cling\src\build\Release\bin\cling.exe : fatal error LNK1120: 2 unresolved externals; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7645
https://github.com/root-project/root/pull/7645:659,Availability,error,error,659,"Resolves root-project/cling#399; Fix the following linker errors:; ```; 253>cling.exp : error LNK2001: unresolved external symbol ""public: static class std::basic_string<char,struct std::char_traits,class std::allocator > __cdecl clang::QualType::getAsString(class clang::Type const *,class clang::Qualifiers)"" (?getAsString@QualType@clang@@sa?AV?$basic_string@DU?$char_traits@D@std@@v?$allocator@D@2@@std@@PEBVType@2@VQualifiers@2@@z); 253>cling.exp : error LNK2001: unresolved external symbol ""private: virtual void __cdecl llvm::raw_ostream::handle(void)"" (?handle@raw_ostream@llvm@@EEAAXXZ); 253>D:\work\libs\cling\src\build\Release\bin\cling.exe : fatal error LNK1120: 2 unresolved externals; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7645
https://github.com/root-project/root/pull/7645:629,Deployability,Release,Release,629,"Resolves root-project/cling#399; Fix the following linker errors:; ```; 253>cling.exp : error LNK2001: unresolved external symbol ""public: static class std::basic_string<char,struct std::char_traits,class std::allocator > __cdecl clang::QualType::getAsString(class clang::Type const *,class clang::Qualifiers)"" (?getAsString@QualType@clang@@sa?AV?$basic_string@DU?$char_traits@D@std@@v?$allocator@D@2@@std@@PEBVType@2@VQualifiers@2@@z); 253>cling.exp : error LNK2001: unresolved external symbol ""private: virtual void __cdecl llvm::raw_ostream::handle(void)"" (?handle@raw_ostream@llvm@@EEAAXXZ); 253>D:\work\libs\cling\src\build\Release\bin\cling.exe : fatal error LNK1120: 2 unresolved externals; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7645
https://github.com/root-project/root/issues/7646:420,Availability,mask,masks,420,"I think there's a potentially nasty backward incompatibility issue arising from this commit: https://github.com/root-project/root/commit/90ba866a65bd44e74a995aa330e0a950114443d6#diff-896028fd27621f8bfe9d0774c5529e27df523e5bd7fcfe2ac54f6fd1ced316f9. Details of how the problem appeared to me are below, but I will say that the problem went away when I compiled 6.22 branch with the `_value` data member removed (since it masks the RooAbsReal one). I am guessing here that a RooConstVar version 2 written to disk isn't properly loaded as a RooConstVar version 1. But what is odd is that under some circumstances it seems that the const var value is correctly loaded -- it seems connected to if the arg is ""dirty"" or not. Sorry for being a bit vague, I dont fully understand why it is sometimes a problem and sometimes not but the problem goes away when the above commit is effectively ported back into 6.22. The issue first appeared for me when I opened a workspace (I wanted to attach to this issue but it wont let me attach a root file) created in 6.23.01 in 6.22.00 ... the only warning I get is: . ```; Warning in <TStreamerInfo::BuildOld>: Cannot convert RooRealVarSharedProperties::_altBinning from type: unordered_map<string,RooAbsBinning*> to type: RooLinkedList, skip element; ```. But when I tried to evaluate the pdf in the workspace like this:. ```; RooWorkspace* w = f1.Get<RooWorkspace>(""Test"");; auto func = w->pdf(""SR_model"");; auto obs = w->var(""obs_x_SR"");; func->getVal(*obs);; ```. I got this:. ```; message : p.d.f normalization integral is zero or negative: 0; server values: !funcList=(L_x_bkg_SR_overallSyst_x_StatUncert = 47.1,L_x_sig_SR_overallSyst_x_StatUncert = 3.82), !coefList=(binWidth_obs_x_SR_0 = 5.5,binWidth_obs_x_SR_1 = 5.5); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7646
https://github.com/root-project/root/issues/7646:1518,Integrability,message,message,1518,"I think there's a potentially nasty backward incompatibility issue arising from this commit: https://github.com/root-project/root/commit/90ba866a65bd44e74a995aa330e0a950114443d6#diff-896028fd27621f8bfe9d0774c5529e27df523e5bd7fcfe2ac54f6fd1ced316f9. Details of how the problem appeared to me are below, but I will say that the problem went away when I compiled 6.22 branch with the `_value` data member removed (since it masks the RooAbsReal one). I am guessing here that a RooConstVar version 2 written to disk isn't properly loaded as a RooConstVar version 1. But what is odd is that under some circumstances it seems that the const var value is correctly loaded -- it seems connected to if the arg is ""dirty"" or not. Sorry for being a bit vague, I dont fully understand why it is sometimes a problem and sometimes not but the problem goes away when the above commit is effectively ported back into 6.22. The issue first appeared for me when I opened a workspace (I wanted to attach to this issue but it wont let me attach a root file) created in 6.23.01 in 6.22.00 ... the only warning I get is: . ```; Warning in <TStreamerInfo::BuildOld>: Cannot convert RooRealVarSharedProperties::_altBinning from type: unordered_map<string,RooAbsBinning*> to type: RooLinkedList, skip element; ```. But when I tried to evaluate the pdf in the workspace like this:. ```; RooWorkspace* w = f1.Get<RooWorkspace>(""Test"");; auto func = w->pdf(""SR_model"");; auto obs = w->var(""obs_x_SR"");; func->getVal(*obs);; ```. I got this:. ```; message : p.d.f normalization integral is zero or negative: 0; server values: !funcList=(L_x_bkg_SR_overallSyst_x_StatUncert = 47.1,L_x_sig_SR_overallSyst_x_StatUncert = 3.82), !coefList=(binWidth_obs_x_SR_0 = 5.5,binWidth_obs_x_SR_1 = 5.5); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7646
https://github.com/root-project/root/issues/7646:526,Performance,load,loaded,526,"I think there's a potentially nasty backward incompatibility issue arising from this commit: https://github.com/root-project/root/commit/90ba866a65bd44e74a995aa330e0a950114443d6#diff-896028fd27621f8bfe9d0774c5529e27df523e5bd7fcfe2ac54f6fd1ced316f9. Details of how the problem appeared to me are below, but I will say that the problem went away when I compiled 6.22 branch with the `_value` data member removed (since it masks the RooAbsReal one). I am guessing here that a RooConstVar version 2 written to disk isn't properly loaded as a RooConstVar version 1. But what is odd is that under some circumstances it seems that the const var value is correctly loaded -- it seems connected to if the arg is ""dirty"" or not. Sorry for being a bit vague, I dont fully understand why it is sometimes a problem and sometimes not but the problem goes away when the above commit is effectively ported back into 6.22. The issue first appeared for me when I opened a workspace (I wanted to attach to this issue but it wont let me attach a root file) created in 6.23.01 in 6.22.00 ... the only warning I get is: . ```; Warning in <TStreamerInfo::BuildOld>: Cannot convert RooRealVarSharedProperties::_altBinning from type: unordered_map<string,RooAbsBinning*> to type: RooLinkedList, skip element; ```. But when I tried to evaluate the pdf in the workspace like this:. ```; RooWorkspace* w = f1.Get<RooWorkspace>(""Test"");; auto func = w->pdf(""SR_model"");; auto obs = w->var(""obs_x_SR"");; func->getVal(*obs);; ```. I got this:. ```; message : p.d.f normalization integral is zero or negative: 0; server values: !funcList=(L_x_bkg_SR_overallSyst_x_StatUncert = 47.1,L_x_sig_SR_overallSyst_x_StatUncert = 3.82), !coefList=(binWidth_obs_x_SR_0 = 5.5,binWidth_obs_x_SR_1 = 5.5); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7646
https://github.com/root-project/root/issues/7646:657,Performance,load,loaded,657,"I think there's a potentially nasty backward incompatibility issue arising from this commit: https://github.com/root-project/root/commit/90ba866a65bd44e74a995aa330e0a950114443d6#diff-896028fd27621f8bfe9d0774c5529e27df523e5bd7fcfe2ac54f6fd1ced316f9. Details of how the problem appeared to me are below, but I will say that the problem went away when I compiled 6.22 branch with the `_value` data member removed (since it masks the RooAbsReal one). I am guessing here that a RooConstVar version 2 written to disk isn't properly loaded as a RooConstVar version 1. But what is odd is that under some circumstances it seems that the const var value is correctly loaded -- it seems connected to if the arg is ""dirty"" or not. Sorry for being a bit vague, I dont fully understand why it is sometimes a problem and sometimes not but the problem goes away when the above commit is effectively ported back into 6.22. The issue first appeared for me when I opened a workspace (I wanted to attach to this issue but it wont let me attach a root file) created in 6.23.01 in 6.22.00 ... the only warning I get is: . ```; Warning in <TStreamerInfo::BuildOld>: Cannot convert RooRealVarSharedProperties::_altBinning from type: unordered_map<string,RooAbsBinning*> to type: RooLinkedList, skip element; ```. But when I tried to evaluate the pdf in the workspace like this:. ```; RooWorkspace* w = f1.Get<RooWorkspace>(""Test"");; auto func = w->pdf(""SR_model"");; auto obs = w->var(""obs_x_SR"");; func->getVal(*obs);; ```. I got this:. ```; message : p.d.f normalization integral is zero or negative: 0; server values: !funcList=(L_x_bkg_SR_overallSyst_x_StatUncert = 47.1,L_x_sig_SR_overallSyst_x_StatUncert = 3.82), !coefList=(binWidth_obs_x_SR_0 = 5.5,binWidth_obs_x_SR_1 = 5.5); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7646
https://github.com/root-project/root/issues/7646:1400,Testability,Test,Test,1400,"I think there's a potentially nasty backward incompatibility issue arising from this commit: https://github.com/root-project/root/commit/90ba866a65bd44e74a995aa330e0a950114443d6#diff-896028fd27621f8bfe9d0774c5529e27df523e5bd7fcfe2ac54f6fd1ced316f9. Details of how the problem appeared to me are below, but I will say that the problem went away when I compiled 6.22 branch with the `_value` data member removed (since it masks the RooAbsReal one). I am guessing here that a RooConstVar version 2 written to disk isn't properly loaded as a RooConstVar version 1. But what is odd is that under some circumstances it seems that the const var value is correctly loaded -- it seems connected to if the arg is ""dirty"" or not. Sorry for being a bit vague, I dont fully understand why it is sometimes a problem and sometimes not but the problem goes away when the above commit is effectively ported back into 6.22. The issue first appeared for me when I opened a workspace (I wanted to attach to this issue but it wont let me attach a root file) created in 6.23.01 in 6.22.00 ... the only warning I get is: . ```; Warning in <TStreamerInfo::BuildOld>: Cannot convert RooRealVarSharedProperties::_altBinning from type: unordered_map<string,RooAbsBinning*> to type: RooLinkedList, skip element; ```. But when I tried to evaluate the pdf in the workspace like this:. ```; RooWorkspace* w = f1.Get<RooWorkspace>(""Test"");; auto func = w->pdf(""SR_model"");; auto obs = w->var(""obs_x_SR"");; func->getVal(*obs);; ```. I got this:. ```; message : p.d.f normalization integral is zero or negative: 0; server values: !funcList=(L_x_bkg_SR_overallSyst_x_StatUncert = 47.1,L_x_sig_SR_overallSyst_x_StatUncert = 3.82), !coefList=(binWidth_obs_x_SR_0 = 5.5,binWidth_obs_x_SR_1 = 5.5); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7646
https://github.com/root-project/root/pull/7648:62,Testability,log,logx,62,"Do not draw TFrame for TASImage if not used; Provide gridx/y, logx/y, tickx/y for graphs; Use proper methods to identify Array; Fixing several lgtm.com warnings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7648
https://github.com/root-project/root/pull/7650:0,Deployability,Update,Update,0,Update TSelector doc according to https://sft.its.cern.ch/jira/browse/ROOT-3992,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7650
https://github.com/root-project/root/pull/7651:450,Deployability,patch,patch,450,"Clang, and therefore cling, doesn't deal well with large amounts of; variable instantiations of types with non-trivial destructors in the; same function body. In this scenario the list of exception-handling; ""landing pads"" grows to sizes that make compilation times blow up.; What takes time specifically is the generation of code that deals; with calling the destructors of these variables in case an exception is; thrown in the function body. This patch avoids allocating many temporary std::strings and; std::vector<std::string>s in jitted code by generating code of the form; Jit{Filter,Define}Helper(..., const char*[]{""col1"", ""col2""}, ...) rather; than Jit{Filter,Define}Helper(..., std::vector<std::string>{""col1"", ""col2""}, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7651
https://github.com/root-project/root/pull/7651:69,Modifiability,variab,variable,69,"Clang, and therefore cling, doesn't deal well with large amounts of; variable instantiations of types with non-trivial destructors in the; same function body. In this scenario the list of exception-handling; ""landing pads"" grows to sizes that make compilation times blow up.; What takes time specifically is the generation of code that deals; with calling the destructors of these variables in case an exception is; thrown in the function body. This patch avoids allocating many temporary std::strings and; std::vector<std::string>s in jitted code by generating code of the form; Jit{Filter,Define}Helper(..., const char*[]{""col1"", ""col2""}, ...) rather; than Jit{Filter,Define}Helper(..., std::vector<std::string>{""col1"", ""col2""}, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7651
https://github.com/root-project/root/pull/7651:381,Modifiability,variab,variables,381,"Clang, and therefore cling, doesn't deal well with large amounts of; variable instantiations of types with non-trivial destructors in the; same function body. In this scenario the list of exception-handling; ""landing pads"" grows to sizes that make compilation times blow up.; What takes time specifically is the generation of code that deals; with calling the destructors of these variables in case an exception is; thrown in the function body. This patch avoids allocating many temporary std::strings and; std::vector<std::string>s in jitted code by generating code of the form; Jit{Filter,Define}Helper(..., const char*[]{""col1"", ""col2""}, ...) rather; than Jit{Filter,Define}Helper(..., std::vector<std::string>{""col1"", ""col2""}, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7651
https://github.com/root-project/root/pull/7651:456,Safety,avoid,avoids,456,"Clang, and therefore cling, doesn't deal well with large amounts of; variable instantiations of types with non-trivial destructors in the; same function body. In this scenario the list of exception-handling; ""landing pads"" grows to sizes that make compilation times blow up.; What takes time specifically is the generation of code that deals; with calling the destructors of these variables in case an exception is; thrown in the function body. This patch avoids allocating many temporary std::strings and; std::vector<std::string>s in jitted code by generating code of the form; Jit{Filter,Define}Helper(..., const char*[]{""col1"", ""col2""}, ...) rather; than Jit{Filter,Define}Helper(..., std::vector<std::string>{""col1"", ""col2""}, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7651
https://github.com/root-project/root/issues/7654:1825,Availability,Error,Error,1825,"ing for Python; -- Found GCC. Major version 9, minor version 3; -- ROOT Platform: linux; -- ROOT Compiler: GNU 9.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'RelWithDebInfo' (flags = '-O3 -g'); -- Compiler Flags: -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.17; -- Found ccache: /usr/bin/ccache; -- Looking for ZLib; -- Looking for Freetype; -- Building LZMA version 5.2.4 included in ROOT itself; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) ; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Building AfterImage library included in ROOT itself; -- Looking for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:2045,Availability,Error,Error,2045,"'); -- Compiler Flags: -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.17; -- Found ccache: /usr/bin/ccache; -- Looking for ZLib; -- Looking for Freetype; -- Building LZMA version 5.2.4 included in ROOT itself; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) ; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Building AfterImage library included in ROOT itself; -- Looking for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR) ; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT fin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:2270,Availability,Error,Error,2270,"or version 2.7.17; -- Found ccache: /usr/bin/ccache; -- Looking for ZLib; -- Looking for Freetype; -- Building LZMA version 5.2.4 included in ROOT itself; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) ; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Building AfterImage library included in ROOT itself; -- Looking for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR) ; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:2490,Availability,Error,Error,2490,"IF_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) ; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Building AfterImage library included in ROOT itself; -- Looking for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR) ; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:5301,Availability,error,errors,5301,"g Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:5731,Availability,down,download,5731,"-pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COMPILE_OPTIONS ""-Wno-deprecated-copy""); endif(); endforeach(); # Once we require at least cmake 3.11, target_include_directories will work for imported targets. ```. ### Additional context; Similar PR: #5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:2730,Deployability,Release,Release,2730," for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR) ; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4381,Deployability,Configurat,Configuration,4381,"MBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4529,Deployability,Install,Install,4529,"ERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:5713,Deployability,install,install,5713,"-pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COMPILE_OPTIONS ""-Wno-deprecated-copy""); endif(); endforeach(); # Once we require at least cmake 3.11, target_include_directories will work for imported targets. ```. ### Additional context; Similar PR: #5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:6340,Integrability,INTERFACE,INTERFACE,6340,"in_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COMPILE_OPTIONS ""-Wno-deprecated-copy""); endif(); endforeach(); # Once we require at least cmake 3.11, target_include_directories will work for imported targets. ```. ### Additional context; Similar PR: #5396; From [`target_compile_options` documentation](https://cmake.org/cmake/help/latest/command/target_compile_options.html#arguments): ""New in version 3.11: Allow setting INTERFACE items on IMPORTED targets.""; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:6427,Integrability,INTERFACE,INTERFACE,6427,"in_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COMPILE_OPTIONS ""-Wno-deprecated-copy""); endif(); endforeach(); # Once we require at least cmake 3.11, target_include_directories will work for imported targets. ```. ### Additional context; Similar PR: #5396; From [`target_compile_options` documentation](https://cmake.org/cmake/help/latest/command/target_compile_options.html#arguments): ""New in version 3.11: Allow setting INTERFACE items on IMPORTED targets.""; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:6891,Integrability,INTERFACE,INTERFACE,6891,"in_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COMPILE_OPTIONS ""-Wno-deprecated-copy""); endif(); endforeach(); # Once we require at least cmake 3.11, target_include_directories will work for imported targets. ```. ### Additional context; Similar PR: #5396; From [`target_compile_options` documentation](https://cmake.org/cmake/help/latest/command/target_compile_options.html#arguments): ""New in version 3.11: Allow setting INTERFACE items on IMPORTED targets.""; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4381,Modifiability,Config,Configuration,4381,"MBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:5277,Modifiability,Config,Configuring,5277,"g Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3745,Performance,Perform,Performing,3745,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3785,Performance,Perform,Performing,3785,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3834,Performance,Perform,Performing,3834,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3877,Performance,Perform,Performing,3877,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3930,Performance,Perform,Performing,3930,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3972,Performance,Perform,Performing,3972,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4023,Performance,Perform,Performing,4023,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4058,Performance,Perform,Performing,4058,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4102,Performance,Perform,Performing,4102,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4138,Performance,Perform,Performing,4138,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4183,Performance,Perform,Performing,4183,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4226,Performance,Perform,Performing,4226,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:797,Safety,Detect,Detected,797,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; The build fails with gcc 9 and CMake 3.10, which I believe comes from the use of a CMake 3.11 feature.; The lines that fail are: https://github.com/root-project/root/blob/466fbd63a5d8486cd9f566bec8f70298161693c9/cmake/modules/SearchInstalledSoftware.cmake#L1780-L1783. Build log: ; ```; max@max-VirtualBox:~/projects/rootdev/root/new-build$ cmake .. -Dccache=ON -Dtesting=ON -Dxrootd=OFF -Droot7=ON -During=ON; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found GCC. Major version 9, minor version 3; -- ROOT Platform: linux; -- ROOT Compiler: GNU 9.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'RelWithDebInfo' (flags = '-O3 -g'); -- Compiler Flags: -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.17; -- Found ccache: /usr/bin/ccache; -- Looking for ZLib; -- Looking for Freetype; -- Building LZMA version 5.2.4 included in ROOT itself; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) ; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Building AfterImage library included in ROOT itself; -- Looking for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3421,Safety,detect,detection,3421,"ify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR) ; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4883,Security,hash,hash-style,4883,"+-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary downl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:658,Testability,log,log,658,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; The build fails with gcc 9 and CMake 3.10, which I believe comes from the use of a CMake 3.11 feature.; The lines that fail are: https://github.com/root-project/root/blob/466fbd63a5d8486cd9f566bec8f70298161693c9/cmake/modules/SearchInstalledSoftware.cmake#L1780-L1783. Build log: ; ```; max@max-VirtualBox:~/projects/rootdev/root/new-build$ cmake .. -Dccache=ON -Dtesting=ON -Dxrootd=OFF -Droot7=ON -During=ON; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found GCC. Major version 9, minor version 3; -- ROOT Platform: linux; -- ROOT Compiler: GNU 9.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'RelWithDebInfo' (flags = '-O3 -g'); -- Compiler Flags: -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.17; -- Found ccache: /usr/bin/ccache; -- Looking for ZLib; -- Looking for Freetype; -- Building LZMA version 5.2.4 included in ROOT itself; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) ; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Building AfterImage library included in ROOT itself; -- Looking for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3756,Testability,Test,Test,3756,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3796,Testability,Test,Test,3796,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3845,Testability,Test,Test,3845,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3888,Testability,Test,Test,3888,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3941,Testability,Test,Test,3941,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:3983,Testability,Test,Test,3983,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4034,Testability,Test,Test,4034,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4069,Testability,Test,Test,4069,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4113,Testability,Test,Test,4113,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4149,Testability,Test,Test,4149,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4194,Testability,Test,Test,4194,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:4237,Testability,Test,Test,4237,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:5394,Testability,log,log,5394," System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:5475,Testability,log,log,5475," CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TAR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:6155,Testability,test,testing,6155,"in_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COMPILE_OPTIONS ""-Wno-deprecated-copy""); endif(); endforeach(); # Once we require at least cmake 3.11, target_include_directories will work for imported targets. ```. ### Additional context; Similar PR: #5396; From [`target_compile_options` documentation](https://cmake.org/cmake/help/latest/command/target_compile_options.html#arguments): ""New in version 3.11: Allow setting INTERFACE items on IMPORTED targets.""; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7654:5495,Usability,clear,clear,5495,"ithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7654
https://github.com/root-project/root/issues/7657:117,Deployability,patch,patches,117,"hi -. In the past few days, we've been seeing a new dictionary-related crash; in the atlas builds using root-6.24.00-patches. I apologize that i don't have a standalone reproducer for this, but it; can be reproduced readily on lxplus in a recent atlas nightly:. ```; $ asetup master--dev4LCG,Athena,r2021-03-21; $ python; >>> import ROOT; >>> cl1 = ROOT.TClass.GetClass('LArAutoCorrMC'); *** Break *** segmentation violation; ...; ```. Note that the problem does _not_ occur if run against the dbg root libraries. Here is the stack trace:. ```; #0 0x00007fffefb5d19f in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007ffff551ec61 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #2 0x00007fffd50a6cf2 in (anonymous namespace)::TriggerDictionaryInitialization_libAthenaPoolUtilitiesDict_Impl() (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #3 0x00007fffd508bad3 in __static_initialization_and_destruction_0(int, int) [clone .constprop.966] (); from /cvmfs/atlas-nightlies.cer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:1005,Deployability,patch,patches,1005,"n the past few days, we've been seeing a new dictionary-related crash; in the atlas builds using root-6.24.00-patches. I apologize that i don't have a standalone reproducer for this, but it; can be reproduced readily on lxplus in a recent atlas nightly:. ```; $ asetup master--dev4LCG,Athena,r2021-03-21; $ python; >>> import ROOT; >>> cl1 = ROOT.TClass.GetClass('LArAutoCorrMC'); *** Break *** segmentation violation; ...; ```. Note that the problem does _not_ occur if run against the dbg root libraries. Here is the stack trace:. ```; #0 0x00007fffefb5d19f in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007ffff551ec61 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #2 0x00007fffd50a6cf2 in (anonymous namespace)::TriggerDictionaryInitialization_libAthenaPoolUtilitiesDict_Impl() (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #3 0x00007fffd508bad3 in __static_initialization_and_destruction_0(int, int) [clone .constprop.966] (); from /cvmfs/atlas-nightlies.cern.ch/re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:1507,Deployability,patch,patches,1507,"ies. Here is the stack trace:. ```; #0 0x00007fffefb5d19f in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007ffff551ec61 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #2 0x00007fffd50a6cf2 in (anonymous namespace)::TriggerDictionaryInitialization_libAthenaPoolUtilitiesDict_Impl() (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #3 0x00007fffd508bad3 in __static_initialization_and_destruction_0(int, int) [clone .constprop.966] (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #4 0x00007fffd508bd1b in _GLOBAL__sub_I_AthenaPoolUtilitiesDictReflexDict.cxx; (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #5 0x00007ffff7dea9c3 in _dl_init_internal () from /lib64/ld-linux-x86",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:1795,Deployability,Install,InstallArea,1795,"tring<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007ffff551ec61 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #2 0x00007fffd50a6cf2 in (anonymous namespace)::TriggerDictionaryInitialization_libAthenaPoolUtilitiesDict_Impl() (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #3 0x00007fffd508bad3 in __static_initialization_and_destruction_0(int, int) [clone .constprop.966] (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #4 0x00007fffd508bd1b in _GLOBAL__sub_I_AthenaPoolUtilitiesDictReflexDict.cxx; (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #5 0x00007ffff7dea9c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #6 0x00007ffff7def59e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #7 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #8 0x00007ffff7deeb8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #9 0x00007ffff720afab in dlopen_doit () from /lib64/libdl.so.2; #10 0x00007ffff7de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:2092,Deployability,Install,InstallArea,2092,"**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #2 0x00007fffd50a6cf2 in (anonymous namespace)::TriggerDictionaryInitialization_libAthenaPoolUtilitiesDict_Impl() (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #3 0x00007fffd508bad3 in __static_initialization_and_destruction_0(int, int) [clone .constprop.966] (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #4 0x00007fffd508bd1b in _GLOBAL__sub_I_AthenaPoolUtilitiesDictReflexDict.cxx; (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #5 0x00007ffff7dea9c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #6 0x00007ffff7def59e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #7 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #8 0x00007ffff7deeb8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #9 0x00007ffff720afab in dlopen_doit () from /lib64/libdl.so.2; #10 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #11 0x00007ffff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:2368,Deployability,Install,InstallArea,2368,"> > const&, char const**, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #2 0x00007fffd50a6cf2 in (anonymous namespace)::TriggerDictionaryInitialization_libAthenaPoolUtilitiesDict_Impl() (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #3 0x00007fffd508bad3 in __static_initialization_and_destruction_0(int, int) [clone .constprop.966] (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #4 0x00007fffd508bd1b in _GLOBAL__sub_I_AthenaPoolUtilitiesDictReflexDict.cxx; (); from /cvmfs/atlas-nightlies.cern.ch/repo/sw/master--dev4LCG_Athena_x86_64-centos7-gcc8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #5 0x00007ffff7dea9c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #6 0x00007ffff7def59e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #7 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #8 0x00007ffff7deeb8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #9 0x00007ffff720afab in dlopen_doit () from /lib64/libdl.so.2; #10 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #11 0x00007ffff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:3329,Deployability,patch,patches,3329,"8-opt/2021-03-21T0600/Athena/22.0.30/InstallArea/x86_64-centos7-gcc8-opt/lib/libAthenaPoolUtilitiesDict.so; #5 0x00007ffff7dea9c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #6 0x00007ffff7def59e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #7 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #8 0x00007ffff7deeb8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #9 0x00007ffff720afab in dlopen_doit () from /lib64/libdl.so.2; #10 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #11 0x00007ffff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:3621,Deployability,patch,patches,3621,"l_catch_error () from /lib64/ld-linux-x86-64.so.2; #8 0x00007ffff7deeb8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #9 0x00007ffff720afab in dlopen_doit () from /lib64/libdl.so.2; #10 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #11 0x00007ffff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:3803,Deployability,patch,patches,3803,".2; #10 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #11 0x00007ffff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:3999,Deployability,patch,patches,3999,") from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:4197,Deployability,patch,patches,4197,"char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #20 0x00007fffefb1b377 in TCling::AutoLoad(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:4387,Deployability,patch,patches,4387,"fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #20 0x00007fffefb1b377 in TCling::AutoLoad(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #21 0x00007ffff560ee86 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:4972,Deployability,patch,patches,4972,"s/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #20 0x00007fffefb1b377 in TCling::AutoLoad(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #21 0x00007ffff560ee86 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #22 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #23 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #24 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:5158,Deployability,patch,patches,5158,"lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #20 0x00007fffefb1b377 in TCling::AutoLoad(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #21 0x00007ffff560ee86 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #22 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #23 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #24 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #25",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:5380,Deployability,patch,patches,5380,"4-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #20 0x00007fffefb1b377 in TCling::AutoLoad(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #21 0x00007ffff560ee86 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #22 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #23 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #24 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #25 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:5562,Deployability,patch,patches,5562,"aits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #20 0x00007fffefb1b377 in TCling::AutoLoad(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #21 0x00007ffff560ee86 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #22 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #23 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #24 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #25 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #26 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:5842,Deployability,patch,patches,5842,"har_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #20 0x00007fffefb1b377 in TCling::AutoLoad(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #21 0x00007ffff560ee86 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #22 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #23 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #24 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #25 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #26 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #27 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #28 0x00007ffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:6110,Deployability,patch,patches,6110,".cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #21 0x00007ffff560ee86 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #22 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #23 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #24 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #25 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #26 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #27 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #28 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #29 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:6375,Deployability,patch,patches,6375,"00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #22 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #23 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #24 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #25 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #26 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #27 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #28 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #29 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TV",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:6560,Deployability,patch,patches,6560,"patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #23 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #24 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #25 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #26 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #27 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #28 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #29 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:6781,Deployability,patch,patches,6781,"sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #24 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #25 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #26 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #27 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #28 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #29 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:6963,Deployability,patch,patches,6963," const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #25 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #26 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #27 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #28 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #29 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:7243,Deployability,patch,patches,7243,"TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #26 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #27 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #28 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #29 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:7511,Deployability,patch,patches,7511,"s.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #27 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #28 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #29 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patche; s/x86_64-centos7-gcc8-opt/lib/libCore.so; #35 0x00007ffff645805b in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:7776,Deployability,patch,patches,7776,"00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #28 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #29 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patche; s/x86_64-centos7-gcc8-opt/lib/libCore.so; #35 0x00007ffff645805b in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e in TClingMethodInfo::TClingMethodInfo(TClingMethodInfo const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #38 0x00007ffff560f4b0 in ?? (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:7961,Deployability,patch,patches,7961,"patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #29 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patche; s/x86_64-centos7-gcc8-opt/lib/libCore.so; #35 0x00007ffff645805b in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e in TClingMethodInfo::TClingMethodInfo(TClingMethodInfo const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #38 0x00007ffff560f4b0 in ?? (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #39 0x00007fffffff3208 in ?? (); #40 0x00007fffffff3180 in ?? (); #41 0x000000010559b1b0 in ?? (); #42 0x00000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:8154,Deployability,patch,patches,8154,"o_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patche; s/x86_64-centos7-gcc8-opt/lib/libCore.so; #35 0x00007ffff645805b in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e in TClingMethodInfo::TClingMethodInfo(TClingMethodInfo const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #38 0x00007ffff560f4b0 in ?? (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #39 0x00007fffffff3208 in ?? (); #40 0x00007fffffff3180 in ?? (); #41 0x000000010559b1b0 in ?? (); #42 0x0000000000000000 in ?? (); ```. The ultimate trigger here is what it usually is --- trying to find the TClass; for something for which no dictionary was generated, leading to autoparsing.; I can get",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:8375,Deployability,patch,patche,8375,"rtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patche; s/x86_64-centos7-gcc8-opt/lib/libCore.so; #35 0x00007ffff645805b in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e in TClingMethodInfo::TClingMethodInfo(TClingMethodInfo const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #38 0x00007ffff560f4b0 in ?? (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #39 0x00007fffffff3208 in ?? (); #40 0x00007fffffff3180 in ?? (); #41 0x000000010559b1b0 in ?? (); #42 0x0000000000000000 in ?? (); ```. The ultimate trigger here is what it usually is --- trying to find the TClass; for something for which no dictionary was generated, leading to autoparsing.; I can get rid of the crash in the atlas build by generating dictionaries; for these classes (here, various specialization of; `CondMultChanCollection<LArConditionsSubset<T> >`).; However, i also looked at bit at the root cause of t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:8652,Deployability,patch,patches,8652,"IsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patche; s/x86_64-centos7-gcc8-opt/lib/libCore.so; #35 0x00007ffff645805b in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e in TClingMethodInfo::TClingMethodInfo(TClingMethodInfo const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #38 0x00007ffff560f4b0 in ?? (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #39 0x00007fffffff3208 in ?? (); #40 0x00007fffffff3180 in ?? (); #41 0x000000010559b1b0 in ?? (); #42 0x0000000000000000 in ?? (); ```. The ultimate trigger here is what it usually is --- trying to find the TClass; for something for which no dictionary was generated, leading to autoparsing.; I can get rid of the crash in the atlas build by generating dictionaries; for these classes (here, various specialization of; `CondMultChanCollection<LArConditionsSubset<T> >`).; However, i also looked at bit at the root cause of the crash. The summary is that it seems to involve a Transaction object being released; multiple times back to the TransactionPool. And the fact that TransactionPool; is used only in opt builds is why we don't see this crash if libCling; is compiled with debugging. The crash in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:8805,Deployability,patch,patches,8805,"/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patche; s/x86_64-centos7-gcc8-opt/lib/libCore.so; #35 0x00007ffff645805b in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e in TClingMethodInfo::TClingMethodInfo(TClingMethodInfo const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #38 0x00007ffff560f4b0 in ?? (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #39 0x00007fffffff3208 in ?? (); #40 0x00007fffffff3180 in ?? (); #41 0x000000010559b1b0 in ?? (); #42 0x0000000000000000 in ?? (); ```. The ultimate trigger here is what it usually is --- trying to find the TClass; for something for which no dictionary was generated, leading to autoparsing.; I can get rid of the crash in the atlas build by generating dictionaries; for these classes (here, various specialization of; `CondMultChanCollection<LArConditionsSubset<T> >`).; However, i also looked at bit at the root cause of the crash. The summary is that it seems to involve a Transaction object being released; multiple times back to the TransactionPool. And the fact that TransactionPool; is used only in opt builds is why we don't see this crash if libCling; is compiled with debugging. The crash in RegisterModule happens in the last line here:. ```; for (auto& fwdDeclArgToSkipPair : fwdDeclsArgToSkip){; const std::string& fwdDecl = fwdDeclArgToSki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:9455,Deployability,release,released,9455," in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e in TClingMethodInfo::TClingMethodInfo(TClingMethodInfo const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #38 0x00007ffff560f4b0 in ?? (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #39 0x00007fffffff3208 in ?? (); #40 0x00007fffffff3180 in ?? (); #41 0x000000010559b1b0 in ?? (); #42 0x0000000000000000 in ?? (); ```. The ultimate trigger here is what it usually is --- trying to find the TClass; for something for which no dictionary was generated, leading to autoparsing.; I can get rid of the crash in the atlas build by generating dictionaries; for these classes (here, various specialization of; `CondMultChanCollection<LArConditionsSubset<T> >`).; However, i also looked at bit at the root cause of the crash. The summary is that it seems to involve a Transaction object being released; multiple times back to the TransactionPool. And the fact that TransactionPool; is used only in opt builds is why we don't see this crash if libCling; is compiled with debugging. The crash in RegisterModule happens in the last line here:. ```; for (auto& fwdDeclArgToSkipPair : fwdDeclsArgToSkip){; const std::string& fwdDecl = fwdDeclArgToSkipPair.first;; const int nArgsToSkip = fwdDeclArgToSkipPair.second;; auto compRes = fInterpreter->declare(fwdDecl.c_str(), &T);; assert(cling::Interpreter::kSuccess == compRes &&; ""A fwd declaration could not be compiled"");; if (compRes!=cling::Interpreter::kSuccess){; Warning(""TCling::RegisterModule"",; ""Problems in declaring string '%s' were encountered."",; fwdDecl.c_str()) ;; continue;; }. // Drill through namespaces recursively until the template is found; if(ClassTemplateDecl* TD = FindTemplateInNamespace(T->getFirstDecl().getSingleDecl())){; ```. because the Transaction T we get back is empty (size()==0),; so T->getFirstDecl() is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:11787,Deployability,patch,patches,11787,"e Transaction object still in use.; When the constructor is run, the entry in that Transaction object is erased,; ultimately leading to getting an empty transaction above. Now, the TransactionPool gets messed up on an earlier GetClass call,; at this code in LookupHelper.cxx:. ```; // NOTE: We cannot instantiate the scope: not a valid decl.; // Need to unload it if this decl is a definition.; // But do not unload pre-existing fwd decls. Note that this might have failed; // because several other Decls failed to instantiate, leaving several Decls; // in invalid state. We should be unloading all of them, i.e. inload the; // current (possibly nested) transaction.; auto *T = const_cast<Transaction*>(m_Interpreter->getCurrentTransaction());; m_Interpreter->unload(*T);; *setResultType = nullptr;; return 0;; ```. The call stack here is. ```; #0 0x00007fffef9dde70 in cling::Interpreter::unload(cling::Transaction&)@plt; (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007fffefbf28ce in cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #2 0x00007fffefb854d9 in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #3 0x00007fffefb06c54 in TCling::GetInterpreterTypeName(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool); (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #4 0x00007ffff560f184 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:12051,Deployability,patch,patches,12051,"Helper.cxx:. ```; // NOTE: We cannot instantiate the scope: not a valid decl.; // Need to unload it if this decl is a definition.; // But do not unload pre-existing fwd decls. Note that this might have failed; // because several other Decls failed to instantiate, leaving several Decls; // in invalid state. We should be unloading all of them, i.e. inload the; // current (possibly nested) transaction.; auto *T = const_cast<Transaction*>(m_Interpreter->getCurrentTransaction());; m_Interpreter->unload(*T);; *setResultType = nullptr;; return 0;; ```. The call stack here is. ```; #0 0x00007fffef9dde70 in cling::Interpreter::unload(cling::Transaction&)@plt; (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007fffefbf28ce in cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #2 0x00007fffefb854d9 in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #3 0x00007fffefb06c54 in TCling::GetInterpreterTypeName(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool); (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #4 0x00007ffff560f184 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:12273,Deployability,patch,patches,12273,"everal other Decls failed to instantiate, leaving several Decls; // in invalid state. We should be unloading all of them, i.e. inload the; // current (possibly nested) transaction.; auto *T = const_cast<Transaction*>(m_Interpreter->getCurrentTransaction());; m_Interpreter->unload(*T);; *setResultType = nullptr;; return 0;; ```. The call stack here is. ```; #0 0x00007fffef9dde70 in cling::Interpreter::unload(cling::Transaction&)@plt; (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007fffefbf28ce in cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #2 0x00007fffefb854d9 in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #3 0x00007fffefb06c54 in TCling::GetInterpreterTypeName(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool); (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #4 0x00007ffff560f184 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:12555,Deployability,patch,patches,12555,"T);; *setResultType = nullptr;; return 0;; ```. The call stack here is. ```; #0 0x00007fffef9dde70 in cling::Interpreter::unload(cling::Transaction&)@plt; (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007fffefbf28ce in cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #2 0x00007fffefb854d9 in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #3 0x00007fffefb06c54 in TCling::GetInterpreterTypeName(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool); (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #4 0x00007ffff560f184 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #7 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #8 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:12776,Deployability,patch,patches,12776,"v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #1 0x00007fffefbf28ce in cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #2 0x00007fffefb854d9 in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #3 0x00007fffefb06c54 in TCling::GetInterpreterTypeName(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool); (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #4 0x00007ffff560f184 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #7 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #8 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:12957,Deployability,patch,patches,12957,"t**, bool) const (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #2 0x00007fffefb854d9 in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #3 0x00007fffefb06c54 in TCling::GetInterpreterTypeName(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool); (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #4 0x00007ffff560f184 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #7 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #8 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #9 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:13236,Deployability,patch,patches,13236,"g/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #3 0x00007fffefb06c54 in TCling::GetInterpreterTypeName(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool); (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #4 0x00007ffff560f184 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #7 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #8 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #9 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #10 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #11 0x00007ffff563",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:13503,Deployability,patch,patches,13503,"lies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #4 0x00007ffff560f184 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #7 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #8 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #9 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #10 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #11 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #12 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:13767,Deployability,patch,patches,13767,"-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #7 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #8 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #9 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #10 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #11 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #12 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #13 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:13951,Deployability,patch,patches,13951,"-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #6 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #7 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #8 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #9 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #10 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #11 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #12 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #13 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:14172,Deployability,patch,patches,14172,"fs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #7 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #8 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #9 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #10 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #11 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #12 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #13 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #14 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:14354,Deployability,patch,patches,14354,"fo const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #8 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #9 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #10 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #11 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #12 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #13 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #14 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #15 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:14634,Deployability,patch,patches,14634," TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #9 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #10 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #11 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #12 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #13 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #14 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #15 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff560ee9c in TClass::GetClass(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:14902,Deployability,patch,patches,14902,"s.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #10 0x00007ffff560ee22 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #11 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #12 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #13 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #14 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #15 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; ...; ```. The unload() call here may free the Transaction T; (via IncrementalParser::dereg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:15167,Deployability,patch,patches,15167,"00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #11 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #12 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #13 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #14 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #15 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; ...; ```. The unload() call here may free the Transaction T; (via IncrementalParser::deregisterTransaction) and return it to the pool.; But the code in findScope is protected by . ```; // The user wants to see the template instantiation, existing or not.; // Here we might not have an active transaction to handle; // the caused instantiation decl.; // Al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:15352,Deployability,patch,patches,15352,"patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #12 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #13 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #14 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #15 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; ...; ```. The unload() call here may free the Transaction T; (via IncrementalParser::deregisterTransaction) and return it to the pool.; But the code in findScope is protected by . ```; // The user wants to see the template instantiation, existing or not.; // Here we might not have an active transaction to handle; // the caused instantiation decl.; // Also quickFindDecl could trigger deserialization of decls.; Interpreter::PushTransactionRAII pushedT(m_Interpreter);; ```. The dtor of this runs when we hit the return above --- and this ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:15545,Deployability,patch,patches,15545,"o_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #13 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #14 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #15 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; ...; ```. The unload() call here may free the Transaction T; (via IncrementalParser::deregisterTransaction) and return it to the pool.; But the code in findScope is protected by . ```; // The user wants to see the template instantiation, existing or not.; // Here we might not have an active transaction to handle; // the caused instantiation decl.; // Also quickFindDecl could trigger deserialization of decls.; Interpreter::PushTransactionRAII pushedT(m_Interpreter);; ```. The dtor of this runs when we hit the return above --- and this will; end up releasing the _same_ Transaction object to the pool. This version of the code in findScope was introduced by this change:. ```; commit 036133908aebab2c2e17e97c36923eed6ab87c5b; Aut",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:15766,Deployability,patch,patches,15766,"irtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #14 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #15 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; ...; ```. The unload() call here may free the Transaction T; (via IncrementalParser::deregisterTransaction) and return it to the pool.; But the code in findScope is protected by . ```; // The user wants to see the template instantiation, existing or not.; // Here we might not have an active transaction to handle; // the caused instantiation decl.; // Also quickFindDecl could trigger deserialization of decls.; Interpreter::PushTransactionRAII pushedT(m_Interpreter);; ```. The dtor of this runs when we hit the return above --- and this will; end up releasing the _same_ Transaction object to the pool. This version of the code in findScope was introduced by this change:. ```; commit 036133908aebab2c2e17e97c36923eed6ab87c5b; Author: Axel Naumann <Axel.Naumann@cern.ch>; Date: Thu Dec 17 18:41:51 2020 +0100. [cling] In failed lookup, unload only decls produced, not existing fwd decl:; ; Before, pre-existing fwd decls of specializations got unloade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:3434,Performance,load,loadLibrary,3434,"ternal () from /lib64/ld-linux-x86-64.so.2; #6 0x00007ffff7def59e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #7 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #8 0x00007ffff7deeb8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #9 0x00007ffff720afab in dlopen_doit () from /lib64/libdl.so.2; #10 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #11 0x00007ffff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepA",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:3704,Performance,Load,Load,3704,"rom /lib64/ld-linux-x86-64.so.2; #9 0x00007ffff720afab in dlopen_doit () from /lib64/libdl.so.2; #10 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #11 0x00007ffff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:3887,Performance,Load,Load,3887,"ff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:4080,Performance,Load,LoadClass,4080,":basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #20 0x00007fffefb1b377 in TCling::AutoLoad(char const*, bool) (); from /cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:8043,Performance,Load,LoadClassDefault,8043,"nst*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patche; s/x86_64-centos7-gcc8-opt/lib/libCore.so; #35 0x00007ffff645805b in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e in TClingMethodInfo::TClingMethodInfo(TClingMethodInfo const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #38 0x00007ffff560f4b0 in ?? (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #39 0x00007fffffff3208 in ?? (); #40 0x00007fffffff3180 in ?? (); #41 0x000000010559b1b0 in ?? (); #42 0x0000000000000000 in ?? (); ```. The ultimate trigger here is what it usually is --- trying to find ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:15434,Performance,Load,LoadClassDefault,15434,"nst*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #13 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #14 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #15 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; ...; ```. The unload() call here may free the Transaction T; (via IncrementalParser::deregisterTransaction) and return it to the pool.; But the code in findScope is protected by . ```; // The user wants to see the template instantiation, existing or not.; // Here we might not have an active transaction to handle; // the caused instantiation decl.; // Also quickFindDecl could trigger deserialization of decls.; Interpreter::PushTransactionRAII pushedT(m_Interpreter);; ```. The dtor of this runs when we hit the return above --- and this will; end up releasing the _same_ Transaction object to the pool. This version of the code in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:4605,Security,hash,hash,4605,"07fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #20 0x00007fffefb1b377 in TCling::AutoLoad(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #21 0x00007ffff560ee86 in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #22 0x00007ffff563608a in TProtoClass::FillTClass(TClass*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #23 0x00007ffff56188e5 in TClass::Init(char const*, short, std::type_i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7657:9935,Testability,assert,assert,9935," trying to find the TClass; for something for which no dictionary was generated, leading to autoparsing.; I can get rid of the crash in the atlas build by generating dictionaries; for these classes (here, various specialization of; `CondMultChanCollection<LArConditionsSubset<T> >`).; However, i also looked at bit at the root cause of the crash. The summary is that it seems to involve a Transaction object being released; multiple times back to the TransactionPool. And the fact that TransactionPool; is used only in opt builds is why we don't see this crash if libCling; is compiled with debugging. The crash in RegisterModule happens in the last line here:. ```; for (auto& fwdDeclArgToSkipPair : fwdDeclsArgToSkip){; const std::string& fwdDecl = fwdDeclArgToSkipPair.first;; const int nArgsToSkip = fwdDeclArgToSkipPair.second;; auto compRes = fInterpreter->declare(fwdDecl.c_str(), &T);; assert(cling::Interpreter::kSuccess == compRes &&; ""A fwd declaration could not be compiled"");; if (compRes!=cling::Interpreter::kSuccess){; Warning(""TCling::RegisterModule"",; ""Problems in declaring string '%s' were encountered."",; fwdDecl.c_str()) ;; continue;; }. // Drill through namespaces recursively until the template is found; if(ClassTemplateDecl* TD = FindTemplateInNamespace(T->getFirstDecl().getSingleDecl())){; ```. because the Transaction T we get back is empty (size()==0),; so T->getFirstDecl() is undefined. The reason this happens is because we have the same Transaction object; entered twice in the TransactionPool. Interpreter::declare gets the Transaction; object from the pool and fills it in. It has a valid entry at this time.; But it then creates a nested transation. It gets a new pointer from the; pool, which points at the same Transaction object still in use.; When the constructor is run, the entry in that Transaction object is erased,; ultimately leading to getting an empty transaction above. Now, the TransactionPool gets messed up on an earlier GetClass call,; at this cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7657
https://github.com/root-project/root/issues/7659:2230,Performance,optimiz,optimizeConst,2230,"rain(ws->argSet(""norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10,norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10"")),GlobalObservables(ws->argSet(""nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10,nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10"")));. std::cout << ""starting point : "" << nll->getVal() << std::endl;; RooArgSet params(*nll->getParameters((RooArgSet*)0));; params.Print(""v"");; ; gErrorIgnoreLevel = 0;; ROOT::Minuit2::MnPrint::ClearFilter();; ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(2);; ; RooMinimizer mini(*nll);; mini.setMaxFunctionCalls(10000);; mini.setMaxIterations(175000);; mini.setPrintLevel(2);; mini.optimizeConst(1);; mini.setMinimizerType(""Minuit2"");; mini.setEvalErrorWall(1);; mini.setOffsetting(1);; mini.setPrintEvalErrors(5);; mini.setVerbose(0);; mini.setProfile(1);; mini.setStrategy(2);; mini.setEps(0.001);; ; std::cout << ""starting minimization"" << std::endl;; ; mini.minimize(""Minuit2"",""Migrad"");. // the call to nll->getVal() here seems to break it; std::cout << ""nll val at minimum is "" << nll->getVal() << std::endl;; ; mini.hesse();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7659
https://github.com/root-project/root/issues/7659:398,Testability,test,test,398,"[workspace.root.zip](https://github.com/root-project/root/files/6196054/workspace.root.zip). ### Describe the bug. RooMinimizer::hesse() fails to find the correct hesse matrix if getVal has been used on the nll after minimize(). ### Expected behavior. The hesse matrix should be independent of the number of calls to getVal(). ### To Reproduce. Run this script on the attached workspace. ```; void test(){; using namespace RooFit;; ; TFile* infile = TFile::Open(""workspace.root"",""READ"");; ; RooWorkspace * ws = (RooWorkspace*)(infile->Get(""Test""));. RooAbsData* data = ws->data(""asimovData"");; RooAbsPdf* pdf = ws->pdf(""simPdf"");. RooAbsReal* nll = pdf->createNLL(*data,NumCPU(1,3),Constrain(ws->argSet(""norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10,norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10"")),GlobalObservables(ws->argSet(""nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10,nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10"")));. std::cout << ""starting point : "" << nll->getVal() << std::endl;; RooArgSet params(*nll->getParameters((RooArgSet*)0));; params.Print(""v"");; ; gErrorIgnoreLe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7659
https://github.com/root-project/root/issues/7659:540,Testability,Test,Test,540,"[workspace.root.zip](https://github.com/root-project/root/files/6196054/workspace.root.zip). ### Describe the bug. RooMinimizer::hesse() fails to find the correct hesse matrix if getVal has been used on the nll after minimize(). ### Expected behavior. The hesse matrix should be independent of the number of calls to getVal(). ### To Reproduce. Run this script on the attached workspace. ```; void test(){; using namespace RooFit;; ; TFile* infile = TFile::Open(""workspace.root"",""READ"");; ; RooWorkspace * ws = (RooWorkspace*)(infile->Get(""Test""));. RooAbsData* data = ws->data(""asimovData"");; RooAbsPdf* pdf = ws->pdf(""simPdf"");. RooAbsReal* nll = pdf->createNLL(*data,NumCPU(1,3),Constrain(ws->argSet(""norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10,norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10"")),GlobalObservables(ws->argSet(""nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10,nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10"")));. std::cout << ""starting point : "" << nll->getVal() << std::endl;; RooArgSet params(*nll->getParameters((RooArgSet*)0));; params.Print(""v"");; ; gErrorIgnoreLe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7659
https://github.com/root-project/root/issues/7659:2035,Usability,Clear,ClearFilter,2035,"rain(ws->argSet(""norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10,norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10"")),GlobalObservables(ws->argSet(""nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10,nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10"")));. std::cout << ""starting point : "" << nll->getVal() << std::endl;; RooArgSet params(*nll->getParameters((RooArgSet*)0));; params.Print(""v"");; ; gErrorIgnoreLevel = 0;; ROOT::Minuit2::MnPrint::ClearFilter();; ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(2);; ; RooMinimizer mini(*nll);; mini.setMaxFunctionCalls(10000);; mini.setMaxIterations(175000);; mini.setPrintLevel(2);; mini.optimizeConst(1);; mini.setMinimizerType(""Minuit2"");; mini.setEvalErrorWall(1);; mini.setOffsetting(1);; mini.setPrintEvalErrors(5);; mini.setVerbose(0);; mini.setProfile(1);; mini.setStrategy(2);; mini.setEps(0.001);; ; std::cout << ""starting minimization"" << std::endl;; ; mini.minimize(""Minuit2"",""Migrad"");. // the call to nll->getVal() here seems to break it; std::cout << ""nll val at minimum is "" << nll->getVal() << std::endl;; ; mini.hesse();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7659
https://github.com/root-project/root/issues/7662:464,Modifiability,config,config,464,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7662
https://github.com/root-project/root/issues/7662:844,Modifiability,config,config,844,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7662
https://github.com/root-project/root/issues/7662:896,Modifiability,config,config,896,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7662
https://github.com/root-project/root/issues/7662:1045,Modifiability,config,config,1045,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7662
https://github.com/root-project/root/issues/7662:1130,Modifiability,config,config,1130,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7662
https://github.com/root-project/root/issues/7662:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7662
https://github.com/root-project/root/issues/7662:482,Usability,simpl,simply,482,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7662
https://github.com/root-project/root/issues/7662:971,Usability,clear,clear,971,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7662
https://github.com/root-project/root/pull/7663:1205,Availability,avail,available,1205,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7663:603,Deployability,configurat,configuration,603,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7663:796,Deployability,configurat,configuration,796,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7663:1522,Integrability,message,message,1522,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7663:128,Modifiability,config,config,128,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7663:194,Modifiability,config,config,194,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7663:603,Modifiability,config,configuration,603,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7663:764,Modifiability,config,config,764,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7663:796,Modifiability,config,configuration,796,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7663:1554,Modifiability,config,config,1554,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7663:1626,Modifiability,config,config,1626,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7663:887,Testability,Test,Test,887,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7663
https://github.com/root-project/root/pull/7665:85,Usability,guid,guide,85,- Proper Doxygen formatting. A lot of documentation was not visible on the reference guide because of wrong doxygen formatting. Some comment appeared on the wrong date members.; - Fix typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7665
https://github.com/root-project/root/pull/7667:36,Integrability,INTERFACE,INTERFACE,36,Using target_compile_options to set INTERFACE items on IMPORTED targets; is only supported in cmake 3.11 and up (see similar PR #5396). Reported in issue #7654.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7667
https://github.com/root-project/root/issues/7669:1571,Availability,avail,available,1571,"e description of what the wrong behavior is.; -->. Some classes are imported in the Python session namespace when wildcard import is used, while others aren't:. ```; vpadulan@fedorathinkpad-T550 [~]: python; Python 3.8.7 (default, Jan 20 2021, 00:00:00) ; [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import *; >>> RDataFrame; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDataFrame' is not defined; >>> TPyDispatcher; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'TPyDispatcher' is not defined; >>> TGHorizontalFrame; <class cppyy.gbl.TGHorizontalFrame at 0x55f59c990900>; >>> RDF; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDF' is not defined; >>> TTree; <class cppyy.gbl.TTree at 0x55f59cac9650>; >>> TTreeReader; <class cppyy.gbl.TTreeReader at 0x55f59ce32910>; >>> ; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. We should be able to tell more consistenty which names are available after wildcard import, it is handled [here](https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L153) . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. `from ROOT import *` in a python session. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@34fc1dc; Fedora 32; built from source. ### Additional context; <!--; Add any other context about the problem here.; -->; This issue stems from #7436",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7669
https://github.com/root-project/root/issues/7669:2207,Availability,down,download,2207,"e description of what the wrong behavior is.; -->. Some classes are imported in the Python session namespace when wildcard import is used, while others aren't:. ```; vpadulan@fedorathinkpad-T550 [~]: python; Python 3.8.7 (default, Jan 20 2021, 00:00:00) ; [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import *; >>> RDataFrame; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDataFrame' is not defined; >>> TPyDispatcher; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'TPyDispatcher' is not defined; >>> TGHorizontalFrame; <class cppyy.gbl.TGHorizontalFrame at 0x55f59c990900>; >>> RDF; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDF' is not defined; >>> TTree; <class cppyy.gbl.TTree at 0x55f59cac9650>; >>> TTreeReader; <class cppyy.gbl.TTreeReader at 0x55f59ce32910>; >>> ; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. We should be able to tell more consistenty which names are available after wildcard import, it is handled [here](https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L153) . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. `from ROOT import *` in a python session. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@34fc1dc; Fedora 32; built from source. ### Additional context; <!--; Add any other context about the problem here.; -->; This issue stems from #7436",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7669
https://github.com/root-project/root/issues/7669:2189,Deployability,install,install,2189,"e description of what the wrong behavior is.; -->. Some classes are imported in the Python session namespace when wildcard import is used, while others aren't:. ```; vpadulan@fedorathinkpad-T550 [~]: python; Python 3.8.7 (default, Jan 20 2021, 00:00:00) ; [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import *; >>> RDataFrame; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDataFrame' is not defined; >>> TPyDispatcher; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'TPyDispatcher' is not defined; >>> TGHorizontalFrame; <class cppyy.gbl.TGHorizontalFrame at 0x55f59c990900>; >>> RDF; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDF' is not defined; >>> TTree; <class cppyy.gbl.TTree at 0x55f59cac9650>; >>> TTreeReader; <class cppyy.gbl.TTreeReader at 0x55f59ce32910>; >>> ; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. We should be able to tell more consistenty which names are available after wildcard import, it is handled [here](https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L153) . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. `from ROOT import *` in a python session. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@34fc1dc; Fedora 32; built from source. ### Additional context; <!--; Add any other context about the problem here.; -->; This issue stems from #7436",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7669
https://github.com/root-project/root/issues/7669:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Some classes are imported in the Python session namespace when wildcard import is used, while others aren't:. ```; vpadulan@fedorathinkpad-T550 [~]: python; Python 3.8.7 (default, Jan 20 2021, 00:00:00) ; [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import *; >>> RDataFrame; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDataFrame' is not defined; >>> TPyDispatcher; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'TPyDispatcher' is not defined; >>> TGHorizontalFrame; <class cppyy.gbl.TGHorizontalFrame at 0x55f59c990900>; >>> RDF; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDF' is not defined; >>> TTree; <class cppyy.gbl.TTree at 0x55f59cac9650>; >>> TTreeReader; <class cppyy.gbl.TTreeReader at 0x55f59ce32910>; >>> ; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. We should be able to tell more consistenty which names are available after wildcard import, it is handled [here](https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L153) . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7669
https://github.com/root-project/root/issues/7669:1444,Usability,clear,clear,1444,"e description of what the wrong behavior is.; -->. Some classes are imported in the Python session namespace when wildcard import is used, while others aren't:. ```; vpadulan@fedorathinkpad-T550 [~]: python; Python 3.8.7 (default, Jan 20 2021, 00:00:00) ; [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import *; >>> RDataFrame; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDataFrame' is not defined; >>> TPyDispatcher; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'TPyDispatcher' is not defined; >>> TGHorizontalFrame; <class cppyy.gbl.TGHorizontalFrame at 0x55f59c990900>; >>> RDF; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDF' is not defined; >>> TTree; <class cppyy.gbl.TTree at 0x55f59cac9650>; >>> TTreeReader; <class cppyy.gbl.TTreeReader at 0x55f59ce32910>; >>> ; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. We should be able to tell more consistenty which names are available after wildcard import, it is handled [here](https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L153) . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. `from ROOT import *` in a python session. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@34fc1dc; Fedora 32; built from source. ### Additional context; <!--; Add any other context about the problem here.; -->; This issue stems from #7436",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7669
https://github.com/root-project/root/pull/7670:137,Usability,clear,cleared,137,"When filling the result after the second fit , the covariance matrix, global correlations, parameter bounds and parameter Names were not cleared, and the new values were appended to the previous one.; This is now fixed by clearing the vectors. This fixes the problem reported in https://root-forum.cern.ch/t/problem-retrieving-minuit2-correlation-matrix/44120",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7670
https://github.com/root-project/root/pull/7670:222,Usability,clear,clearing,222,"When filling the result after the second fit , the covariance matrix, global correlations, parameter bounds and parameter Names were not cleared, and the new values were appended to the previous one.; This is now fixed by clearing the vectors. This fixes the problem reported in https://root-forum.cern.ch/t/problem-retrieving-minuit2-correlation-matrix/44120",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7670
https://github.com/root-project/root/pull/7671:75,Performance,perform,performed,75,"This avoids that the first time the NLL is computed, a real calculation is performed and not a cached value is used. The cached value could be computed without subtracting the offset and this could be problematic in case the fcn is offsetting. This fixes #7659. Note that the real changes are only at around line 200, the rest are only extra whitespaces removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7671
https://github.com/root-project/root/pull/7671:95,Performance,cache,cached,95,"This avoids that the first time the NLL is computed, a real calculation is performed and not a cached value is used. The cached value could be computed without subtracting the offset and this could be problematic in case the fcn is offsetting. This fixes #7659. Note that the real changes are only at around line 200, the rest are only extra whitespaces removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7671
https://github.com/root-project/root/pull/7671:121,Performance,cache,cached,121,"This avoids that the first time the NLL is computed, a real calculation is performed and not a cached value is used. The cached value could be computed without subtracting the offset and this could be problematic in case the fcn is offsetting. This fixes #7659. Note that the real changes are only at around line 200, the rest are only extra whitespaces removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7671
https://github.com/root-project/root/pull/7671:5,Safety,avoid,avoids,5,"This avoids that the first time the NLL is computed, a real calculation is performed and not a cached value is used. The cached value could be computed without subtracting the offset and this could be problematic in case the fcn is offsetting. This fixes #7659. Note that the real changes are only at around line 200, the rest are only extra whitespaces removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7671
https://github.com/root-project/root/pull/7680:102,Deployability,release,release,102,- Some code formatting fixes; - Add myself to list of contributors for 624; - Add descriptions in the release notes related to the changes in:. https://github.com/root-project/root/pull/6857; https://github.com/root-project/root/pull/7105; https://github.com/root-project/root/pull/7260,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7680
https://github.com/root-project/root/pull/7681:142,Deployability,toggle,toggle,142,"1. Support direct draw of TCanvas and RCanvas, do not try to draw them inside other canvases; 2. Show `Menu bar` for both canvas classes, let toggle it via context menu; 3. Hide some buttons (like Quit ROOT) in case of embed canvas; 4. Correctly handle ""Close canvas"" for embed canvas; 5. Implement ""Save as Canvas.root"" for RCanvas, disable PDF, PS and C output for RCanvas; 6. Display real canvas name in RBrowser tabs; 7. Small ui5 layout improvements",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7681
https://github.com/root-project/root/issues/7684:84,Performance,perform,performance,84,"After importing `ROOT` in a Jupyter Notebook in which Jupyter Widgets are used, the performance of figure interactions like panning and zooming drastically falls off. After identifying ROOT as the culprit, I found that the poor performance is caused by sleeping invoked during [these hooks](https://github.com/root-project/root/blob/aedbc69c9c41a9d3eb6a5e24eb7382547141d85a/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L400-L401) which are run for each kernel execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7684
https://github.com/root-project/root/issues/7684:228,Performance,perform,performance,228,"After importing `ROOT` in a Jupyter Notebook in which Jupyter Widgets are used, the performance of figure interactions like panning and zooming drastically falls off. After identifying ROOT as the culprit, I found that the poor performance is caused by sleeping invoked during [these hooks](https://github.com/root-project/root/blob/aedbc69c9c41a9d3eb6a5e24eb7382547141d85a/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L400-L401) which are run for each kernel execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7684
https://github.com/root-project/root/issues/7686:827,Safety,avoid,avoid,827,Following reproducer fails with a segfault:. ```python; import cppyy. cppyy.cppdef('''; struct Base {; float data;; float& operator[](int idx) { return data; }; };. struct Derived: public Base {; float data;. // Note that you have to derive from Base to make it break!; float& operator[](int idx) { return data; }. // Note that you must put the template here!; template <typename T>; float& operator[](int idx) { return data; }; };; '''). cppyy.gbl.Derived(); ```. There's a corresponding issue submitted to upstream cppyy: https://bitbucket.org/wlav/cppyy/issues/334/segfault-when-creating-proxy-to-derived. This issues were found in the wake of RVec 2.0 (#7502) and may just scratch the surface of an issue in cppyy with picking up methods from derived classes. See the workarounds for `operator[]` and `size` in RVec 2.0 to avoid this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7686
https://github.com/root-project/root/pull/7687:13,Testability,test,test,13,"Improves the test coverage, which we need for #7502",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7687
https://github.com/root-project/root/pull/7689:26,Deployability,release,release,26,This is a backport of the release notes updates contained in #7680 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7689
https://github.com/root-project/root/pull/7689:40,Deployability,update,updates,40,This is a backport of the release notes updates contained in #7680 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7689
https://github.com/root-project/root/pull/7691:5,Deployability,update,update,5,Also update minified file; Discovered with DeepCode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7691
https://github.com/root-project/root/issues/7692:142,Safety,avoid,avoid,142,"This method called from `CPyCppyy::CPPMethod` destructor, but also from assign operator.; Means it is strongly advisable to clear pointers to avoid potential use of destroyed objects.; Also `fConverters` must be cleaned. Indirectly discovered via DeepCode analyzers:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7692
https://github.com/root-project/root/issues/7692:124,Usability,clear,clear,124,"This method called from `CPyCppyy::CPPMethod` destructor, but also from assign operator.; Means it is strongly advisable to clear pointers to avoid potential use of destroyed objects.; Also `fConverters` must be cleaned. Indirectly discovered via DeepCode analyzers:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7692
https://github.com/root-project/root/issues/7702:289,Availability,Down,Downside,289,"Result from the discussion in today's PPP:. Option 1:; - The `Range` node will always stay single threaded and nothing changes here; - We add a new overload for the ctor which takes the range, similar to the `TEntryList` version (but more user friendly); - Upside: Simple to understand; - Downside: Yet another ctor overload, which needs to be implemented for all existing interfaces, e.g. the factory functions. Option 2:; - We let `Range` run with MT enabled if (and just if) the `Range` node is the only one in the graph and the first one after the root node; - Upside: Not another ctor overload; - Downside: Confusing for the user (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7702
https://github.com/root-project/root/issues/7702:602,Availability,Down,Downside,602,"Result from the discussion in today's PPP:. Option 1:; - The `Range` node will always stay single threaded and nothing changes here; - We add a new overload for the ctor which takes the range, similar to the `TEntryList` version (but more user friendly); - Upside: Simple to understand; - Downside: Yet another ctor overload, which needs to be implemented for all existing interfaces, e.g. the factory functions. Option 2:; - We let `Range` run with MT enabled if (and just if) the `Range` node is the only one in the graph and the first one after the root node; - Upside: Not another ctor overload; - Downside: Confusing for the user (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7702
https://github.com/root-project/root/issues/7702:373,Integrability,interface,interfaces,373,"Result from the discussion in today's PPP:. Option 1:; - The `Range` node will always stay single threaded and nothing changes here; - We add a new overload for the ctor which takes the range, similar to the `TEntryList` version (but more user friendly); - Upside: Simple to understand; - Downside: Yet another ctor overload, which needs to be implemented for all existing interfaces, e.g. the factory functions. Option 2:; - We let `Range` run with MT enabled if (and just if) the `Range` node is the only one in the graph and the first one after the root node; - Upside: Not another ctor overload; - Downside: Confusing for the user (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7702
https://github.com/root-project/root/issues/7702:265,Usability,Simpl,Simple,265,"Result from the discussion in today's PPP:. Option 1:; - The `Range` node will always stay single threaded and nothing changes here; - We add a new overload for the ctor which takes the range, similar to the `TEntryList` version (but more user friendly); - Upside: Simple to understand; - Downside: Yet another ctor overload, which needs to be implemented for all existing interfaces, e.g. the factory functions. Option 2:; - We let `Range` run with MT enabled if (and just if) the `Range` node is the only one in the graph and the first one after the root node; - Upside: Not another ctor overload; - Downside: Confusing for the user (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7702
https://github.com/root-project/root/issues/7704:172,Availability,error,error,172,"Hi,. After touch a header file in `io/io/inc` and running **only** `ninja RIO` then running `root.exe -b -l -q` I get:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:731,Availability,error,error,731,"Hi,. After touch a header file in `io/io/inc` and running **only** `ninja RIO` then running `root.exe -b -l -q` I get:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1080,Availability,error,error,1080,"g `root.exe -b -l -q` I get:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::Lex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1388,Availability,error,error,1388,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1456,Availability,error,error,1456,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1175,Integrability,depend,dependent,1175,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1394,Integrability,message,message,1394,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1746,Performance,load,load,1746,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1774,Performance,load,load,1774,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1804,Performance,load,load,1804,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1838,Performance,load,load,1838,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1885,Performance,load,load,1885,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1915,Performance,load,load,1915,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:1943,Performance,load,load,1943,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:2206,Safety,Abort,Aborted,2206,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/issues/7704:2126,Testability,Assert,Assertion,2126,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7704
https://github.com/root-project/root/pull/7705:105,Availability,error,error,105,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7705
https://github.com/root-project/root/pull/7705:417,Availability,error,error,417,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7705
https://github.com/root-project/root/pull/7705:54,Deployability,install,installed,54,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7705
https://github.com/root-project/root/pull/7705:458,Deployability,install,installation,458,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7705
https://github.com/root-project/root/pull/7705:850,Deployability,install,install,850,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7705
https://github.com/root-project/root/pull/7705:890,Deployability,install,install,890,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7705
https://github.com/root-project/root/pull/7705:423,Integrability,message,message,423,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7705
https://github.com/root-project/root/pull/7705:471,Usability,guid,guide,471,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7705
https://github.com/root-project/root/pull/7706:162,Deployability,Update,Update,162,"- Several fixes to make the documentation of data members visible in the reference guide.; - In Hoption_t, three useless struct members were removed: Keep, Char, Update. They were left over from CERNLIB fortran code !; - TPainter3dAlgorithms use the Doxygen grouping mechanism @{ and @} to show the structure in the data members which was indicated by simple C++ comments; - Few documentation update in THistPainter; - Fix typos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7706
https://github.com/root-project/root/pull/7706:393,Deployability,update,update,393,"- Several fixes to make the documentation of data members visible in the reference guide.; - In Hoption_t, three useless struct members were removed: Keep, Char, Update. They were left over from CERNLIB fortran code !; - TPainter3dAlgorithms use the Doxygen grouping mechanism @{ and @} to show the structure in the data members which was indicated by simple C++ comments; - Few documentation update in THistPainter; - Fix typos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7706
https://github.com/root-project/root/pull/7706:83,Usability,guid,guide,83,"- Several fixes to make the documentation of data members visible in the reference guide.; - In Hoption_t, three useless struct members were removed: Keep, Char, Update. They were left over from CERNLIB fortran code !; - TPainter3dAlgorithms use the Doxygen grouping mechanism @{ and @} to show the structure in the data members which was indicated by simple C++ comments; - Few documentation update in THistPainter; - Fix typos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7706
https://github.com/root-project/root/pull/7706:352,Usability,simpl,simple,352,"- Several fixes to make the documentation of data members visible in the reference guide.; - In Hoption_t, three useless struct members were removed: Keep, Char, Update. They were left over from CERNLIB fortran code !; - TPainter3dAlgorithms use the Doxygen grouping mechanism @{ and @} to show the structure in the data members which was indicated by simple C++ comments; - Few documentation update in THistPainter; - Fix typos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7706
https://github.com/root-project/root/issues/7708:1552,Availability,error,error,1552,"work:. ```cpp; #ifndef TWOINTS; #define TWOINTS; struct TwoInts {; int a, b;; };; #endif; ```. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TError.h>; #include <TInterpreter.h>; #include <TKey.h>. #include ""TwoInts.h"". int main() {; gInterpreter->GenerateDictionary(""TwoInts;ROOT::VecOps::RVec<TwoInts>"",; ""ROOT/RVec.hxx;TwoInts.h"");. TFile f(""f.root"", ""recreate"");; auto *cl = TClass::GetClass(""ROOT::VecOps::RVec<TwoInts>"");; R__ASSERT(cl != nullptr);; ROOT::RVec<TwoInts> v{{1, 2}, {3, 4}};; f.WriteObjectAny(&v, cl, ""v"");; f.Close();; TFile in_f(""f.root"");; auto *k = in_f.GetKey(""v"");; auto *obj = static_cast<ROOT::RVec<TwoInts> *>(k->ReadObjectAny(cl));; R__ASSERT(obj != nullptr);; auto &in_v = *obj;; R__ASSERT(in_v[0].a == 1 && in_v[0].b == 2 && in_v[1].a == 3 &&; in_v[1].b == 4);. return 0;; }; ```. But instead produces:. ```; g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs); ~/S/w/rootcling_rvec ./repro; /home/blue/Scratchpad/work/rootcling_rvec/AutoDict_TwoInts_2251615068_cxx_ACLiC_dict.cxx:55:61: error: expected ‘)’ before ‘::’ token; 55 | static TGenericClassInfo *GenerateInitInstanceLocal(const ::*); | ~ ^~~; | ); ```. because the autogenerated dictionary code is broken (see the invalid `(const ::*)`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master @ 9f1902c1 .; I would not even attempt this with v6.24 or earlier because I/O of RVecs is not well-supported there. . ### Additional context; <!--; Add any other context about the problem here.; -->. https://github.com/root-project/root/blob/9f1902c1d898ec615244f547c0683d0f10820da8/core/metacling/src/TCling.cxx#L742-L745. This is definitely part of the problem: RVec should be treated like an STL class. Axel also pointed out the suspicious:. https://github.com/root-project/root/blob/9f1902c1d898ec615244f547c0683d0f10820da8/core/metacling/src/TCling.cxx#L786-L796",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7708
https://github.com/root-project/root/issues/7708:1875,Availability,down,download,1875,"work:. ```cpp; #ifndef TWOINTS; #define TWOINTS; struct TwoInts {; int a, b;; };; #endif; ```. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TError.h>; #include <TInterpreter.h>; #include <TKey.h>. #include ""TwoInts.h"". int main() {; gInterpreter->GenerateDictionary(""TwoInts;ROOT::VecOps::RVec<TwoInts>"",; ""ROOT/RVec.hxx;TwoInts.h"");. TFile f(""f.root"", ""recreate"");; auto *cl = TClass::GetClass(""ROOT::VecOps::RVec<TwoInts>"");; R__ASSERT(cl != nullptr);; ROOT::RVec<TwoInts> v{{1, 2}, {3, 4}};; f.WriteObjectAny(&v, cl, ""v"");; f.Close();; TFile in_f(""f.root"");; auto *k = in_f.GetKey(""v"");; auto *obj = static_cast<ROOT::RVec<TwoInts> *>(k->ReadObjectAny(cl));; R__ASSERT(obj != nullptr);; auto &in_v = *obj;; R__ASSERT(in_v[0].a == 1 && in_v[0].b == 2 && in_v[1].a == 3 &&; in_v[1].b == 4);. return 0;; }; ```. But instead produces:. ```; g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs); ~/S/w/rootcling_rvec ./repro; /home/blue/Scratchpad/work/rootcling_rvec/AutoDict_TwoInts_2251615068_cxx_ACLiC_dict.cxx:55:61: error: expected ‘)’ before ‘::’ token; 55 | static TGenericClassInfo *GenerateInitInstanceLocal(const ::*); | ~ ^~~; | ); ```. because the autogenerated dictionary code is broken (see the invalid `(const ::*)`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master @ 9f1902c1 .; I would not even attempt this with v6.24 or earlier because I/O of RVecs is not well-supported there. . ### Additional context; <!--; Add any other context about the problem here.; -->. https://github.com/root-project/root/blob/9f1902c1d898ec615244f547c0683d0f10820da8/core/metacling/src/TCling.cxx#L742-L745. This is definitely part of the problem: RVec should be treated like an STL class. Axel also pointed out the suspicious:. https://github.com/root-project/root/blob/9f1902c1d898ec615244f547c0683d0f10820da8/core/metacling/src/TCling.cxx#L786-L796",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7708
https://github.com/root-project/root/issues/7708:1857,Deployability,install,install,1857,"work:. ```cpp; #ifndef TWOINTS; #define TWOINTS; struct TwoInts {; int a, b;; };; #endif; ```. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TError.h>; #include <TInterpreter.h>; #include <TKey.h>. #include ""TwoInts.h"". int main() {; gInterpreter->GenerateDictionary(""TwoInts;ROOT::VecOps::RVec<TwoInts>"",; ""ROOT/RVec.hxx;TwoInts.h"");. TFile f(""f.root"", ""recreate"");; auto *cl = TClass::GetClass(""ROOT::VecOps::RVec<TwoInts>"");; R__ASSERT(cl != nullptr);; ROOT::RVec<TwoInts> v{{1, 2}, {3, 4}};; f.WriteObjectAny(&v, cl, ""v"");; f.Close();; TFile in_f(""f.root"");; auto *k = in_f.GetKey(""v"");; auto *obj = static_cast<ROOT::RVec<TwoInts> *>(k->ReadObjectAny(cl));; R__ASSERT(obj != nullptr);; auto &in_v = *obj;; R__ASSERT(in_v[0].a == 1 && in_v[0].b == 2 && in_v[1].a == 3 &&; in_v[1].b == 4);. return 0;; }; ```. But instead produces:. ```; g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs); ~/S/w/rootcling_rvec ./repro; /home/blue/Scratchpad/work/rootcling_rvec/AutoDict_TwoInts_2251615068_cxx_ACLiC_dict.cxx:55:61: error: expected ‘)’ before ‘::’ token; 55 | static TGenericClassInfo *GenerateInitInstanceLocal(const ::*); | ~ ^~~; | ); ```. because the autogenerated dictionary code is broken (see the invalid `(const ::*)`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master @ 9f1902c1 .; I would not even attempt this with v6.24 or earlier because I/O of RVecs is not well-supported there. . ### Additional context; <!--; Add any other context about the problem here.; -->. https://github.com/root-project/root/blob/9f1902c1d898ec615244f547c0683d0f10820da8/core/metacling/src/TCling.cxx#L742-L745. This is definitely part of the problem: RVec should be treated like an STL class. Axel also pointed out the suspicious:. https://github.com/root-project/root/blob/9f1902c1d898ec615244f547c0683d0f10820da8/core/metacling/src/TCling.cxx#L786-L796",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7708
https://github.com/root-project/root/issues/7708:1401,Modifiability,config,config,1401,"on of what the wrong behavior is.; -->. As far as I understand, this should work:. ```cpp; #ifndef TWOINTS; #define TWOINTS; struct TwoInts {; int a, b;; };; #endif; ```. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TError.h>; #include <TInterpreter.h>; #include <TKey.h>. #include ""TwoInts.h"". int main() {; gInterpreter->GenerateDictionary(""TwoInts;ROOT::VecOps::RVec<TwoInts>"",; ""ROOT/RVec.hxx;TwoInts.h"");. TFile f(""f.root"", ""recreate"");; auto *cl = TClass::GetClass(""ROOT::VecOps::RVec<TwoInts>"");; R__ASSERT(cl != nullptr);; ROOT::RVec<TwoInts> v{{1, 2}, {3, 4}};; f.WriteObjectAny(&v, cl, ""v"");; f.Close();; TFile in_f(""f.root"");; auto *k = in_f.GetKey(""v"");; auto *obj = static_cast<ROOT::RVec<TwoInts> *>(k->ReadObjectAny(cl));; R__ASSERT(obj != nullptr);; auto &in_v = *obj;; R__ASSERT(in_v[0].a == 1 && in_v[0].b == 2 && in_v[1].a == 3 &&; in_v[1].b == 4);. return 0;; }; ```. But instead produces:. ```; g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs); ~/S/w/rootcling_rvec ./repro; /home/blue/Scratchpad/work/rootcling_rvec/AutoDict_TwoInts_2251615068_cxx_ACLiC_dict.cxx:55:61: error: expected ‘)’ before ‘::’ token; 55 | static TGenericClassInfo *GenerateInitInstanceLocal(const ::*); | ~ ^~~; | ); ```. because the autogenerated dictionary code is broken (see the invalid `(const ::*)`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master @ 9f1902c1 .; I would not even attempt this with v6.24 or earlier because I/O of RVecs is not well-supported there. . ### Additional context; <!--; Add any other context about the problem here.; -->. https://github.com/root-project/root/blob/9f1902c1d898ec615244f547c0683d0f10820da8/core/metacling/src/TCling.cxx#L742-L745. This is definitely part of the problem: RVec should be treated like an STL class. Axel also pointed out the suspicious:. https://github.com/root-project/root/blob/9f190",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7708
https://github.com/root-project/root/issues/7708:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. As far as I understand, this should work:. ```cpp; #ifndef TWOINTS; #define TWOINTS; struct TwoInts {; int a, b;; };; #endif; ```. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TError.h>; #include <TInterpreter.h>; #include <TKey.h>. #include ""TwoInts.h"". int main() {; gInterpreter->GenerateDictionary(""TwoInts;ROOT::VecOps::RVec<TwoInts>"",; ""ROOT/RVec.hxx;TwoInts.h"");. TFile f(""f.root"", ""recreate"");; auto *cl = TClass::GetClass(""ROOT::VecOps::RVec<TwoInts>"");; R__ASSERT(cl != nullptr);; ROOT::RVec<TwoInts> v{{1, 2}, {3, 4}};; f.WriteObjectAny(&v, cl, ""v"");; f.Close();; TFile in_f(""f.root"");; auto *k = in_f.GetKey(""v"");; auto *obj = static_cast<ROOT::RVec<TwoInts> *>(k->ReadObjectAny(cl));; R__ASSERT(obj != nullptr);; auto &in_v = *obj;; R__ASSERT(in_v[0].a == 1 && in_v[0].b == 2 && in_v[1].a == 3 &&; in_v[1].b == 4);. return 0;; }; ```. But instead produces:. ```; g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs); ~/S/w/rootcling_rvec ./repro; /home/blue/Scratchpad/work/rootcling_rvec/AutoDict_TwoInts_2251615068_cxx_ACLiC_dict.cxx:55:61: error: expected ‘)’ before ‘::’ token; 55 | static TGenericClassInfo *GenerateInitInstanceLocal(const ::*); | ~ ^~~; | ); ```. because the autogenerated dictionary code is broken (see the invalid `(const ::*)`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master @ 9f1902c1 .; I would not even attempt this with v6.24 or earlier because ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7708
https://github.com/root-project/root/issues/7709:216,Modifiability,variab,variable,216,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. During [PPP97](https://indico.cern.ch/event/1018696/) Josh brought up that xrootd checks the environment variable `XRD_PARALLELEVTLOOP` to decide how many event loops to spawn, and his multi-thread use-case benefited from setting it to a value higher than one. It was agreed that we should investigate whether this is something interesting for RDF/DistRDF or other multi-thread use cases in ROOT. . ### Additional context; <!--; Add any other context about the problem here.; -->. The variable is mentioned in the `xrdcp` man page, see e.g. [here](https://www.mankier.com/1/xrdcp).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7709
https://github.com/root-project/root/issues/7709:596,Modifiability,variab,variable,596,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. During [PPP97](https://indico.cern.ch/event/1018696/) Josh brought up that xrootd checks the environment variable `XRD_PARALLELEVTLOOP` to decide how many event loops to spawn, and his multi-thread use-case benefited from setting it to a value higher than one. It was agreed that we should investigate whether this is something interesting for RDF/DistRDF or other multi-thread use cases in ROOT. . ### Additional context; <!--; Add any other context about the problem here.; -->. The variable is mentioned in the `xrdcp` man page, see e.g. [here](https://www.mankier.com/1/xrdcp).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7709
https://github.com/root-project/root/issues/7709:296,Performance,multi-thread,multi-thread,296,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. During [PPP97](https://indico.cern.ch/event/1018696/) Josh brought up that xrootd checks the environment variable `XRD_PARALLELEVTLOOP` to decide how many event loops to spawn, and his multi-thread use-case benefited from setting it to a value higher than one. It was agreed that we should investigate whether this is something interesting for RDF/DistRDF or other multi-thread use cases in ROOT. . ### Additional context; <!--; Add any other context about the problem here.; -->. The variable is mentioned in the `xrdcp` man page, see e.g. [here](https://www.mankier.com/1/xrdcp).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7709
https://github.com/root-project/root/issues/7709:476,Performance,multi-thread,multi-thread,476,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. During [PPP97](https://indico.cern.ch/event/1018696/) Josh brought up that xrootd checks the environment variable `XRD_PARALLELEVTLOOP` to decide how many event loops to spawn, and his multi-thread use-case benefited from setting it to a value higher than one. It was agreed that we should investigate whether this is something interesting for RDF/DistRDF or other multi-thread use cases in ROOT. . ### Additional context; <!--; Add any other context about the problem here.; -->. The variable is mentioned in the `xrdcp` man page, see e.g. [here](https://www.mankier.com/1/xrdcp).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7709
https://github.com/root-project/root/issues/7713:1486,Availability,error,error,1486,"- [X] Checked for duplicates (checked with @pcanal ); <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; // write data out. // in the main tree, ""x"" counts 0, 1, 2; ROOT::RDataFrame(3); .DefineSlotEntry(""x"", [](unsigned, ULong64_t e) { return int(e); }); .Snapshot<int>(""main"", ""main.root"", {""x""});. // in the friend tree, ""x"" counts 0, 1, 3 (i.e. no entry with x == 2); ROOT::RDataFrame(3); .DefineSlotEntry(""x"",; [](unsigned, ULong64_t e) { return e == 2 ? 3 : int(e); }); .Snapshot<int>(""friend"", ""friend.root"", {""x""});; }. TFile fmain(""main.root"");; auto *main = fmain.Get<TTree>(""main"");; TFile ffriend(""friend.root"");; auto *fr = ffriend.Get<TTree>(""friend"");. fr->BuildIndex(""x"");; main->AddFriend(fr);. int xmain, xfriend;; main->SetBranchAddress(""x"", &xmain);; main->SetBranchAddress(""friend.x"", &xfriend);. for (int i = 0; i < 3; ++i) {; main->GetEntry(i);; std::cout << xmain << "" "" << xfriend << '\n';; }. return 0;; }; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. An error or warning should be printed if no indexed entry could be retrieved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7713
https://github.com/root-project/root/issues/7713:415,Usability,clear,clear,415,"- [X] Checked for duplicates (checked with @pcanal ); <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; // write data out. // in the main tree, ""x"" counts 0, 1, 2; ROOT::RDataFrame(3); .DefineSlotEntry(""x"", [](unsigned, ULong64_t e) { return int(e); }); .Snapshot<int>(""main"", ""main.root"", {""x""});. // in the friend tree, ""x"" counts 0, 1, 3 (i.e. no entry with x == 2); ROOT::RDataFrame(3); .DefineSlotEntry(""x"",; [](unsigned, ULong64_t e) { return e == 2 ? 3 : int(e); }); .Snapshot<int>(""friend"", ""friend.root"", {""x""});; }. TFile fmain(""main.root"");; auto *main = fmain.Get<TTree>(""main"");; TFile ffriend(""friend.root"");; auto *fr = ffriend.Get<TTree>(""friend"");. fr->BuildIndex(""x"");; main->AddFriend(fr);. int xmain, xfriend;; main->SetBranchAddress(""x"", &xmain);; main->SetBranchAddress(""friend.x"", &xfriend);. for (int i = 0; i < 3; ++i) {; main->GetEntry(i);; std::cout << xmain << "" "" << xfriend << '\n';; }. return 0;; }; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. An error or warning should be printed if no indexed entry could be retrieved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7713
https://github.com/root-project/root/issues/7713:1415,Usability,clear,clear,1415,"- [X] Checked for duplicates (checked with @pcanal ); <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; // write data out. // in the main tree, ""x"" counts 0, 1, 2; ROOT::RDataFrame(3); .DefineSlotEntry(""x"", [](unsigned, ULong64_t e) { return int(e); }); .Snapshot<int>(""main"", ""main.root"", {""x""});. // in the friend tree, ""x"" counts 0, 1, 3 (i.e. no entry with x == 2); ROOT::RDataFrame(3); .DefineSlotEntry(""x"",; [](unsigned, ULong64_t e) { return e == 2 ? 3 : int(e); }); .Snapshot<int>(""friend"", ""friend.root"", {""x""});; }. TFile fmain(""main.root"");; auto *main = fmain.Get<TTree>(""main"");; TFile ffriend(""friend.root"");; auto *fr = ffriend.Get<TTree>(""friend"");. fr->BuildIndex(""x"");; main->AddFriend(fr);. int xmain, xfriend;; main->SetBranchAddress(""x"", &xmain);; main->SetBranchAddress(""friend.x"", &xfriend);. for (int i = 0; i < 3; ++i) {; main->GetEntry(i);; std::cout << xmain << "" "" << xfriend << '\n';; }. return 0;; }; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. An error or warning should be printed if no indexed entry could be retrieved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7713
https://github.com/root-project/root/issues/7718:1284,Availability,error,error,1284,"al integration builds (https://github.com/cms-sw/cmsdist/pull/6746/files ) but looks like pyROOT fails/hangs for some special dictionaries. . While building cmssw , we use https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion to check for root dictionaries class versions. This works for most of our dictionaries e.g following two run fine ( https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_hlt.xml, https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_1.xml ); ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_hlt.xml; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_1.xml; ```; but it fails/hangs for https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_2.xml; ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_2.xml; ```; Most of the times the above command just hangs with error https://muzaffar.web.cern.ch/root624/err1.log but once I was able to get this error https://muzaffar.web.cern.ch/root624/err.log . Can you please look in to it and see if this log helps? . In case you want to try it yourself then you go to cmsdev25 and do; ```; >cd /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100; >cmsenv; >/build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/DataFormats/TauReco/src/classes_def_2.xml; ```. FYI @mrodozov @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7718
https://github.com/root-project/root/issues/7718:1368,Availability,error,error,1368,"al integration builds (https://github.com/cms-sw/cmsdist/pull/6746/files ) but looks like pyROOT fails/hangs for some special dictionaries. . While building cmssw , we use https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion to check for root dictionaries class versions. This works for most of our dictionaries e.g following two run fine ( https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_hlt.xml, https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_1.xml ); ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_hlt.xml; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_1.xml; ```; but it fails/hangs for https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_2.xml; ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_2.xml; ```; Most of the times the above command just hangs with error https://muzaffar.web.cern.ch/root624/err1.log but once I was able to get this error https://muzaffar.web.cern.ch/root624/err.log . Can you please look in to it and see if this log helps? . In case you want to try it yourself then you go to cmsdev25 and do; ```; >cd /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100; >cmsenv; >/build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/DataFormats/TauReco/src/classes_def_2.xml; ```. FYI @mrodozov @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7718
https://github.com/root-project/root/issues/7718:22,Deployability,update,update,22,"Hi,; We are trying to update root 6.24 branch (commit https://github.com/root-project/root/commit/7c0cfaca4c70c7394328547c05e00028b0079a03) in CMSSW special integration builds (https://github.com/cms-sw/cmsdist/pull/6746/files ) but looks like pyROOT fails/hangs for some special dictionaries. . While building cmssw , we use https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion to check for root dictionaries class versions. This works for most of our dictionaries e.g following two run fine ( https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_hlt.xml, https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_1.xml ); ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_hlt.xml; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_1.xml; ```; but it fails/hangs for https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_2.xml; ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_2.xml; ```; Most of the times the above command just hangs with error https://muzaffar.web.cern.ch/root624/err1.log but once I was able to get this error https://muzaffar.web.cern.ch/root624/err.log . Can you please look in to it and see if this log helps? . In case you want to try it yourself then you go to cmsdev25 and do; ```; >cd /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100; >cmsenv; >/build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7718
https://github.com/root-project/root/issues/7718:157,Deployability,integrat,integration,157,"Hi,; We are trying to update root 6.24 branch (commit https://github.com/root-project/root/commit/7c0cfaca4c70c7394328547c05e00028b0079a03) in CMSSW special integration builds (https://github.com/cms-sw/cmsdist/pull/6746/files ) but looks like pyROOT fails/hangs for some special dictionaries. . While building cmssw , we use https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion to check for root dictionaries class versions. This works for most of our dictionaries e.g following two run fine ( https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_hlt.xml, https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_1.xml ); ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_hlt.xml; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_1.xml; ```; but it fails/hangs for https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_2.xml; ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_2.xml; ```; Most of the times the above command just hangs with error https://muzaffar.web.cern.ch/root624/err1.log but once I was able to get this error https://muzaffar.web.cern.ch/root624/err.log . Can you please look in to it and see if this log helps? . In case you want to try it yourself then you go to cmsdev25 and do; ```; >cd /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100; >cmsenv; >/build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7718
https://github.com/root-project/root/issues/7718:157,Integrability,integrat,integration,157,"Hi,; We are trying to update root 6.24 branch (commit https://github.com/root-project/root/commit/7c0cfaca4c70c7394328547c05e00028b0079a03) in CMSSW special integration builds (https://github.com/cms-sw/cmsdist/pull/6746/files ) but looks like pyROOT fails/hangs for some special dictionaries. . While building cmssw , we use https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion to check for root dictionaries class versions. This works for most of our dictionaries e.g following two run fine ( https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_hlt.xml, https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_1.xml ); ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_hlt.xml; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_1.xml; ```; but it fails/hangs for https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_2.xml; ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_2.xml; ```; Most of the times the above command just hangs with error https://muzaffar.web.cern.ch/root624/err1.log but once I was able to get this error https://muzaffar.web.cern.ch/root624/err.log . Can you please look in to it and see if this log helps? . In case you want to try it yourself then you go to cmsdev25 and do; ```; >cd /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100; >cmsenv; >/build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7718
https://github.com/root-project/root/issues/7718:1332,Testability,log,log,1332,"al integration builds (https://github.com/cms-sw/cmsdist/pull/6746/files ) but looks like pyROOT fails/hangs for some special dictionaries. . While building cmssw , we use https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion to check for root dictionaries class versions. This works for most of our dictionaries e.g following two run fine ( https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_hlt.xml, https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_1.xml ); ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_hlt.xml; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_1.xml; ```; but it fails/hangs for https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_2.xml; ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_2.xml; ```; Most of the times the above command just hangs with error https://muzaffar.web.cern.ch/root624/err1.log but once I was able to get this error https://muzaffar.web.cern.ch/root624/err.log . Can you please look in to it and see if this log helps? . In case you want to try it yourself then you go to cmsdev25 and do; ```; >cd /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100; >cmsenv; >/build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/DataFormats/TauReco/src/classes_def_2.xml; ```. FYI @mrodozov @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7718
https://github.com/root-project/root/issues/7718:1415,Testability,log,log,1415,"al integration builds (https://github.com/cms-sw/cmsdist/pull/6746/files ) but looks like pyROOT fails/hangs for some special dictionaries. . While building cmssw , we use https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion to check for root dictionaries class versions. This works for most of our dictionaries e.g following two run fine ( https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_hlt.xml, https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_1.xml ); ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_hlt.xml; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_1.xml; ```; but it fails/hangs for https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_2.xml; ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_2.xml; ```; Most of the times the above command just hangs with error https://muzaffar.web.cern.ch/root624/err1.log but once I was able to get this error https://muzaffar.web.cern.ch/root624/err.log . Can you please look in to it and see if this log helps? . In case you want to try it yourself then you go to cmsdev25 and do; ```; >cd /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100; >cmsenv; >/build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/DataFormats/TauReco/src/classes_def_2.xml; ```. FYI @mrodozov @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7718
https://github.com/root-project/root/issues/7718:1466,Testability,log,log,1466,"al integration builds (https://github.com/cms-sw/cmsdist/pull/6746/files ) but looks like pyROOT fails/hangs for some special dictionaries. . While building cmssw , we use https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion to check for root dictionaries class versions. This works for most of our dictionaries e.g following two run fine ( https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_hlt.xml, https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_1.xml ); ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_hlt.xml; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_1.xml; ```; but it fails/hangs for https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_2.xml; ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_2.xml; ```; Most of the times the above command just hangs with error https://muzaffar.web.cern.ch/root624/err1.log but once I was able to get this error https://muzaffar.web.cern.ch/root624/err.log . Can you please look in to it and see if this log helps? . In case you want to try it yourself then you go to cmsdev25 and do; ```; >cd /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100; >cmsenv; >/build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/DataFormats/TauReco/src/classes_def_2.xml; ```. FYI @mrodozov @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7718
https://github.com/root-project/root/pull/7719:1048,Availability,avail,available,1048,"This problem affects multi-range fits with `RooAbsPdf::fitTo` and was; reported in Jira issue [ROOT-9530](https://sft.its.cern.ch/jira/browse/ROOT-9530). Each RooNLLVar was created with the normalization set corresponding to; the subrange, not the union range like it should be. This commit adds an; extra term to the final likelihood function to cancel this normalization; problem. The extra term doesn't have to be added for the extended fit, because; adding extension terms for the likelihoods in each range as currently; done is mathematically equivalent to applying the normalization correction term; plus adding a global extension term. I'm not sure if I should call this a bug or not. On the one hand, the result that was computed previously was not wrong, it just didn't use all the information (relative number of events in each subrange was not considered). On the other hand, the result was not the best possible estimate given the information in all sub-ranges, and users expects the maximum likelihood estimate to be the best estimate available given the information. There is also a [PDF document](https://github.com/root-project/root/files/6245069/Multi_range_likelihood_fits_in_RooFit.pdf) that explains the math behind this pull request, in particular why the normalization correction doesn't have to be applied for the extended fit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7719
https://github.com/root-project/root/pull/7719:431,Modifiability,extend,extended,431,"This problem affects multi-range fits with `RooAbsPdf::fitTo` and was; reported in Jira issue [ROOT-9530](https://sft.its.cern.ch/jira/browse/ROOT-9530). Each RooNLLVar was created with the normalization set corresponding to; the subrange, not the union range like it should be. This commit adds an; extra term to the final likelihood function to cancel this normalization; problem. The extra term doesn't have to be added for the extended fit, because; adding extension terms for the likelihoods in each range as currently; done is mathematically equivalent to applying the normalization correction term; plus adding a global extension term. I'm not sure if I should call this a bug or not. On the one hand, the result that was computed previously was not wrong, it just didn't use all the information (relative number of events in each subrange was not considered). On the other hand, the result was not the best possible estimate given the information in all sub-ranges, and users expects the maximum likelihood estimate to be the best estimate available given the information. There is also a [PDF document](https://github.com/root-project/root/files/6245069/Multi_range_likelihood_fits_in_RooFit.pdf) that explains the math behind this pull request, in particular why the normalization correction doesn't have to be applied for the extended fit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7719
https://github.com/root-project/root/pull/7719:1337,Modifiability,extend,extended,1337,"This problem affects multi-range fits with `RooAbsPdf::fitTo` and was; reported in Jira issue [ROOT-9530](https://sft.its.cern.ch/jira/browse/ROOT-9530). Each RooNLLVar was created with the normalization set corresponding to; the subrange, not the union range like it should be. This commit adds an; extra term to the final likelihood function to cancel this normalization; problem. The extra term doesn't have to be added for the extended fit, because; adding extension terms for the likelihoods in each range as currently; done is mathematically equivalent to applying the normalization correction term; plus adding a global extension term. I'm not sure if I should call this a bug or not. On the one hand, the result that was computed previously was not wrong, it just didn't use all the information (relative number of events in each subrange was not considered). On the other hand, the result was not the best possible estimate given the information in all sub-ranges, and users expects the maximum likelihood estimate to be the best estimate available given the information. There is also a [PDF document](https://github.com/root-project/root/files/6245069/Multi_range_likelihood_fits_in_RooFit.pdf) that explains the math behind this pull request, in particular why the normalization correction doesn't have to be applied for the extended fit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7719
https://github.com/root-project/root/pull/7723:37,Testability,test,test,37,@guitargeek PR for pythonization and test for RooAbsReal::plotOn() Pythonization,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7723
https://github.com/root-project/root/issues/7724:1841,Availability,redundant,redundant,1841,"### Explain what you would like to see improved; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::AddRule; 21 0x00007ffff6adee6c in TClass::AddRule (rule=0x572670 ""HepMC::GenVertex m_event"",; 22 0x00007ffff6adead2 in (anonymous namespace)::ReadRulesContent; 23 0x00007ffff6adec40 in TClass::ReadRules; 24 0x00007fffecd0b3a0 in TCling::Initialize; ```. ### Optional: share how it could be improved. As discussed in root-project/root#7398, we should remove the `TClingMemberIter` iteration from the initialization phase as it causes a lot of deserialization resulting in redundant memory usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7724
https://github.com/root-project/root/issues/7724:1148,Performance,Load,Load,1148,"### Explain what you would like to see improved; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::AddRule; 21 0x00007ffff6adee6c in TClass::AddRule (rule=0x572670 ""HepMC::GenVertex m_event"",; 22 0x00007ffff6adead2 in (anonymous namespace)::ReadRulesContent; 23 0x00007ffff6adec40 in TClass::ReadRules; 24 0x00007fffecd0b3a0 in TCling::Initialize; ```. ### Optional: share how it could be improved. As discussed in root-project/root#7398, we should remove the `TClingMemberIter` iteration from the initialization phase as it causes a lot of deserialization resulting in redundant memory usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7724
https://github.com/root-project/root/issues/7724:134,Safety,abort,abort,134,"### Explain what you would like to see improved; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::AddRule; 21 0x00007ffff6adee6c in TClass::AddRule (rule=0x572670 ""HepMC::GenVertex m_event"",; 22 0x00007ffff6adead2 in (anonymous namespace)::ReadRulesContent; 23 0x00007ffff6adec40 in TClass::ReadRules; 24 0x00007fffecd0b3a0 in TCling::Initialize; ```. ### Optional: share how it could be improved. As discussed in root-project/root#7398, we should remove the `TClingMemberIter` iteration from the initialization phase as it causes a lot of deserialization resulting in redundant memory usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7724
https://github.com/root-project/root/issues/7724:1841,Safety,redund,redundant,1841,"### Explain what you would like to see improved; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::AddRule; 21 0x00007ffff6adee6c in TClass::AddRule (rule=0x572670 ""HepMC::GenVertex m_event"",; 22 0x00007ffff6adead2 in (anonymous namespace)::ReadRulesContent; 23 0x00007ffff6adec40 in TClass::ReadRules; 24 0x00007fffecd0b3a0 in TCling::Initialize; ```. ### Optional: share how it could be improved. As discussed in root-project/root#7398, we should remove the `TClingMemberIter` iteration from the initialization phase as it causes a lot of deserialization resulting in redundant memory usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7724
https://github.com/root-project/root/pull/7725:144,Availability,error,error,144,"curls default behaviour is to not follow HTTP redirects, resulting in some of the tutorials not functioning as users attempt to operate on HTML error pages rather than valid ROOT files. A specific example prior to this commit would be the URL for ClassificationKeras.py. Since it's impossible to know in advance which URL's might end up having redirects in the future, I've simply added '-L' to every invocation of CURL (including in a few tests) which should prevent any issues in the future and otherwise work exactly the same for files which don't have redirects today. (curl behaviour tested on Ubuntu 20.04)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7725
https://github.com/root-project/root/pull/7725:440,Testability,test,tests,440,"curls default behaviour is to not follow HTTP redirects, resulting in some of the tutorials not functioning as users attempt to operate on HTML error pages rather than valid ROOT files. A specific example prior to this commit would be the URL for ClassificationKeras.py. Since it's impossible to know in advance which URL's might end up having redirects in the future, I've simply added '-L' to every invocation of CURL (including in a few tests) which should prevent any issues in the future and otherwise work exactly the same for files which don't have redirects today. (curl behaviour tested on Ubuntu 20.04)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7725
https://github.com/root-project/root/pull/7725:589,Testability,test,tested,589,"curls default behaviour is to not follow HTTP redirects, resulting in some of the tutorials not functioning as users attempt to operate on HTML error pages rather than valid ROOT files. A specific example prior to this commit would be the URL for ClassificationKeras.py. Since it's impossible to know in advance which URL's might end up having redirects in the future, I've simply added '-L' to every invocation of CURL (including in a few tests) which should prevent any issues in the future and otherwise work exactly the same for files which don't have redirects today. (curl behaviour tested on Ubuntu 20.04)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7725
https://github.com/root-project/root/pull/7725:374,Usability,simpl,simply,374,"curls default behaviour is to not follow HTTP redirects, resulting in some of the tutorials not functioning as users attempt to operate on HTML error pages rather than valid ROOT files. A specific example prior to this commit would be the URL for ClassificationKeras.py. Since it's impossible to know in advance which URL's might end up having redirects in the future, I've simply added '-L' to every invocation of CURL (including in a few tests) which should prevent any issues in the future and otherwise work exactly the same for files which don't have redirects today. (curl behaviour tested on Ubuntu 20.04)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7725
https://github.com/root-project/root/pull/7726:178,Usability,guid,guide,178,"Revisiting the hist/hist headers to make them doxygen compatible . Some data members were not commented properly (not the right format). So the comments do not appear on the ref guide, or worst, sometimes a wrong comment appear on a data member.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7726
https://github.com/root-project/root/issues/7727:487,Availability,Error,Error,487,"- [x] Checked for duplicates. ### Describe the bug; 1. Use `TChain` with >1 root files as an input for RDataFrame; 2. TChain should have objects like `XYZVector` or `vector <double>`, etc.; 3. Snapshot RDataFrame providing list of columns; 4. Warning `TChain::CopyAddresses:0: RuntimeWarning: Could not find branch named 'xxx' in tree named 'xxx'`appears; 5. Warning appears on the transition between files. ### Expected behavior; Expected no warning if it has no effect on the output.; Error, if it effects the output.; List of possible scenarios when it cause code to break?. ### To Reproduce; Compact reproducer:. ```; import ROOT. ROOT.gInterpreter.Declare(; '''; #include ""Math/Vector3D.h""; using namespace ROOT::Math;; '''). def test_warning():; # Create two files to read data from; # Warning appears only for cpp_vec and phys_vec branches; for i in range(2):; ROOT.RDataFrame(10).Define(""simple_number"", ""rdfentry_"")\; .Define(""cpp_vec"", ""std::vector<double>{-1, 42, -1}"")\; .Define(""phys_vec"", ""XYZVector(-1, 42, -1)"")\; .Snapshot(""test_tree"", ""file{}.root"".format(i)). ch = ROOT.TChain(""test_tree""); ; # Using only one file shows No warning...; # ch.Add(""./file1.root""); ch.Add(""./file[01].root""). df = ROOT.RDataFrame(ch).Filter('{cout<<""Event: ""<<rdfentry_<< endl;} return true;'); df = df.Define(""new_var"", ""phys_vec.Y()*cpp_vec[1]""). # Snapshoting w/o branch list shows no warning too; # df.Snapshot(""new_tree"", ""new_file.root""); df.Snapshot(""new_tree"", ""new_file.root"", [""new_var""]). test_warning(); ```. ### Setup; 1. ROOT 6.22/00 from /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc10-opt/bin/root; 2. Centos 7; 4. Python 3.7.6. ### Additional Information. This behaviour was spotted and discussed at ROOT forum:; https://root-forum.cern.ch/t/warning-in-tchain-copyaddresses-could-not-find-branch-named/35055; https://root-forum.cern.ch/t/tchain-0-warning-with-rdataframe-could-not-find-branch-named/44186",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7727
https://github.com/root-project/root/pull/7730:593,Testability,log,logic,593,Improved support of TChain construction on the distributed executors with information; of the input TTree and its friends. Steps:; 1. Bring utility functions from TTreeProcessorMT in their own inline namespace; 2. Call them in HeadNode.get_treeinfo to retrieve information about the full path to the tree and the information about its friends; 3. Create a new namedtuple `TreeInfo` and use that to pass information around; 4. In particular construct `Range` objects starting from the information contained in `TreeInfo` objects; 5. The mapper function will in turn use `Range`s. This improved logic allows also support for friend trees with aliases. DistRDF tests have been adjusted according to the new functions. TODO:; - [x] Add doxygen in TreePlayerUtils; - [ ] Add c++ only specific test for GetFriendInfo and GetTreeFullPaths functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7730
https://github.com/root-project/root/pull/7730:658,Testability,test,tests,658,Improved support of TChain construction on the distributed executors with information; of the input TTree and its friends. Steps:; 1. Bring utility functions from TTreeProcessorMT in their own inline namespace; 2. Call them in HeadNode.get_treeinfo to retrieve information about the full path to the tree and the information about its friends; 3. Create a new namedtuple `TreeInfo` and use that to pass information around; 4. In particular construct `Range` objects starting from the information contained in `TreeInfo` objects; 5. The mapper function will in turn use `Range`s. This improved logic allows also support for friend trees with aliases. DistRDF tests have been adjusted according to the new functions. TODO:; - [x] Add doxygen in TreePlayerUtils; - [ ] Add c++ only specific test for GetFriendInfo and GetTreeFullPaths functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7730
https://github.com/root-project/root/pull/7730:788,Testability,test,test,788,Improved support of TChain construction on the distributed executors with information; of the input TTree and its friends. Steps:; 1. Bring utility functions from TTreeProcessorMT in their own inline namespace; 2. Call them in HeadNode.get_treeinfo to retrieve information about the full path to the tree and the information about its friends; 3. Create a new namedtuple `TreeInfo` and use that to pass information around; 4. In particular construct `Range` objects starting from the information contained in `TreeInfo` objects; 5. The mapper function will in turn use `Range`s. This improved logic allows also support for friend trees with aliases. DistRDF tests have been adjusted according to the new functions. TODO:; - [x] Add doxygen in TreePlayerUtils; - [ ] Add c++ only specific test for GetFriendInfo and GetTreeFullPaths functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7730
https://github.com/root-project/root/pull/7734:109,Deployability,release,release,109,We wanted FATAL_ERROR for our Jenkins. That has been running for many; months now; switch to WARNING for the release as this still allows; users to get a proper ROOT build.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7734
https://github.com/root-project/root/pull/7735:170,Testability,test,tested,170,"This was not in any issue, but I thought this would be very helpful. This way, you don't need to convert theta and phi into Cartesian vectors manually, and vice-versa. I tested it on Ubuntu 20.04 and it works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7735
https://github.com/root-project/root/pull/7736:149,Availability,error,errors,149,"If a field name doesn't exist in the RNTupleModel, we raise an; exception with the problematic field name and NTuple. There are; some other possible errors to be considered:; * Calling GetViewCollection on a non-collection field?; * Calling GetView<T> on a field with a different type U?. Before this change, missing names caused an out of range exception.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7736
https://github.com/root-project/root/pull/7738:21,Availability,Error,ErrorIntegral,21,Improve the tutorial ErrorIntegral.C with the explanations given by @lmoneta in this forum post: https://root-forum.cern.ch/t/tutorial-fit-errorintegral-c-explanation/44210/3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7738
https://github.com/root-project/root/pull/7738:139,Availability,error,errorintegral-c-explanation,139,Improve the tutorial ErrorIntegral.C with the explanations given by @lmoneta in this forum post: https://root-forum.cern.ch/t/tutorial-fit-errorintegral-c-explanation/44210/3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7738
https://github.com/root-project/root/pull/7739:49,Deployability,patch,patch,49,"Instead of aborting on an `R__ASSERT`, with this patch RNTuple throws a meaningful exception when trying to open a file that was generated in an incompatible, future format. Fixes lazy loading of the model in `RNTupleReader::LoadEntry()` along the way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7739
https://github.com/root-project/root/pull/7739:185,Performance,load,loading,185,"Instead of aborting on an `R__ASSERT`, with this patch RNTuple throws a meaningful exception when trying to open a file that was generated in an incompatible, future format. Fixes lazy loading of the model in `RNTupleReader::LoadEntry()` along the way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7739
https://github.com/root-project/root/pull/7739:225,Performance,Load,LoadEntry,225,"Instead of aborting on an `R__ASSERT`, with this patch RNTuple throws a meaningful exception when trying to open a file that was generated in an incompatible, future format. Fixes lazy loading of the model in `RNTupleReader::LoadEntry()` along the way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7739
https://github.com/root-project/root/pull/7739:11,Safety,abort,aborting,11,"Instead of aborting on an `R__ASSERT`, with this patch RNTuple throws a meaningful exception when trying to open a file that was generated in an incompatible, future format. Fixes lazy loading of the model in `RNTupleReader::LoadEntry()` along the way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7739
https://github.com/root-project/root/issues/7740:87,Deployability,integrat,integration,87,"### Explain what you would like to see improved; There is a class for multidimensional integration, [IntegratorMultiDim](https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html).; From that it's very hard to understand how to use that (in particular, what function should be passed to that and how). . ### Optional: share how it could be improved; Please add examples how to use that. ; In its class description and probably to tutorials (they don't contain any code with that class). ### Additional context; There was a [discussion on the ROOT Forum](https://root-forum.cern.ch/t/multi-dimensional-adaptive-integration/7663/3) with a ready good example. It was promised that people are working on the documentation, but it seems to be forgotten since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7740
https://github.com/root-project/root/issues/7740:101,Deployability,Integrat,IntegratorMultiDim,101,"### Explain what you would like to see improved; There is a class for multidimensional integration, [IntegratorMultiDim](https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html).; From that it's very hard to understand how to use that (in particular, what function should be passed to that and how). . ### Optional: share how it could be improved; Please add examples how to use that. ; In its class description and probably to tutorials (they don't contain any code with that class). ### Additional context; There was a [discussion on the ROOT Forum](https://root-forum.cern.ch/t/multi-dimensional-adaptive-integration/7663/3) with a ready good example. It was promised that people are working on the documentation, but it seems to be forgotten since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7740
https://github.com/root-project/root/issues/7740:626,Deployability,integrat,integration,626,"### Explain what you would like to see improved; There is a class for multidimensional integration, [IntegratorMultiDim](https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html).; From that it's very hard to understand how to use that (in particular, what function should be passed to that and how). . ### Optional: share how it could be improved; Please add examples how to use that. ; In its class description and probably to tutorials (they don't contain any code with that class). ### Additional context; There was a [discussion on the ROOT Forum](https://root-forum.cern.ch/t/multi-dimensional-adaptive-integration/7663/3) with a ready good example. It was promised that people are working on the documentation, but it seems to be forgotten since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7740
https://github.com/root-project/root/issues/7740:617,Energy Efficiency,adapt,adaptive-integration,617,"### Explain what you would like to see improved; There is a class for multidimensional integration, [IntegratorMultiDim](https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html).; From that it's very hard to understand how to use that (in particular, what function should be passed to that and how). . ### Optional: share how it could be improved; Please add examples how to use that. ; In its class description and probably to tutorials (they don't contain any code with that class). ### Additional context; There was a [discussion on the ROOT Forum](https://root-forum.cern.ch/t/multi-dimensional-adaptive-integration/7663/3) with a ready good example. It was promised that people are working on the documentation, but it seems to be forgotten since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7740
https://github.com/root-project/root/issues/7740:87,Integrability,integrat,integration,87,"### Explain what you would like to see improved; There is a class for multidimensional integration, [IntegratorMultiDim](https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html).; From that it's very hard to understand how to use that (in particular, what function should be passed to that and how). . ### Optional: share how it could be improved; Please add examples how to use that. ; In its class description and probably to tutorials (they don't contain any code with that class). ### Additional context; There was a [discussion on the ROOT Forum](https://root-forum.cern.ch/t/multi-dimensional-adaptive-integration/7663/3) with a ready good example. It was promised that people are working on the documentation, but it seems to be forgotten since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7740
https://github.com/root-project/root/issues/7740:101,Integrability,Integrat,IntegratorMultiDim,101,"### Explain what you would like to see improved; There is a class for multidimensional integration, [IntegratorMultiDim](https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html).; From that it's very hard to understand how to use that (in particular, what function should be passed to that and how). . ### Optional: share how it could be improved; Please add examples how to use that. ; In its class description and probably to tutorials (they don't contain any code with that class). ### Additional context; There was a [discussion on the ROOT Forum](https://root-forum.cern.ch/t/multi-dimensional-adaptive-integration/7663/3) with a ready good example. It was promised that people are working on the documentation, but it seems to be forgotten since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7740
https://github.com/root-project/root/issues/7740:626,Integrability,integrat,integration,626,"### Explain what you would like to see improved; There is a class for multidimensional integration, [IntegratorMultiDim](https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html).; From that it's very hard to understand how to use that (in particular, what function should be passed to that and how). . ### Optional: share how it could be improved; Please add examples how to use that. ; In its class description and probably to tutorials (they don't contain any code with that class). ### Additional context; There was a [discussion on the ROOT Forum](https://root-forum.cern.ch/t/multi-dimensional-adaptive-integration/7663/3) with a ready good example. It was promised that people are working on the documentation, but it seems to be forgotten since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7740
https://github.com/root-project/root/issues/7740:617,Modifiability,adapt,adaptive-integration,617,"### Explain what you would like to see improved; There is a class for multidimensional integration, [IntegratorMultiDim](https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html).; From that it's very hard to understand how to use that (in particular, what function should be passed to that and how). . ### Optional: share how it could be improved; Please add examples how to use that. ; In its class description and probably to tutorials (they don't contain any code with that class). ### Additional context; There was a [discussion on the ROOT Forum](https://root-forum.cern.ch/t/multi-dimensional-adaptive-integration/7663/3) with a ready good example. It was promised that people are working on the documentation, but it seems to be forgotten since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7740
https://github.com/root-project/root/pull/7742:224,Integrability,interface,interface,224,"In a conditional fit, it happens that the value normalization integrals can; be different for every event because a pdf is conditional on another; observable. That's why the integral also has to be evaluated with the batch; interface in general, which this PR implements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7742
https://github.com/root-project/root/pull/7743:109,Deployability,release,release,109,We wanted FATAL_ERROR for our Jenkins. That has been running for many; months now; switch to WARNING for the release as this still allows; users to get a proper ROOT build. (cherry picked from commit 193c3160c0442e099d80e9ec43306efe299f2edc),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7743
https://github.com/root-project/root/pull/7744:148,Energy Efficiency,reduce,reduce,148,As llvm JIT cannot catch exceptions on Apple M1 (see; https://github.com/root-project/root/issues/7541) cling; should throw less. This is a hack to reduce the impact; a bit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7744
https://github.com/root-project/root/issues/7745:241,Performance,perform,performance,241,"We should add the infamous Open Data benchmarks to rootbench. Originally meant to showcase the DF programming model (see https://github.com/stwunsch/opendata-benchmarks), it went now a little bit out of hand and it's used for measuring ROOT performance (see the fork here https://github.com/masonproffitt/opendata-benchmarks and the forum entry here https://root-forum.cern.ch/t/scalability-of-rdataframes-on-16-cores/44222). At the end, they have nice properties, which we should profile, like a significant amount of jitted code and quite a lot of allocations due to the missing SBO in RVec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7745
https://github.com/root-project/root/issues/7745:379,Performance,scalab,scalability-of-rdataframes-on-,379,"We should add the infamous Open Data benchmarks to rootbench. Originally meant to showcase the DF programming model (see https://github.com/stwunsch/opendata-benchmarks), it went now a little bit out of hand and it's used for measuring ROOT performance (see the fork here https://github.com/masonproffitt/opendata-benchmarks and the forum entry here https://root-forum.cern.ch/t/scalability-of-rdataframes-on-16-cores/44222). At the end, they have nice properties, which we should profile, like a significant amount of jitted code and quite a lot of allocations due to the missing SBO in RVec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7745
https://github.com/root-project/root/issues/7745:37,Testability,benchmark,benchmarks,37,"We should add the infamous Open Data benchmarks to rootbench. Originally meant to showcase the DF programming model (see https://github.com/stwunsch/opendata-benchmarks), it went now a little bit out of hand and it's used for measuring ROOT performance (see the fork here https://github.com/masonproffitt/opendata-benchmarks and the forum entry here https://root-forum.cern.ch/t/scalability-of-rdataframes-on-16-cores/44222). At the end, they have nice properties, which we should profile, like a significant amount of jitted code and quite a lot of allocations due to the missing SBO in RVec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7745
https://github.com/root-project/root/issues/7745:158,Testability,benchmark,benchmarks,158,"We should add the infamous Open Data benchmarks to rootbench. Originally meant to showcase the DF programming model (see https://github.com/stwunsch/opendata-benchmarks), it went now a little bit out of hand and it's used for measuring ROOT performance (see the fork here https://github.com/masonproffitt/opendata-benchmarks and the forum entry here https://root-forum.cern.ch/t/scalability-of-rdataframes-on-16-cores/44222). At the end, they have nice properties, which we should profile, like a significant amount of jitted code and quite a lot of allocations due to the missing SBO in RVec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7745
https://github.com/root-project/root/issues/7745:314,Testability,benchmark,benchmarks,314,"We should add the infamous Open Data benchmarks to rootbench. Originally meant to showcase the DF programming model (see https://github.com/stwunsch/opendata-benchmarks), it went now a little bit out of hand and it's used for measuring ROOT performance (see the fork here https://github.com/masonproffitt/opendata-benchmarks and the forum entry here https://root-forum.cern.ch/t/scalability-of-rdataframes-on-16-cores/44222). At the end, they have nice properties, which we should profile, like a significant amount of jitted code and quite a lot of allocations due to the missing SBO in RVec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7745
https://github.com/root-project/root/pull/7746:17,Deployability,integrat,integrator,17,Doxygen fixes in integrator classes; Typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7746
https://github.com/root-project/root/pull/7746:17,Integrability,integrat,integrator,17,Doxygen fixes in integrator classes; Typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7746
https://github.com/root-project/root/issues/7748:741,Availability,error,error,741,"- [x ] Checked for duplicates. ### Describe the bug; In the documentation of [RooParametricStepFunction](https://root.cern.ch/doc/master/classRooParametricStepFunction.html) the last line of the example goes like. RooParametricStepFunction aPdf = (""aPdf"",""PSF"",*x, ; *list,limits,nbins);. where _x_ is undefined in that code sample. ### Expected behavior; Please write what _x_ in that example is (that is some RooAbsReal). ; Could you please also add the usage of this function? As I understand, it gets its values from a histogram (or does it fit a histogram), so it would be nice to introduce that histogram to the example.; I found no references to this class in tutorials. P.S. I couldn't run this code in ROOT v.6.22/06 because of the error. > error: reference to 'list' is ambiguous; *list,limits,nbins);; ^; ROOT_prompt_3:1:13: note: candidate found by name lookup is '__cling_N54::list'; RooArgList* list = new RooArgList(""list"");; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/bits/stl_list.h:556:11: note: candidate found by name lookup is 'std::__cxx11::list'; class list : protected _List_base<_Tp, _Alloc>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7748
https://github.com/root-project/root/issues/7748:750,Availability,error,error,750,"- [x ] Checked for duplicates. ### Describe the bug; In the documentation of [RooParametricStepFunction](https://root.cern.ch/doc/master/classRooParametricStepFunction.html) the last line of the example goes like. RooParametricStepFunction aPdf = (""aPdf"",""PSF"",*x, ; *list,limits,nbins);. where _x_ is undefined in that code sample. ### Expected behavior; Please write what _x_ in that example is (that is some RooAbsReal). ; Could you please also add the usage of this function? As I understand, it gets its values from a histogram (or does it fit a histogram), so it would be nice to introduce that histogram to the example.; I found no references to this class in tutorials. P.S. I couldn't run this code in ROOT v.6.22/06 because of the error. > error: reference to 'list' is ambiguous; *list,limits,nbins);; ^; ROOT_prompt_3:1:13: note: candidate found by name lookup is '__cling_N54::list'; RooArgList* list = new RooArgList(""list"");; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/bits/stl_list.h:556:11: note: candidate found by name lookup is 'std::__cxx11::list'; class list : protected _List_base<_Tp, _Alloc>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7748
https://github.com/root-project/root/pull/7749:727,Testability,test,testing,727,"If users have not explicitly set the RNTuple's compression settings through `RNTupleWriteOptions` and are added to a TFile, use the TFile's compression. Before: ; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file);; ntuple->Fill();; }. // ntuple uses default compression level 404 (lz4); std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStorageDetails, oss);; EXPECT_THAT(oss.str(), testing::HasSubstr(""Compression: 404""));; ```. After:; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file);; ntuple->Fill();; }. // ntuple uses TFile's compression level; std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStorageDetails, oss);; EXPECT_THAT(oss.str(), testing::HasSubstr(""Compression: 101""));; ```. Specify we want compression level 404: ; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; RNTupleWriteOptions opt;; opt.SetCompression(404);; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file, opt);; ntuple->Fill();; }. // ntuple uses explicitly set compression level; std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStora",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7749
https://github.com/root-project/root/pull/7749:1336,Testability,test,testing,1336,"teOptions` and are added to a TFile, use the TFile's compression. Before: ; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file);; ntuple->Fill();; }. // ntuple uses default compression level 404 (lz4); std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStorageDetails, oss);; EXPECT_THAT(oss.str(), testing::HasSubstr(""Compression: 404""));; ```. After:; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file);; ntuple->Fill();; }. // ntuple uses TFile's compression level; std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStorageDetails, oss);; EXPECT_THAT(oss.str(), testing::HasSubstr(""Compression: 101""));; ```. Specify we want compression level 404: ; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; RNTupleWriteOptions opt;; opt.SetCompression(404);; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file, opt);; ntuple->Fill();; }. // ntuple uses explicitly set compression level; std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStorageDetails, oss);; EXPECT_THAT(oss.str(), testing::HasSubstr(""Compression: 404""));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7749
https://github.com/root-project/root/pull/7749:2042,Testability,test,testing,2042,"teOptions` and are added to a TFile, use the TFile's compression. Before: ; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file);; ntuple->Fill();; }. // ntuple uses default compression level 404 (lz4); std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStorageDetails, oss);; EXPECT_THAT(oss.str(), testing::HasSubstr(""Compression: 404""));; ```. After:; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file);; ntuple->Fill();; }. // ntuple uses TFile's compression level; std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStorageDetails, oss);; EXPECT_THAT(oss.str(), testing::HasSubstr(""Compression: 101""));; ```. Specify we want compression level 404: ; ```cpp; {; // set file compression algo to 101 (zlib); auto file = std::make_unique<TFile>(fileGuard.GetPath().c_str(), ""RECREATE"", """", 101);; auto model = RNTupleModel::Create();; auto field = model->MakeField<float>(""field"");; RNTupleWriteOptions opt;; opt.SetCompression(404);; auto ntuple = RNTupleWriter::Append(std::move(model), ""Events"", *file, opt);; ntuple->Fill();; }. // ntuple uses explicitly set compression level; std::ostringstream oss;; auto ntuple = RNTupleReader::Open(""Events"", fileGuard.GetPath());; ntuple->PrintInfo(ROOT::Experimental::ENTupleInfo::kStorageDetails, oss);; EXPECT_THAT(oss.str(), testing::HasSubstr(""Compression: 404""));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7749
https://github.com/root-project/root/pull/7750:178,Integrability,message,message,178,- Add an implementation of getValV for RooAddPdf to use stored normalization as default one when the pdf is evaluated without passing a norm. set.; - Disable printing of warning message when evaluating un-normalized RooAddPdf in : ; - RooAbsPdf::printValue; - RooAbsArg::graphVizTree; - when getVal(0) is called in constructor of RooRealIntegral when a normalization set is not defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7750
https://github.com/root-project/root/pull/7751:105,Availability,error,errors,105,"Add null checks to some important high-level RNTuple APIs. In general, they are not the most complicated errors but it would be nice to be completely segfault free. e.g.; ```cpp; auto model = RNTupleModel::Create();; model->AddField(nullptr);; ```. Before: ; ```; *** Break *** segmentation violation; ```; After: ; ```; C++ exception with description ""null field; At:; void ROOT::Experimental::RNTupleModel::AddField(std::unique_ptr<ROOT::Experimental::Detail::RFieldBase>) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RNTupleModel.cxx:56]; "" thrown in the test body.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7751
https://github.com/root-project/root/pull/7751:565,Testability,test,test,565,"Add null checks to some important high-level RNTuple APIs. In general, they are not the most complicated errors but it would be nice to be completely segfault free. e.g.; ```cpp; auto model = RNTupleModel::Create();; model->AddField(nullptr);; ```. Before: ; ```; *** Break *** segmentation violation; ```; After: ; ```; C++ exception with description ""null field; At:; void ROOT::Experimental::RNTupleModel::AddField(std::unique_ptr<ROOT::Experimental::Detail::RFieldBase>) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RNTupleModel.cxx:56]; "" thrown in the test body.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7751
https://github.com/root-project/root/pull/7752:395,Usability,simpl,simple,395,"https://github.com/root-project/root/issues/7657. To add a member of type `PushTransactionRAII*` to `Transaction`, the former must end up in a separate header - else `Transaction.h` must `#include` `Interpreter.h` which seems worse. As we don't guarantee backward compatibility for cling, just move the type out of `Interpreter`, without even leaving a type alias in `Interpreter`. Keeps things simple and straight. Kudos to @vgvassilev for the idea of ""push_if_none""!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7752
https://github.com/root-project/root/pull/7753:320,Deployability,continuous,continuous,320,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7753
https://github.com/root-project/root/pull/7753:331,Deployability,integrat,integration,331,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7753
https://github.com/root-project/root/pull/7753:331,Integrability,integrat,integration,331,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7753
https://github.com/root-project/root/pull/7753:352,Modifiability,refactor,refactors,352,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7753
https://github.com/root-project/root/pull/7753:148,Testability,test,test,148,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7753
https://github.com/root-project/root/pull/7753:294,Testability,test,tests,294,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7753
https://github.com/root-project/root/pull/7753:481,Testability,test,tests,481,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7753
https://github.com/root-project/root/pull/7753:566,Testability,test,tests,566,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7753
https://github.com/root-project/root/pull/7753:583,Testability,test,tests,583,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7753
https://github.com/root-project/root/issues/7754:1326,Testability,test,test,1326," modification. In the ROOT file, we have version 1 of the class (TVHit) while in the current software, we have version 2 of the class. We wrote in the LinkDef file a #pragma instruction on how to transform v1 into v2. When this #pragma line is omitted, we obviously read the wrong information from the input file, because the definition in the code does not correspond to the definition on file (as expected). But when using the #pragma line, we simply get a segfault while trying to read the TTree. I have prepared a self-contained minimal working example attached to this topic: [mwe.tgz|attachment](upload://34Fdg60DY7tGGh6cw40YICFFhLy.tgz) (224.3 KB) . The archive contains the following README.md with more details on how to reproduce the issue, and on the exact content of the archive:. Steps to reproduce issue on Minimal Working Example (MWE); =============================; - Set the ROOT_INCLUDE_PATH and LD_LIBRARY_PATH; `source env.sh`; - Compile the minimal persistency library; `make`; - Run test code on new persistency (opens pluto_newpers.root and reads the tree successfully); `root read_updated.C\(1\)`; or; `read_updated 1`; - Run test code on old persistency (opens pluto_oldpers.root and crashes when trying to read the tree); `root read_updated.C(\(0\)`; or; `read_updated 0`. The crash is traced back to line 109 of PersistencyDICT.cxx; `static Long_t offset_Onfile_TVHit_fMCTrackID = oldObj->GetClass()->GetDataMemberOffset(""fMCTrackID"");`; where GetClass returns a nullptr. Content of the archive; ======================; - The header files in include contain the current definition of the minimal persistency necessary to ; read the input files (TVHit version 2).; - The source files in src are there for the sake of compilation but should not; have an influence on reading the input file (right?). ; - The header files in include_oldpers are included for documentation and correspond to the difference; between the old persistency (TVHit version 1) and the new persistency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7754
https://github.com/root-project/root/issues/7754:1471,Testability,test,test,1471,"f file a #pragma instruction on how to transform v1 into v2. When this #pragma line is omitted, we obviously read the wrong information from the input file, because the definition in the code does not correspond to the definition on file (as expected). But when using the #pragma line, we simply get a segfault while trying to read the TTree. I have prepared a self-contained minimal working example attached to this topic: [mwe.tgz|attachment](upload://34Fdg60DY7tGGh6cw40YICFFhLy.tgz) (224.3 KB) . The archive contains the following README.md with more details on how to reproduce the issue, and on the exact content of the archive:. Steps to reproduce issue on Minimal Working Example (MWE); =============================; - Set the ROOT_INCLUDE_PATH and LD_LIBRARY_PATH; `source env.sh`; - Compile the minimal persistency library; `make`; - Run test code on new persistency (opens pluto_newpers.root and reads the tree successfully); `root read_updated.C\(1\)`; or; `read_updated 1`; - Run test code on old persistency (opens pluto_oldpers.root and crashes when trying to read the tree); `root read_updated.C(\(0\)`; or; `read_updated 0`. The crash is traced back to line 109 of PersistencyDICT.cxx; `static Long_t offset_Onfile_TVHit_fMCTrackID = oldObj->GetClass()->GetDataMemberOffset(""fMCTrackID"");`; where GetClass returns a nullptr. Content of the archive; ======================; - The header files in include contain the current definition of the minimal persistency necessary to ; read the input files (TVHit version 2).; - The source files in src are there for the sake of compilation but should not; have an influence on reading the input file (right?). ; - The header files in include_oldpers are included for documentation and correspond to the difference; between the old persistency (TVHit version 1) and the new persistency (TVHit version 2).; - PersistencyLinkDef.hh is the current linkdef file. The ""#pragma"" line at the end is our attempts; to make the previous persistency comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7754
https://github.com/root-project/root/issues/7754:766,Usability,simpl,simply,766,"See https://root-forum.cern.ch/t/segfault-when-using-schema-evolution/43765. Hello,. We have an issue that we have not been able to solve, nor understand. We hope you can provide some help. We have a class written into a TTree with one of its Base class having been modified. We have udpated the class version during the modification. In the ROOT file, we have version 1 of the class (TVHit) while in the current software, we have version 2 of the class. We wrote in the LinkDef file a #pragma instruction on how to transform v1 into v2. When this #pragma line is omitted, we obviously read the wrong information from the input file, because the definition in the code does not correspond to the definition on file (as expected). But when using the #pragma line, we simply get a segfault while trying to read the TTree. I have prepared a self-contained minimal working example attached to this topic: [mwe.tgz|attachment](upload://34Fdg60DY7tGGh6cw40YICFFhLy.tgz) (224.3 KB) . The archive contains the following README.md with more details on how to reproduce the issue, and on the exact content of the archive:. Steps to reproduce issue on Minimal Working Example (MWE); =============================; - Set the ROOT_INCLUDE_PATH and LD_LIBRARY_PATH; `source env.sh`; - Compile the minimal persistency library; `make`; - Run test code on new persistency (opens pluto_newpers.root and reads the tree successfully); `root read_updated.C\(1\)`; or; `read_updated 1`; - Run test code on old persistency (opens pluto_oldpers.root and crashes when trying to read the tree); `root read_updated.C(\(0\)`; or; `read_updated 0`. The crash is traced back to line 109 of PersistencyDICT.cxx; `static Long_t offset_Onfile_TVHit_fMCTrackID = oldObj->GetClass()->GetDataMemberOffset(""fMCTrackID"");`; where GetClass returns a nullptr. Content of the archive; ======================; - The header files in include contain the current definition of the minimal persistency necessary to ; read the input files (TVHit ve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7754
https://github.com/root-project/root/pull/7755:48,Deployability,configurat,configuration,48,It was using the wrong signature leading to the configuration to be mis-read. Fixes #7754,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7755
https://github.com/root-project/root/pull/7755:48,Modifiability,config,configuration,48,It was using the wrong signature leading to the configuration to be mis-read. Fixes #7754,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7755
https://github.com/root-project/root/pull/7756:9,Availability,error,errors,9,Markdown errors lead to incorrect rendering of the ROOT user guide. Some elements are rendered wider than the body width. Therefore annoying horizontal scrollbar is present on the User Guide web page:. https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7756
https://github.com/root-project/root/pull/7756:61,Usability,guid,guide,61,Markdown errors lead to incorrect rendering of the ROOT user guide. Some elements are rendered wider than the body width. Therefore annoying horizontal scrollbar is present on the User Guide web page:. https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7756
https://github.com/root-project/root/pull/7756:185,Usability,Guid,Guide,185,Markdown errors lead to incorrect rendering of the ROOT user guide. Some elements are rendered wider than the body width. Therefore annoying horizontal scrollbar is present on the User Guide web page:. https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7756
https://github.com/root-project/root/pull/7756:233,Usability,guid,guides,233,Markdown errors lead to incorrect rendering of the ROOT user guide. Some elements are rendered wider than the body width. Therefore annoying horizontal scrollbar is present on the User Guide web page:. https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7756
https://github.com/root-project/root/pull/7756:246,Usability,guid,guide,246,Markdown errors lead to incorrect rendering of the ROOT user guide. Some elements are rendered wider than the body width. Therefore annoying horizontal scrollbar is present on the User Guide web page:. https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7756
https://github.com/root-project/root/pull/7757:164,Integrability,message,message,164,"Backport of [D99607](https://reviews.llvm.org/D99607), commit https://github.com/llvm/llvm-project/commit/6415f424bc2a3bbb4f2fd7bb67863968ac3c19f6. Original commit message:; ```; When using the large code model with FastISel (for example via; clang -O0 which adds the optnone attribute), FP constants could; still be materialized using adrp + ldr. Unconditionally enable; the existing path for MachO to materialize the constant in code. [...]; ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123 for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7757
https://github.com/root-project/root/pull/7758:71,Integrability,message,message,71,"Backport of [D99607](https://reviews.llvm.org/D99607). Original commit message:; ```; When using the large code model with FastISel (for example via; clang -O0 which adds the optnone attribute), FP constants could; still be materialized using adrp + ldr. Unconditionally enable; the existing path for MachO to materialize the constant in code. [...]; ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123 for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7758
https://github.com/root-project/root/pull/7760:123,Availability,error,error,123,Only builds using LLVM 9 source works right now (using `--with-binary-llvm` and `--with-llvm-tar` flags will cause a build error). A single test fails. Reproducer - `cat <path to cling source dir>/test/Lookup/template.C | cling --nologo -I<path to build dir>/tools/clang/include -Xclang -verify -fno-rtti 2>&1`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7760
https://github.com/root-project/root/pull/7760:140,Testability,test,test,140,Only builds using LLVM 9 source works right now (using `--with-binary-llvm` and `--with-llvm-tar` flags will cause a build error). A single test fails. Reproducer - `cat <path to cling source dir>/test/Lookup/template.C | cling --nologo -I<path to build dir>/tools/clang/include -Xclang -verify -fno-rtti 2>&1`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7760
https://github.com/root-project/root/pull/7760:197,Testability,test,test,197,Only builds using LLVM 9 source works right now (using `--with-binary-llvm` and `--with-llvm-tar` flags will cause a build error). A single test fails. Reproducer - `cat <path to cling source dir>/test/Lookup/template.C | cling --nologo -I<path to build dir>/tools/clang/include -Xclang -verify -fno-rtti 2>&1`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7760
https://github.com/root-project/root/pull/7763:148,Energy Efficiency,reduce,reduce,148,As llvm JIT cannot catch exceptions on Apple M1 (see; https://github.com/root-project/root/issues/7541) cling; should throw less. This is a hack to reduce the impact; a bit. (cherry picked from commit f7a3eeb6b4a9ebf8d6452fc77a1fd1ed75570c41),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7763
https://github.com/root-project/root/pull/7766:377,Deployability,update,updates,377,"Hi Jonas (@guitargeek) and Lorenzo (@lmoneta) ,. I am opening a draft pull request with the bulk of the code for the morphing class. The morphing class consist of the RooLagrangianMorphFunc which builds the necessary morphing function and is assisted by a lightweight config class which allows to configure the morphfunc in various ways. ; ; The code is WIP and there are more updates expected in subsequent PRs. The main discussion is the way the objects are handled by the config and the morphfunc and support for factory style syntax. The code for the tutorials and the optimizer for the choice of input templates is also postponed to a subsequent PR as this is tied to the previous issue. There are some more issues regarding having boost high precision which can be a separate PR.; ; Feel free to comment on this version to get the review started !; ; Cheers,; Rahul and Carsten (@cburgard)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7766
https://github.com/root-project/root/pull/7766:268,Modifiability,config,config,268,"Hi Jonas (@guitargeek) and Lorenzo (@lmoneta) ,. I am opening a draft pull request with the bulk of the code for the morphing class. The morphing class consist of the RooLagrangianMorphFunc which builds the necessary morphing function and is assisted by a lightweight config class which allows to configure the morphfunc in various ways. ; ; The code is WIP and there are more updates expected in subsequent PRs. The main discussion is the way the objects are handled by the config and the morphfunc and support for factory style syntax. The code for the tutorials and the optimizer for the choice of input templates is also postponed to a subsequent PR as this is tied to the previous issue. There are some more issues regarding having boost high precision which can be a separate PR.; ; Feel free to comment on this version to get the review started !; ; Cheers,; Rahul and Carsten (@cburgard)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7766
https://github.com/root-project/root/pull/7766:297,Modifiability,config,configure,297,"Hi Jonas (@guitargeek) and Lorenzo (@lmoneta) ,. I am opening a draft pull request with the bulk of the code for the morphing class. The morphing class consist of the RooLagrangianMorphFunc which builds the necessary morphing function and is assisted by a lightweight config class which allows to configure the morphfunc in various ways. ; ; The code is WIP and there are more updates expected in subsequent PRs. The main discussion is the way the objects are handled by the config and the morphfunc and support for factory style syntax. The code for the tutorials and the optimizer for the choice of input templates is also postponed to a subsequent PR as this is tied to the previous issue. There are some more issues regarding having boost high precision which can be a separate PR.; ; Feel free to comment on this version to get the review started !; ; Cheers,; Rahul and Carsten (@cburgard)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7766
https://github.com/root-project/root/pull/7766:475,Modifiability,config,config,475,"Hi Jonas (@guitargeek) and Lorenzo (@lmoneta) ,. I am opening a draft pull request with the bulk of the code for the morphing class. The morphing class consist of the RooLagrangianMorphFunc which builds the necessary morphing function and is assisted by a lightweight config class which allows to configure the morphfunc in various ways. ; ; The code is WIP and there are more updates expected in subsequent PRs. The main discussion is the way the objects are handled by the config and the morphfunc and support for factory style syntax. The code for the tutorials and the optimizer for the choice of input templates is also postponed to a subsequent PR as this is tied to the previous issue. There are some more issues regarding having boost high precision which can be a separate PR.; ; Feel free to comment on this version to get the review started !; ; Cheers,; Rahul and Carsten (@cburgard)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7766
https://github.com/root-project/root/pull/7766:573,Performance,optimiz,optimizer,573,"Hi Jonas (@guitargeek) and Lorenzo (@lmoneta) ,. I am opening a draft pull request with the bulk of the code for the morphing class. The morphing class consist of the RooLagrangianMorphFunc which builds the necessary morphing function and is assisted by a lightweight config class which allows to configure the morphfunc in various ways. ; ; The code is WIP and there are more updates expected in subsequent PRs. The main discussion is the way the objects are handled by the config and the morphfunc and support for factory style syntax. The code for the tutorials and the optimizer for the choice of input templates is also postponed to a subsequent PR as this is tied to the previous issue. There are some more issues regarding having boost high precision which can be a separate PR.; ; Feel free to comment on this version to get the review started !; ; Cheers,; Rahul and Carsten (@cburgard)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7766
https://github.com/root-project/root/pull/7768:48,Deployability,configurat,configuration,48,It was using the wrong signature leading to the configuration to be mis-read. Fixes #7754,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7768
https://github.com/root-project/root/pull/7768:48,Modifiability,config,configuration,48,It was using the wrong signature leading to the configuration to be mis-read. Fixes #7754,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7768
https://github.com/root-project/root/pull/7770:185,Deployability,install,installed,185,"Distributed RDataFrame internally checks the category an operation belongs to (e.g. transformation, action) through enums in Python. The enum package was added in Python 3.4 and can be installed in previous Python versions, so it should be added to requirements.txt with a check on the python version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7770
https://github.com/root-project/root/pull/7772:148,Integrability,depend,dependency,148,Removing usage of enum is easy in favor of using builtin strings to distinguish operation type in distributed RDataFrame. This also avoids an extra dependency for Python2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7772
https://github.com/root-project/root/pull/7772:132,Safety,avoid,avoids,132,Removing usage of enum is easy in favor of using builtin strings to distinguish operation type in distributed RDataFrame. This also avoids an extra dependency for Python2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7772
https://github.com/root-project/root/pull/7773:10,Usability,simpl,simplified,10,"This is a simplified version of #7752 . It does not provide the same protection against evil doing; this will come in a subsequent PR, where `Transaction` ownership will be passed through `unique_ptr`s. Note to reviewers @vgvassilev @pcanal : You have reviewed all but the last commit, ""LookupHelper must not unload Transactions""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7773
https://github.com/root-project/root/issues/7774:1118,Availability,down,down,1118,"on script through `ROOT.gSystem.CompileMacro()`. It is unreasonably slow to load each time, O(minutes). When running with `""kO""` option it is better, but still long - too long for normal usage - whereas it should be instantaneous, if I understand correctly. I have tested ROOT 6.22 and with nightlies, and nightlies are even slower. The time for a first compilation, so how long it's processing the line `Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so`, for running a script and directly the CompileMacro command in ipython:; | Version | py file | ipython |; | --- | --- | --- |; |Nightlies | 3m25s | 1m55s |; |6.22 | 1m35s | 1m05s|. The run time with `""kO""` option for the 2nd iteration of running, once binaries are created:; | Version | py file |; | --- | --- | ; |Nightlies | 1m15s | ; |6.22 | 0m30s | . All above times are on same lxplus machine. Between different lxplus machines the timing changes, but at best e.g from 30s down to 20s. Another test for how much time has elapsed e.g.:; ```sh; for version in /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh ; do (; source $version;; echo $version;; root --version -q; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020, 15:14:08; From tags/v6-22-06@v6-22-06; 14.56user 22.74system 2:30.29elapsed 24%CPU (0avgtext+0avgdata 869920maxreside",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7774
https://github.com/root-project/root/issues/7774:1383,Availability,echo,echo,1383," nightlies, and nightlies are even slower. The time for a first compilation, so how long it's processing the line `Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so`, for running a script and directly the CompileMacro command in ipython:; | Version | py file | ipython |; | --- | --- | --- |; |Nightlies | 3m25s | 1m55s |; |6.22 | 1m35s | 1m05s|. The run time with `""kO""` option for the 2nd iteration of running, once binaries are created:; | Version | py file |; | --- | --- | ; |Nightlies | 1m15s | ; |6.22 | 0m30s | . All above times are on same lxplus machine. Between different lxplus machines the timing changes, but at best e.g from 30s down to 20s. Another test for how much time has elapsed e.g.:; ```sh; for version in /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh ; do (; source $version;; echo $version;; root --version -q; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020, 15:14:08; From tags/v6-22-06@v6-22-06; 14.56user 22.74system 2:30.29elapsed 24%CPU (0avgtext+0avgdata 869920maxresident)k; 14.52user 21.71system 2:08.49elapsed 28%CPU (0avgtext+0avgdata 870036maxresident)k; 14.26user 21.65system 1:13.75elapsed 48%CPU (0avgtext+0avgdata 869908maxresident)k; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh; ROOT Version: 6.25/01; Built f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7774
https://github.com/root-project/root/issues/7774:194,Performance,load,load,194,"- [x] Checked for duplicates. ### Describe the bug; I have a PDF class implemented in C++ that I want to use in a python script through `ROOT.gSystem.CompileMacro()`. It is unreasonably slow to load each time, O(minutes). When running with `""kO""` option it is better, but still long - too long for normal usage - whereas it should be instantaneous, if I understand correctly. I have tested ROOT 6.22 and with nightlies, and nightlies are even slower. The time for a first compilation, so how long it's processing the line `Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so`, for running a script and directly the CompileMacro command in ipython:; | Version | py file | ipython |; | --- | --- | --- |; |Nightlies | 3m25s | 1m55s |; |6.22 | 1m35s | 1m05s|. The run time with `""kO""` option for the 2nd iteration of running, once binaries are created:; | Version | py file |; | --- | --- | ; |Nightlies | 1m15s | ; |6.22 | 0m30s | . All above times are on same lxplus machine. Between different lxplus machines the timing changes, but at best e.g from 30s down to 20s. Another test for how much time has elapsed e.g.:; ```sh; for version in /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh ; do (; source $version;; echo $version;; root --version -q; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7774
https://github.com/root-project/root/issues/7774:3603,Performance,load,loading,3603,"cro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020, 15:14:08; From tags/v6-22-06@v6-22-06; 14.56user 22.74system 2:30.29elapsed 24%CPU (0avgtext+0avgdata 869920maxresident)k; 14.52user 21.71system 2:08.49elapsed 28%CPU (0avgtext+0avgdata 870036maxresident)k; 14.26user 21.65system 1:13.75elapsed 48%CPU (0avgtext+0avgdata 869908maxresident)k; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh; ROOT Version: 6.25/01; Built for linuxx8664gcc on Apr 01 2021, 03:35:00; From heads/master@v6-25-01-520-g875e8fb; 14.66user 24.65system 1:47.89elapsed 36%CPU (0avgtext+0avgdata 936048maxresident)k; 14.36user 23.63system 1:15.73elapsed 50%CPU (0avgtext+0avgdata 936036maxresident)k; 17.88user 26.28system 10:23.67elapsed 7%CPU (0avgtext+0avgdata 936052maxresident)k; ```; ### Expected behavior; Once binaries are created, there should be an option for an almost instantaneous run on the next iterations. . ### To Reproduce; All files are in `/afs/cern.ch/user/t/tnanut/public/Stephan/` (neither format is allowed to be attached).; ```py; python3 /afs/cern.ch/user/t/tnanut/public/Stephan/testRooThreshold.py; ```. ### Setup; 1. ROOT version: 6.22/06 and latest nightlies version; 2. Operating system: lxplus; 3. How you obtained ROOT:; Nightlies:; ```; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh; ```; 6.22: through LHCb; ```; /cvmfs/lhcbdev.cern.ch/conda/envs/default/2021-02-03_15-01/linux-64/bin/root; ```. ### Additional context; I'd be also interested if you know an alternative method how to implement the class from the .cpp file into python, that can provide nearly instantaneous loading on reruns.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7774
https://github.com/root-project/root/issues/7774:383,Testability,test,tested,383,"- [x] Checked for duplicates. ### Describe the bug; I have a PDF class implemented in C++ that I want to use in a python script through `ROOT.gSystem.CompileMacro()`. It is unreasonably slow to load each time, O(minutes). When running with `""kO""` option it is better, but still long - too long for normal usage - whereas it should be instantaneous, if I understand correctly. I have tested ROOT 6.22 and with nightlies, and nightlies are even slower. The time for a first compilation, so how long it's processing the line `Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so`, for running a script and directly the CompileMacro command in ipython:; | Version | py file | ipython |; | --- | --- | --- |; |Nightlies | 3m25s | 1m55s |; |6.22 | 1m35s | 1m05s|. The run time with `""kO""` option for the 2nd iteration of running, once binaries are created:; | Version | py file |; | --- | --- | ; |Nightlies | 1m15s | ; |6.22 | 0m30s | . All above times are on same lxplus machine. Between different lxplus machines the timing changes, but at best e.g from 30s down to 20s. Another test for how much time has elapsed e.g.:; ```sh; for version in /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh ; do (; source $version;; echo $version;; root --version -q; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7774
https://github.com/root-project/root/issues/7774:1139,Testability,test,test,1139,"pileMacro()`. It is unreasonably slow to load each time, O(minutes). When running with `""kO""` option it is better, but still long - too long for normal usage - whereas it should be instantaneous, if I understand correctly. I have tested ROOT 6.22 and with nightlies, and nightlies are even slower. The time for a first compilation, so how long it's processing the line `Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so`, for running a script and directly the CompileMacro command in ipython:; | Version | py file | ipython |; | --- | --- | --- |; |Nightlies | 3m25s | 1m55s |; |6.22 | 1m35s | 1m05s|. The run time with `""kO""` option for the 2nd iteration of running, once binaries are created:; | Version | py file |; | --- | --- | ; |Nightlies | 1m15s | ; |6.22 | 0m30s | . All above times are on same lxplus machine. Between different lxplus machines the timing changes, but at best e.g from 30s down to 20s. Another test for how much time has elapsed e.g.:; ```sh; for version in /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh ; do (; source $version;; echo $version;; root --version -q; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020, 15:14:08; From tags/v6-22-06@v6-22-06; 14.56user 22.74system 2:30.29elapsed 24%CPU (0avgtext+0avgdata 869920maxresident)k; 14.52user 21.71system 2:08.4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7774
https://github.com/root-project/root/issues/7774:3065,Testability,test,testRooThreshold,3065,"cro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020, 15:14:08; From tags/v6-22-06@v6-22-06; 14.56user 22.74system 2:30.29elapsed 24%CPU (0avgtext+0avgdata 869920maxresident)k; 14.52user 21.71system 2:08.49elapsed 28%CPU (0avgtext+0avgdata 870036maxresident)k; 14.26user 21.65system 1:13.75elapsed 48%CPU (0avgtext+0avgdata 869908maxresident)k; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh; ROOT Version: 6.25/01; Built for linuxx8664gcc on Apr 01 2021, 03:35:00; From heads/master@v6-25-01-520-g875e8fb; 14.66user 24.65system 1:47.89elapsed 36%CPU (0avgtext+0avgdata 936048maxresident)k; 14.36user 23.63system 1:15.73elapsed 50%CPU (0avgtext+0avgdata 936036maxresident)k; 17.88user 26.28system 10:23.67elapsed 7%CPU (0avgtext+0avgdata 936052maxresident)k; ```; ### Expected behavior; Once binaries are created, there should be an option for an almost instantaneous run on the next iterations. . ### To Reproduce; All files are in `/afs/cern.ch/user/t/tnanut/public/Stephan/` (neither format is allowed to be attached).; ```py; python3 /afs/cern.ch/user/t/tnanut/public/Stephan/testRooThreshold.py; ```. ### Setup; 1. ROOT version: 6.22/06 and latest nightlies version; 2. Operating system: lxplus; 3. How you obtained ROOT:; Nightlies:; ```; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh; ```; 6.22: through LHCb; ```; /cvmfs/lhcbdev.cern.ch/conda/envs/default/2021-02-03_15-01/linux-64/bin/root; ```. ### Additional context; I'd be also interested if you know an alternative method how to implement the class from the .cpp file into python, that can provide nearly instantaneous loading on reruns.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7774
https://github.com/root-project/root/pull/7777:235,Availability,ping,ping,235,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7777
https://github.com/root-project/root/pull/7777:177,Energy Efficiency,reduce,reduced,177,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7777
https://github.com/root-project/root/pull/7777:469,Energy Efficiency,power,powerful,469,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7777
https://github.com/root-project/root/pull/7777:4,Modifiability,config,configure,4,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7777
https://github.com/root-project/root/pull/7777:521,Security,integrity,integrity,521,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7777
https://github.com/root-project/root/pull/7777:277,Testability,test,test,277,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7777
https://github.com/root-project/root/pull/7777:408,Testability,test,tests,408,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7777
https://github.com/root-project/root/pull/7777:478,Testability,test,test,478,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7777
https://github.com/root-project/root/pull/7777:457,Usability,simpl,simple,457,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7777
https://github.com/root-project/root/pull/7778:62,Availability,error,errors,62,- Use different typedefs for (U)Longptr_t to prevent overload errors on Win32; - First round of replacing (U)Long_t with (U)Longptr_t where applicable (mostly on core) and fix the following kind of warnings (leading to errors when truncating pointers); `warning C4311: 'type cast': pointer truncation from 'void *' to 'Long_t'`; `warning C4312: 'type cast': conversion from 'Long_t' to 'void *' of greater size`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7778
https://github.com/root-project/root/pull/7778:219,Availability,error,errors,219,- Use different typedefs for (U)Longptr_t to prevent overload errors on Win32; - First round of replacing (U)Long_t with (U)Longptr_t where applicable (mostly on core) and fix the following kind of warnings (leading to errors when truncating pointers); `warning C4311: 'type cast': pointer truncation from 'void *' to 'Long_t'`; `warning C4312: 'type cast': conversion from 'Long_t' to 'void *' of greater size`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7778
https://github.com/root-project/root/issues/7781:366,Deployability,Install,Install,366,"### Describe the bug; Problems with loading dictionaries created with 6.22.06 by the 6.22.08.; This is quite a minor thing per se but could indicate a larger problem. ### Expected behavior; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. [user@localhost]# ; ```. Dictionaries are loaded. ### To Reproduce; Install ROOT and HepMC3-rootIO from default Fedora repositories.; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. malloc(): invalid size (unsorted); [user@localhost]# ; ```; ### Setup; Fedora33 or Rawhide, root 6.22.08 HepMC3-rootIO from the default repositories. ### Additional context; Filled a request to rebuild against newest ROOT; https://bugzilla.redhat.com/show_bug.cgi?id=1945991",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7781
https://github.com/root-project/root/issues/7781:36,Performance,load,loading,36,"### Describe the bug; Problems with loading dictionaries created with 6.22.06 by the 6.22.08.; This is quite a minor thing per se but could indicate a larger problem. ### Expected behavior; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. [user@localhost]# ; ```. Dictionaries are loaded. ### To Reproduce; Install ROOT and HepMC3-rootIO from default Fedora repositories.; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. malloc(): invalid size (unsorted); [user@localhost]# ; ```; ### Setup; Fedora33 or Rawhide, root 6.22.08 HepMC3-rootIO from the default repositories. ### Additional context; Filled a request to rebuild against newest ROOT; https://bugzilla.redhat.com/show_bug.cgi?id=1945991",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7781
https://github.com/root-project/root/issues/7781:251,Performance,Load,Load,251,"### Describe the bug; Problems with loading dictionaries created with 6.22.06 by the 6.22.08.; This is quite a minor thing per se but could indicate a larger problem. ### Expected behavior; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. [user@localhost]# ; ```. Dictionaries are loaded. ### To Reproduce; Install ROOT and HepMC3-rootIO from default Fedora repositories.; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. malloc(): invalid size (unsorted); [user@localhost]# ; ```; ### Setup; Fedora33 or Rawhide, root 6.22.08 HepMC3-rootIO from the default repositories. ### Additional context; Filled a request to rebuild against newest ROOT; https://bugzilla.redhat.com/show_bug.cgi?id=1945991",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7781
https://github.com/root-project/root/issues/7781:340,Performance,load,loaded,340,"### Describe the bug; Problems with loading dictionaries created with 6.22.06 by the 6.22.08.; This is quite a minor thing per se but could indicate a larger problem. ### Expected behavior; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. [user@localhost]# ; ```. Dictionaries are loaded. ### To Reproduce; Install ROOT and HepMC3-rootIO from default Fedora repositories.; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. malloc(): invalid size (unsorted); [user@localhost]# ; ```; ### Setup; Fedora33 or Rawhide, root 6.22.08 HepMC3-rootIO from the default repositories. ### Additional context; Filled a request to rebuild against newest ROOT; https://bugzilla.redhat.com/show_bug.cgi?id=1945991",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7781
https://github.com/root-project/root/issues/7781:493,Performance,Load,Load,493,"### Describe the bug; Problems with loading dictionaries created with 6.22.06 by the 6.22.08.; This is quite a minor thing per se but could indicate a larger problem. ### Expected behavior; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. [user@localhost]# ; ```. Dictionaries are loaded. ### To Reproduce; Install ROOT and HepMC3-rootIO from default Fedora repositories.; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. malloc(): invalid size (unsorted); [user@localhost]# ; ```; ### Setup; Fedora33 or Rawhide, root 6.22.08 HepMC3-rootIO from the default repositories. ### Additional context; Filled a request to rebuild against newest ROOT; https://bugzilla.redhat.com/show_bug.cgi?id=1945991",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7781
https://github.com/root-project/root/issues/7782:505,Availability,avail,available,505,"### Is your feature request related to a problem? Please describe.; I want to create a frame for a _RooFormulaVar_. Unfortunately, it doesn't have a method _frame()_, so I wanted to use a _RooPlot_ constructor to create the frame, and later use the existing _plotOn()_ method of _RooFormulaVar_. However, it seems that [RooPlot](https://root.cern.ch/doc/master/classRooPlot.html) allows setting the number of bins only for _RooAbsRealLValue_, which is inconsistent. No method to set the number of bins is available. The underlying access to _nbins_ is private. ### Describe the solution you'd like; Allow to set the number of bins in all constructors. Maybe there should be a separate method for that, but it may be dangerous if someone tries to change the number of bins in the middle of processing. ### Describe alternatives you've considered; I already decided to use a new _RooRealVar_ instead of _RooFormulaVar_, but I think that a plot should allow to set the number of bins. UPD: no, there are no arguments to change the number of bins in _plotOn_. It seems it can be set only for the Plot.; _It looks like I can set the number of bins during _plotOn_ of _RooFormulaVar_. This is great. However, I think that in this case the number of bins in the constructor should be removed, to reduce code duplication. At least it should be made consistent in all constructors (see no reason for the otherwise, but I don't understand RooFit well yet)._. P.S. There is also a typo in the _RooPlot_ class description, ""settting"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7782
https://github.com/root-project/root/issues/7782:1289,Energy Efficiency,reduce,reduce,1289,"### Is your feature request related to a problem? Please describe.; I want to create a frame for a _RooFormulaVar_. Unfortunately, it doesn't have a method _frame()_, so I wanted to use a _RooPlot_ constructor to create the frame, and later use the existing _plotOn()_ method of _RooFormulaVar_. However, it seems that [RooPlot](https://root.cern.ch/doc/master/classRooPlot.html) allows setting the number of bins only for _RooAbsRealLValue_, which is inconsistent. No method to set the number of bins is available. The underlying access to _nbins_ is private. ### Describe the solution you'd like; Allow to set the number of bins in all constructors. Maybe there should be a separate method for that, but it may be dangerous if someone tries to change the number of bins in the middle of processing. ### Describe alternatives you've considered; I already decided to use a new _RooRealVar_ instead of _RooFormulaVar_, but I think that a plot should allow to set the number of bins. UPD: no, there are no arguments to change the number of bins in _plotOn_. It seems it can be set only for the Plot.; _It looks like I can set the number of bins during _plotOn_ of _RooFormulaVar_. This is great. However, I think that in this case the number of bins in the constructor should be removed, to reduce code duplication. At least it should be made consistent in all constructors (see no reason for the otherwise, but I don't understand RooFit well yet)._. P.S. There is also a typo in the _RooPlot_ class description, ""settting"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7782
https://github.com/root-project/root/issues/7782:531,Security,access,access,531,"### Is your feature request related to a problem? Please describe.; I want to create a frame for a _RooFormulaVar_. Unfortunately, it doesn't have a method _frame()_, so I wanted to use a _RooPlot_ constructor to create the frame, and later use the existing _plotOn()_ method of _RooFormulaVar_. However, it seems that [RooPlot](https://root.cern.ch/doc/master/classRooPlot.html) allows setting the number of bins only for _RooAbsRealLValue_, which is inconsistent. No method to set the number of bins is available. The underlying access to _nbins_ is private. ### Describe the solution you'd like; Allow to set the number of bins in all constructors. Maybe there should be a separate method for that, but it may be dangerous if someone tries to change the number of bins in the middle of processing. ### Describe alternatives you've considered; I already decided to use a new _RooRealVar_ instead of _RooFormulaVar_, but I think that a plot should allow to set the number of bins. UPD: no, there are no arguments to change the number of bins in _plotOn_. It seems it can be set only for the Plot.; _It looks like I can set the number of bins during _plotOn_ of _RooFormulaVar_. This is great. However, I think that in this case the number of bins in the constructor should be removed, to reduce code duplication. At least it should be made consistent in all constructors (see no reason for the otherwise, but I don't understand RooFit well yet)._. P.S. There is also a typo in the _RooPlot_ class description, ""settting"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7782
https://github.com/root-project/root/pull/7783:135,Integrability,wrap,wraps,135,"Implement a basic buffered page sink, to try and coalesce column page writes within a single cluster. The buffered sink `RPageSinkBuf` wraps another page sink, e.g. `RPageSinkFile` and buffers calls to the inner sink's `CommitPage` method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7783
https://github.com/root-project/root/pull/7784:747,Safety,abort,aborting,747,"Add range checks to `RNTupleView`'s indexing operators. Before this change out of bounds accesses were being caught by an internal assert (in `RPageStorageFile::PopulatePage`); ```cpp; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""myNTuple"", path);; ntuple->Fill();; ntuple->Fill();; // ntuple has 2 entries; }; auto ntuple = RNTupleReader::Open(""myNTuple"", path);; auto viewPt = ntuple->GetView<float>(""pt"");; std::cout << viewPt(2); // attempt to access the pt field at offset 2 ; ```. Before:; ```; Fatal: clusterId != kInvalidDescriptorId violated at line 400 of `/home/max/projects/rootdev/root/tree/ntuple/v7/src/RPageStorageFile.cxx'; aborting; ```. The assert location:; https://github.com/root-project/root/blob/a4b812bad84be0986ee416bbd65cf44527b92404/tree/ntuple/v7/src/RPageStorageFile.cxx#L391-L400. After this change we throw an exception like:; ```; index 2 out of bounds for field 'pt' with 2 elements; ```. This also required a change to `RFieldBase::GetNElements` to handle a few field corner cases: ; * before columns are generated; * class fields (which do not have a principal column)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7784
https://github.com/root-project/root/pull/7784:89,Security,access,accesses,89,"Add range checks to `RNTupleView`'s indexing operators. Before this change out of bounds accesses were being caught by an internal assert (in `RPageStorageFile::PopulatePage`); ```cpp; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""myNTuple"", path);; ntuple->Fill();; ntuple->Fill();; // ntuple has 2 entries; }; auto ntuple = RNTupleReader::Open(""myNTuple"", path);; auto viewPt = ntuple->GetView<float>(""pt"");; std::cout << viewPt(2); // attempt to access the pt field at offset 2 ; ```. Before:; ```; Fatal: clusterId != kInvalidDescriptorId violated at line 400 of `/home/max/projects/rootdev/root/tree/ntuple/v7/src/RPageStorageFile.cxx'; aborting; ```. The assert location:; https://github.com/root-project/root/blob/a4b812bad84be0986ee416bbd65cf44527b92404/tree/ntuple/v7/src/RPageStorageFile.cxx#L391-L400. After this change we throw an exception like:; ```; index 2 out of bounds for field 'pt' with 2 elements; ```. This also required a change to `RFieldBase::GetNElements` to handle a few field corner cases: ; * before columns are generated; * class fields (which do not have a principal column)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7784
https://github.com/root-project/root/pull/7784:554,Security,access,access,554,"Add range checks to `RNTupleView`'s indexing operators. Before this change out of bounds accesses were being caught by an internal assert (in `RPageStorageFile::PopulatePage`); ```cpp; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""myNTuple"", path);; ntuple->Fill();; ntuple->Fill();; // ntuple has 2 entries; }; auto ntuple = RNTupleReader::Open(""myNTuple"", path);; auto viewPt = ntuple->GetView<float>(""pt"");; std::cout << viewPt(2); // attempt to access the pt field at offset 2 ; ```. Before:; ```; Fatal: clusterId != kInvalidDescriptorId violated at line 400 of `/home/max/projects/rootdev/root/tree/ntuple/v7/src/RPageStorageFile.cxx'; aborting; ```. The assert location:; https://github.com/root-project/root/blob/a4b812bad84be0986ee416bbd65cf44527b92404/tree/ntuple/v7/src/RPageStorageFile.cxx#L391-L400. After this change we throw an exception like:; ```; index 2 out of bounds for field 'pt' with 2 elements; ```. This also required a change to `RFieldBase::GetNElements` to handle a few field corner cases: ; * before columns are generated; * class fields (which do not have a principal column)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7784
https://github.com/root-project/root/pull/7784:131,Testability,assert,assert,131,"Add range checks to `RNTupleView`'s indexing operators. Before this change out of bounds accesses were being caught by an internal assert (in `RPageStorageFile::PopulatePage`); ```cpp; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""myNTuple"", path);; ntuple->Fill();; ntuple->Fill();; // ntuple has 2 entries; }; auto ntuple = RNTupleReader::Open(""myNTuple"", path);; auto viewPt = ntuple->GetView<float>(""pt"");; std::cout << viewPt(2); // attempt to access the pt field at offset 2 ; ```. Before:; ```; Fatal: clusterId != kInvalidDescriptorId violated at line 400 of `/home/max/projects/rootdev/root/tree/ntuple/v7/src/RPageStorageFile.cxx'; aborting; ```. The assert location:; https://github.com/root-project/root/blob/a4b812bad84be0986ee416bbd65cf44527b92404/tree/ntuple/v7/src/RPageStorageFile.cxx#L391-L400. After this change we throw an exception like:; ```; index 2 out of bounds for field 'pt' with 2 elements; ```. This also required a change to `RFieldBase::GetNElements` to handle a few field corner cases: ; * before columns are generated; * class fields (which do not have a principal column)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7784
https://github.com/root-project/root/pull/7784:766,Testability,assert,assert,766,"Add range checks to `RNTupleView`'s indexing operators. Before this change out of bounds accesses were being caught by an internal assert (in `RPageStorageFile::PopulatePage`); ```cpp; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""myNTuple"", path);; ntuple->Fill();; ntuple->Fill();; // ntuple has 2 entries; }; auto ntuple = RNTupleReader::Open(""myNTuple"", path);; auto viewPt = ntuple->GetView<float>(""pt"");; std::cout << viewPt(2); // attempt to access the pt field at offset 2 ; ```. Before:; ```; Fatal: clusterId != kInvalidDescriptorId violated at line 400 of `/home/max/projects/rootdev/root/tree/ntuple/v7/src/RPageStorageFile.cxx'; aborting; ```. The assert location:; https://github.com/root-project/root/blob/a4b812bad84be0986ee416bbd65cf44527b92404/tree/ntuple/v7/src/RPageStorageFile.cxx#L391-L400. After this change we throw an exception like:; ```; index 2 out of bounds for field 'pt' with 2 elements; ```. This also required a change to `RFieldBase::GetNElements` to handle a few field corner cases: ; * before columns are generated; * class fields (which do not have a principal column)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7784
https://github.com/root-project/root/pull/7785:92,Availability,avail,available,92,"~~Bring utility functions from TTreeProcessorMT in their own inline namespace, to make them available for internal use in parallel algorithms.~~. ### EDIT: ; After discussion it was decided that these functions are generic enough to be brought in `libTree` and given their own namespace for our internal use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7785
https://github.com/root-project/root/issues/7786:2064,Availability,Error,Error,2064,"command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: Command not found; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The cause seems to be the `sed` substitutions at https://github.com/root-project/root/blob/aee48761f0c4a4d91d0a16c367ca3b66a597a484/graf2d/asimage/src/libAfterImage/configure#L2834 (thanks @chrisburr ). @dennisklein mentioned that in homebrew they work around the issue with [this patch](https://github.com/FairRootGroup/homebrew-fairsoft/blob/a0d012d9138c3673af171644340a58c7bd5cbc99/Formula/fairsoft%4020.11.rb#L105-L111). @amadio suggested we should ""use / as separator and escape the slashes that are part of the patterns themselves."". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Build ROOT with built-in libafterimage in a directory with a path that contains a `@`. ### Additional context; <!--; Add any other context about the problem here.; -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7786
https://github.com/root-project/root/issues/7786:3091,Availability,avail,available,3091,"bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: Command not found; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The cause seems to be the `sed` substitutions at https://github.com/root-project/root/blob/aee48761f0c4a4d91d0a16c367ca3b66a597a484/graf2d/asimage/src/libAfterImage/configure#L2834 (thanks @chrisburr ). @dennisklein mentioned that in homebrew they work around the issue with [this patch](https://github.com/FairRootGroup/homebrew-fairsoft/blob/a0d012d9138c3673af171644340a58c7bd5cbc99/Formula/fairsoft%4020.11.rb#L105-L111). @amadio suggested we should ""use / as separator and escape the slashes that are part of the patterns themselves."". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Build ROOT with built-in libafterimage in a directory with a path that contains a `@`. ### Additional context; <!--; Add any other context about the problem here.; -->. Further discussion available at https://mattermost.web.cern.ch/root/pl/zszko6zhwjnsprxjk54gu5ye6h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7786
https://github.com/root-project/root/issues/7786:583,Deployability,install,installing,583,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The symptom is the following:. ```; /usr/bin/mkdir -p /data/ssdext4/rdf_scaling/relwithdebinfo@master/include/libAfterImage; installing libAfterImage headers using command -; ""-m 644 <header> /data/ssdext4/rdf_scaling/relwithdebinfo@master/include/libAfterImage"" :; afterimage.h afterbase.h ascmap.h asfont.h asim_afterbase.h asimage.h asimagexml.h asstorage.h asvisual.h blender.h bmp.h char2uni.h draw.h export.h imencdec.h import.h pixmap.h scanline.h transform.h ungif.h xcf.h ximage.h xpm.h xwrap.h. /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: Command not found; /bin/sh: line 2: -m: c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7786
https://github.com/root-project/root/issues/7786:2048,Deployability,install,install,2048,"-p /data/ssdext4/rdf_scaling/relwithdebinfo@master/include/libAfterImage; installing libAfterImage headers using command -; ""-m 644 <header> /data/ssdext4/rdf_scaling/relwithdebinfo@master/include/libAfterImage"" :; afterimage.h afterbase.h ascmap.h asfont.h asim_afterbase.h asimage.h asimagexml.h asstorage.h asvisual.h blender.h bmp.h char2uni.h draw.h export.h imencdec.h import.h pixmap.h scanline.h transform.h ungif.h xcf.h ximage.h xpm.h xwrap.h. /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: Command not found; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The cause seems to be the `sed` substitutions at https://github.com/root-project/root/blob/aee48761f0c4a4d91d0a16c367ca3b66a597a484/graf2d/asimage/src/libAfterImage/configure#L2834 (thanks @chrisburr ). @dennisklein mentioned that in homebrew they work around the issue with [this patch](https://github.com/FairRootGroup/homebrew-fairsoft/blob/a0d012d9138c3673af171644340a58c7bd5cbc99/Formula/fairsoft%4020.11.rb#L105-L111). @ama",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7786
https://github.com/root-project/root/issues/7786:2361,Deployability,patch,patch,2361,"bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: Command not found; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The cause seems to be the `sed` substitutions at https://github.com/root-project/root/blob/aee48761f0c4a4d91d0a16c367ca3b66a597a484/graf2d/asimage/src/libAfterImage/configure#L2834 (thanks @chrisburr ). @dennisklein mentioned that in homebrew they work around the issue with [this patch](https://github.com/FairRootGroup/homebrew-fairsoft/blob/a0d012d9138c3673af171644340a58c7bd5cbc99/Formula/fairsoft%4020.11.rb#L105-L111). @amadio suggested we should ""use / as separator and escape the slashes that are part of the patterns themselves."". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Build ROOT with built-in libafterimage in a directory with a path that contains a `@`. ### Additional context; <!--; Add any other context about the problem here.; -->. Further discussion available at https://mattermost.web.cern.ch/root/pl/zszko6zhwjnsprxjk54gu5ye6h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7786
https://github.com/root-project/root/issues/7786:2245,Modifiability,config,configure,2245,"bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: Command not found; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The cause seems to be the `sed` substitutions at https://github.com/root-project/root/blob/aee48761f0c4a4d91d0a16c367ca3b66a597a484/graf2d/asimage/src/libAfterImage/configure#L2834 (thanks @chrisburr ). @dennisklein mentioned that in homebrew they work around the issue with [this patch](https://github.com/FairRootGroup/homebrew-fairsoft/blob/a0d012d9138c3673af171644340a58c7bd5cbc99/Formula/fairsoft%4020.11.rb#L105-L111). @amadio suggested we should ""use / as separator and escape the slashes that are part of the patterns themselves."". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Build ROOT with built-in libafterimage in a directory with a path that contains a `@`. ### Additional context; <!--; Add any other context about the problem here.; -->. Further discussion available at https://mattermost.web.cern.ch/root/pl/zszko6zhwjnsprxjk54gu5ye6h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7786
https://github.com/root-project/root/issues/7786:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The symptom is the following:. ```; /usr/bin/mkdir -p /data/ssdext4/rdf_scaling/relwithdebinfo@master/include/libAfterImage; installing libAfterImage headers using command -; ""-m 644 <header> /data/ssdext4/rdf_scaling/relwithdebinfo@master/include/libAfterImage"" :; afterimage.h afterbase.h ascmap.h asfont.h asim_afterbase.h asimage.h asimagexml.h asstorage.h asvisual.h blender.h bmp.h char2uni.h draw.h export.h imencdec.h import.h pixmap.h scanline.h transform.h ungif.h xcf.h ximage.h xpm.h xwrap.h. /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: Command not found; /bin/sh: line 2: -m: c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7786
https://github.com/root-project/root/pull/7787:352,Modifiability,extend,extended,352,"The argument `-Xclang -triple=...` completely bypasses Clang's Driver logic and only sets the triple in CC1. This suffices for most code generation tasks, but the Driver cannot compute the correct ABI and sets the generic AArch64 `aapcs` instead of the specific `darwinpcs`. In turn, this causes integer arguments with less than 32 bits not being sign-extended but being passed directly, which for example manifests as `(short)-1` being read as `65535` on the callee side. The new argument `--target=arm64-apple-darwin20.3.0` matches what Apple's and LLVM main's clang return for `--print-target-triple`. Fixes #7090",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7787
https://github.com/root-project/root/pull/7787:70,Testability,log,logic,70,"The argument `-Xclang -triple=...` completely bypasses Clang's Driver logic and only sets the triple in CC1. This suffices for most code generation tasks, but the Driver cannot compute the correct ABI and sets the generic AArch64 `aapcs` instead of the specific `darwinpcs`. In turn, this causes integer arguments with less than 32 bits not being sign-extended but being passed directly, which for example manifests as `(short)-1` being read as `65535` on the callee side. The new argument `--target=arm64-apple-darwin20.3.0` matches what Apple's and LLVM main's clang return for `--print-target-triple`. Fixes #7090",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7787
https://github.com/root-project/root/issues/7788:637,Availability,error,errors,637,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Creating a distributed RDataFrame with an in-memory-only TTree should not be possible. Currently, this case is untested and the following reproducer triggers a couple of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7788
https://github.com/root-project/root/issues/7788:1008,Availability,error,error,1008,"n; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Creating a distributed RDataFrame with an in-memory-only TTree should not be possible. Currently, this case is untested and the following reproducer triggers a couple of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent fallback to something completely different from t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7788
https://github.com/root-project/root/issues/7788:2460,Availability,down,download,2460,"e of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent fallback to something completely different from the requested input arguments. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should raise an exception if the user is trying to process an in-memory-only tree distributedly, similarly to how it's done in TTreeProcessorMT. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master; Fedora 32; Build from source. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7788
https://github.com/root-project/root/issues/7788:2442,Deployability,install,install,2442,"e of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent fallback to something completely different from the requested input arguments. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should raise an exception if the user is trying to process an in-memory-only tree distributedly, similarly to how it's done in TTreeProcessorMT. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master; Fedora 32; Build from source. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7788
https://github.com/root-project/root/issues/7788:1212,Security,access,access,1212," you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Creating a distributed RDataFrame with an in-memory-only TTree should not be possible. Currently, this case is untested and the following reproducer triggers a couple of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent fallback to something completely different from the requested input arguments. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should raise an exception if the user is tryin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7788
https://github.com/root-project/root/issues/7788:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Creating a distributed RDataFrame with an in-memory-only TTree should not be possible. Currently, this case is untested and the following reproducer triggers a couple of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7788
https://github.com/root-project/root/issues/7788:2112,Usability,clear,clear,2112,"e of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent fallback to something completely different from the requested input arguments. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should raise an exception if the user is trying to process an in-memory-only tree distributedly, similarly to how it's done in TTreeProcessorMT. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master; Fedora 32; Build from source. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7788
https://github.com/root-project/root/pull/7789:44,Deployability,release,release,44,Some numbered list did not show properly in release notes 6.24,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7789
https://github.com/root-project/root/issues/7790:2003,Availability,down,download,2003,"existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; At least I could not find any obvious ones that described the same problem. But it might be a more general problem in the python bindings which I have missed. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Defining new `TColor`s in python seems to pick the wrong constructor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In previous versions of ROOT (up to 6.20/04) the right constructor was picked here. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT as r. color_index = r.TColor.GetFreeColorIndex(); print(type(color_index), color_index) # just to be sure that color_index is indeed an int. # This seems to be chosing the TColor(float, float, float, float) constructor; # instead of the TColor(int, float, float, float, const char*, float); color = r.TColor(color_index, 0.1, 0.2, 0.3). # This should be 0.1, 0.2, 0.3, but will actually be the color index, 0.1, 0.2; print(color.GetRed(), color.GetBlue(), color.GetGreen()). # Explicitly passing an empty string to the constructor helps in picking the correct constructor; color = r.TColor(color_index + 1, 0.1, 0.2, 0.3, """"); print(color.GetRed(), color.GetBlue(), color.GetGreen()) # now is 0.1, 0.2, 0.3; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6.22/08 (built with system gcc 9.3.0 and python 3.8.5) on Ubuntu 20.04. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7790
https://github.com/root-project/root/issues/7790:1985,Deployability,install,install,1985,"existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; At least I could not find any obvious ones that described the same problem. But it might be a more general problem in the python bindings which I have missed. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Defining new `TColor`s in python seems to pick the wrong constructor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In previous versions of ROOT (up to 6.20/04) the right constructor was picked here. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT as r. color_index = r.TColor.GetFreeColorIndex(); print(type(color_index), color_index) # just to be sure that color_index is indeed an int. # This seems to be chosing the TColor(float, float, float, float) constructor; # instead of the TColor(int, float, float, float, const char*, float); color = r.TColor(color_index, 0.1, 0.2, 0.3). # This should be 0.1, 0.2, 0.3, but will actually be the color index, 0.1, 0.2; print(color.GetRed(), color.GetBlue(), color.GetGreen()). # Explicitly passing an empty string to the constructor helps in picking the correct constructor; color = r.TColor(color_index + 1, 0.1, 0.2, 0.3, """"); print(color.GetRed(), color.GetBlue(), color.GetGreen()) # now is 0.1, 0.2, 0.3; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6.22/08 (built with system gcc 9.3.0 and python 3.8.5) on Ubuntu 20.04. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7790
https://github.com/root-project/root/issues/7790:550,Usability,clear,clear,550,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; At least I could not find any obvious ones that described the same problem. But it might be a more general problem in the python bindings which I have missed. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Defining new `TColor`s in python seems to pick the wrong constructor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In previous versions of ROOT (up to 6.20/04) the right constructor was picked here. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT as r. color_index = r.TColor.GetFreeColorIndex(); print(type(color_index), color_index) # just to be sure that color_index is indeed an int. # This seems to be chosing the TColor(float, float, float, float) constructor; # instead of the TColor(int, float, float, float, const char*, float); color = r.TColor(color_index, 0.1, 0.2, 0.3). # This should be 0.1, 0.2, 0.3, but will actually be the color index, 0.1, 0.2; print(color.GetRed(), color.GetBlue(), color.GetGreen()). # Explicitly passing an empty string to the constructor helps in picking the correct constructor; color = r.TColor(color_index + 1, 0.1, 0.2, 0.3, """"); print(color.GetRed(), color.GetBlue(), color.GetGreen()) # now is 0.1, 0.2, 0.3; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7790
https://github.com/root-project/root/issues/7790:718,Usability,clear,clear,718,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; At least I could not find any obvious ones that described the same problem. But it might be a more general problem in the python bindings which I have missed. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Defining new `TColor`s in python seems to pick the wrong constructor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In previous versions of ROOT (up to 6.20/04) the right constructor was picked here. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT as r. color_index = r.TColor.GetFreeColorIndex(); print(type(color_index), color_index) # just to be sure that color_index is indeed an int. # This seems to be chosing the TColor(float, float, float, float) constructor; # instead of the TColor(int, float, float, float, const char*, float); color = r.TColor(color_index, 0.1, 0.2, 0.3). # This should be 0.1, 0.2, 0.3, but will actually be the color index, 0.1, 0.2; print(color.GetRed(), color.GetBlue(), color.GetGreen()). # Explicitly passing an empty string to the constructor helps in picking the correct constructor; color = r.TColor(color_index + 1, 0.1, 0.2, 0.3, """"); print(color.GetRed(), color.GetBlue(), color.GetGreen()) # now is 0.1, 0.2, 0.3; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7790
https://github.com/root-project/root/pull/7792:355,Modifiability,extend,extended,355,"The argument -Xclang -triple=... completely bypasses Clang's Driver; logic and only sets the triple in CC1. This suffices for most code; generation tasks, but the Driver cannot compute the correct ABI and; sets the generic AArch64 ""aapcs"" instead of the specific ""darwinpcs"".; In turn, this causes integer arguments with less than 32 bits not; being sign-extended but being passed directly, which for example; manifests as (short)-1 being read as 65535 on the callee side. The new argument --target=arm64-apple-darwin20.3.0 matches what; Apple's and LLVM main's clang return for --print-target-triple. Fixes #7090. (cherry picked from commit f75a7c464b8b3f49b4ad1ae0e536d139235863d2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7792
https://github.com/root-project/root/pull/7792:69,Testability,log,logic,69,"The argument -Xclang -triple=... completely bypasses Clang's Driver; logic and only sets the triple in CC1. This suffices for most code; generation tasks, but the Driver cannot compute the correct ABI and; sets the generic AArch64 ""aapcs"" instead of the specific ""darwinpcs"".; In turn, this causes integer arguments with less than 32 bits not; being sign-extended but being passed directly, which for example; manifests as (short)-1 being read as 65535 on the callee side. The new argument --target=arm64-apple-darwin20.3.0 matches what; Apple's and LLVM main's clang return for --print-target-triple. Fixes #7090. (cherry picked from commit f75a7c464b8b3f49b4ad1ae0e536d139235863d2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7792
https://github.com/root-project/root/pull/7793:355,Modifiability,extend,extended,355,"The argument -Xclang -triple=... completely bypasses Clang's Driver; logic and only sets the triple in CC1. This suffices for most code; generation tasks, but the Driver cannot compute the correct ABI and; sets the generic AArch64 ""aapcs"" instead of the specific ""darwinpcs"".; In turn, this causes integer arguments with less than 32 bits not; being sign-extended but being passed directly, which for example; manifests as (short)-1 being read as 65535 on the callee side. The new argument --target=arm64-apple-darwin20.3.0 matches what; Apple's and LLVM main's clang return for --print-target-triple. Fixes #7090. (cherry picked from commit f75a7c464b8b3f49b4ad1ae0e536d139235863d2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7793
https://github.com/root-project/root/pull/7793:69,Testability,log,logic,69,"The argument -Xclang -triple=... completely bypasses Clang's Driver; logic and only sets the triple in CC1. This suffices for most code; generation tasks, but the Driver cannot compute the correct ABI and; sets the generic AArch64 ""aapcs"" instead of the specific ""darwinpcs"".; In turn, this causes integer arguments with less than 32 bits not; being sign-extended but being passed directly, which for example; manifests as (short)-1 being read as 65535 on the callee side. The new argument --target=arm64-apple-darwin20.3.0 matches what; Apple's and LLVM main's clang return for --print-target-triple. Fixes #7090. (cherry picked from commit f75a7c464b8b3f49b4ad1ae0e536d139235863d2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7793
https://github.com/root-project/root/pull/7794:43,Deployability,patch,patches,43,"This is a backport of #7031 to the 6-24-00-patches branch. I cherry-picked two of the three commits.; I left the test suite out, as it finally should go to roottest.git, as far as I understood it. This is basically to get the thing started. cc: @pcanal, @dennisklein",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7794
https://github.com/root-project/root/pull/7794:113,Testability,test,test,113,"This is a backport of #7031 to the 6-24-00-patches branch. I cherry-picked two of the three commits.; I left the test suite out, as it finally should go to roottest.git, as far as I understood it. This is basically to get the thing started. cc: @pcanal, @dennisklein",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7794
https://github.com/root-project/root/pull/7795:450,Deployability,patch,patch,450,"Clang, and therefore cling, doesn't deal well with large amounts of; variable instantiations of types with non-trivial destructors in the; same function body. In this scenario the list of exception-handling; ""landing pads"" grows to sizes that make compilation times blow up.; What takes time specifically is the generation of code that deals; with calling the destructors of these variables in case an exception is; thrown in the function body. This patch avoids allocating many temporary std::strings and; std::vector<std::string>s in jitted code by generating code of the form; Jit{Filter,Define}Helper(..., const char*[]{""col1"", ""col2""}, ...) rather; than Jit{Filter,Define}Helper(..., std::vector<std::string>{""col1"", ""col2""}, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7795
https://github.com/root-project/root/pull/7795:69,Modifiability,variab,variable,69,"Clang, and therefore cling, doesn't deal well with large amounts of; variable instantiations of types with non-trivial destructors in the; same function body. In this scenario the list of exception-handling; ""landing pads"" grows to sizes that make compilation times blow up.; What takes time specifically is the generation of code that deals; with calling the destructors of these variables in case an exception is; thrown in the function body. This patch avoids allocating many temporary std::strings and; std::vector<std::string>s in jitted code by generating code of the form; Jit{Filter,Define}Helper(..., const char*[]{""col1"", ""col2""}, ...) rather; than Jit{Filter,Define}Helper(..., std::vector<std::string>{""col1"", ""col2""}, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7795
https://github.com/root-project/root/pull/7795:381,Modifiability,variab,variables,381,"Clang, and therefore cling, doesn't deal well with large amounts of; variable instantiations of types with non-trivial destructors in the; same function body. In this scenario the list of exception-handling; ""landing pads"" grows to sizes that make compilation times blow up.; What takes time specifically is the generation of code that deals; with calling the destructors of these variables in case an exception is; thrown in the function body. This patch avoids allocating many temporary std::strings and; std::vector<std::string>s in jitted code by generating code of the form; Jit{Filter,Define}Helper(..., const char*[]{""col1"", ""col2""}, ...) rather; than Jit{Filter,Define}Helper(..., std::vector<std::string>{""col1"", ""col2""}, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7795
https://github.com/root-project/root/pull/7795:456,Safety,avoid,avoids,456,"Clang, and therefore cling, doesn't deal well with large amounts of; variable instantiations of types with non-trivial destructors in the; same function body. In this scenario the list of exception-handling; ""landing pads"" grows to sizes that make compilation times blow up.; What takes time specifically is the generation of code that deals; with calling the destructors of these variables in case an exception is; thrown in the function body. This patch avoids allocating many temporary std::strings and; std::vector<std::string>s in jitted code by generating code of the form; Jit{Filter,Define}Helper(..., const char*[]{""col1"", ""col2""}, ...) rather; than Jit{Filter,Define}Helper(..., std::vector<std::string>{""col1"", ""col2""}, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7795
https://github.com/root-project/root/pull/7800:72,Performance,perform,perform,72,"In order to specialize cling's value-printing logic for collections; we perform some SFINAE checks. Among other things, the checks; asserts that `++(obj.begin())` is well-formed. That compiles for; `std::vector` and other collections with ""fat"" iterators, but does; not compile for collections that use raw pointers as iterators:. ```cpp; auto beg(std::vector<int> &v) {; return v.begin();; }. int *beg2(std::vector<int> &v) {; return &v[0];; }. int main() {; std::vector<int> v{1,2,3};; beg(v) += 1;; //beg2(v) += 1; // does not compile - beg2(v) is not an lvalue. return 0;; }; ```. Requiring instead `std::begin(obj)` to be well-formed should be; backward compatible and it should allow collections that use raw; pointers as iterators to also be pretty-printed by cling. This fixes pretty-printing of RVec 2.0, i.e. the implementation based on LLVM's SmallVector, which uses raw pointers as iterators.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7800
https://github.com/root-project/root/pull/7800:46,Testability,log,logic,46,"In order to specialize cling's value-printing logic for collections; we perform some SFINAE checks. Among other things, the checks; asserts that `++(obj.begin())` is well-formed. That compiles for; `std::vector` and other collections with ""fat"" iterators, but does; not compile for collections that use raw pointers as iterators:. ```cpp; auto beg(std::vector<int> &v) {; return v.begin();; }. int *beg2(std::vector<int> &v) {; return &v[0];; }. int main() {; std::vector<int> v{1,2,3};; beg(v) += 1;; //beg2(v) += 1; // does not compile - beg2(v) is not an lvalue. return 0;; }; ```. Requiring instead `std::begin(obj)` to be well-formed should be; backward compatible and it should allow collections that use raw; pointers as iterators to also be pretty-printed by cling. This fixes pretty-printing of RVec 2.0, i.e. the implementation based on LLVM's SmallVector, which uses raw pointers as iterators.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7800
https://github.com/root-project/root/pull/7800:132,Testability,assert,asserts,132,"In order to specialize cling's value-printing logic for collections; we perform some SFINAE checks. Among other things, the checks; asserts that `++(obj.begin())` is well-formed. That compiles for; `std::vector` and other collections with ""fat"" iterators, but does; not compile for collections that use raw pointers as iterators:. ```cpp; auto beg(std::vector<int> &v) {; return v.begin();; }. int *beg2(std::vector<int> &v) {; return &v[0];; }. int main() {; std::vector<int> v{1,2,3};; beg(v) += 1;; //beg2(v) += 1; // does not compile - beg2(v) is not an lvalue. return 0;; }; ```. Requiring instead `std::begin(obj)` to be well-formed should be; backward compatible and it should allow collections that use raw; pointers as iterators to also be pretty-printed by cling. This fixes pretty-printing of RVec 2.0, i.e. the implementation based on LLVM's SmallVector, which uses raw pointers as iterators.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7800
https://github.com/root-project/root/pull/7801:160,Energy Efficiency,energy,energy,160,"I added an example that demonstrates how TH2F can be used for Quantum Mechanics. . In this example I plot the Amplitude (psi squared) of a Hydrogen Atom in the energy level n = 2, l = 0, m = 0. . This allows you to see where you are most- and least likely to find the Electron. . I accidentally added another file that does not belong here, so I reverted that commit. I hope that's not a problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7801
https://github.com/root-project/root/pull/7804:16,Energy Efficiency,reduce,reduce,16,This PR aims to reduce code duplication in `TFormula` class by replacing 4 overloaded `Eval` functions by one variadic template function.; We can also add an extra check to ensure all arguments passed to the template function are of arithmetic type. Please tell if I should add this extra check.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7804
https://github.com/root-project/root/issues/7805:1034,Availability,error,error,1034,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent ; `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]"");; TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly; g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error; ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");; f.SetParName(3, ""lastParameter"");; // Parameters names: p0, p1, p2, lastParameter; f.SetParNames(""a"", ""b"");; // Parameters names: a, b, p2, p3; ```; User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:2737,Availability,down,download,2737,"]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly; g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error; ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");; f.SetParName(3, ""lastParameter"");; // Parameters names: p0, p1, p2, lastParameter; f.SetParNames(""a"", ""b"");; // Parameters names: a, b, p2, p3; ```; User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->; Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Root version: 6.25/01; Operating system: Ubuntu 20.04; How you obtained ROOT: built it from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:2719,Deployability,install,install,2719,"]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly; g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error; ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");; f.SetParName(3, ""lastParameter"");; // Parameters names: p0, p1, p2, lastParameter; f.SetParNames(""a"", ""b"");; // Parameters names: a, b, p2, p3; ```; User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->; Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Root version: 6.25/01; Operating system: Ubuntu 20.04; How you obtained ROOT: built it from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:2443,Energy Efficiency,reduce,reduce,2443,"]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly; g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error; ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");; f.SetParName(3, ""lastParameter"");; // Parameters names: p0, p1, p2, lastParameter; f.SetParNames(""a"", ""b"");; // Parameters names: a, b, p2, p3; ```; User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->; Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Root version: 6.25/01; Operating system: Ubuntu 20.04; How you obtained ROOT: built it from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:228,Usability,intuit,intuitive,228,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent ; `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]"");; TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly; g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error; ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");; f.SetParName(3, ""lastParameter"");; // Parameters names: p0, p1, p2, lastParameter; f.SetParNames(""a"", ""b"");; // Parameters names: a, b, p2, p3; ```; User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/pull/7806:55,Integrability,message,message,55,"Backport of D99607, commit 6415f424bc. Original commit message:; ```; When using the large code model with FastISel (for example via; clang -O0 which adds the optnone attribute), FP constants could; still be materialized using adrp + ldr. Unconditionally enable; the existing path for MachO to materialize the constant in code. [...]; ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123; for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7806
https://github.com/root-project/root/pull/7807:55,Integrability,message,message,55,"Backport of D99607, commit 6415f424bc. Original commit message:; ```; When using the large code model with FastISel (for example via; clang -O0 which adds the optnone attribute), FP constants could; still be materialized using adrp + ldr. Unconditionally enable; the existing path for MachO to materialize the constant in code. [...]; ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123; for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7807
https://github.com/root-project/root/issues/7809:102,Integrability,interface,interfaces,102,"### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces.; In a workspace like this:; ```; RooWorkspace w;; w.factory(""RooGaussian::a(x[-10,10],0.,1.)""); w.factory(""RooGaussian::b(y[-10,10],0.,1.)""); ```; Now, consider this:; ```; w.factory(""RooProdPdf::p1({a,b})""); w.factory(""RooProduct::p2({x,y})""); ```; `p2` does what you think it would.; `p1` does not. On the other hand:; ```; w.factory(""RooProdPdf::p3(a,b)""); w.factory(""RooProduct::p4(x,y)""); ```; `p3` works.; `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7809
https://github.com/root-project/root/issues/7809:587,Integrability,interface,interfaces,587,"### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces.; In a workspace like this:; ```; RooWorkspace w;; w.factory(""RooGaussian::a(x[-10,10],0.,1.)""); w.factory(""RooGaussian::b(y[-10,10],0.,1.)""); ```; Now, consider this:; ```; w.factory(""RooProdPdf::p1({a,b})""); w.factory(""RooProduct::p2({x,y})""); ```; `p2` does what you think it would.; `p1` does not. On the other hand:; ```; w.factory(""RooProdPdf::p3(a,b)""); w.factory(""RooProduct::p4(x,y)""); ```; `p3` works.; `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7809
https://github.com/root-project/root/pull/7810:18,Energy Efficiency,reduce,reduce,18,Let significantly reduce size of includes used by EVE7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7810
https://github.com/root-project/root/pull/7811:34,Usability,simpl,simplify,34,"Use of cmake should significantly simplify porting on different platforms; Fix compilation and running issues on Windows, provide readme; Fix tiny issue with initialization of QWebEngine - it only can be used before creation of QApplication",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7811
https://github.com/root-project/root/pull/7812:335,Testability,test,test,335,"This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:573,Testability,test,tests,573,"This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:942,Usability,intuit,intuitive,942,"This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7814:186,Integrability,message,message,186,"Backport of #7750. Add an implementation of getValV for RooAddPdf to use stored normalization set by default when the pdf is evaluated without passing a set. Disable printing of warning message of evaluating un-normalized RooAddPdf when doing:; - Call getVal in constructor of RooRealIntegral (not sure why this is needed); - printValue of any RooAbsPdf, where getVal(0) is also called; - RooAbsArg::graphVizTree where also getVal(0) is called when exporting the tree in a graphVizTree. This avoids having un-needed warning messages when printing or examing RooWorkspaces or pdf's",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7814
https://github.com/root-project/root/pull/7814:524,Integrability,message,messages,524,"Backport of #7750. Add an implementation of getValV for RooAddPdf to use stored normalization set by default when the pdf is evaluated without passing a set. Disable printing of warning message of evaluating un-normalized RooAddPdf when doing:; - Call getVal in constructor of RooRealIntegral (not sure why this is needed); - printValue of any RooAbsPdf, where getVal(0) is also called; - RooAbsArg::graphVizTree where also getVal(0) is called when exporting the tree in a graphVizTree. This avoids having un-needed warning messages when printing or examing RooWorkspaces or pdf's",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7814
https://github.com/root-project/root/pull/7814:492,Safety,avoid,avoids,492,"Backport of #7750. Add an implementation of getValV for RooAddPdf to use stored normalization set by default when the pdf is evaluated without passing a set. Disable printing of warning message of evaluating un-normalized RooAddPdf when doing:; - Call getVal in constructor of RooRealIntegral (not sure why this is needed); - printValue of any RooAbsPdf, where getVal(0) is also called; - RooAbsArg::graphVizTree where also getVal(0) is called when exporting the tree in a graphVizTree. This avoids having un-needed warning messages when printing or examing RooWorkspaces or pdf's",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7814
https://github.com/root-project/root/pull/7816:318,Safety,avoid,avoided,318,"Events are double counted if one accidentally defines overlapping ranges; and uses them in a multi-range fit. This happened for example in Jira; issue ROOT-9548 where the whole dataset was double counted, leading to; the parameter uncertainties being underestimated by a factor of sqrt(2).; ; That situation should be avoided. This commit introduces a check for; overlapping ranges before the multi-range likelihood is created. Confusing situations such as reported in [ROOT-9548](https://sft.its.cern.ch/jira/browse/ROOT-9548) are avoided now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7816
https://github.com/root-project/root/pull/7816:532,Safety,avoid,avoided,532,"Events are double counted if one accidentally defines overlapping ranges; and uses them in a multi-range fit. This happened for example in Jira; issue ROOT-9548 where the whole dataset was double counted, leading to; the parameter uncertainties being underestimated by a factor of sqrt(2).; ; That situation should be avoided. This commit introduces a check for; overlapping ranges before the multi-range likelihood is created. Confusing situations such as reported in [ROOT-9548](https://sft.its.cern.ch/jira/browse/ROOT-9548) are avoided now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7816
https://github.com/root-project/root/pull/7817:136,Availability,error,error,136,"The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`); * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`); * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python; import datetime; import struct; import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""); x = ROOT.TObjString(""one""); x.Write(); file.mkdir(""subdir""); file.cd(""subdir""); y = ROOT.TObjString(""two""); y.Write(); file.Close(). def datime(number):; return datetime.datetime(; ((number & 0b11111100000000000000000000000000) >> 26) + 1995,; ((number & 0b00000011110000000000000000000000) >> 22),; ((number & 0b00000000001111100000000000000000) >> 17),; ((number & 0b00000000000000011111000000000000) >> 12),; ((number & 0b00000000000000000000111111000000) >> 6),; ((number & 0b00000000000000000000000000111111)),; ). file = open(""sample.root"", ""rb""). (; magic,; fVersion,; fBEGIN,; fEND,; fSeekFree,; fNbytesFree,; nfree,; fNbytesName,; fUnits,; fCompress,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7818:11,Security,hash,hash,11,"The custom hash table implementation RooHashTable is only used in; RooLinkedList for a transient data member. By using std::unordered_map; instead, RooHashTable gets obsolete and could be deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7818
https://github.com/root-project/root/pull/7819:79,Usability,simpl,simple,79,"The RooNameSet class is too complicated considering that it fulfills a; rather simple purpose, which is to serialize the names of objects in a; RooArgSet to a string that can be used to select objects from other; RooArgSets. This commit proposes to replace the RooNameSet class by new functions in; the RooHelpers namespace: `getColonSeparatedNameString` and; `selectFromArgSet`. These functions make use of `std::string` to be much; less verbose than the original RooNameSet class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7819
https://github.com/root-project/root/issues/7822:454,Modifiability,inherit,inheritance,454,"`RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:; - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly.; - The current implementation does not work for histograms with more than 1 observable; - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/pull/7827:131,Availability,error,errors,131,"The RooFit test statistic classes give wrong results if they are; constructed from multiple comma-separated ranges. This can cause errors,; such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated; ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:324,Safety,detect,detected,324,"The RooFit test statistic classes give wrong results if they are; constructed from multiple comma-separated ranges. This can cause errors,; such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated; ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:11,Testability,test,test,11,"The RooFit test statistic classes give wrong results if they are; constructed from multiple comma-separated ranges. This can cause errors,; such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated; ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/issues/7828:109,Security,access,accessible,109,"The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:82,Usability,simpl,simple,82,"The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7829:113,Security,access,accessible,113,"The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/pull/7832:31,Deployability,integrat,integration,31,"Fixes #7828 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7832
https://github.com/root-project/root/pull/7832:31,Integrability,integrat,integration,31,"Fixes #7828 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7832
https://github.com/root-project/root/pull/7833:31,Deployability,integrat,integration,31,"Fixes #7829 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7833
https://github.com/root-project/root/pull/7833:31,Integrability,integrat,integration,31,"Fixes #7829 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7833
https://github.com/root-project/root/pull/7838:503,Testability,benchmark,benchmarked,503,"The ParamHistFunc in the histfactory has a persistent `std::map<int,int>`; data member. It can be replaced with a `std::vector<int>` where the; previous key is the index in the vector. This is much faster. As the igprof reports below show, it is even faster to calculate the bin indices on the fly, which is proposed in this PR. Schema evolution is not a problem here. With this commit, the data; member is made non-persistent because it can be computed from other; persistent data members. This PR was benchmarked with [an example from the ROOT forum](https://root-forum.cern.ch/t/bias-in-histfactory-fit/44330/7):; * igprof report [before this PR (caching with `std::map`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_old); * igprof report [after the first commit of the PR (caching with `std::vector`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new); * igprof report [after the PR (calculating on the fly)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). The difference is about a 50 % speedup of `ParamHistFunc::evaluate()` and a 10 % speedup of the full example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7838
https://github.com/root-project/root/pull/7839:453,Availability,ping,ping,453,"Batch mode, which is now only supported by Chrome, allows to run; JS code loaded from file and dump result to output file - no any; communication with host application required. Now extra headless mode is introduced, which allows to run client; code in the headless browser and communicate with it. It was original; way to produce batch images, therefore need to rename some methods; to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified.; In such case macro waits until 200 round-trip packets arrived and automatically ends.; Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:74,Performance,load,loaded,74,"Batch mode, which is now only supported by Chrome, allows to run; JS code loaded from file and dump result to output file - no any; communication with host application required. Now extra headless mode is introduced, which allows to run client; code in the headless browser and communicate with it. It was original; way to produce batch images, therefore need to rename some methods; to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified.; In such case macro waits until 200 round-trip packets arrived and automatically ends.; Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:634,Testability,test,testings,634,"Batch mode, which is now only supported by Chrome, allows to run; JS code loaded from file and dump result to output file - no any; communication with host application required. Now extra headless mode is introduced, which allows to run client; code in the headless browser and communicate with it. It was original; way to produce batch images, therefore need to rename some methods; to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified.; In such case macro waits until 200 round-trip packets arrived and automatically ends.; Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:644,Testability,Test,Testes,644,"Batch mode, which is now only supported by Chrome, allows to run; JS code loaded from file and dump result to output file - no any; communication with host application required. Now extra headless mode is introduced, which allows to run client; code in the headless browser and communicate with it. It was original; way to produce batch images, therefore need to rename some methods; to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified.; In such case macro waits until 200 round-trip packets arrived and automatically ends.; Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:387,Usability,clear,clearly,387,"Batch mode, which is now only supported by Chrome, allows to run; JS code loaded from file and dump result to output file - no any; communication with host application required. Now extra headless mode is introduced, which allows to run client; code in the headless browser and communicate with it. It was original; way to produce batch images, therefore need to rename some methods; to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified.; In such case macro waits until 200 round-trip packets arrived and automatically ends.; Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7841:333,Performance,optimiz,optimize,333,"The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations.; But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node.; If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one.; This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:584,Performance,optimiz,optimization,584,"The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations.; But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node.; If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one.; This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:998,Testability,test,tests,998,"The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations.; But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node.; If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one.; This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7842:313,Availability,error,errors,313,"Std library types are picked up by rootcling as `TClasses`. If there is no; `RField` specialization for them, they are passed to the `RClassField`; constructor. This led to accidental support of those std types by; RNTuple. For some types, this appeared to be benign (e.g. `std::pair`) but; for others there were errors (e.g. `std::optional`). Change the `RClassField` constructor to throw an exception if any std type; is passed in. cc @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7842
https://github.com/root-project/root/pull/7843:86,Safety,avoid,avoid,86,"The intent was to prevent the creation of sub branch with 2 consecutives dots; and to avoid a dot between the branch name of the collection and the underscore; for name of the index leaf. The major problem of the first try is that the name of the top level branch; was changed from ""t."" to ""t"" making existing code search for the branch by; fullname failing. Fix #7281. This effectively ammends/corrects d225f942b59b5b022cf635a16e90f84cad59819d. Before v6.23; ```; ******************************************************************************; *Tree :tree : treelibrated tree *; *Entries : 10000 : Total = 485042 bytes File Size = 177202 *; * : : Tree compression factor = 2.74 *; ******************************************************************************; *Br 0 :t. : Int_t t._ *; *Entries : 10000 : Total Size= 83464 bytes File Size = 12844 *; *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *; *............................................................................*; *Br 1 :t..fUniqueID : UInt_t fUniqueID[t._] *; *Entries : 10000 : Total Size= 80935 bytes File Size = 12857 *; *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *; *............................................................................*; *Br 2 :t..fBits : UInt_t fBits[t._] *; *Entries : 10000 : Total Size= 80903 bytes File Size = 12879 *; *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.24 *; *............................................................................*; *Br 3 :t..e : Double_t e[t._] *; *Entries : 10000 : Total Size= 121029 bytes File Size = 65937 *; *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.83 *; *............................................................................*; *Br 4 :t..t : Double_t t[t._] *; *Entries : 10000 : Total Size= 121029 bytes File Size = 71633 *; *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.68 *; *............................................................................*; ```; After the first try:; ```; ***",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7843
https://github.com/root-project/root/issues/7844:52,Modifiability,variab,variables,52,"I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:; ```; #include <TROOT.h>; #include <TFile.h>; #include <TTree.h>; #include <TString.h>. #include <iostream>; #include <iomanip>. void write(ULong64_t x) {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Branch(""x"", &x, ""x/l"");; t.Fill();; t.Write();; f.Close();; std::cout<<""Written to tree: ""<<x<<""\n"";; }. void read(const ULong64_t x) {; TFile f(""f.root"");; TTree* t = (TTree*)(f.Get(""t""));; ; ULong64_t x1;; t->SetBranchAddress(""x"", &x1);; t->GetEntry(0);; std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";; ; std::cout<<""\n"";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:103,Modifiability,variab,variables,103,"I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:; ```; #include <TROOT.h>; #include <TFile.h>; #include <TTree.h>; #include <TString.h>. #include <iostream>; #include <iomanip>. void write(ULong64_t x) {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Branch(""x"", &x, ""x/l"");; t.Fill();; t.Write();; f.Close();; std::cout<<""Written to tree: ""<<x<<""\n"";; }. void read(const ULong64_t x) {; TFile f(""f.root"");; TTree* t = (TTree*)(f.Get(""t""));; ; ULong64_t x1;; t->SetBranchAddress(""x"", &x1);; t->GetEntry(0);; std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";; ; std::cout<<""\n"";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1739,Modifiability,variab,variable,1739,""";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:; ```; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```; I encou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:117,Performance,perform,perform,117,"I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:; ```; #include <TROOT.h>; #include <TFile.h>; #include <TTree.h>; #include <TString.h>. #include <iostream>; #include <iomanip>. void write(ULong64_t x) {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Branch(""x"", &x, ""x/l"");; t.Fill();; t.Write();; f.Close();; std::cout<<""Written to tree: ""<<x<<""\n"";; }. void read(const ULong64_t x) {; TFile f(""f.root"");; TTree* t = (TTree*)(f.Get(""t""));; ; ULong64_t x1;; t->SetBranchAddress(""x"", &x1);; t->GetEntry(0);; std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";; ; std::cout<<""\n"";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1883,Performance,Perform,Perform,1883,""";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:; ```; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```; I encou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:2966,Safety,avoid,avoid,2966,"cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:; ```; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```; I encountered similar issues when trying to plot the values with TTree::Draw(). It seems to me that the values are rounded... perhaps casted to double? Is there any way to avoid it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1891,Usability,simpl,simple,1891,""";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:; ```; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```; I encou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/pull/7847:70,Usability,guid,guide,70,- Make sure the comments on data members are visible in the reference guide. - Fix typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7847
https://github.com/root-project/root/issues/7849:952,Availability,down,download,952,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:934,Deployability,install,install,934,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:391,Usability,clear,clear,391,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:489,Usability,clear,clear,489,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7850:90,Usability,simpl,simple,90,"- [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 ; 0.01 1 0.01 ; 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 ; -0.1825 1.179 0.02375 ; 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed.; I tried this on several platforms, with identical results.; I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);; m(0,0) = m(1,1) = m(2,2) = 1;; m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;; m(0,2) = m(2,0) = 0.01;; cout << ""Initial matrix : "" << endl;; m.Print();. cout << ""Determinant : "" << endl;; cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);; TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;; eigenVal.Print();; ; TMatrixD eigenVec = mtm.GetEigenVectors();; TMatrixD eigenVecT = mtm.GetEigenVectors();; eigenVecT.T();; cout << ""EigenVectors (Q): "" << endl;; eigenVec.Print();; ; TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;; cout << ""Q*D*QT : "" << endl;; mCheck.Print();. ### Setup. Root 6.22, EL7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/pull/7851:17,Deployability,release,release,17,Back port fix on release note 624 (a numbered list was not correct),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7851
https://github.com/root-project/root/pull/7852:58,Energy Efficiency,adapt,adapted,58,"we have lots of proper usage now, and it would need to be adapted; to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7852
https://github.com/root-project/root/pull/7852:58,Modifiability,adapt,adapted,58,"we have lots of proper usage now, and it would need to be adapted; to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7852
https://github.com/root-project/root/issues/7853:153,Performance,tune,tune,153,"### Explain what you would like to see improved; Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved; We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:358,Security,expose,expose,358,"### Explain what you would like to see improved; Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved; We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/pull/7854:397,Modifiability,variab,variables,397,The logic to Paint fit parameters for TGraph was not following the; one implemented for histograms. The `v` field described [here](https://root.cern/doc/master/classTStyle.html#aedeb1d117d9f16af9f8ad430bf956d64) was not working the same way. This PR implement the same behavior for TGraph. This problem was found [here](https://root-forum.cern.ch/t/gstyle-setoptfit-1111-having-no-effect-on-fixed-variables/40841/9),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7854
https://github.com/root-project/root/pull/7854:4,Testability,log,logic,4,The logic to Paint fit parameters for TGraph was not following the; one implemented for histograms. The `v` field described [here](https://root.cern/doc/master/classTStyle.html#aedeb1d117d9f16af9f8ad430bf956d64) was not working the same way. This PR implement the same behavior for TGraph. This problem was found [here](https://root-forum.cern.ch/t/gstyle-setoptfit-1111-having-no-effect-on-fixed-variables/40841/9),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7854
https://github.com/root-project/root/pull/7855:58,Energy Efficiency,adapt,adapted,58,"we have lots of proper usage now, and it would need to be adapted; to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7855
https://github.com/root-project/root/pull/7855:58,Modifiability,adapt,adapted,58,"we have lots of proper usage now, and it would need to be adapted; to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7855
https://github.com/root-project/root/issues/7858:35,Deployability,release,release,35,"List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 ; - TMVA : optimizer options : #7318; - ChangeLabel: #7294; - Buffer Merger improvements : #7286; - Eve7: The first implementation of log view #7270; - TMVA: Update Keras tutorials using tensorflow.keras #7255; - builtins: Zstd 1.4.8 #7214; - RooFit: warning message for RooAddPdf without norm set: #7129 ; - RooFit: Improve plotting of RooBinSamplingPdf. #7110; - Hist: Fixes and improvements for the TKDE class #7096; - Fix a memory leak in TF1::Copy #7035; - Fix for new version of cudnn version 8 #7003; - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001; - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956; - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902; - TMVA: Implement MethodCategory::GetMulticlassValues() #6886; - Hist: Add THistRange class defining a generic histogram range and its iterator #6795; - TMVA: Support for Keras 2.4 (tf.keras) #6793; - Eve-7: Add example of calorimeter representation of REveDataCollection #6783; - Math: Fix BinData copy constructor #6776; - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724; - Math: Changes in TRandom3::GetSeed #6723; - Minuit2: new Minuit2 logging #6705; - ntuple] Several interface improvements (unique pointer, const) #6655; - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:232,Deployability,Update,Update,232,"List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 ; - TMVA : optimizer options : #7318; - ChangeLabel: #7294; - Buffer Merger improvements : #7286; - Eve7: The first implementation of log view #7270; - TMVA: Update Keras tutorials using tensorflow.keras #7255; - builtins: Zstd 1.4.8 #7214; - RooFit: warning message for RooAddPdf without norm set: #7129 ; - RooFit: Improve plotting of RooBinSamplingPdf. #7110; - Hist: Fixes and improvements for the TKDE class #7096; - Fix a memory leak in TF1::Copy #7035; - Fix for new version of cudnn version 8 #7003; - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001; - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956; - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902; - TMVA: Implement MethodCategory::GetMulticlassValues() #6886; - Hist: Add THistRange class defining a generic histogram range and its iterator #6795; - TMVA: Support for Keras 2.4 (tf.keras) #6793; - Eve-7: Add example of calorimeter representation of REveDataCollection #6783; - Math: Fix BinData copy constructor #6776; - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724; - Math: Changes in TRandom3::GetSeed #6723; - Minuit2: new Minuit2 logging #6705; - ntuple] Several interface improvements (unique pointer, const) #6655; - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:333,Integrability,message,message,333,"List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 ; - TMVA : optimizer options : #7318; - ChangeLabel: #7294; - Buffer Merger improvements : #7286; - Eve7: The first implementation of log view #7270; - TMVA: Update Keras tutorials using tensorflow.keras #7255; - builtins: Zstd 1.4.8 #7214; - RooFit: warning message for RooAddPdf without norm set: #7129 ; - RooFit: Improve plotting of RooBinSamplingPdf. #7110; - Hist: Fixes and improvements for the TKDE class #7096; - Fix a memory leak in TF1::Copy #7035; - Fix for new version of cudnn version 8 #7003; - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001; - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956; - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902; - TMVA: Implement MethodCategory::GetMulticlassValues() #6886; - Hist: Add THistRange class defining a generic histogram range and its iterator #6795; - TMVA: Support for Keras 2.4 (tf.keras) #6793; - Eve-7: Add example of calorimeter representation of REveDataCollection #6783; - Math: Fix BinData copy constructor #6776; - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724; - Math: Changes in TRandom3::GetSeed #6723; - Minuit2: new Minuit2 logging #6705; - ntuple] Several interface improvements (unique pointer, const) #6655; - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1387,Integrability,interface,interface,1387,"List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 ; - TMVA : optimizer options : #7318; - ChangeLabel: #7294; - Buffer Merger improvements : #7286; - Eve7: The first implementation of log view #7270; - TMVA: Update Keras tutorials using tensorflow.keras #7255; - builtins: Zstd 1.4.8 #7214; - RooFit: warning message for RooAddPdf without norm set: #7129 ; - RooFit: Improve plotting of RooBinSamplingPdf. #7110; - Hist: Fixes and improvements for the TKDE class #7096; - Fix a memory leak in TF1::Copy #7035; - Fix for new version of cudnn version 8 #7003; - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001; - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956; - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902; - TMVA: Implement MethodCategory::GetMulticlassValues() #6886; - Hist: Add THistRange class defining a generic histogram range and its iterator #6795; - TMVA: Support for Keras 2.4 (tf.keras) #6793; - Eve-7: Add example of calorimeter representation of REveDataCollection #6783; - Math: Fix BinData copy constructor #6776; - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724; - Math: Changes in TRandom3::GetSeed #6723; - Minuit2: new Minuit2 logging #6705; - ntuple] Several interface improvements (unique pointer, const) #6655; - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:85,Performance,optimiz,optimizer,85,"List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 ; - TMVA : optimizer options : #7318; - ChangeLabel: #7294; - Buffer Merger improvements : #7286; - Eve7: The first implementation of log view #7270; - TMVA: Update Keras tutorials using tensorflow.keras #7255; - builtins: Zstd 1.4.8 #7214; - RooFit: warning message for RooAddPdf without norm set: #7129 ; - RooFit: Improve plotting of RooBinSamplingPdf. #7110; - Hist: Fixes and improvements for the TKDE class #7096; - Fix a memory leak in TF1::Copy #7035; - Fix for new version of cudnn version 8 #7003; - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001; - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956; - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902; - TMVA: Implement MethodCategory::GetMulticlassValues() #6886; - Hist: Add THistRange class defining a generic histogram range and its iterator #6795; - TMVA: Support for Keras 2.4 (tf.keras) #6793; - Eve-7: Add example of calorimeter representation of REveDataCollection #6783; - Math: Fix BinData copy constructor #6776; - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724; - Math: Changes in TRandom3::GetSeed #6723; - Minuit2: new Minuit2 logging #6705; - ntuple] Several interface improvements (unique pointer, const) #6655; - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1443,Performance,Optimiz,Optimize,1443,"List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 ; - TMVA : optimizer options : #7318; - ChangeLabel: #7294; - Buffer Merger improvements : #7286; - Eve7: The first implementation of log view #7270; - TMVA: Update Keras tutorials using tensorflow.keras #7255; - builtins: Zstd 1.4.8 #7214; - RooFit: warning message for RooAddPdf without norm set: #7129 ; - RooFit: Improve plotting of RooBinSamplingPdf. #7110; - Hist: Fixes and improvements for the TKDE class #7096; - Fix a memory leak in TF1::Copy #7035; - Fix for new version of cudnn version 8 #7003; - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001; - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956; - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902; - TMVA: Implement MethodCategory::GetMulticlassValues() #6886; - Hist: Add THistRange class defining a generic histogram range and its iterator #6795; - TMVA: Support for Keras 2.4 (tf.keras) #6793; - Eve-7: Add example of calorimeter representation of REveDataCollection #6783; - Math: Fix BinData copy constructor #6776; - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724; - Math: Changes in TRandom3::GetSeed #6723; - Minuit2: new Minuit2 logging #6705; - ntuple] Several interface improvements (unique pointer, const) #6655; - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:208,Testability,log,log,208,"List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 ; - TMVA : optimizer options : #7318; - ChangeLabel: #7294; - Buffer Merger improvements : #7286; - Eve7: The first implementation of log view #7270; - TMVA: Update Keras tutorials using tensorflow.keras #7255; - builtins: Zstd 1.4.8 #7214; - RooFit: warning message for RooAddPdf without norm set: #7129 ; - RooFit: Improve plotting of RooBinSamplingPdf. #7110; - Hist: Fixes and improvements for the TKDE class #7096; - Fix a memory leak in TF1::Copy #7035; - Fix for new version of cudnn version 8 #7003; - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001; - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956; - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902; - TMVA: Implement MethodCategory::GetMulticlassValues() #6886; - Hist: Add THistRange class defining a generic histogram range and its iterator #6795; - TMVA: Support for Keras 2.4 (tf.keras) #6793; - Eve-7: Add example of calorimeter representation of REveDataCollection #6783; - Math: Fix BinData copy constructor #6776; - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724; - Math: Changes in TRandom3::GetSeed #6723; - Minuit2: new Minuit2 logging #6705; - ntuple] Several interface improvements (unique pointer, const) #6655; - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1354,Testability,log,logging,1354,"List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 ; - TMVA : optimizer options : #7318; - ChangeLabel: #7294; - Buffer Merger improvements : #7286; - Eve7: The first implementation of log view #7270; - TMVA: Update Keras tutorials using tensorflow.keras #7255; - builtins: Zstd 1.4.8 #7214; - RooFit: warning message for RooAddPdf without norm set: #7129 ; - RooFit: Improve plotting of RooBinSamplingPdf. #7110; - Hist: Fixes and improvements for the TKDE class #7096; - Fix a memory leak in TF1::Copy #7035; - Fix for new version of cudnn version 8 #7003; - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001; - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956; - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902; - TMVA: Implement MethodCategory::GetMulticlassValues() #6886; - Hist: Add THistRange class defining a generic histogram range and its iterator #6795; - TMVA: Support for Keras 2.4 (tf.keras) #6793; - Eve-7: Add example of calorimeter representation of REveDataCollection #6783; - Math: Fix BinData copy constructor #6776; - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724; - Math: Changes in TRandom3::GetSeed #6723; - Minuit2: new Minuit2 logging #6705; - ntuple] Several interface improvements (unique pointer, const) #6655; - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/pull/7859:164,Modifiability,variab,variables,164,"Retreiving weights from a RooDataHist can be sped up signifcantly if it; is assumed that parameters passed to `RooDataHist::weight` are aligned; with the histogram variables. This commit introduces a `RooDataHist::weightFast` function that makes; this assumption. It is used by RooHistFunc and RooHistPdf. This was benchmarked with the same hist factory example as in https://github.com/root-project/root/pull/7838:. * [without this PR, but with #7838](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2); * [also with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_3). The effect is a 15 % speedup of the HistFactory example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7859
https://github.com/root-project/root/pull/7859:315,Testability,benchmark,benchmarked,315,"Retreiving weights from a RooDataHist can be sped up signifcantly if it; is assumed that parameters passed to `RooDataHist::weight` are aligned; with the histogram variables. This commit introduces a `RooDataHist::weightFast` function that makes; this assumption. It is used by RooHistFunc and RooHistPdf. This was benchmarked with the same hist factory example as in https://github.com/root-project/root/pull/7838:. * [without this PR, but with #7838](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2); * [also with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_3). The effect is a 15 % speedup of the HistFactory example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7859
https://github.com/root-project/root/issues/7861:609,Availability,error,errors,609,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L55",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1713,Availability,down,download,1713,"Hub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1695,Deployability,install,install,1695,"Hub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1326,Security,access,access,1326,"Hub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L55",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/pull/7864:0,Deployability,Update,Update,0,"Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7864
https://github.com/root-project/root/pull/7864:7,Deployability,release,release,7,"Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7864
https://github.com/root-project/root/issues/7865:952,Availability,down,download,952,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:934,Deployability,install,install,934,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:391,Usability,clear,clear,391,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:489,Usability,clear,clear,489,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/pull/7866:0,Deployability,Update,Update,0,"Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7866
https://github.com/root-project/root/pull/7866:7,Deployability,release,release,7,"Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7866
https://github.com/root-project/root/pull/7867:242,Integrability,interface,interfaces,242,These facilities are superseded by valgrind and other memory checkers.; memstat has been deprecated since v6.18. Big questions I didn't answer yet:; * [ ] do we still need `TStorage`?; * [ ] do we need to deprecate the removed `TApplication` interfaces?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7867
https://github.com/root-project/root/issues/7871:345,Availability,Failure,Failure,345,"### Explain what you would like to see improved; It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved; - [ ] Add some info to all docs, e.g. that a lambda like this would do:; ```c++; [](const std::vector<T>&) { }; ```; Failure to meet that signature leads to an explosion of template instantiation failures with gcc.; - [ ] Show how to do a parallel for using `Map()`?; - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ); - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex;; const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; // Empty reducer; auto reducer = []() -> int { return 0; };; auto printRange = [=](std::size_t) -> int {; return 0;; };; ; ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:424,Availability,failure,failures,424,"### Explain what you would like to see improved; It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved; - [ ] Add some info to all docs, e.g. that a lambda like this would do:; ```c++; [](const std::vector<T>&) { }; ```; Failure to meet that signature leads to an explosion of template instantiation failures with gcc.; - [ ] Show how to do a parallel for using `Map()`?; - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ); - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex;; const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; // Empty reducer; auto reducer = []() -> int { return 0; };; auto printRange = [=](std::size_t) -> int {; return 0;; };; ; ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:136,Energy Efficiency,reduce,reducer,136,"### Explain what you would like to see improved; It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved; - [ ] Add some info to all docs, e.g. that a lambda like this would do:; ```c++; [](const std::vector<T>&) { }; ```; Failure to meet that signature leads to an explosion of template instantiation failures with gcc.; - [ ] Show how to do a parallel for using `Map()`?; - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ); - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex;; const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; // Empty reducer; auto reducer = []() -> int { return 0; };; auto printRange = [=](std::size_t) -> int {; return 0;; };; ; ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:804,Energy Efficiency,reduce,reducer,804,"### Explain what you would like to see improved; It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved; - [ ] Add some info to all docs, e.g. that a lambda like this would do:; ```c++; [](const std::vector<T>&) { }; ```; Failure to meet that signature leads to an explosion of template instantiation failures with gcc.; - [ ] Show how to do a parallel for using `Map()`?; - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ); - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex;; const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; // Empty reducer; auto reducer = []() -> int { return 0; };; auto printRange = [=](std::size_t) -> int {; return 0;; };; ; ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:818,Energy Efficiency,reduce,reducer,818,"### Explain what you would like to see improved; It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved; - [ ] Add some info to all docs, e.g. that a lambda like this would do:; ```c++; [](const std::vector<T>&) { }; ```; Failure to meet that signature leads to an explosion of template instantiation failures with gcc.; - [ ] Show how to do a parallel for using `Map()`?; - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ); - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex;; const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; // Empty reducer; auto reducer = []() -> int { return 0; };; auto printRange = [=](std::size_t) -> int {; return 0;; };; ; ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:979,Energy Efficiency,reduce,reducer,979,"### Explain what you would like to see improved; It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved; - [ ] Add some info to all docs, e.g. that a lambda like this would do:; ```c++; [](const std::vector<T>&) { }; ```; Failure to meet that signature leads to an explosion of template instantiation failures with gcc.; - [ ] Show how to do a parallel for using `Map()`?; - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ); - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex;; const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; // Empty reducer; auto reducer = []() -> int { return 0; };; auto printRange = [=](std::size_t) -> int {; return 0;; };; ; ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7872:281,Availability,failure,failures,281,"### Explain what you would like to see improved; You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved; - `void` should be supported.; - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex; ; constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; auto printRange = [=](std::size_t i) {; const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); ; const auto begin = nEvent * i;; const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile; //return 0;; }; ; ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7872:324,Usability,simpl,simple,324,"### Explain what you would like to see improved; You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved; - `void` should be supported.; - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex; ; constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; auto printRange = [=](std::size_t i) {; const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); ; const auto begin = nEvent * i;; const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile; //return 0;; }; ; ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7873:1216,Energy Efficiency,schedul,schedule,1216,"### Is your feature request related to a problem? Please describe.; Not a problem, just ease of use when processing e.g. a large array with a lot of entries in parallel (with using SIMD in each thread). ### Describe the solution you'd like; #### ROOT; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex; ; constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; auto printRange = [=](std::size_t i) {; const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); ; const auto begin = nEvent * i;; const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // We are forced to return a dummy value; return 0;; }; ; ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));; }; ```; #### TBB; ```c++; void runParallel() {; constexpr std::size_t nTotal = 101;. auto printRange = [](const tbb::blocked_range<std::size_t>& range) {; std::cout << ""Doing "" << range.begin() << ""\t"" << range.end() << std::endl; sleep(1);; }; ; tbb::parallel_for(tbb::blocked_range<std::size_t>(0, nTotal), printRange, tbb::static_partitioner());; }; ```. #### OMP; ```diff; + #pragma omp parallel for schedule(static); for (std::size_t i = 0; i < end; ++i) {; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7873
https://github.com/root-project/root/issues/7875:591,Security,access,access,591,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Normalization of fields created through `RFieldBase::Create` does not work to the same extent as directly templated fields:; ```cpp; // works ; auto ulong_field = RField<unsigned long>(""ulong""); ; EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());; // throws runtime exception; auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();; ```; ```; C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; Typedef / type alias fields are also an issue:; ```cpp; // works; auto str_size_field = RField<std::string::size_type>(""str_size"");; // throws exception; auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();; ```; ```; C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:; ```cpp; struct CustomStruct {; unsigned long ul;; };; // ... ; auto class_field = RField<CustomStruct>(""custom_struct"");; ```; ```; C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:1210,Security,access,access,1210,"Create` does not work to the same extent as directly templated fields:; ```cpp; // works ; auto ulong_field = RField<unsigned long>(""ulong""); ; EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());; // throws runtime exception; auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();; ```; ```; C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; Typedef / type alias fields are also an issue:; ```cpp; // works; auto str_size_field = RField<std::string::size_type>(""str_size"");; // throws exception; auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();; ```; ```; C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:; ```cpp; struct CustomStruct {; unsigned long ul;; };; // ... ; auto class_field = RField<CustomStruct>(""custom_struct"");; ```; ```; C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```. ### Additional context; Related issue #7861 ; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:1803,Security,access,access,1803,"Create` does not work to the same extent as directly templated fields:; ```cpp; // works ; auto ulong_field = RField<unsigned long>(""ulong""); ; EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());; // throws runtime exception; auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();; ```; ```; C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; Typedef / type alias fields are also an issue:; ```cpp; // works; auto str_size_field = RField<std::string::size_type>(""str_size"");; // throws exception; auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();; ```; ```; C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:; ```cpp; struct CustomStruct {; unsigned long ul;; };; // ... ; auto class_field = RField<CustomStruct>(""custom_struct"");; ```; ```; C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```. ### Additional context; Related issue #7861 ; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/pull/7878:73,Testability,log,logic,73,"Fixes #7053 . It prints cycle number next to the key name and mimics the logic for printing ""[current cycle]"" and ""[backup cycle]"" found in [TDirectoryFile.cxx](https://github.com/root-project/root/blob/bb10667053131dbf3575fa2eb98522fdc6c57abc/io/io/src/TDirectoryFile.cxx#L1169-L1182)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7878
https://github.com/root-project/root/pull/7879:28,Testability,test,test,28,"Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple; read-write cycle. If the test fails on CI, we have diagnosed a latent; issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:65,Testability,test,test,65,"Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple; read-write cycle. If the test fails on CI, we have diagnosed a latent; issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:135,Testability,test,test,135,"Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple; read-write cycle. If the test fails on CI, we have diagnosed a latent; issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/issues/7880:1367,Deployability,Continuous,Continuous,1367,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:344,Modifiability,variab,variable,344,"### Is your feature request related to a problem? Please describe.; I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:362,Modifiability,variab,variables,362,"### Is your feature request related to a problem? Please describe.; I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1932,Modifiability,variab,variable-range,1932,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:132,Usability,simpl,simple,132,"### Is your feature request related to a problem? Please describe.; I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1766,Usability,simpl,simple,1766,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7881:1227,Availability,down,download,1227,"s of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Should build? :). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash; cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core; gh pr checkout 75166; brew install --build-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/mat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1392,Availability,error,error,1392,"//github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Should build? :). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash; cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core; gh pr checkout 75166; brew install --build-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required; using ::signbit;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2082,Availability,error,error,2082,"d-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required; using ::signbit;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here; signbit(_A1 __lcpp_x) _NOEXCEPT; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /private/tmp/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2555,Availability,error,error,2555,"tents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required; using ::signbit;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here; signbit(_A1 __lcpp_x) _NOEXCEPT; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3189,Availability,error,error,3189," 'signbit' must be imported from module 'std.depr.math_h' before it is required; using ::signbit;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here; signbit(_A1 __lcpp_x) _NOEXCEPT; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3369,Availability,error,error,3369,"1: note: previous declaration is here; signbit(_A1 __lcpp_x) _NOEXCEPT; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3727,Availability,error,error,3727,"e C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:; In file included from <module-includes>:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'; #include <string_v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3935,Availability,error,error,3935,"While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:; In file included from <module-includes>:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4334,Availability,error,error,4334,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:; In file included from <module-includes>:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o; ninja: build stopped: subcommand failed.; ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4746,Availability,error,error,4746,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:; In file included from <module-includes>:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o; ninja: build stopped: subcommand failed.; ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4818,Availability,Error,Error,4818,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:; In file included from <module-includes>:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o; ninja: build stopped: subcommand failed.; ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4825,Availability,Error,Error,4825,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:; In file included from <module-includes>:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o; ninja: build stopped: subcommand failed.; ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1076,Deployability,install,install,1076,"rch in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Should build? :). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash; cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core; gh pr checkout 75166; brew install --build-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1209,Deployability,install,install,1209,"s of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Should build? :). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash; cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core; gh pr checkout 75166; brew install --build-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/mat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4831,Performance,load,loading,4831,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:; In file included from <module-includes>:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o; ninja: build stopped: subcommand failed.; ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:941,Testability,test,test,941,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Should build? :). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash; cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core; gh pr checkout 75166; brew install --build-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Deve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:531,Usability,clear,clear,531,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Should build? :). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash; cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core; gh pr checkout 75166; brew install --build-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Deve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/pull/7882:239,Deployability,patch,patch,239,"Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:314,Deployability,patch,patch,314,"Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:118,Integrability,interface,interface,118,"Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:50,Safety,avoid,avoid,50,"Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:245,Usability,simpl,simplifies,245,"Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7889:12,Deployability,patch,patch,12,"Before this patch, given a TTree with a branch with name different; from its leaf, e.g. like this:. ```; *Br 0 :NUD_total_ADC : nud_total_adc/D; ```. TTreeReaderValue failed to retrieve the leaf when the named passed; to the constructor was just ""NUD_total_ADC"" (while it worked fine; with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar; situation `TTree::Draw` ""tries harder"" and it assumes that the; desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`; and as a last resort it picks the branch sub-leaf if it exists and; it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:485,Deployability,patch,patch,485,"Before this patch, given a TTree with a branch with name different; from its leaf, e.g. like this:. ```; *Br 0 :NUD_total_ADC : nud_total_adc/D; ```. TTreeReaderValue failed to retrieve the leaf when the named passed; to the constructor was just ""NUD_total_ADC"" (while it worked fine; with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar; situation `TTree::Draw` ""tries harder"" and it assumes that the; desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`; and as a last resort it picks the branch sub-leaf if it exists and; it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/issues/7890:93,Energy Efficiency,consumption,consumption-of-standardhypotestinvdemo-c-in-,93,"The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. ; To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : ; ``` ; /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")""; ```. Running bisect the cause of this memory increase is this PR: ; #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/pull/7891:84,Usability,Guid,Guide,84,This PR makes the TFile Layout documentation visible in; the Doxygen ROOT reference Guide. - The .txt file have been turned into markdown; - Doxyfile have io/doc/TFile folder as input; - References/links between the pages have been setup; - The \tableofcontents Doxygen functionality has been turned ON; - Some typos have been fixed. Still two links need to be resolved:; http://root.cern.ch/root/RootDoc.html; http://root.cern.ch/root/htmldoc/examples/Version302.news.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7891
https://github.com/root-project/root/issues/7893:192,Integrability,depend,dependency,192,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```; // ... snip ...; [ 26%] Generating VCSRevision.h; [ 26%] Built target LLVMMCDisassembler; [ 26%] Built target LLVMOption; [ 26%] Built target LLVMMCParser; [ 26%] Built target LLVMRemarks; [ 26%] Built target clang-cmake-exports; [ 26%] Built target rconfigure; [ 27%] Built target obj.llvm-tblgen; [ 27%] Built target llvm_vcsrevision_h; [ 27%] Built target gitcommit; [ 27%] Built target LLVMDebugInfoMSF; [ 27%] Built target obj.clang-tblgen; [ 27%] Built target rootMan; [ 28%] Built target LLVMDebugInfoDWARF; [ 28%] Built target rsa; [ 28%] Built target LLVMDebugInfoCodeView; [ 28%] Built target haddMan; [ 28%] Built target LLVMMC; [ 28%] Built target hist2workspaceMan; [ 28%] Built target copy_pretty_printers; [ 28%] Built target rootclingMan; [ 28%] Built target ProofBenchPARFiles; [ 29%] Built target move_headers; [ 30%] Built target LLVMSupport; [ 30%] Built target Foundation_Stage1; [ 30%] Built target BaseTROOT; [ 30%] Built target Foundation; [ 30%] Built target clang-tblgen; [ 30%] Built target Clib; [ 30%] Built target llvm-tblgen; [ 30%] Built target Lz4; [ 30%] Built target TextInput; [ 30%] Built target Zstd; [ 30%] Built target Lzma; [ 30%] Built target Unix; [ 30%] Built target GuiCore; [ 30%] Built target Zip; [ 30%] Built target Cont; [ 30%] Built target Meta; [ 30%] Built target RootPcmObjs; [ 30%] Built target mathtext; [ 30%] Built target root; [ 30%] Built target rmkdepend; [ 30%] Built target AttributeCompatFuncTableGen; [ 30%] Built target rpdutil; [ 30%] Built target ClangAttrImpl; [ 30%] Built target intrinsics_gen; [ 30%] Built target ClangSACheckers; [ 30%] Built target InstCombineTableGen; [ 30%] Built target StmtDataCollectors; [ 30%] Built t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:266,Integrability,depend,depends,266,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```; // ... snip ...; [ 26%] Generating VCSRevision.h; [ 26%] Built target LLVMMCDisassembler; [ 26%] Built target LLVMOption; [ 26%] Built target LLVMMCParser; [ 26%] Built target LLVMRemarks; [ 26%] Built target clang-cmake-exports; [ 26%] Built target rconfigure; [ 27%] Built target obj.llvm-tblgen; [ 27%] Built target llvm_vcsrevision_h; [ 27%] Built target gitcommit; [ 27%] Built target LLVMDebugInfoMSF; [ 27%] Built target obj.clang-tblgen; [ 27%] Built target rootMan; [ 28%] Built target LLVMDebugInfoDWARF; [ 28%] Built target rsa; [ 28%] Built target LLVMDebugInfoCodeView; [ 28%] Built target haddMan; [ 28%] Built target LLVMMC; [ 28%] Built target hist2workspaceMan; [ 28%] Built target copy_pretty_printers; [ 28%] Built target rootclingMan; [ 28%] Built target ProofBenchPARFiles; [ 29%] Built target move_headers; [ 30%] Built target LLVMSupport; [ 30%] Built target Foundation_Stage1; [ 30%] Built target BaseTROOT; [ 30%] Built target Foundation; [ 30%] Built target clang-tblgen; [ 30%] Built target Clib; [ 30%] Built target llvm-tblgen; [ 30%] Built target Lz4; [ 30%] Built target TextInput; [ 30%] Built target Zstd; [ 30%] Built target Lzma; [ 30%] Built target Unix; [ 30%] Built target GuiCore; [ 30%] Built target Zip; [ 30%] Built target Cont; [ 30%] Built target Meta; [ 30%] Built target RootPcmObjs; [ 30%] Built target mathtext; [ 30%] Built target root; [ 30%] Built target rmkdepend; [ 30%] Built target AttributeCompatFuncTableGen; [ 30%] Built target rpdutil; [ 30%] Built target ClangAttrImpl; [ 30%] Built target intrinsics_gen; [ 30%] Built target ClangSACheckers; [ 30%] Built target InstCombineTableGen; [ 30%] Built target StmtDataCollectors; [ 30%] Built t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:7485,Integrability,depend,depend,7485,ilt target obj.clangLex; [ 69%] Built target LLVMCodeGen; [ 69%] Built target obj.clangEdit; [ 69%] Built target obj.clangRewrite; [ 69%] Built target clang-headers; [ 69%] Built target LLVMX86CodeGen; [ 69%] Built target obj.clangSerialization; [ 69%] Built target clangParse; [ 70%] Built target obj.clangAnalysis; [ 70%] Built target clangASTMatchers; [ 70%] Built target obj.clangDriver; [ 71%] Built target obj.clangRewriteFrontend; [ 71%] Built target clangEdit; [ 71%] Built target obj.clangFrontend; [ 71%] Built target clangLex; [ 71%] Built target clangRewrite; [ 71%] Built target obj.clangAST; [ 71%] Built target clangAnalysis; [ 71%] Built target clangSerialization; [ 71%] Built target LLVMOrcJIT; [ 71%] Built target obj.clingMetaProcessor; [ 71%] Built target clangRewriteFrontend; [ 71%] Built target obj.clingUtils; [ 71%] Built target clangFrontend; [ 71%] Built target clangDriver; [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o; [ 72%] Built target obj.clangCodeGen; [ 72%] Built target clangAST; [ 72%] Built target obj.clangSema; [ 72%] Built target clingMetaProcessor; [ 72%] Built target clingUtils; [ 72%] Built target clangCodeGen; [ 72%] Built target clangSema; [ 72%] Built target obj.clingInterpreter; [ 72%] Built target clingInterpreter; [ 72%] Built target clad; [ 72%] Built target CLING; [ 72%] Built target LLVMRES; [ 72%] Built target Dictgen; [ 72%] Built target ClingUtils; [ 73%] Built target MetaCling; [ 73%] Built target obj.clangBasic; [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a; [ 73%] Built target clangBasic; [ 73%] Linking CXX shared library ../../../lib/libCling.so; [ 73%] Linking CXX executable src/rootcling_stage1; // ... snip ...; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:30,Usability,clear,clear,30,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```; // ... snip ...; [ 26%] Generating VCSRevision.h; [ 26%] Built target LLVMMCDisassembler; [ 26%] Built target LLVMOption; [ 26%] Built target LLVMMCParser; [ 26%] Built target LLVMRemarks; [ 26%] Built target clang-cmake-exports; [ 26%] Built target rconfigure; [ 27%] Built target obj.llvm-tblgen; [ 27%] Built target llvm_vcsrevision_h; [ 27%] Built target gitcommit; [ 27%] Built target LLVMDebugInfoMSF; [ 27%] Built target obj.clang-tblgen; [ 27%] Built target rootMan; [ 28%] Built target LLVMDebugInfoDWARF; [ 28%] Built target rsa; [ 28%] Built target LLVMDebugInfoCodeView; [ 28%] Built target haddMan; [ 28%] Built target LLVMMC; [ 28%] Built target hist2workspaceMan; [ 28%] Built target copy_pretty_printers; [ 28%] Built target rootclingMan; [ 28%] Built target ProofBenchPARFiles; [ 29%] Built target move_headers; [ 30%] Built target LLVMSupport; [ 30%] Built target Foundation_Stage1; [ 30%] Built target BaseTROOT; [ 30%] Built target Foundation; [ 30%] Built target clang-tblgen; [ 30%] Built target Clib; [ 30%] Built target llvm-tblgen; [ 30%] Built target Lz4; [ 30%] Built target TextInput; [ 30%] Built target Zstd; [ 30%] Built target Lzma; [ 30%] Built target Unix; [ 30%] Built target GuiCore; [ 30%] Built target Zip; [ 30%] Built target Cont; [ 30%] Built target Meta; [ 30%] Built target RootPcmObjs; [ 30%] Built target mathtext; [ 30%] Built target root; [ 30%] Built target rmkdepend; [ 30%] Built target AttributeCompatFuncTableGen; [ 30%] Built target rpdutil; [ 30%] Built target ClangAttrImpl; [ 30%] Built target intrinsics_gen; [ 30%] Built target ClangSACheckers; [ 30%] Built target InstCombineTableGen; [ 30%] Built target StmtDataCollectors; [ 30%] Built t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:7317,Usability,clear,clear,7317,ilt target obj.clangLex; [ 69%] Built target LLVMCodeGen; [ 69%] Built target obj.clangEdit; [ 69%] Built target obj.clangRewrite; [ 69%] Built target clang-headers; [ 69%] Built target LLVMX86CodeGen; [ 69%] Built target obj.clangSerialization; [ 69%] Built target clangParse; [ 70%] Built target obj.clangAnalysis; [ 70%] Built target clangASTMatchers; [ 70%] Built target obj.clangDriver; [ 71%] Built target obj.clangRewriteFrontend; [ 71%] Built target clangEdit; [ 71%] Built target obj.clangFrontend; [ 71%] Built target clangLex; [ 71%] Built target clangRewrite; [ 71%] Built target obj.clangAST; [ 71%] Built target clangAnalysis; [ 71%] Built target clangSerialization; [ 71%] Built target LLVMOrcJIT; [ 71%] Built target obj.clingMetaProcessor; [ 71%] Built target clangRewriteFrontend; [ 71%] Built target obj.clingUtils; [ 71%] Built target clangFrontend; [ 71%] Built target clangDriver; [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o; [ 72%] Built target obj.clangCodeGen; [ 72%] Built target clangAST; [ 72%] Built target obj.clangSema; [ 72%] Built target clingMetaProcessor; [ 72%] Built target clingUtils; [ 72%] Built target clangCodeGen; [ 72%] Built target clangSema; [ 72%] Built target obj.clingInterpreter; [ 72%] Built target clingInterpreter; [ 72%] Built target clad; [ 72%] Built target CLING; [ 72%] Built target LLVMRES; [ 72%] Built target Dictgen; [ 72%] Built target ClingUtils; [ 73%] Built target MetaCling; [ 73%] Built target obj.clangBasic; [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a; [ 73%] Built target clangBasic; [ 73%] Linking CXX shared library ../../../lib/libCling.so; [ 73%] Linking CXX executable src/rootcling_stage1; // ... snip ...; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/pull/7894:115,Integrability,depend,dependent,115,"- Replace some more `long` types by `Longptr_t`; - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format); - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7899:90,Modifiability,variab,variables,90,fixes bug reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7899
https://github.com/root-project/root/issues/7900:1758,Availability,error,error,1758,".Snapshot(""atree"", ""sig.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""); fsig = r.TFile.Open(""sig.root""); tsig = fsig.atree; fbkg = r.TFile.Open(""bkg.root""); tbkg = fbkg.atree; foth = r.TFile.Open(""oth.root""); toth = foth.atree; fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""); dl.AddVariable(""v"", ""v"", """", ""F""); dl.AddVariable(""u"", ""u"", """", ""F""); dl.AddSpectator(""e"", ""entry number"", """"); dl.AddTree(tsig, ""sig""); dl.AddTree(tbkg, ""bkg""); dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""); fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""); fact.BookMethod(; dl,; r.TMVA.Types.kBDT,; ""BDT"",; r""!H:!V:nTrees=500:BoostType=Grad""; r"":UseBaggedGrad""; ); fact.TrainAllMethods(); fact.TestAllMethods(); fact.EvaluateAllMethods(). fout.Close(); model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""); ```; Ends with error:; ```; <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file; ***> abort program execution; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-cf70daeeb34f> in <module>; 34 ; 35 fout.Close(); ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:; RReader::RReader(TMVA::Experimental::RReader&&) =>; TypeError: could not convert argument 1; RReader::RReader(const string& path) =>; runtime_error: FATAL error; ```. ### Setup; ROOT 6.22/06; macOS; conda-forge",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2433,Availability,error,error,2433,".Snapshot(""atree"", ""sig.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""); fsig = r.TFile.Open(""sig.root""); tsig = fsig.atree; fbkg = r.TFile.Open(""bkg.root""); tbkg = fbkg.atree; foth = r.TFile.Open(""oth.root""); toth = foth.atree; fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""); dl.AddVariable(""v"", ""v"", """", ""F""); dl.AddVariable(""u"", ""u"", """", ""F""); dl.AddSpectator(""e"", ""entry number"", """"); dl.AddTree(tsig, ""sig""); dl.AddTree(tbkg, ""bkg""); dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""); fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""); fact.BookMethod(; dl,; r.TMVA.Types.kBDT,; ""BDT"",; r""!H:!V:nTrees=500:BoostType=Grad""; r"":UseBaggedGrad""; ); fact.TrainAllMethods(); fact.TestAllMethods(); fact.EvaluateAllMethods(). fout.Close(); model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""); ```; Ends with error:; ```; <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file; ***> abort program execution; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-cf70daeeb34f> in <module>; 34 ; 35 fout.Close(); ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:; RReader::RReader(TMVA::Experimental::RReader&&) =>; TypeError: could not convert argument 1; RReader::RReader(const string& path) =>; runtime_error: FATAL error; ```. ### Setup; ROOT 6.22/06; macOS; conda-forge",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:140,Modifiability,variab,variables,140,"### Explain what you would like to see improved; Originally reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844/3), `TMVA::Experimental::RReader` fails if the model was trained with any spectators. ### Optional: share how it could be improved; PR #7899 should be enough to fix this. ### To Reproduce; ```python; import ROOT as r. r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(5, 5)"").Define(""u"", ""gRandom->Gaus(5, 10)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""sig.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""); fsig = r.TFile.Open(""sig.root""); tsig = fsig.atree; fbkg = r.TFile.Open(""bkg.root""); tbkg = fbkg.atree; foth = r.TFile.Open(""oth.root""); toth = foth.atree; fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""); dl.AddVariable(""v"", ""v"", """", ""F""); dl.AddVariable(""u"", ""u"", """", ""F""); dl.AddSpectator(""e"", ""entry number"", """"); dl.AddTree(tsig, ""sig""); dl.AddTree(tbkg, ""bkg""); dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""); fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""); fact.BookMethod(; dl,; r.TMVA.Types.kBDT,; ""BDT"",; r""!H:!V:nTrees=500:BoostType=Grad""; r"":UseBaggedGrad""; ); fact.TrainAllMethods(); fact.TestAllMethods(); fact.EvaluateAllMethods(). fout.Close(); model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""); ```; Ends with error:; ```; <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file; ***> abort program execution; ---------------------------------------------------------------------------; Typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:1896,Safety,abort,abort,1896,".Snapshot(""atree"", ""sig.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""); fsig = r.TFile.Open(""sig.root""); tsig = fsig.atree; fbkg = r.TFile.Open(""bkg.root""); tbkg = fbkg.atree; foth = r.TFile.Open(""oth.root""); toth = foth.atree; fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""); dl.AddVariable(""v"", ""v"", """", ""F""); dl.AddVariable(""u"", ""u"", """", ""F""); dl.AddSpectator(""e"", ""entry number"", """"); dl.AddTree(tsig, ""sig""); dl.AddTree(tbkg, ""bkg""); dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""); fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""); fact.BookMethod(; dl,; r.TMVA.Types.kBDT,; ""BDT"",; r""!H:!V:nTrees=500:BoostType=Grad""; r"":UseBaggedGrad""; ); fact.TrainAllMethods(); fact.TestAllMethods(); fact.EvaluateAllMethods(). fout.Close(); model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""); ```; Ends with error:; ```; <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file; ***> abort program execution; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-cf70daeeb34f> in <module>; 34 ; 35 fout.Close(); ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:; RReader::RReader(TMVA::Experimental::RReader&&) =>; TypeError: could not convert argument 1; RReader::RReader(const string& path) =>; runtime_error: FATAL error; ```. ### Setup; ROOT 6.22/06; macOS; conda-forge",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:1593,Testability,Test,TestAllMethods,1593,".Snapshot(""atree"", ""sig.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""); fsig = r.TFile.Open(""sig.root""); tsig = fsig.atree; fbkg = r.TFile.Open(""bkg.root""); tbkg = fbkg.atree; foth = r.TFile.Open(""oth.root""); toth = foth.atree; fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""); dl.AddVariable(""v"", ""v"", """", ""F""); dl.AddVariable(""u"", ""u"", """", ""F""); dl.AddSpectator(""e"", ""entry number"", """"); dl.AddTree(tsig, ""sig""); dl.AddTree(tbkg, ""bkg""); dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""); fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""); fact.BookMethod(; dl,; r.TMVA.Types.kBDT,; ""BDT"",; r""!H:!V:nTrees=500:BoostType=Grad""; r"":UseBaggedGrad""; ); fact.TrainAllMethods(); fact.TestAllMethods(); fact.EvaluateAllMethods(). fout.Close(); model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""); ```; Ends with error:; ```; <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file; ***> abort program execution; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-cf70daeeb34f> in <module>; 34 ; 35 fout.Close(); ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:; RReader::RReader(TMVA::Experimental::RReader&&) =>; TypeError: could not convert argument 1; RReader::RReader(const string& path) =>; runtime_error: FATAL error; ```. ### Setup; ROOT 6.22/06; macOS; conda-forge",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/pull/7901:71,Performance,load,loads,71,Let test webgui integrity; - if THttpServer work properly; - if JSROOT loads on client side; - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:16,Security,integrity,integrity,16,Let test webgui integrity; - if THttpServer work properly; - if JSROOT loads on client side; - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:4,Testability,test,test,4,Let test webgui integrity; - if THttpServer work properly; - if JSROOT loads on client side; - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/issues/7903:351,Deployability,patch,patch,351,"- [x] Checked for duplicates. ### Describe the bug; TClassEdit reads behind the end of a static string to find the type of an STL container.; This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior; It shouldn't read after the end of the string. ### To Reproduce; Apply this patch:; ```; --- a/core/foundation/src/TClassEdit.cxx; +++ b/core/foundation/src/TClassEdit.cxx; @@ -13,6 +13,7 @@; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ; +#include <array>; #include <cstdio>; #include <cstdlib>; #include <cassert>; @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type); ; int TClassEdit::STLArgs(int kind); {; - static const char stln[] =// min number of container arguments; + constexpr int nKind = 14;; + assert(kind < nKind);; + static constexpr std::array<char, nKind> stln = // min number of container arguments; // vector, list, deque, map, multimap, set, multiset, bitset,; { 1, 1, 1, 1, 3, 3, 2, 2, 1,; // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap; ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup; master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:162,Security,sanitiz,sanitizer,162,"- [x] Checked for duplicates. ### Describe the bug; TClassEdit reads behind the end of a static string to find the type of an STL container.; This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior; It shouldn't read after the end of the string. ### To Reproduce; Apply this patch:; ```; --- a/core/foundation/src/TClassEdit.cxx; +++ b/core/foundation/src/TClassEdit.cxx; @@ -13,6 +13,7 @@; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ; +#include <array>; #include <cstdio>; #include <cstdlib>; #include <cassert>; @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type); ; int TClassEdit::STLArgs(int kind); {; - static const char stln[] =// min number of container arguments; + constexpr int nKind = 14;; + assert(kind < nKind);; + static constexpr std::array<char, nKind> stln = // min number of container arguments; // vector, list, deque, map, multimap, set, multiset, bitset,; { 1, 1, 1, 1, 3, 3, 2, 2, 1,; // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap; ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup; master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:902,Testability,assert,assert,902,"- [x] Checked for duplicates. ### Describe the bug; TClassEdit reads behind the end of a static string to find the type of an STL container.; This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior; It shouldn't read after the end of the string. ### To Reproduce; Apply this patch:; ```; --- a/core/foundation/src/TClassEdit.cxx; +++ b/core/foundation/src/TClassEdit.cxx; @@ -13,6 +13,7 @@; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ; +#include <array>; #include <cstdio>; #include <cstdlib>; #include <cassert>; @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type); ; int TClassEdit::STLArgs(int kind); {; - static const char stln[] =// min number of container arguments; + constexpr int nKind = 14;; + assert(kind < nKind);; + static constexpr std::array<char, nKind> stln = // min number of container arguments; // vector, list, deque, map, multimap, set, multiset, bitset,; { 1, 1, 1, 1, 3, 3, 2, 2, 1,; // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap; ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup; master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:1228,Testability,assert,assertion,1228,"- [x] Checked for duplicates. ### Describe the bug; TClassEdit reads behind the end of a static string to find the type of an STL container.; This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior; It shouldn't read after the end of the string. ### To Reproduce; Apply this patch:; ```; --- a/core/foundation/src/TClassEdit.cxx; +++ b/core/foundation/src/TClassEdit.cxx; @@ -13,6 +13,7 @@; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ; +#include <array>; #include <cstdio>; #include <cstdlib>; #include <cassert>; @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type); ; int TClassEdit::STLArgs(int kind); {; - static const char stln[] =// min number of container arguments; + constexpr int nKind = 14;; + assert(kind < nKind);; + static constexpr std::array<char, nKind> stln = // min number of container arguments; // vector, list, deque, map, multimap, set, multiset, bitset,; { 1, 1, 1, 1, 3, 3, 2, 2, 1,; // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap; ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup; master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/pull/7904:1100,Availability,down,down,1100,"Fixed three leaks here:; - TSystem; - Metacling; - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):; [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:; [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:; Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :; Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way.; I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,; - you switch off the mempool; - track down the leak; - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:172,Testability,log,log,172,"Fixed three leaks here:; - TSystem; - Metacling; - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):; [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:; [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:; Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :; Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way.; I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,; - you switch off the mempool; - track down the leak; - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:240,Testability,log,log,240,"Fixed three leaks here:; - TSystem; - Metacling; - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):; [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:; [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:; Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :; Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way.; I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,; - you switch off the mempool; - track down the leak; - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/issues/7905:222,Availability,error,error,222,"Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into; ```; In file included from v6-22-06/install/include/Math/Vector4D.h:12:; v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup; return sqrt(mm);; ^; v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here; fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:125,Deployability,install,install,125,"Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into; ```; In file included from v6-22-06/install/include/Math/Vector4D.h:12:; v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup; return sqrt(mm);; ^; v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here; fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:171,Deployability,install,install,171,"Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into; ```; In file included from v6-22-06/install/include/Math/Vector4D.h:12:; v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup; return sqrt(mm);; ^; v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here; fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:374,Deployability,install,install,374,"Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into; ```; In file included from v6-22-06/install/include/Math/Vector4D.h:12:; v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup; return sqrt(mm);; ^; v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here; fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:326,Integrability,depend,dependent,326,"Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into; ```; In file included from v6-22-06/install/include/Math/Vector4D.h:12:; v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup; return sqrt(mm);; ^; v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here; fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/pull/7907:502,Availability,alive,alive,502,"In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:621,Energy Efficiency,sustainab,sustainable,621,"In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:587,Performance,perform,performance-critical,587,"In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:571,Safety,avoid,avoided,571,"In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7908:52,Availability,error,error,52,Solved missing include of std::string referenced in error handling. Needed to compile using clang and libc++,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7908
https://github.com/root-project/root/pull/7910:86,Availability,error,errors,86,"Setting the move constructor and move assignment operator to = default; causes linker errors because the copy assignment operator is not; implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators; work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;; ```C++; void iterator_test() {. RooArgSet argSet1;; RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:512,Availability,error,error,512,"Setting the move constructor and move assignment operator to = default; causes linker errors because the copy assignment operator is not; implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators; work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;; ```C++; void iterator_test() {. RooArgSet argSet1;; RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:359,Deployability,release,release,359,"Setting the move constructor and move assignment operator to = default; causes linker errors because the copy assignment operator is not; implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators; work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;; ```C++; void iterator_test() {. RooArgSet argSet1;; RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:318,Safety,avoid,avoid,318,"Setting the move constructor and move assignment operator to = default; causes linker errors because the copy assignment operator is not; implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators; work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;; ```C++; void iterator_test() {. RooArgSet argSet1;; RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7911:132,Deployability,release,release,132,Rename RooHistFunc::getObservables to not hide; RooAbsArg::getObservables. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7911
https://github.com/root-project/root/pull/7911:91,Safety,avoid,avoid,91,Rename RooHistFunc::getObservables to not hide; RooAbsArg::getObservables. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7911
https://github.com/root-project/root/issues/7912:95,Usability,Simpl,Simply,95,"We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace; [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip); .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right?. I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here!. Thanks!; Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7912
https://github.com/root-project/root/pull/7916:12,Deployability,patch,patch,12,"Before this patch, given a TTree with a branch with name different; from its leaf, e.g. like this:. ```; *Br 0 :NUD_total_ADC : nud_total_adc/D; ```. TTreeReaderValue failed to retrieve the leaf when the named passed; to the constructor was just ""NUD_total_ADC"" (while it worked fine; with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar; situation `TTree::Draw` ""tries harder"" and it assumes that the; desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`; and as a last resort it picks the branch sub-leaf if it exists and; it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:485,Deployability,patch,patch,485,"Before this patch, given a TTree with a branch with name different; from its leaf, e.g. like this:. ```; *Br 0 :NUD_total_ADC : nud_total_adc/D; ```. TTreeReaderValue failed to retrieve the leaf when the named passed; to the constructor was just ""NUD_total_ADC"" (while it worked fine; with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar; situation `TTree::Draw` ""tries harder"" and it assumes that the; desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`; and as a last resort it picks the branch sub-leaf if it exists and; it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7918:211,Availability,avail,available,211,"Before this patch, given a TTree with a branch with name _different_; from its leaf, e.g. like this:. ```; *Br 0 :NUD_total_ADC : nud_total_adc/D; ```. RDataFrame only added ""branchname.leafname"" to the list of available; columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts; just ""NUD_total_ADC"" as it assumes that the desired leaf is the; first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid; column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:12,Deployability,patch,patch,12,"Before this patch, given a TTree with a branch with name _different_; from its leaf, e.g. like this:. ```; *Br 0 :NUD_total_ADC : nud_total_adc/D; ```. RDataFrame only added ""branchname.leafname"" to the list of available; columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts; just ""NUD_total_ADC"" as it assumes that the desired leaf is the; first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid; column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:464,Deployability,patch,patch,464,"Before this patch, given a TTree with a branch with name _different_; from its leaf, e.g. like this:. ```; *Br 0 :NUD_total_ADC : nud_total_adc/D; ```. RDataFrame only added ""branchname.leafname"" to the list of available; columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts; just ""NUD_total_ADC"" as it assumes that the desired leaf is the; first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid; column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7920:56,Security,access,accessing,56,"When doing I/O of RVec objects, TClassEdit::STLArgs was accessing; an element one after the end of a static array. asan rightly complains. This commit fixes https://github.com/root-project/root/issues/7903,; which contains more details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7920
https://github.com/root-project/root/pull/7924:56,Security,access,accessing,56,"When doing I/O of RVec objects, TClassEdit::STLArgs was accessing; an element one after the end of a static array. asan rightly complains. This commit fixes #7903,; which contains more details. This PR is a backport of #7920",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7924
https://github.com/root-project/root/pull/7926:522,Deployability,update,updated,522,"Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'; however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in; the file is empty and thus no information was recorded about `ExpensiveObject`,; consequently when the map's StreamerInfo request the TClass for the underlying pair,; it is returned nullptr (since we no longer create the TClass for a pair where one or; more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7926
https://github.com/root-project/root/pull/7926:483,Integrability,rout,routine,483,"Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'; however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in; the file is empty and thus no information was recorded about `ExpensiveObject`,; consequently when the map's StreamerInfo request the TClass for the underlying pair,; it is returned nullptr (since we no longer create the TClass for a pair where one or; more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7926
https://github.com/root-project/root/pull/7927:13,Deployability,install,install,13,"Some systems install Vc under /usr/include which makes it reachable from within; rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the; corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue; where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where; we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:404,Deployability,patch,patch,404,"Some systems install Vc under /usr/include which makes it reachable from within; rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the; corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue; where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where; we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:462,Deployability,upgrade,upgrade,462,"Some systems install Vc under /usr/include which makes it reachable from within; rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the; corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue; where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where; we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7932:10,Modifiability,variab,variables,10,"In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache; variables, so users can set them from outside. ROOT, however, FORCE; overwrote them, so users cannot change anything.; Now, the variables are not set by ROOT at all, we use the CMake; defaults.; It is fine to append or replace substrings, but the variables should NOT; be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like; this:; ```diff; diff --git a/CMakeLists.txt b/CMakeLists.txt; index e40b84a920..ab41612006 100644; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""); +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""); +; project(ROOT); ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:70,Modifiability,variab,variables,70,"In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache; variables, so users can set them from outside. ROOT, however, FORCE; overwrote them, so users cannot change anything.; Now, the variables are not set by ROOT at all, we use the CMake; defaults.; It is fine to append or replace substrings, but the variables should NOT; be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like; this:; ```diff; diff --git a/CMakeLists.txt b/CMakeLists.txt; index e40b84a920..ab41612006 100644; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""); +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""); +; project(ROOT); ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:198,Modifiability,variab,variables,198,"In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache; variables, so users can set them from outside. ROOT, however, FORCE; overwrote them, so users cannot change anything.; Now, the variables are not set by ROOT at all, we use the CMake; defaults.; It is fine to append or replace substrings, but the variables should NOT; be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like; this:; ```diff; diff --git a/CMakeLists.txt b/CMakeLists.txt; index e40b84a920..ab41612006 100644; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""); +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""); +; project(ROOT); ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:317,Modifiability,variab,variables,317,"In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache; variables, so users can set them from outside. ROOT, however, FORCE; overwrote them, so users cannot change anything.; Now, the variables are not set by ROOT at all, we use the CMake; defaults.; It is fine to append or replace substrings, but the variables should NOT; be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like; this:; ```diff; diff --git a/CMakeLists.txt b/CMakeLists.txt; index e40b84a920..ab41612006 100644; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""); +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""); +; project(ROOT); ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:63,Performance,cache,cache,63,"In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache; variables, so users can set them from outside. ROOT, however, FORCE; overwrote them, so users cannot change anything.; Now, the variables are not set by ROOT at all, we use the CMake; defaults.; It is fine to append or replace substrings, but the variables should NOT; be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like; this:; ```diff; diff --git a/CMakeLists.txt b/CMakeLists.txt; index e40b84a920..ab41612006 100644; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""); +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""); +; project(ROOT); ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/issues/7933:159,Testability,test,testMemPool,159,"The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. ; ```; void testMemPool() {. RooRealVar x(""x"",""x"",0,10);; RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {; if (i % 100000 == 0) {; gSystem->GetProcInfo(&pinfo);; std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;; }; auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:76,Usability,simpl,simple,76,"The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. ; ```; void testMemPool() {. RooRealVar x(""x"",""x"",0,10);; RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {; if (i % 100000 == 0) {; gSystem->GetProcInfo(&pinfo);; std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;; }; auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/pull/7935:100,Energy Efficiency,allocate,allocated,100,"If an arena in the MemPoolForRooSets is not referenced anymore, it; should delete the memory it has allocated. This addresses GitHub issue https://github.com/root-project/root/issues/7933.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7935
https://github.com/root-project/root/issues/7936:95,Availability,failure,failures,95,"I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was; ```; $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root; ```; and the following features were enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1425,Availability,failure,failures,1425,"-DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root; ```; and the following features were enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://githu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2388,Availability,failure,failures,2388,"70/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behav",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2603,Availability,ERROR,ERROR,2603,"d); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3717,Availability,failure,failure,3717,"-; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4110,Availability,Error,Error,4110,"is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4245,Availability,Error,Error,4245,"d it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4307,Availability,error,error,4307,"d it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4887,Availability,error,error,4887,"d it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4930,Availability,error,error,4930,"d it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2240,Deployability,configurat,configuration,2240," ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3287,Deployability,install,installed,3287,"achine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3420,Deployability,install,installed,3420,"ch test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3521,Deployability,configurat,configuration,3521,"ch test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4127,Energy Efficiency,allocate,allocate,4127,"is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3625,Integrability,depend,dependencies,3625,"ch test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4296,Integrability,message,message,4296,"d it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2240,Modifiability,config,configuration,2240," ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3521,Modifiability,config,configuration,3521,"ch test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3838,Modifiability,config,configured,3838,"-; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1520,Performance,load,load-libs,1520,"esting=""ON"" -Droottest=""ON"" /srv/root/src/root; ```; and the following features were enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2574,Performance,load,load-libs,2574,"d); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2672,Performance,load,loaded,2672,"notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3109,Performance,load,loaded,3109,"ttest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3454,Safety,avoid,avoided,3454,"ch test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4330,Safety,abort,aborted,4330,"d it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:90,Testability,test,test,90,"I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was; ```; $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root; ```; and the following features were enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1420,Testability,test,test,1420,"-DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root; ```; and the following features were enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://githu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1472,Testability,test,tests,1472,"esting=""ON"" -Droottest=""ON"" /srv/root/src/root; ```; and the following features were enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1568,Testability,test,test-TClingTest,1568,"esting=""ON"" -Droottest=""ON"" /srv/root/src/root; ```; and the following features were enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2193,Testability,test,tests,2193," ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2321,Testability,test,tests,2321,"tps://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2512,Testability,test,test,2512,"nittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I reco",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2543,Testability,Test,Test,2543,"d); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2657,Testability,Test,Test,2657,"notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2865,Testability,test,test,2865,"notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3075,Testability,test,test,3075,"ttest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3671,Testability,Test,Test,3671,"-; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3762,Testability,test,tested,3762,"-; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3939,Testability,Test,Test,3939,"n('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: er",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4360,Testability,test,tests,4360,"d it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/pull/7938:33,Availability,error,error,33,"1. Support plain TBranch; 2. Fix error with item double-click; 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside; 4. Show warning message when double-click action takes too long time; 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:222,Deployability,toggle,toggle,222,"1. Support plain TBranch; 2. Fix error with item double-click; 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside; 4. Show warning message when double-click action takes too long time; 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:157,Integrability,message,message,157,"1. Support plain TBranch; 2. Fix error with item double-click; 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside; 4. Show warning message when double-click action takes too long time; 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7944:105,Integrability,depend,dependent,105,- Replace `long` types by `Longptr_t`; - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7944
https://github.com/root-project/root/pull/7948:480,Deployability,configurat,configuration,480,"Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running.; Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - ; via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`.; In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:480,Modifiability,config,configuration,480,"Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running.; Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - ; via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`.; In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:385,Safety,detect,detect,385,"Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running.; Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - ; via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`.; In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/issues/7950:1581,Availability,error,error,1581,"e/GaudiKernel/ChronoEntity.h:19:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory; #include <nlohmann/json_fwd.hpp>; ^; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed.; *** Break *** abort; ...; ```; The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```; $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1652,Deployability,install,install,1652,"e/GaudiKernel/ChronoEntity.h:19:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory; #include <nlohmann/json_fwd.hpp>; ^; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed.; *** Break *** abort; ...; ```; The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```; $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2620,Deployability,release,releases,2620,"gcc9-dbg/include/GaudiKernel/StatEntity.h:12:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory; #include <nlohmann/json_fwd.hpp>; ^; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed.; *** Break *** abort; ...; ```; The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```; $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH; $ python -c 'import GaudiPython'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1022,Energy Efficiency,Monitor,MonitoringHub,1022,"### Describe the bug; Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce; ```; $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh; $ python -c 'import GaudiPython'; ```; produces:; ```; # setting LC_ALL to ""C""; In file included from GaudiPythonDict dictionary payload:71:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory; #include <nlohmann/json_fwd.hpp>; ^; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2169,Performance,load,loaded,2169,"gcc9-dbg/include/GaudiKernel/StatEntity.h:12:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory; #include <nlohmann/json_fwd.hpp>; ^; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed.; *** Break *** abort; ...; ```; The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```; $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH; $ python -c 'import GaudiPython'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2130,Safety,abort,abort,2130,"gcc9-dbg/include/GaudiKernel/StatEntity.h:12:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory; #include <nlohmann/json_fwd.hpp>; ^; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed.; *** Break *** abort; ...; ```; The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```; $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH; $ python -c 'import GaudiPython'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2453,Safety,avoid,avoided,2453,"gcc9-dbg/include/GaudiKernel/StatEntity.h:12:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory; #include <nlohmann/json_fwd.hpp>; ^; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed.; *** Break *** abort; ...; ```; The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```; $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH; $ python -c 'import GaudiPython'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2055,Testability,Assert,Assertion,2055,"gcc9-dbg/include/GaudiKernel/StatEntity.h:12:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory; #include <nlohmann/json_fwd.hpp>; ^; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed.; *** Break *** abort; ...; ```; The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```; $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH; $ python -c 'import GaudiPython'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/pull/7954:86,Energy Efficiency,consumption,consumption,86,"The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with; increasing number of arenas, becuase trying to allocate a new; non-overlapping arena often fails. 2. Amplification of memory leaks in user code:; If one of the elements in the arena leaks, the whole arena will; leak. Since each arena has 6000 elements, this means a leak of a; RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and; the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena; 120 times because this is the size of RooArgSet in bytes. This can be; done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet; 2. When an address was used before, add one byte and in can be used; again. So at the cost of allocating 2x more memory per arena, we can reuse each; arena 120 times. Now, the good thing is that the interval of creating/deleting; RooArgSets is usually higher than 6000. So when reusing an arena; multiple times, they will eventually be filled only by leaking; RooArgSets if there is a leak. Meaning the leak amplification effect; should be gone. This was checked with the CMS Higgs combine toy fit example from the; Higgs combine tutorial. Without this commit, there is a GB-level leak; that can be clearly observed with `top`, but with this commit the leak; becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:151,Energy Efficiency,allocate,allocate,151,"The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with; increasing number of arenas, becuase trying to allocate a new; non-overlapping arena often fails. 2. Amplification of memory leaks in user code:; If one of the elements in the arena leaks, the whole arena will; leak. Since each arena has 6000 elements, this means a leak of a; RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and; the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena; 120 times because this is the size of RooArgSet in bytes. This can be; done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet; 2. When an address was used before, add one byte and in can be used; again. So at the cost of allocating 2x more memory per arena, we can reuse each; arena 120 times. Now, the good thing is that the interval of creating/deleting; RooArgSets is usually higher than 6000. So when reusing an arena; multiple times, they will eventually be filled only by leaking; RooArgSets if there is a leak. Meaning the leak amplification effect; should be gone. This was checked with the CMS Higgs combine toy fit example from the; Higgs combine tutorial. Without this commit, there is a GB-level leak; that can be clearly observed with `top`, but with this commit the leak; becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:492,Performance,perform,performance,492,"The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with; increasing number of arenas, becuase trying to allocate a new; non-overlapping arena often fails. 2. Amplification of memory leaks in user code:; If one of the elements in the arena leaks, the whole arena will; leak. Since each arena has 6000 elements, this means a leak of a; RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and; the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena; 120 times because this is the size of RooArgSet in bytes. This can be; done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet; 2. When an address was used before, add one byte and in can be used; again. So at the cost of allocating 2x more memory per arena, we can reuse each; arena 120 times. Now, the good thing is that the interval of creating/deleting; RooArgSets is usually higher than 6000. So when reusing an arena; multiple times, they will eventually be filled only by leaking; RooArgSets if there is a leak. Meaning the leak amplification effect; should be gone. This was checked with the CMS Higgs combine toy fit example from the; Higgs combine tutorial. Without this commit, there is a GB-level leak; that can be clearly observed with `top`, but with this commit the leak; becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1394,Usability,clear,clearly,1394,"ng issues: increasing memory and CPU consumption with; increasing number of arenas, becuase trying to allocate a new; non-overlapping arena often fails. 2. Amplification of memory leaks in user code:; If one of the elements in the arena leaks, the whole arena will; leak. Since each arena has 6000 elements, this means a leak of a; RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and; the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena; 120 times because this is the size of RooArgSet in bytes. This can be; done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet; 2. When an address was used before, add one byte and in can be used; again. So at the cost of allocating 2x more memory per arena, we can reuse each; arena 120 times. Now, the good thing is that the interval of creating/deleting; RooArgSets is usually higher than 6000. So when reusing an arena; multiple times, they will eventually be filled only by leaking; RooArgSets if there is a leak. Meaning the leak amplification effect; should be gone. This was checked with the CMS Higgs combine toy fit example from the; Higgs combine tutorial. Without this commit, there is a GB-level leak; that can be clearly observed with `top`, but with this commit the leak; becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/issues/7955:990,Availability,error,error,990,"As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:; ```; {; auto cls = TClass::GetClass(""std::vector<int>"");; auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);; auto args = meth->GetListOfMethodArgs();; auto methArg = dynamic_cast<TMethodArg*>(args->First());; cout << args->GetEntries() << endl;; cout << methArg->GetTypeName() << endl;; }; ```; print; ```; 1; vector<TClass*>::size_type; ```; where one would expect; ```; 1; vector<int>::size_type; ```; This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:813,Performance,load,load,813,"As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:; ```; {; auto cls = TClass::GetClass(""std::vector<int>"");; auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);; auto args = meth->GetListOfMethodArgs();; auto methArg = dynamic_cast<TMethodArg*>(args->First());; cout << args->GetEntries() << endl;; cout << methArg->GetTypeName() << endl;; }; ```; print; ```; 1; vector<TClass*>::size_type; ```; where one would expect; ```; 1; vector<int>::size_type; ```; This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/pull/7956:522,Deployability,update,updated,522,"Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'; however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in; the file is empty and thus no information was recorded about `ExpensiveObject`,; consequently when the map's StreamerInfo request the TClass for the underlying pair,; it is returned nullptr (since we no longer create the TClass for a pair where one or; more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7956
https://github.com/root-project/root/pull/7956:483,Integrability,rout,routine,483,"Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'; however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in; the file is empty and thus no information was recorded about `ExpensiveObject`,; consequently when the map's StreamerInfo request the TClass for the underlying pair,; it is returned nullptr (since we no longer create the TClass for a pair where one or; more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7956
https://github.com/root-project/root/issues/7960:243,Availability,avail,available,243,"### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available; ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup; * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:368,Availability,avail,available,368,"### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available; ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup; * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:525,Availability,avail,available,525,"### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available; ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup; * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:662,Availability,avail,available,662,"### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available; ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup; * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:779,Availability,avail,available,779,"### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available; ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup; * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7964:5,Deployability,install,installing,5,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:105,Deployability,install,installation,105,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:235,Deployability,install,installations,235,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:279,Deployability,install,install,279,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:312,Deployability,install,install,312,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:378,Modifiability,sandbox,sandbox,378,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:567,Modifiability,sandbox,sandbox,567,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:453,Security,ACCESS,ACCESS,453,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:639,Security,Access,Access,639,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:274,Testability,test,test-install,274,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:378,Testability,sandbox,sandbox,378,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:509,Testability,LOG,LOG,509,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:567,Testability,sandbox,sandbox,567,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:575,Testability,log,log,575,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7965:849,Availability,ERROR,ERROR,849,"Consider the following code snippet:. nbkg = 10000; nsig = 100; masses = [125,400]; ; import ROOT; ws = ROOT.RooWorkspace(""workspace""); m = ws.factory(""m[0,1000]""); bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""); bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)); ; bkgdata = bkg.generate(m,nbkg); bkgdata.SetName(""asimov_0""); ws.Import(bkgdata); ; funcs = ROOT.RooArgList(); funcs.add(bkg); for i in range(0,len(masses)):; sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)); sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)); funcs.add(sig); mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3; [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:903,Availability,ERROR,ERROR,903,"Consider the following code snippet:. nbkg = 10000; nsig = 100; masses = [125,400]; ; import ROOT; ws = ROOT.RooWorkspace(""workspace""); m = ws.factory(""m[0,1000]""); bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""); bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)); ; bkgdata = bkg.generate(m,nbkg); bkgdata.SetName(""asimov_0""); ws.Import(bkgdata); ; funcs = ROOT.RooArgList(); funcs.add(bkg); for i in range(0,len(masses)):; sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)); sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)); funcs.add(sig); mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3; [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:990,Availability,ERROR,ERROR,990,"Consider the following code snippet:. nbkg = 10000; nsig = 100; masses = [125,400]; ; import ROOT; ws = ROOT.RooWorkspace(""workspace""); m = ws.factory(""m[0,1000]""); bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""); bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)); ; bkgdata = bkg.generate(m,nbkg); bkgdata.SetName(""asimov_0""); ws.Import(bkgdata); ; funcs = ROOT.RooArgList(); funcs.add(bkg); for i in range(0,len(masses)):; sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)); sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)); funcs.add(sig); mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3; [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1052,Availability,ERROR,ERRORS,1052,"Consider the following code snippet:. nbkg = 10000; nsig = 100; masses = [125,400]; ; import ROOT; ws = ROOT.RooWorkspace(""workspace""); m = ws.factory(""m[0,1000]""); bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""); bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)); ; bkgdata = bkg.generate(m,nbkg); bkgdata.SetName(""asimov_0""); ws.Import(bkgdata); ; funcs = ROOT.RooArgList(); funcs.add(bkg); for i in range(0,len(masses)):; sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)); sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)); funcs.add(sig); mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3; [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1156,Availability,avail,available,1156,"Consider the following code snippet:. nbkg = 10000; nsig = 100; masses = [125,400]; ; import ROOT; ws = ROOT.RooWorkspace(""workspace""); m = ws.factory(""m[0,1000]""); bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""); bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)); ; bkgdata = bkg.generate(m,nbkg); bkgdata.SetName(""asimov_0""); ws.Import(bkgdata); ; funcs = ROOT.RooArgList(); funcs.add(bkg); for i in range(0,len(masses)):; sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)); sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)); funcs.add(sig); mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3; [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1059,Safety,detect,detected,1059,"Consider the following code snippet:. nbkg = 10000; nsig = 100; masses = [125,400]; ; import ROOT; ws = ROOT.RooWorkspace(""workspace""); m = ws.factory(""m[0,1000]""); bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""); bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)); ; bkgdata = bkg.generate(m,nbkg); bkgdata.SetName(""asimov_0""); ws.Import(bkgdata); ; funcs = ROOT.RooArgList(); funcs.add(bkg); for i in range(0,len(masses)):; sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)); sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)); funcs.add(sig); mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3; [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1094,Safety,abort,aborted,1094,"Consider the following code snippet:. nbkg = 10000; nsig = 100; masses = [125,400]; ; import ROOT; ws = ROOT.RooWorkspace(""workspace""); m = ws.factory(""m[0,1000]""); bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""); bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)); ; bkgdata = bkg.generate(m,nbkg); bkgdata.SetName(""asimov_0""); ws.Import(bkgdata); ; funcs = ROOT.RooArgList(); funcs.add(bkg); for i in range(0,len(masses)):; sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)); sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)); funcs.add(sig); mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3; [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7966:78,Testability,log,log,78,"### Explain what you would like to see improved. For instance both have ""am I log scale"": they should get merged, or their relationship should be defined / reconsidered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7966
https://github.com/root-project/root/issues/7967:150,Availability,error,errors,150,"Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python; from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf; ; allvars = []; ; xvals = RooArgList(); variables = RooArgSet(); muvals = RooArgList(); ; for i in range(0,3):; mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10); muvals.add(mu); x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.); xvals.add(x); variables.add(x); ; # side problem: unless these two lines are executed, the python garbage collector deletes mu and x; # causing a segfault in the construction of the RooMultiVarGaussian; allvars.append(mu); allvars.append(x); ; covmat = TMatrixDSym(3); covmat[0][0] = 1.; covmat[1][1] = 2.; covmat[2][2] = 3.; covmat[0][1] = 0.2; covmat[1][0] = 0.2; covmat[1][2] = 0.6; covmat[2][1] = 0.6; covmat[2][0] = 0.3; covmat[0][2] = 0.3; ; nevents = 1000.; mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat); allvars.append(mvg); ; ws = RooWorkspace(""ws""); ws.Import(mvg); mc = RooStats.ModelConfig(""model"",""model"",ws); mc.SetObservables(xvals); mc.SetParametersOfInterest(muvals); mc.SetPdf(mvg.GetName()); ; # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()); ```; ; Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once.; Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000); extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm); ws.Import(extmvg,RooFit.RecycleConflictNodes()); mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws); mc_cnt.SetObservables(xvals); mc_cnt.SetP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1473,Integrability,wrap,wrapping,1473,"rts of errors. Consider the following example code:. ```Python; from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf; ; allvars = []; ; xvals = RooArgList(); variables = RooArgSet(); muvals = RooArgList(); ; for i in range(0,3):; mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10); muvals.add(mu); x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.); xvals.add(x); variables.add(x); ; # side problem: unless these two lines are executed, the python garbage collector deletes mu and x; # causing a segfault in the construction of the RooMultiVarGaussian; allvars.append(mu); allvars.append(x); ; covmat = TMatrixDSym(3); covmat[0][0] = 1.; covmat[1][1] = 2.; covmat[2][2] = 3.; covmat[0][1] = 0.2; covmat[1][0] = 0.2; covmat[1][2] = 0.6; covmat[2][1] = 0.6; covmat[2][0] = 0.3; covmat[0][2] = 0.3; ; nevents = 1000.; mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat); allvars.append(mvg); ; ws = RooWorkspace(""ws""); ws.Import(mvg); mc = RooStats.ModelConfig(""model"",""model"",ws); mc.SetObservables(xvals); mc.SetParametersOfInterest(muvals); mc.SetPdf(mvg.GetName()); ; # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()); ```; ; Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once.; Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000); extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm); ws.Import(extmvg,RooFit.RecycleConflictNodes()); mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws); mc_cnt.SetObservables(xvals); mc_cnt.SetParametersOfInterest(muvals); mc_cnt.SetPdf(extmvg.GetName()); ; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet())",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:371,Modifiability,variab,variables,371,"Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python; from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf; ; allvars = []; ; xvals = RooArgList(); variables = RooArgSet(); muvals = RooArgList(); ; for i in range(0,3):; mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10); muvals.add(mu); x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.); xvals.add(x); variables.add(x); ; # side problem: unless these two lines are executed, the python garbage collector deletes mu and x; # causing a segfault in the construction of the RooMultiVarGaussian; allvars.append(mu); allvars.append(x); ; covmat = TMatrixDSym(3); covmat[0][0] = 1.; covmat[1][1] = 2.; covmat[2][2] = 3.; covmat[0][1] = 0.2; covmat[1][0] = 0.2; covmat[1][2] = 0.6; covmat[2][1] = 0.6; covmat[2][0] = 0.3; covmat[0][2] = 0.3; ; nevents = 1000.; mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat); allvars.append(mvg); ; ws = RooWorkspace(""ws""); ws.Import(mvg); mc = RooStats.ModelConfig(""model"",""model"",ws); mc.SetObservables(xvals); mc.SetParametersOfInterest(muvals); mc.SetPdf(mvg.GetName()); ; # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()); ```; ; Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once.; Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000); extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm); ws.Import(extmvg,RooFit.RecycleConflictNodes()); mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws); mc_cnt.SetObservables(xvals); mc_cnt.SetP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:599,Modifiability,variab,variables,599,"Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python; from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf; ; allvars = []; ; xvals = RooArgList(); variables = RooArgSet(); muvals = RooArgList(); ; for i in range(0,3):; mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10); muvals.add(mu); x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.); xvals.add(x); variables.add(x); ; # side problem: unless these two lines are executed, the python garbage collector deletes mu and x; # causing a segfault in the construction of the RooMultiVarGaussian; allvars.append(mu); allvars.append(x); ; covmat = TMatrixDSym(3); covmat[0][0] = 1.; covmat[1][1] = 2.; covmat[2][2] = 3.; covmat[0][1] = 0.2; covmat[1][0] = 0.2; covmat[1][2] = 0.6; covmat[2][1] = 0.6; covmat[2][0] = 0.3; covmat[0][2] = 0.3; ; nevents = 1000.; mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat); allvars.append(mvg); ; ws = RooWorkspace(""ws""); ws.Import(mvg); mc = RooStats.ModelConfig(""model"",""model"",ws); mc.SetObservables(xvals); mc.SetParametersOfInterest(muvals); mc.SetPdf(mvg.GetName()); ; # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()); ```; ; Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once.; Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000); extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm); ws.Import(extmvg,RooFit.RecycleConflictNodes()); mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws); mc_cnt.SetObservables(xvals); mc_cnt.SetP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1600,Safety,Detect,Detected,1600,"rts of errors. Consider the following example code:. ```Python; from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf; ; allvars = []; ; xvals = RooArgList(); variables = RooArgSet(); muvals = RooArgList(); ; for i in range(0,3):; mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10); muvals.add(mu); x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.); xvals.add(x); variables.add(x); ; # side problem: unless these two lines are executed, the python garbage collector deletes mu and x; # causing a segfault in the construction of the RooMultiVarGaussian; allvars.append(mu); allvars.append(x); ; covmat = TMatrixDSym(3); covmat[0][0] = 1.; covmat[1][1] = 2.; covmat[2][2] = 3.; covmat[0][1] = 0.2; covmat[1][0] = 0.2; covmat[1][2] = 0.6; covmat[2][1] = 0.6; covmat[2][0] = 0.3; covmat[0][2] = 0.3; ; nevents = 1000.; mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat); allvars.append(mvg); ; ws = RooWorkspace(""ws""); ws.Import(mvg); mc = RooStats.ModelConfig(""model"",""model"",ws); mc.SetObservables(xvals); mc.SetParametersOfInterest(muvals); mc.SetPdf(mvg.GetName()); ; # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()); ```; ; Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once.; Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000); extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm); ws.Import(extmvg,RooFit.RecycleConflictNodes()); mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws); mc_cnt.SetObservables(xvals); mc_cnt.SetParametersOfInterest(muvals); mc_cnt.SetPdf(extmvg.GetName()); ; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet())",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7968:156,Integrability,depend,dependencies,156,"### Describe the bug; `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior; The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce; Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:324,Modifiability,Config,Configure,324,"### Describe the bug; `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior; The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce; Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:295,Security,Sanitiz,Sanitizer,295,"### Describe the bug; `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior; The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce; Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7970:179,Availability,error,error,179,"### Describe the bug; ```; root [1] .rawInput; root [2] std::vector<short> getV() { return {42}; }; root [3] .rawInput; root [4] getV()[0].foo(); ```; and that last line shows an error, good! But now:; ```; root [5] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:1036,Availability,down,download,1036,"### Describe the bug; ```; root [1] .rawInput; root [2] std::vector<short> getV() { return {42}; }; root [3] .rawInput; root [4] getV()[0].foo(); ```; and that last line shows an error, good! But now:; ```; root [5] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:1018,Deployability,install,install,1018,"### Describe the bug; ```; root [1] .rawInput; root [2] std::vector<short> getV() { return {42}; }; root [3] .rawInput; root [4] getV()[0].foo(); ```; and that last line shows an error, good! But now:; ```; root [5] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:339,Integrability,interface,interface,339,"### Describe the bug; ```; root [1] .rawInput; root [2] std::vector<short> getV() { return {42}; }; root [3] .rawInput; root [4] getV()[0].foo(); ```; and that last line shows an error, good! But now:; ```; root [5] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:497,Performance,load,load,497,"### Describe the bug; ```; root [1] .rawInput; root [2] std::vector<short> getV() { return {42}; }; root [3] .rawInput; root [4] getV()[0].foo(); ```; and that last line shows an error, good! But now:; ```; root [5] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:573,Usability,clear,clear,573,"### Describe the bug; ```; root [1] .rawInput; root [2] std::vector<short> getV() { return {42}; }; root [3] .rawInput; root [4] getV()[0].foo(); ```; and that last line shows an error, good! But now:; ```; root [5] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7971:2661,Availability,error,error,2661,"s(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No segfault, plus either; * Entries are filled correctly; * I get a clear error of what I'm doing wrong; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything is shown above; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00; Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:3114,Availability,down,download,3114,"s(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No segfault, plus either; * Entries are filled correctly; * I get a clear error of what I'm doing wrong; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything is shown above; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00; Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:3096,Deployability,install,install,3096,"s(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No segfault, plus either; * Entries are filled correctly; * I get a clear error of what I'm doing wrong; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything is shown above; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00; Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:3249,Deployability,Release,Release,3249,"s(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No segfault, plus either; * Entries are filled correctly; * I get a clear error of what I'm doing wrong; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything is shown above; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00; Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:379,Modifiability,config,config,379,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I get a segfault with the following program; ```cpp; #include <ROOT/RHist.hxx>; #include <TRandom.h>. int main(){; ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){; myhisto.Fill(gRandom->Gaus(10,1));; }; }; ```; ```; $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`; $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0) at waitpid.c:38; #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:881,Performance,optimiz,optimized,881,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I get a segfault with the following program; ```cpp; #include <ROOT/RHist.hxx>; #include <TRandom.h>. int main(){; ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){; myhisto.Fill(gRandom->Gaus(10,1));; }; }; ```; ```; $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`; $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0) at waitpid.c:38; #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:1023,Performance,optimiz,optimized,1023,"ibe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I get a segfault with the following program; ```cpp; #include <ROOT/RHist.hxx>; #include <TRandom.h>. int main(){; ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){; myhisto.Fill(gRandom->Gaus(10,1));; }; }; ```; ```; $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`; $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0) at waitpid.c:38; #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an att",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:30,Usability,clear,clear,30,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I get a segfault with the following program; ```cpp; #include <ROOT/RHist.hxx>; #include <TRandom.h>. int main(){; ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){; myhisto.Fill(gRandom->Gaus(10,1));; }; }; ```; ```; $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`; $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0) at waitpid.c:38; #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2519,Usability,clear,clear,2519,"s(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No segfault, plus either; * Entries are filled correctly; * I get a clear error of what I'm doing wrong; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything is shown above; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00; Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2655,Usability,clear,clear,2655,"s(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No segfault, plus either; * Entries are filled correctly; * I get a clear error of what I'm doing wrong; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything is shown above; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00; Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/pull/7976:277,Energy Efficiency,allocate,allocated,277,"This memory leak was reported in https://github.com/root-project/root/issues/7890#issuecomment-820445272. Both `termIntDeps` and `termIntNoNormDeps` are only used again a few lines below the lines with the change, and they are only passed to an owning collection *after* newly allocated memory gets assigned to them again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7976
https://github.com/root-project/root/issues/7977:132,Availability,failure,failures,132,"### Describe the bug; As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior; The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce; Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:189,Safety,detect,detect,189,"### Describe the bug; As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior; The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce; Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:127,Testability,test,test,127,"### Describe the bug; As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior; The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce; Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7978:57,Integrability,depend,dependencies,57,"In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake; if(NOT MSVC OR win_broken_tests); ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP); set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP); set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs; MACRO execLoadLibs.C; OUTREF execLoadLibs.oref; ERRREF execLoadLibs.eref; DEPENDS ${depends}); endif(); ```; I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:244,Integrability,depend,depends,244,"In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake; if(NOT MSVC OR win_broken_tests); ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP); set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP); set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs; MACRO execLoadLibs.C; OUTREF execLoadLibs.oref; ERRREF execLoadLibs.eref; DEPENDS ${depends}); endif(); ```; I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:369,Integrability,depend,depends,369,"In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake; if(NOT MSVC OR win_broken_tests); ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP); set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP); set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs; MACRO execLoadLibs.C; OUTREF execLoadLibs.oref; ERRREF execLoadLibs.eref; DEPENDS ${depends}); endif(); ```; I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:379,Integrability,depend,depends,379,"In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake; if(NOT MSVC OR win_broken_tests); ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP); set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP); set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs; MACRO execLoadLibs.C; OUTREF execLoadLibs.oref; ERRREF execLoadLibs.eref; DEPENDS ${depends}); endif(); ```; I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:520,Integrability,DEPEND,DEPENDS,520,"In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake; if(NOT MSVC OR win_broken_tests); ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP); set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP); set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs; MACRO execLoadLibs.C; OUTREF execLoadLibs.oref; ERRREF execLoadLibs.eref; DEPENDS ${depends}); endif(); ```; I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:530,Integrability,depend,depends,530,"In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake; if(NOT MSVC OR win_broken_tests); ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP); set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP); set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs; MACRO execLoadLibs.C; OUTREF execLoadLibs.oref; ERRREF execLoadLibs.eref; DEPENDS ${depends}); endif(); ```; I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:52,Testability,test,test,52,"In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake; if(NOT MSVC OR win_broken_tests); ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP); set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP); set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs; MACRO execLoadLibs.C; OUTREF execLoadLibs.oref; ERRREF execLoadLibs.eref; DEPENDS ${depends}); endif(); ```; I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:580,Testability,test,test,580,"In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake; if(NOT MSVC OR win_broken_tests); ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP); set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP); set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs; MACRO execLoadLibs.C; OUTREF execLoadLibs.oref; ERRREF execLoadLibs.eref; DEPENDS ${depends}); endif(); ```; I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:622,Testability,test,tests,622,"In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake; if(NOT MSVC OR win_broken_tests); ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP); set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP); set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs; MACRO execLoadLibs.C; OUTREF execLoadLibs.oref; ERRREF execLoadLibs.eref; DEPENDS ${depends}); endif(); ```; I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7979:101,Integrability,wrap,wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface,101,"Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box?. Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:441,Integrability,wrap,wrap,441,"Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box?. Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:497,Integrability,interface,interface,497,"Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box?. Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/pull/7980:242,Deployability,install,installing,242,@vgvassilev Please review the changes to disable optional LLVM components.; @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE.; @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/issues/7982:476,Availability,error,error,476,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and containe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:673,Availability,Error,Error,673,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and containe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1067,Availability,fault,faulty,1067,"ub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1345,Availability,error,errors,1345,"g; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1588,Availability,Error,Error,1588,"K version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::had",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1982,Availability,fault,faulty,1982,"stall or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2260,Availability,error,errors,2260,".txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2503,Availability,Error,Error,2503,"K version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::had",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2897,Availability,fault,faulty,2897,"stall or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3175,Availability,error,errors,3175,".txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3418,Availability,Error,Error,3418,"K version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3812,Availability,fault,faulty,3812,"stall or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4090,Availability,error,errors,4090,"8 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Set",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5207,Availability,down,download,5207,"OTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Windows 10. Latest version of root as of April 2021; ### Additional context; <!--; Add any other context about the problem here.; -->; I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:974,Deployability,install,install,974," [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1042,Deployability,install,installation,1042,"ub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1889,Deployability,install,install,1889," was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1957,Deployability,install,installation,1957,"stall or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2804,Deployability,install,install,2804," was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2872,Deployability,install,installation,2872,"stall or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3719,Deployability,install,install,3719," was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENER",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3787,Deployability,install,installation,3787,"stall or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5189,Deployability,install,install,5189,"OTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Windows 10. Latest version of root as of April 2021; ### Additional context; <!--; Add any other context about the problem here.; -->; I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:743,Integrability,message,message,743,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and containe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1658,Integrability,message,message,1658,"/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2573,Integrability,message,message,2573,"/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3488,Integrability,message,message,3488,"/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1321,Modifiability,Config,Configuring,1321,"g; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2236,Modifiability,Config,Configuring,2236,".txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3151,Modifiability,Config,Configuring,3151,".txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4066,Modifiability,Config,Configuring,4066,"8 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Set",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1443,Testability,log,log,1443,"or is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2358,Testability,log,log,2358,"!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3273,Testability,log,log,3273,"!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reprodu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and containe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4181,Usability,clear,clear,4181,"ee also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf instal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/pull/7984:65,Testability,test,test,65,"If a RooAbsTestStatistic is evaluated with nCPU > 1, the ""Slave"" test; statistic objects don't apply the global normalization factor. It is therefore the responsability of the ""MPMaster"" test statistic; object to apply the global normalization in the end. However, this was; not done before this commit. Fixes Jira issue [ROOT-5557](https://sft.its.cern.ch/jira/browse/ROOT-5557).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7984
https://github.com/root-project/root/pull/7984:187,Testability,test,test,187,"If a RooAbsTestStatistic is evaluated with nCPU > 1, the ""Slave"" test; statistic objects don't apply the global normalization factor. It is therefore the responsability of the ""MPMaster"" test statistic; object to apply the global normalization in the end. However, this was; not done before this commit. Fixes Jira issue [ROOT-5557](https://sft.its.cern.ch/jira/browse/ROOT-5557).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7984
https://github.com/root-project/root/issues/7986:269,Availability,error,error,269,"- [x] Checked for duplicates. ### Describe the bug; Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`; - `_value1_ <= _variable_ < _value2_""`; - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior; Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce; Steps to reproduce the behavior:; 1. The code that can reproduce the issue is the following:; ```; import itertools; import numpy as np; import ROOT as rt; paramList = { 'Variable_1' : np.linspace(0,1,4),; 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])); for val in boundaries:; string = 'dmID_signal == <whatever ID for final particle>'; for bounds, key in enumerate(paramList.keys()):; string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]); signal = sigData.GetEntries(string); ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup; 1. JupyROOT 6.22/08; 2. Linux Mint 19.3 Cinnamon; 3. Installed Root using conda. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:359,Availability,error,error,359,"- [x] Checked for duplicates. ### Describe the bug; Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`; - `_value1_ <= _variable_ < _value2_""`; - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior; Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce; Steps to reproduce the behavior:; 1. The code that can reproduce the issue is the following:; ```; import itertools; import numpy as np; import ROOT as rt; paramList = { 'Variable_1' : np.linspace(0,1,4),; 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])); for val in boundaries:; string = 'dmID_signal == <whatever ID for final particle>'; for bounds, key in enumerate(paramList.keys()):; string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]); signal = sigData.GetEntries(string); ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup; 1. JupyROOT 6.22/08; 2. Linux Mint 19.3 Cinnamon; 3. Installed Root using conda. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:746,Availability,error,error,746,"- [x] Checked for duplicates. ### Describe the bug; Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`; - `_value1_ <= _variable_ < _value2_""`; - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior; Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce; Steps to reproduce the behavior:; 1. The code that can reproduce the issue is the following:; ```; import itertools; import numpy as np; import ROOT as rt; paramList = { 'Variable_1' : np.linspace(0,1,4),; 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])); for val in boundaries:; string = 'dmID_signal == <whatever ID for final particle>'; for bounds, key in enumerate(paramList.keys()):; string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]); signal = sigData.GetEntries(string); ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup; 1. JupyROOT 6.22/08; 2. Linux Mint 19.3 Cinnamon; 3. Installed Root using conda. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:1963,Deployability,Install,Installed,1963,"s. ### Describe the bug; Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`; - `_value1_ <= _variable_ < _value2_""`; - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior; Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce; Steps to reproduce the behavior:; 1. The code that can reproduce the issue is the following:; ```; import itertools; import numpy as np; import ROOT as rt; paramList = { 'Variable_1' : np.linspace(0,1,4),; 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])); for val in boundaries:; string = 'dmID_signal == <whatever ID for final particle>'; for bounds, key in enumerate(paramList.keys()):; string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]); signal = sigData.GetEntries(string); ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup; 1. JupyROOT 6.22/08; 2. Linux Mint 19.3 Cinnamon; 3. Installed Root using conda. ### Additional context; Using PyRoot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:775,Modifiability,variab,variable,775,"- [x] Checked for duplicates. ### Describe the bug; Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`; - `_value1_ <= _variable_ < _value2_""`; - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior; Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce; Steps to reproduce the behavior:; 1. The code that can reproduce the issue is the following:; ```; import itertools; import numpy as np; import ROOT as rt; paramList = { 'Variable_1' : np.linspace(0,1,4),; 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])); for val in boundaries:; string = 'dmID_signal == <whatever ID for final particle>'; for bounds, key in enumerate(paramList.keys()):; string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]); signal = sigData.GetEntries(string); ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup; 1. JupyROOT 6.22/08; 2. Linux Mint 19.3 Cinnamon; 3. Installed Root using conda. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:847,Modifiability,variab,variable,847,"- [x] Checked for duplicates. ### Describe the bug; Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`; - `_value1_ <= _variable_ < _value2_""`; - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior; Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce; Steps to reproduce the behavior:; 1. The code that can reproduce the issue is the following:; ```; import itertools; import numpy as np; import ROOT as rt; paramList = { 'Variable_1' : np.linspace(0,1,4),; 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])); for val in boundaries:; string = 'dmID_signal == <whatever ID for final particle>'; for bounds, key in enumerate(paramList.keys()):; string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]); signal = sigData.GetEntries(string); ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup; 1. JupyROOT 6.22/08; 2. Linux Mint 19.3 Cinnamon; 3. Installed Root using conda. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:1628,Modifiability,variab,variables,1628,"s. ### Describe the bug; Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`; - `_value1_ <= _variable_ < _value2_""`; - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior; Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce; Steps to reproduce the behavior:; 1. The code that can reproduce the issue is the following:; ```; import itertools; import numpy as np; import ROOT as rt; paramList = { 'Variable_1' : np.linspace(0,1,4),; 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])); for val in boundaries:; string = 'dmID_signal == <whatever ID for final particle>'; for bounds, key in enumerate(paramList.keys()):; string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]); signal = sigData.GetEntries(string); ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup; 1. JupyROOT 6.22/08; 2. Linux Mint 19.3 Cinnamon; 3. Installed Root using conda. ### Additional context; Using PyRoot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7987:515,Availability,error,error,515,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:536,Availability,Error,Error,536,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:786,Availability,error,error,786,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2287,Availability,Error,Error,2287,"with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497; Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; Error in <TFile::Init>: HERD.gdml not a ROOT file; (TGeoManager *) 0x55710546f930; ```. ### Setup; 1. ROOT version: 6.22.08; 2. Operating system: Archlinux with GCC 10.2.0; 3. Self-built Root instance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:521,Integrability,message,message,521,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:607,Integrability,message,message,607,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:792,Integrability,message,message,792,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:1372,Performance,load,loading,1372,"# Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497; Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; Error in <TFile::Init>: HERD.gdml not a ROOT file; (TGeoManager *) 0x5571054",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2019,Performance,cache,cache,2019,"with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497; Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; Error in <TFile::Init>: HERD.gdml not a ROOT file; (TGeoManager *) 0x55710546f930; ```. ### Setup; 1. ROOT version: 6.22.08; 2. Operating system: Archlinux with GCC 10.2.0; 3. Self-built Root instance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:715,Usability,clear,clear,715,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:1164,Usability,simpl,simply,1164,"If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497; Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/pull/7990:522,Deployability,update,updated,522,"Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'; however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in; the file is empty and thus no information was recorded about `ExpensiveObject`,; consequently when the map's StreamerInfo request the TClass for the underlying pair,; it is returned nullptr (since we no longer create the TClass for a pair where one or; more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7990
https://github.com/root-project/root/pull/7990:483,Integrability,rout,routine,483,"Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'; however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in; the file is empty and thus no information was recorded about `ExpensiveObject`,; consequently when the map's StreamerInfo request the TClass for the underlying pair,; it is returned nullptr (since we no longer create the TClass for a pair where one or; more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7990
https://github.com/root-project/root/issues/7991:526,Modifiability,variab,variables,526,"Hello,. *Two histograms of m_yy are filled with pseudo-data :; -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019); -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :; a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal; a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal; a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf; -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :; *In the case where we don't normalize the RooDataHist,; then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,; -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:163,Usability,clear,clearly,163,"Hello,. *Two histograms of m_yy are filled with pseudo-data :; -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019); -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :; a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal; a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal; a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf; -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :; *In the case where we don't normalize the RooDataHist,; then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,; -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/pull/7994:267,Deployability,release,releases,267,"This reverts a change from commit b874ed534f40ad80db3f8a3395d5dd44183811bb from https://github.com/root-project/root/pull/7972. The change was causing crashes in in python code. The problem was that I took the same MemPoolForRooSets code from master also for the old releases, not noticing that the old releases didn't use `TStroage::ObjectAlloc` yet, which caused problems. The problem can be reproduced with the following python code and is fixed with this commit (thanks @lmoneta for having providing the code):; ```Python; import ROOT; x = ROOT.RooRealVar(""x"",""x"",1); d = ROOT.RooDataSet(""d"",""d"",ROOT.RooArgSet(x)); w = ROOT.RooWorkspace(""w""); getattr(w, 'import')(d); w.Print(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7994
https://github.com/root-project/root/pull/7994:303,Deployability,release,releases,303,"This reverts a change from commit b874ed534f40ad80db3f8a3395d5dd44183811bb from https://github.com/root-project/root/pull/7972. The change was causing crashes in in python code. The problem was that I took the same MemPoolForRooSets code from master also for the old releases, not noticing that the old releases didn't use `TStroage::ObjectAlloc` yet, which caused problems. The problem can be reproduced with the following python code and is fixed with this commit (thanks @lmoneta for having providing the code):; ```Python; import ROOT; x = ROOT.RooRealVar(""x"",""x"",1); d = ROOT.RooDataSet(""d"",""d"",ROOT.RooArgSet(x)); w = ROOT.RooWorkspace(""w""); getattr(w, 'import')(d); w.Print(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7994
https://github.com/root-project/root/pull/7995:540,Deployability,patch,patches,540,"This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/issues/7998:408,Modifiability,enhance,enhancement,408,"Hello everyone,. The [`AsimovSignificance`](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/roofit/roostats/src/RooStatsUtils.cxx#L61-L81) was a great addition to the arsenal of functions that ""just work"". I have recently noticed that there have been some neat generalisations posted to the [arXiv](https://arxiv.org/abs/2102.04275) and was wondering if it would be a good enhancement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7998
https://github.com/root-project/root/issues/8000:715,Safety,detect,detector,715,"- [V] Checked for duplicates. ### Describe the bug; RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise; - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce; I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup; 1. ROOT version 6.22/06.; 2. Arch Linux.; 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:790,Usability,simpl,simply,790,"- [V] Checked for duplicates. ### Describe the bug; RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise; - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce; I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup; 1. ROOT version 6.22/06.; 2. Arch Linux.; 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:862,Usability,simpl,simply,862,"- [V] Checked for duplicates. ### Describe the bug; RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise; - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce; I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup; 1. ROOT version 6.22/06.; 2. Arch Linux.; 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/pull/8001:108,Modifiability,Config,Config,108,* inlining of simple getters; * replace `NULL` with `nullptr`; * change getters in `RooLagrangianMorphFunc::Config`: return `const &`; * remove `Config(const Config &other) = default;` because it caused; warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8001
https://github.com/root-project/root/pull/8001:145,Modifiability,Config,Config,145,* inlining of simple getters; * replace `NULL` with `nullptr`; * change getters in `RooLagrangianMorphFunc::Config`: return `const &`; * remove `Config(const Config &other) = default;` because it caused; warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8001
https://github.com/root-project/root/pull/8001:158,Modifiability,Config,Config,158,* inlining of simple getters; * replace `NULL` with `nullptr`; * change getters in `RooLagrangianMorphFunc::Config`: return `const &`; * remove `Config(const Config &other) = default;` because it caused; warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8001
https://github.com/root-project/root/pull/8001:14,Usability,simpl,simple,14,* inlining of simple getters; * replace `NULL` with `nullptr`; * change getters in `RooLagrangianMorphFunc::Config`: return `const &`; * remove `Config(const Config &other) = default;` because it caused; warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8001
https://github.com/root-project/root/pull/8003:43,Integrability,rout,routines,43,"This pull-request moves the `SerializeXxx` routines for fundamental integer types; to a named namespace. The aim is to make these functions reusable by other; parts of the RNTuple code, e.g., alternative backends, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8003
https://github.com/root-project/root/issues/8005:2599,Availability,down,download,2599," of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides; [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior; the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; root -b Minimum.C+. ### Setup; 1. ROOT version : 6.18.00; 2. Operating system : windows (session unix from mobaxterm); 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2581,Deployability,install,install,2581," of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides; [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior; the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; root -b Minimum.C+. ### Setup; 1. ROOT version : 6.18.00; 2. Operating system : windows (session unix from mobaxterm); 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2634,Deployability,install,installed,2634," of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides; [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior; the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; root -b Minimum.C+. ### Setup; 1. ROOT version : 6.18.00; 2. Operating system : windows (session unix from mobaxterm); 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1519,Modifiability,variab,variable,1519,"nt). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :; -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides; [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior; the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; root -b Minimum.C+. ### Setup; 1. ROOT version : 6.18.00; 2. Operating system : windows (session unix fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1945,Safety,predict,prediction,1945," of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides; [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior; the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; root -b Minimum.C+. ### Setup; 1. ROOT version : 6.18.00; 2. Operating system : windows (session unix from mobaxterm); 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1340,Security,authoriz,authorize,1340,"ustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :; -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides; [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior; the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/pull/8006:113,Integrability,depend,depend,113,"Virtually any git operation will trigger a regeneration of VCSRevision.h.; As cling, dictionaries, and libraries depend on this file, we need to; *not* regenerate it - we won't need it anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8006
https://github.com/root-project/root/pull/8007:284,Deployability,patch,patch,284,"Use larger vectors and access them more sparsely if needed (e.g.; threads now access one every 16 elements in hot std::vector<int>; on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many; threads (48, 64) are involved, this patch reduces runtimes by factors.; The increase in memory usage should be little relative to the memory; required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:290,Energy Efficiency,reduce,reduces,290,"Use larger vectors and access them more sparsely if needed (e.g.; threads now access one every 16 elements in hot std::vector<int>; on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many; threads (48, 64) are involved, this patch reduces runtimes by factors.; The increase in memory usage should be little relative to the memory; required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:151,Performance,cache,cache,151,"Use larger vectors and access them more sparsely if needed (e.g.; threads now access one every 16 elements in hot std::vector<int>; on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many; threads (48, 64) are involved, this patch reduces runtimes by factors.; The increase in memory usage should be little relative to the memory; required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:23,Security,access,access,23,"Use larger vectors and access them more sparsely if needed (e.g.; threads now access one every 16 elements in hot std::vector<int>; on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many; threads (48, 64) are involved, this patch reduces runtimes by factors.; The increase in memory usage should be little relative to the memory; required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:78,Security,access,access,78,"Use larger vectors and access them more sparsely if needed (e.g.; threads now access one every 16 elements in hot std::vector<int>; on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many; threads (48, 64) are involved, this patch reduces runtimes by factors.; The increase in memory usage should be little relative to the memory; required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/issues/8008:823,Availability,fault,fault,823,"- [ checked] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :; https://github.com/cms-sw/cmsdist/pull/6831; but the test fails in the file open attempt; with this:. ```; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:407,Deployability,update,update,407,"- [ checked] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :; https://github.com/cms-sw/cmsdist/pull/6831; but the test fails in the file open attempt; with this:. ```; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8135,Deployability,install,install,8135,"_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (); #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105; #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (); #21 0x000000000040b62c in main (). ```; After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO; 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420; Resetting APV struct; %MSG; ```. this -> Successfully opened file root:// ; and then working on the file. ### To Reproduce. Use this install script:. ```; /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh; cd CMSSW_12_0_X_2021-04-26-1100; cmsenv; cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; ```. ### Setup. 1. 6-22 - ; https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340; 2. SLC7; 3. Installed from source. ### Additional context. The pull request from above ; https://github.com/cms-sw/cmsdist/pull/6831; is setuping cmake release type to Debug for both ROOT and XrootD ; as requested in #7335",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8211,Deployability,install,install,8211,"_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (); #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105; #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (); #21 0x000000000040b62c in main (). ```; After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO; 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420; Resetting APV struct; %MSG; ```. this -> Successfully opened file root:// ; and then working on the file. ### To Reproduce. Use this install script:. ```; /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh; cd CMSSW_12_0_X_2021-04-26-1100; cmsenv; cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; ```. ### Setup. 1. 6-22 - ; https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340; 2. SLC7; 3. Installed from source. ### Additional context. The pull request from above ; https://github.com/cms-sw/cmsdist/pull/6831; is setuping cmake release type to Debug for both ROOT and XrootD ; as requested in #7335",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8431,Deployability,patch,patches,8431,"_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (); #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105; #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (); #21 0x000000000040b62c in main (). ```; After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO; 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420; Resetting APV struct; %MSG; ```. this -> Successfully opened file root:// ; and then working on the file. ### To Reproduce. Use this install script:. ```; /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh; cd CMSSW_12_0_X_2021-04-26-1100; cmsenv; cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; ```. ### Setup. 1. 6-22 - ; https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340; 2. SLC7; 3. Installed from source. ### Additional context. The pull request from above ; https://github.com/cms-sw/cmsdist/pull/6831; is setuping cmake release type to Debug for both ROOT and XrootD ; as requested in #7335",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8493,Deployability,Install,Installed,8493,"_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (); #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105; #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (); #21 0x000000000040b62c in main (). ```; After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO; 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420; Resetting APV struct; %MSG; ```. this -> Successfully opened file root:// ; and then working on the file. ### To Reproduce. Use this install script:. ```; /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh; cd CMSSW_12_0_X_2021-04-26-1100; cmsenv; cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; ```. ### Setup. 1. 6-22 - ; https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340; 2. SLC7; 3. Installed from source. ### Additional context. The pull request from above ; https://github.com/cms-sw/cmsdist/pull/6831; is setuping cmake release type to Debug for both ROOT and XrootD ; as requested in #7335",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8633,Deployability,release,release,8633,"_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (); #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105; #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (); #21 0x000000000040b62c in main (). ```; After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO; 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420; Resetting APV struct; %MSG; ```. this -> Successfully opened file root:// ; and then working on the file. ### To Reproduce. Use this install script:. ```; /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh; cd CMSSW_12_0_X_2021-04-26-1100; cmsenv; cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; ```. ### Setup. 1. 6-22 - ; https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340; 2. SLC7; 3. Installed from source. ### Additional context. The pull request from above ; https://github.com/cms-sw/cmsdist/pull/6831; is setuping cmake release type to Debug for both ROOT and XrootD ; as requested in #7335",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4303,Modifiability,plugin,pluginIOPoolInput,4303,"33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685; #8 0x00007ffff6e1db61 in TFile::Open (; url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065; #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; --Type <RET> for more, q to quit, c to continue without paging--; #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4548,Modifiability,plugin,pluginIOPoolInput,4548,"efix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685; #8 0x00007ffff6e1db61 in TFile::Open (; url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065; #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; --Type <RET> for more, q to quit, c to continue without paging--; #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4821,Modifiability,plugin,pluginIOPoolInput,4821,"oot://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065; #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; --Type <RET> for more, q to quit, c to continue without paging--; #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5122,Modifiability,plugin,pluginIOPoolInput,5122,"stBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065; #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; --Type <RET> for more, q to quit, c to continue without paging--; #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5181,Modifiability,Plugin,PluginFactory,5181,"nput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; --Type <RET> for more, q to quit, c to continue without paging--; #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::Servic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5475,Modifiability,plugin,pluginIOPoolInput,5475,"nput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; --Type <RET> for more, q to quit, c to continue without paging--; #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::Servic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1411,Performance,optimiz,optimized,1411,"ug. We are trying to update the XrootD version to 5.1.1 :; https://github.com/cms-sw/cmsdist/pull/6831; but the test fails in the file open attempt; with this:. ```; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:498,Testability,test,test,498,"- [ checked] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :; https://github.com/cms-sw/cmsdist/pull/6831; but the test fails in the file open attempt; with this:. ```; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:935,Testability,test,tests,935,"- [ checked] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :; https://github.com/cms-sw/cmsdist/pull/6831; but the test fails in the file open attempt; with this:. ```; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:941,Testability,test,testBuildDir,941,"- [ checked] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :; https://github.com/cms-sw/cmsdist/pull/6831; but the test fails in the file open attempt; with this:. ```; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1192,Testability,test,tests,1192,"s.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :; https://github.com/cms-sw/cmsdist/pull/6831; but the test fails in the file open attempt; with this:. ```; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1198,Testability,test,testBuildDir,1198,"s.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :; https://github.com/cms-sw/cmsdist/pull/6831; but the test fails in the file open attempt; with this:. ```; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1594,Testability,test,tests,1594,"; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1600,Testability,test,testBuildDir,1600,"; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1880,Testability,test,tests,1880,"0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1886,Testability,test,testBuildDir,1886,"0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2169,Testability,test,tests,2169,"nLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2175,Testability,test,testBuildDir,2175,"nLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2616,Testability,test,tests,2616,"r/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605; #7 0x00007ffff6e1fd33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2622,Testability,test,testBuildDir,2622,"r/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605; #7 0x00007ffff6e1fd33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3051,Testability,test,tests,3051,"inHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605; #7 0x00007ffff6e1fd33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685; #8 0x00007ffff6e1db61 in TFile::Open (; url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f5035",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3057,Testability,test,testBuildDir,3057,"inHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605; #7 0x00007ffff6e1fd33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685; #8 0x00007ffff6e1db61 in TFile::Open (; url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f5035",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3509,Testability,test,tests,3509,"as-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605; #7 0x00007ffff6e1fd33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685; #8 0x00007ffff6e1db61 in TFile::Open (; url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065; #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3515,Testability,test,testBuildDir,3515,"as-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780; #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, ; path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605; #7 0x00007ffff6e1fd33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685; #8 0x00007ffff6e1db61 in TFile::Open (; url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065; #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3981,Testability,test,tests,3981,"9_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605; #7 0x00007ffff6e1fd33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685; #8 0x00007ffff6e1db61 in TFile::Open (; url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065; #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; --Type <RET> for more, q to quit, c to continue without paging--; #12 0x00007fffac895320 in edm::Pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3987,Testability,test,testBuildDir,3987,"9_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605; #7 0x00007ffff6e1fd33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685; #8 0x00007ffff6e1db61 in TFile::Open (; url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065; #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; --Type <RET> for more, q to quit, c to continue without paging--; #12 0x00007fffac895320 in edm::Pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:7332,Testability,test,test,7332,"st&, edm::serviceregistry::ServiceLegacy) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (); #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105; #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (); #21 0x000000000040b62c in main (). ```; After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO; 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420; Resetting APV struct; %MSG; ```. this -> Successfully opened file root:// ; and then working on the file. ### To Reproduce. Use this install script:. ```; /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh; cd CMSSW_12_0_X_2021-04-26-1100; cmsenv; cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8307,Testability,test,test,8307,"_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (); #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105; #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (); #21 0x000000000040b62c in main (). ```; After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO; 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root; %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420; Resetting APV struct; %MSG; ```. this -> Successfully opened file root:// ; and then working on the file. ### To Reproduce. Use this install script:. ```; /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh; cd CMSSW_12_0_X_2021-04-26-1100; cmsenv; cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A; ```. ### Setup. 1. 6-22 - ; https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340; 2. SLC7; 3. Installed from source. ### Additional context. The pull request from above ; https://github.com/cms-sw/cmsdist/pull/6831; is setuping cmake release type to Debug for both ROOT and XrootD ; as requested in #7335",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/pull/8009:292,Usability,guid,guidelines,292,"This makes it possible to use _build as a build directory name under; the source directory. The actual preferred build directory name would; be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,; and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9); suggest the usage of `build` as a reserved, preferred name for build; directories (or `_build` as a fallback).; Other precedents are entries such as `cmake-build` and `.build` in; this .gitignore, with the exact same rationale, because those are; the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/issues/8011:148,Availability,error,error,148,"When the expected number of events becomes negative, this can happen for some combinations of the parameters, ; `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. ; A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: ; ```; {; RooWorkspace w;; w.factory(""mu[1,-1.5,10]"");; w.factory(""prod::ns(1,mu)"");; w.factory(""prod::nb(b[1,0,10],theta[1])"");; w.factory(""sum::ntot(ns,nb)"");; w.factory(""Uniform::ff(x[0,1])"");; w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");; auto x = w.var(""x"");; RooDataSet d(""data"",""data"",*x);; d.add(*x); ; auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();; nll->plotOn(pl);. pl->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:154,Integrability,message,message,154,"When the expected number of events becomes negative, this can happen for some combinations of the parameters, ; `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. ; A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: ; ```; {; RooWorkspace w;; w.factory(""mu[1,-1.5,10]"");; w.factory(""prod::ns(1,mu)"");; w.factory(""prod::nb(b[1,0,10],theta[1])"");; w.factory(""sum::ntot(ns,nb)"");; w.factory(""Uniform::ff(x[0,1])"");; w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");; auto x = w.var(""x"");; RooDataSet d(""data"",""data"",*x);; d.add(*x); ; auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();; nll->plotOn(pl);. pl->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:124,Modifiability,extend,extendedTerm,124,"When the expected number of events becomes negative, this can happen for some combinations of the parameters, ; `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. ; A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: ; ```; {; RooWorkspace w;; w.factory(""mu[1,-1.5,10]"");; w.factory(""prod::ns(1,mu)"");; w.factory(""prod::nb(b[1,0,10],theta[1])"");; w.factory(""sum::ntot(ns,nb)"");; w.factory(""Uniform::ff(x[0,1])"");; w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");; auto x = w.var(""x"");; RooDataSet d(""data"",""data"",*x);; d.add(*x); ; auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();; nll->plotOn(pl);. pl->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:449,Usability,Simpl,Simple,449,"When the expected number of events becomes negative, this can happen for some combinations of the parameters, ; `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. ; A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: ; ```; {; RooWorkspace w;; w.factory(""mu[1,-1.5,10]"");; w.factory(""prod::ns(1,mu)"");; w.factory(""prod::nb(b[1,0,10],theta[1])"");; w.factory(""sum::ntot(ns,nb)"");; w.factory(""Uniform::ff(x[0,1])"");; w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");; auto x = w.var(""x"");; RooDataSet d(""data"",""data"",*x);; d.add(*x); ; auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();; nll->plotOn(pl);. pl->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8015:95,Modifiability,variab,variables-bad-combined-data,95,"As reported in https://root-forum.cern.ch/t/roosimultaneous-fit-on-categories-with-different-x-variables-bad-combined-data/44578; there is a bug in building a combined RooDataHist from single RooDataHist objects.; When importing diorectly from TH1 object works fine, as shown in the tutorial ; https://root.cern.ch/doc/master/rf401__importttreethx_8C.html. When using bins different than 100 bins and importing using RooDataHist, the default number of bins of the ROoRealVar (100) is used.; Code example:; ```; {; using namespace RooFit;; TH1 *hh_1 = new TH1D(""h1"",""h1"",40,-3,3); hh_1->FillRandom(""gaus"");; TH1 *hh_2 = new TH1D(""h2"",""h2"",40,-3,3); hh_2->FillRandom(""gaus"");; ; // Declare observable x; RooRealVar x(""x"", ""x"", -10, 10);. // Create category observable c that serves as index for the ROOT histograms; RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}});. // Create a binned dataset that imports contents of all TH1 mapped by index category c; /// RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2), Import(""SampleC"", *hh_3));; RooDataHist dh_1(""dh1"",""dh1"",x,hh_1);; RooDataHist dh_2(""dh2"",""dh1"",x,hh_2);. ; RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", dh_1), Import(""SampleB"", dh_2));. dh->Print(); // wil print wrong number of entries (200 instead of 80). // this will work fine; RooDataHist * dh2 = new RooDataHist(""dh2"", ""dh2"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2));; dh2->Print();. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8015
https://github.com/root-project/root/pull/8017:298,Integrability,depend,dependencies,298,"Instead of looking for libraries resolving each unresolved symbol,; just load each lib resolving symbols: this will allow subsequent; missing symbols to be resolved from the loaded library quickly,; without touching disk. When loading an existing ACLiC library, and if we expect it; to contain the dependencies (explicit linking), just load itt,; instead of trying to (re-)determine its dependencies from its; undefined symbols: the outcome should be just the library; dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:387,Integrability,depend,dependencies,387,"Instead of looking for libraries resolving each unresolved symbol,; just load each lib resolving symbols: this will allow subsequent; missing symbols to be resolved from the loaded library quickly,; without touching disk. When loading an existing ACLiC library, and if we expect it; to contain the dependencies (explicit linking), just load itt,; instead of trying to (re-)determine its dependencies from its; undefined symbols: the outcome should be just the library; dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:469,Integrability,depend,dependencies,469,"Instead of looking for libraries resolving each unresolved symbol,; just load each lib resolving symbols: this will allow subsequent; missing symbols to be resolved from the loaded library quickly,; without touching disk. When loading an existing ACLiC library, and if we expect it; to contain the dependencies (explicit linking), just load itt,; instead of trying to (re-)determine its dependencies from its; undefined symbols: the outcome should be just the library; dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:73,Performance,load,load,73,"Instead of looking for libraries resolving each unresolved symbol,; just load each lib resolving symbols: this will allow subsequent; missing symbols to be resolved from the loaded library quickly,; without touching disk. When loading an existing ACLiC library, and if we expect it; to contain the dependencies (explicit linking), just load itt,; instead of trying to (re-)determine its dependencies from its; undefined symbols: the outcome should be just the library; dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:174,Performance,load,loaded,174,"Instead of looking for libraries resolving each unresolved symbol,; just load each lib resolving symbols: this will allow subsequent; missing symbols to be resolved from the loaded library quickly,; without touching disk. When loading an existing ACLiC library, and if we expect it; to contain the dependencies (explicit linking), just load itt,; instead of trying to (re-)determine its dependencies from its; undefined symbols: the outcome should be just the library; dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:227,Performance,load,loading,227,"Instead of looking for libraries resolving each unresolved symbol,; just load each lib resolving symbols: this will allow subsequent; missing symbols to be resolved from the loaded library quickly,; without touching disk. When loading an existing ACLiC library, and if we expect it; to contain the dependencies (explicit linking), just load itt,; instead of trying to (re-)determine its dependencies from its; undefined symbols: the outcome should be just the library; dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:336,Performance,load,load,336,"Instead of looking for libraries resolving each unresolved symbol,; just load each lib resolving symbols: this will allow subsequent; missing symbols to be resolved from the loaded library quickly,; without touching disk. When loading an existing ACLiC library, and if we expect it; to contain the dependencies (explicit linking), just load itt,; instead of trying to (re-)determine its dependencies from its; undefined symbols: the outcome should be just the library; dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8019:52,Deployability,integrat,integration,52,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:124,Deployability,integrat,integration,124,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:226,Deployability,integrat,integration,226,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:576,Deployability,integrat,integration,576,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:628,Deployability,integrat,integration,628,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:722,Deployability,integrat,integration,722,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:755,Deployability,integrat,integration,755,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:52,Integrability,integrat,integration,52,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:124,Integrability,integrat,integration,124,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:226,Integrability,integrat,integration,226,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:576,Integrability,integrat,integration,576,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:628,Integrability,integrat,integration,628,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:722,Integrability,integrat,integration,722,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:755,Integrability,integrat,integration,755,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:362,Testability,log,logic,362,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:338,Usability,simpl,simpler,338,"Custom ranges seemed to be supported for analytical integration in; RooNDKeysPdf, but the code was not activated. Numerical integration was; always used for custom ranges. Unfortunately, using the existing code for analytical integration with; custom ranges gives the wrong result. This commit suggests how this can; be done with new and simpler code that has a logic similar to; RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8020:97,Deployability,patch,patches,97,"Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8020
https://github.com/root-project/root/pull/8020:141,Testability,test,testReport,141,"Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8020
https://github.com/root-project/root/issues/8021:717,Availability,ERROR,ERROR,717,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```; Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) ; Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1; =================================================================; ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18; READ of size 8 at 0x6020001549e0 thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:434,Security,sanitiz,sanitizer,434,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```; Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) ; Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1; =================================================================; ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18; READ of size 8 at 0x6020001549e0 thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:2176,Security,access,accessed,2176,"thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153; ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++; void tspline() {; double x{1};; TGraph* g = new TGraph(1, &x, &x);; TMVA::TSpline2 s(""spline"", g);; s.Eval(x);; }; ```. ### Setup. * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:453,Testability,test,tests,453,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```; Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) ; Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1; =================================================================; ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18; READ of size 8 at 0x6020001549e0 thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:1948,Testability,Test,TestBody,1948,"thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153; ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++; void tspline() {; double x{1};; TGraph* g = new TGraph(1, &x, &x);; TMVA::TSpline2 s(""spline"", g);; s.Eval(x);; }; ```. ### Setup. * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:1978,Testability,test,tests,1978,"thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153; ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++; void tspline() {; double x{1};; TGraph* g = new TGraph(1, &x, &x);; TMVA::TSpline2 s(""spline"", g);; s.Eval(x);; }; ```. ### Setup. * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:2352,Usability,clear,clear,2352,"thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153; ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++; void tspline() {; double x{1};; TGraph* g = new TGraph(1, &x, &x);; TMVA::TSpline2 s(""spline"", g);; s.Eval(x);; }; ```. ### Setup. * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8022:205,Availability,error,error,205,There is build problem on mac11 nodes:; ```; FAILED: core/thread/G__Thread.cxx lib/Thread.pcm ; /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found; ```; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:557,Integrability,depend,depend,557,There is build problem on mac11 nodes:; ```; FAILED: core/thread/G__Thread.cxx lib/Thread.pcm ; /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found; ```; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:664,Integrability,INTERFACE,INTERFACE,664,There is build problem on mac11 nodes:; ```; FAILED: core/thread/G__Thread.cxx lib/Thread.pcm ; /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found; ```; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:434,Security,expose,exposes,434,There is build problem on mac11 nodes:; ```; FAILED: core/thread/G__Thread.cxx lib/Thread.pcm ; /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found; ```; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/pull/8023:53,Integrability,depend,dependency,53,"Once TBB used inside thread, one should provide that dependency. Partially solves #8022. Need to be applied also for 6.24 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8023
https://github.com/root-project/root/pull/8024:53,Integrability,depend,dependency,53,"Once TBB used inside thread, one should provide that dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8024
https://github.com/root-project/root/pull/8025:38,Usability,guid,guide,38,"As the current path for the reference guide would be ""/doc/v624/..."", there needs to be an extra ""v"" in the constructed path for the reference document.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8025
https://github.com/root-project/root/issues/8027:715,Availability,error,error,715,"### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++; #include <TTree.h>; #include <TFile.h>. #include <iostream>. int main() {; auto* tf = TFile::Open(""test.root"", ""RECREATE"");; auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");; auto* b = t->Branch(""FileMetaData"", &f);; ; delete f;; f = nullptr;; b->SetAddress(nullptr);. t->Fill();; t->Write();; tf->Close();; return 0;; }; ```. When running this with address sanitizer it gives the following error with 6.24:. ```; g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe ; =================================================================; ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8; READ of size 4 at 0x606000112a68 thread T0; #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252; #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123; #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572; #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891; #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265; #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElemen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:895,Availability,ERROR,ERROR,895," changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++; #include <TTree.h>; #include <TFile.h>. #include <iostream>. int main() {; auto* tf = TFile::Open(""test.root"", ""RECREATE"");; auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");; auto* b = t->Branch(""FileMetaData"", &f);; ; delete f;; f = nullptr;; b->SetAddress(nullptr);. t->Fill();; t->Write();; tf->Close();; return 0;; }; ```. When running this with address sanitizer it gives the following error with 6.24:. ```; g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe ; =================================================================; ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8; READ of size 4 at 0x606000112a68 thread T0; #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252; #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123; #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572; #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891; #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265; #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #7 0x7fcd221d8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:2553,Energy Efficiency,allocate,allocated,2553,"chIMTHelper*) root/tree/tree/src/TBranch.cxx:891; #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265; #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #7 0x7fcd221d81a7 in TTree::Fill() root/tree/tree/src/TTree.cxx:4586; #8 0x4025f7 in main mwe.C:17; #9 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6); #10 0x402239 in _start (mwe+0x402239). 0x606000112a68 is located 8 bytes inside of 64-byte region [0x606000112a60,0x606000112aa0); freed by thread T0 here:; #0 0x7fcd250835c7 in operator delete(void*) ([...]/lib/libasan.so.6+0xae5c7); #1 0x402501 in main mwe.C:13; #2 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). previously allocated by thread T0 here:; #0 0x7fcd25082bf7 in operator new(unsigned long) ([...]/lib/libasan.so.6+0xadbf7); #1 0x7fcd247f9b81 in TStorage::ObjectAlloc(unsigned long) root/core/base/src/TStorage.cxx:330; #2 0x402948 in TObject::operator new(unsigned long) [...]/root/include/TObject.h:167; #3 0x40241e in main mwe.C:10; #4 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). SUMMARY: AddressSanitizer: heap-use-after-free root/io/io/src/TStreamerInfoActions.cxx:252 in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*); Shadow bytes around the buggy address:; 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd; 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa; 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa; =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:751,Modifiability,config,config,751,"### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++; #include <TTree.h>; #include <TFile.h>. #include <iostream>. int main() {; auto* tf = TFile::Open(""test.root"", ""RECREATE"");; auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");; auto* b = t->Branch(""FileMetaData"", &f);; ; delete f;; f = nullptr;; b->SetAddress(nullptr);. t->Fill();; t->Write();; tf->Close();; return 0;; }; ```. When running this with address sanitizer it gives the following error with 6.24:. ```; g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe ; =================================================================; ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8; READ of size 4 at 0x606000112a68 thread T0; #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252; #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123; #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572; #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891; #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265; #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElemen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4459,Safety,ABORT,ABORTING,4459,"30; #2 0x402948 in TObject::operator new(unsigned long) [...]/root/include/TObject.h:167; #3 0x40241e in main mwe.C:10; #4 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). SUMMARY: AddressSanitizer: heap-use-after-free root/io/io/src/TStreamerInfoActions.cxx:252 in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*); Shadow bytes around the buggy address:; 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd; 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa; 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa; =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd; 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00; 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; Shadow gap: cc; ==934566==ABORTING; ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it point",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:682,Security,sanitiz,sanitizer,682,"### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++; #include <TTree.h>; #include <TFile.h>. #include <iostream>. int main() {; auto* tf = TFile::Open(""test.root"", ""RECREATE"");; auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");; auto* b = t->Branch(""FileMetaData"", &f);; ; delete f;; f = nullptr;; b->SetAddress(nullptr);. t->Fill();; t->Write();; tf->Close();; return 0;; }; ```. When running this with address sanitizer it gives the following error with 6.24:. ```; g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe ; =================================================================; ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8; READ of size 4 at 0x606000112a68 thread T0; #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252; #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123; #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572; #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891; #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265; #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElemen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:5050,Security,sanitiz,sanitizer,5050,"round the buggy address:; 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd; 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa; 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa; =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd; 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00; 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; Shadow gap: cc; ==934566==ABORTING; ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:396,Testability,test,test,396,"### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++; #include <TTree.h>; #include <TFile.h>. #include <iostream>. int main() {; auto* tf = TFile::Open(""test.root"", ""RECREATE"");; auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");; auto* b = t->Branch(""FileMetaData"", &f);; ; delete f;; f = nullptr;; b->SetAddress(nullptr);. t->Fill();; t->Write();; tf->Close();; return 0;; }; ```. When running this with address sanitizer it gives the following error with 6.24:. ```; g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe ; =================================================================; ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8; READ of size 4 at 0x606000112a68 thread T0; #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252; #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123; #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572; #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891; #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265; #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElemen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:5029,Testability,test,test,5029,"round the buggy address:; 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd; 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa; 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa; =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd; 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00; 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd; 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; Shadow gap: cc; ==934566==ABORTING; ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/pull/8028:0,Deployability,Update,Update,0,Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8029:9,Availability,error,error,9,Suppress error output on broken symlinks (use debug output); Provide size field for several objects kinds like TKey or TBranch; Provide special handling for TColor (appears in global ROOT lists),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8029
https://github.com/root-project/root/pull/8030:23,Integrability,message,messages,23,"This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf; where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. ; This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/pull/8030:248,Safety,avoid,avoids,248,"This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf; where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. ; This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/pull/8030:724,Usability,clear,clear,724,"This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf; where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. ; This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/issues/8031:542,Usability,guid,guidelines,542,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,; and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9); suggest the usage of build as a reserved, preferred name for build; directories.; Other precedents are entries such as `cmake-build` and `.build` in; ROOT's `.gitignore`, with the exact same rationale, because those are; the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/pull/8032:274,Availability,alive,alive,274,"It happens often that one passes a temporary RooArgSet to the; RooCmdArg constructor, where the RooCmdArg is itself a temporary that is; passed to a RooFit function. The RooCmdArg contains only pointers to the; RooArgSets, so this pattern relies on the RooArgSet being kept alive; until the function end. In code, this pattern would look like this statement:; ```C++; func(RooCmdArg{RooArgSet{}});; ```. In C++, this works because the temporaries survive until the statement; end. But in Python, the inner temporary RooArgSet will be destructed; after the RooCmdArg has been constructed, leaving the RooCmdArg with; dangling pointers. To solve this problem, all the functions that can create a RooCmdArg; from a RooArgSet are overloaded with versions accepting rvalue; references. These overloads are indeed used for temporaries both in C++; and Python. In the rvalue reference versions, the temporaries are moved; into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg; then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++; void minimal_example() {; using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }; ```. ```Python; import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ); arg.getObject(0)[""x""].Print(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:1021,Integrability,wrap,wrapped,1021,"It happens often that one passes a temporary RooArgSet to the; RooCmdArg constructor, where the RooCmdArg is itself a temporary that is; passed to a RooFit function. The RooCmdArg contains only pointers to the; RooArgSets, so this pattern relies on the RooArgSet being kept alive; until the function end. In code, this pattern would look like this statement:; ```C++; func(RooCmdArg{RooArgSet{}});; ```. In C++, this works because the temporaries survive until the statement; end. But in Python, the inner temporary RooArgSet will be destructed; after the RooCmdArg has been constructed, leaving the RooCmdArg with; dangling pointers. To solve this problem, all the functions that can create a RooCmdArg; from a RooArgSet are overloaded with versions accepting rvalue; references. These overloads are indeed used for temporaries both in C++; and Python. In the rvalue reference versions, the temporaries are moved; into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg; then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++; void minimal_example() {; using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }; ```. ```Python; import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ); arg.getObject(0)[""x""].Print(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/issues/8033:82,Availability,error,error,82,"This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615; with the error:; ```; Fatal Root Error: TBranchElement::InitializeOffsets; Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers].; ROOT severity: 6000; ```; during the creation of a branch. With a class like:; ```; class mystrarray {; public:; string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format); string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection; string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }; };; ```; creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames[4]""; ```; it produces:; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames""; ```; Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:106,Availability,Error,Error,106,"This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615; with the error:; ```; Fatal Root Error: TBranchElement::InitializeOffsets; Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers].; ROOT severity: 6000; ```; during the creation of a branch. With a class like:; ```; class mystrarray {; public:; string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format); string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection; string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }; };; ```; creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames[4]""; ```; it produces:; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames""; ```; Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:309,Availability,error,error,309,"This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615; with the error:; ```; Fatal Root Error: TBranchElement::InitializeOffsets; Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers].; ROOT severity: 6000; ```; during the creation of a branch. With a class like:; ```; class mystrarray {; public:; string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format); string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection; string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }; };; ```; creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames[4]""; ```; it produces:; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames""; ```; Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:1037,Performance,load,loading,1037,"This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615; with the error:; ```; Fatal Root Error: TBranchElement::InitializeOffsets; Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers].; ROOT severity: 6000; ```; during the creation of a branch. With a class like:; ```; class mystrarray {; public:; string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format); string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection; string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }; };; ```; creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames[4]""; ```; it produces:; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames""; ```; Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:1144,Security,checksum,checksum,1144,"This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615; with the error:; ```; Fatal Root Error: TBranchElement::InitializeOffsets; Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers].; ROOT severity: 6000; ```; during the creation of a branch. With a class like:; ```; class mystrarray {; public:; string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format); string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection; string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }; };; ```; creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames[4]""; ```; it produces:; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames""; ```; Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8037:777,Modifiability,evolve,evolves,777,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1195,Modifiability,extend,extend,1195,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:194,Testability,test,test,194,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:343,Testability,test,test,343,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:548,Testability,test,test,548,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:705,Testability,test,test,705,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:963,Testability,test,testing,963,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1087,Testability,test,test,1087,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1105,Testability,test,test,1105,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1121,Testability,test,tests,1121,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1261,Testability,test,test,1261,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1375,Testability,test,test,1375,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1380,Testability,test,testProxiesAndCategories,1380,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1479,Testability,test,test,1479,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1526,Testability,stub,stub,1526,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1668,Testability,test,test,1668,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1673,Testability,test,testRooDataHist,1673,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1738,Testability,test,test,1738,"_Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:; Yes, I think that kind of a test like this makes sense. Consider this:; - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design.; - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments.; - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test.; - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:; It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:; https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/pull/8041:87,Availability,failure,failure,87,"Before, MetaParser might have pointed to a StringRef whose storage; was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:; the inner recursion returned, but as the same MetaParser object was used; by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,; their lifetime corresponds to the lifetime of their input.; ```; =================================================================; ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168; READ of size 1 at 0x7ffff3afd82a thread T0; [Detaching after fork from child process 529183]; #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11; #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15; #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5; #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9; #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12; #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33; #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24; #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:568,Availability,ERROR,ERROR,568,"Before, MetaParser might have pointed to a StringRef whose storage; was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:; the inner recursion returned, but as the same MetaParser object was used; by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,; their lifetime corresponds to the lifetime of their input.; ```; =================================================================; ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168; READ of size 1 at 0x7ffff3afd82a thread T0; [Detaching after fork from child process 529183]; #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11; #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15; #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5; #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9; #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12; #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33; #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24; #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7492,Availability,error,error,7492," f5 f5; 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; Shadow gap: cc; ==529104==ABORTING; ```; ```; at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49; at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41; compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false); at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314; input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,; result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431; error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591; sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472; line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>); at src/core/base/src/TROOT.cxx:2328; from asan/roottest/cling/other/fileClose_C.so; filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257); at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270; at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; permanent=false, resolved=true); at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184; at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444; T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560; at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57; actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7679,Availability,error,error,7679," f5 f5; 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; Shadow gap: cc; ==529104==ABORTING; ```; ```; at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49; at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41; compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false); at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314; input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,; result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431; error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591; sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472; line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>); at src/core/base/src/TROOT.cxx:2328; from asan/roottest/cling/other/fileClose_C.so; filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257); at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270; at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; permanent=false, resolved=true); at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184; at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444; T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560; at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57; actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4705,Modifiability,variab,variable,4705,") src/core/base/src/TApplication.cxx:1480:11; #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14; #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11; #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22; #24 0x4ff96d in main src/main/src/rmain.cxx:30:12; #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16; #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame; #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):; [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable; [96, 104) 'R__guard2471' (line 2471); [128, 136) 'R__guard2488' (line 2488); [160, 176) 'interpreterFlagsRAII' (line 2491); [192, 240) 'result' (line 2511); [272, 276) 'compRes' (line 2512); [288, 312) 'mod_line' (line 2517); [352, 376) 'aclicMode' (line 2518); [416, 440) 'arguments' (line 2519); [480, 504) 'io' (line 2520); [544, 568) 'fname' (line 2521); [608, 632) 'ref.tmp' (line 2547); [672, 696) 'ref.tmp145' (line 2547); [736, 768) 'code' (line 2555); [800, 832) 'codeline' (line 2556); [864, 1384) 'in' (line 2559); [1520, 1552) 'ref.tmp176' (line 2562); [1584, 1600) 'agg.tmp'; [1616, 1624) 'ref.tmp198' (line 2568); [1648, 1664) 'agg.tmp207'; [1680, 1696) 'autoParseRaii' (line 2588); HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork; (longjmp and C++ exceptions *are* supported); SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&); Shadow bytes around the buggy address:; 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757ac0: f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2030,Performance,Load,Load,2030,"5; #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5; #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9; #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12; #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33; #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24; #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29; #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10; #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27; #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20; #11 0x7fffd78dd08b (<unknown module>); #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3; #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20; #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29; #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2127,Performance,Load,Load,2127,"aParser.cpp:49:5; #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9; #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12; #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33; #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24; #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29; #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10; #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27; #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20; #11 0x7fffd78dd08b (<unknown module>); #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3; #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20; #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29; #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2238,Performance,Load,Load,2238,"preter/cling/lib/MetaProcessor/MetaParser.cpp:147:9; #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12; #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33; #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24; #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29; #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10; #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27; #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20; #11 0x7fffd78dd08b (<unknown module>); #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3; #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20; #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29; #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9; #16 0x7fffea151826 in cling:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7010,Safety,ABORT,ABORTING,7010,"1696) 'autoParseRaii' (line 2588); HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork; (longjmp and C++ exceptions *are* supported); SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&); Shadow bytes around the buggy address:; 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; Shadow gap: cc; ==529104==ABORTING; ```; ```; at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49; at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41; compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false); at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314; input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4670,Security,access,access,4670,") src/core/base/src/TApplication.cxx:1480:11; #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14; #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11; #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22; #24 0x4ff96d in main src/main/src/rmain.cxx:30:12; #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16; #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame; #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):; [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable; [96, 104) 'R__guard2471' (line 2471); [128, 136) 'R__guard2488' (line 2488); [160, 176) 'interpreterFlagsRAII' (line 2491); [192, 240) 'result' (line 2511); [272, 276) 'compRes' (line 2512); [288, 312) 'mod_line' (line 2517); [352, 376) 'aclicMode' (line 2518); [416, 440) 'arguments' (line 2519); [480, 504) 'io' (line 2520); [544, 568) 'fname' (line 2521); [608, 632) 'ref.tmp' (line 2547); [672, 696) 'ref.tmp145' (line 2547); [736, 768) 'code' (line 2555); [800, 832) 'codeline' (line 2556); [864, 1384) 'in' (line 2559); [1520, 1552) 'ref.tmp176' (line 2562); [1584, 1600) 'agg.tmp'; [1616, 1624) 'ref.tmp198' (line 2568); [1648, 1664) 'agg.tmp207'; [1680, 1696) 'autoParseRaii' (line 2588); HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork; (longjmp and C++ exceptions *are* supported); SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&); Shadow bytes around the buggy address:; 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757ac0: f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8042:248,Testability,test,test,248,"In Jira issue [ROOT-10457](https://sft.its.cern.ch/jira/browse/ROOT-10457), it was reported that creating an iterator form; a RooArgList in Python does not work. In ROOT master it seems to work, and this commit suggests to put the; issue in a unit test so that we are sure that is works on all platforms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8042
https://github.com/root-project/root/issues/8046:36,Performance,throughput,throughput,36,"Hello,. I was trying to improve the throughput of a program that deals with ROOT files containing gazillions of histograms. I ended up using linux perf, and found that the culprit is; ```TDirectoryFile::GetObjectChecked(const char *namecycle, const TClass* expectedClass)```. A quick read through the code shows that the problem is that in the case of a histogram not yet read in memory, the iteration through the list of keys is linear !!! On the other hand the function; ```TKey *TDirectoryFile::GetKey(const char *name, Short_t cycle) const```; is correctly implemented, i.e see; ```TIter next( ((THashList *)(GetListOfKeys()))->GetListForObject(name) );```; to make use of the `THashList` capabilities of the list of keys. I ended up cutting the running time of my program by a factor 4-5 by replacing; ```m_baseDir->GetObject(hname, res);```; by; ```; TKey* res_key = m_baseDir->GetKey(hname);; if(res_key) {; res = (TH1*)(res_key->ReadObj());; }; ```. Would be nicer to fix `TDirectoryFile::GetObjectChecked` directly, as well as `TDirectoryFile::Get`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8046
https://github.com/root-project/root/issues/8048:130,Availability,Error,Error,130,"As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):; ```; fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394; but fEntryCurrent should not be in between the two ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/issues/8048:136,Integrability,message,message,136,"As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):; ```; fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394; but fEntryCurrent should not be in between the two ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/pull/8049:237,Availability,error,error,237,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:504,Availability,down,downloaded,504,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:595,Availability,error,error,595,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:754,Availability,avail,available,754,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:848,Availability,avail,available,848,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:971,Availability,avail,available,971,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1095,Availability,avail,available,1095,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:243,Integrability,message,message,243,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:348,Performance,cache,cache,348,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/issues/8051:732,Security,access,access,732,"### Describe the bug. Entering `PtEtaPhiMVector` in Doxygen's search brings us here: https://root.cern/doc/master/namespaceROOT_1_1Math.html#a6cea5921731c7ac99dea921fb188df31 - the documentation of the typedef, which happens to be in `Vector4Dfwd.h`. That header cannot be included as `Vector4Dfwd.h` (but only as `ROOT/Vector4Dfwd.h` - *and* it doesn't provide the definition of this type!. ### Expected behavior. Instead, the forward header should be reserved for the specialists, and documentation should point to `Vector4D.h`. It's fine if this header repeats the `typedef`s, and those in `Vector4Dfwd.h` are hidden from Doxygen. In the end, Doxygen's search should get me to the header that I need to `#include`, as a user, to access `PtEtaPhiMVector`, and it should be obvious how to see `PtEtaPhiMVector`'s members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8051
https://github.com/root-project/root/issues/8052:1197,Availability,error,error,1197," UniformExpZ neutrino_target_z(; ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",; z, nt_h_top, nt_h_bot, l; );; RooProdPdf uxy_nt(; ""uxy_nt"", ""uxy_nt"",; RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),; RooUniform(""u_nt_y"", ""u_nt_y"", y)); );; RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));; // fit; RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);; RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);; RooProdPdf uxy_nt(; ""uxy_nt"", ""uxy_nt"",; RooArgList(u_nt_x, u_nt_y); );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce; 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup; 1. ROOT version 6.22/06.; 2. Arch Linux.; 3. Built myself. ### Additional context; Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation; >; > ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6; #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6; #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so; #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so; #4 <signal handler called>; #5 0x0000000000000000 in ?? (); #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so; #7 0x00007f21b7bf880d in RooAbsAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:857,Modifiability,variab,variables,857,"- [google and issues] Checked for duplicates. ### Describe the bug; When I use RooUniform inside RooProdPdf, this leads to SIGSEGV during execution. This code raises:. UniformExpZ neutrino_target_z(; ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",; z, nt_h_top, nt_h_bot, l; );; RooProdPdf uxy_nt(; ""uxy_nt"", ""uxy_nt"",; RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),; RooUniform(""u_nt_y"", ""u_nt_y"", y)); );; RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));; // fit; RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);; RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);; RooProdPdf uxy_nt(; ""uxy_nt"", ""uxy_nt"",; RooArgList(u_nt_x, u_nt_y); );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce; 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup; 1. ROOT version 6.22/06.; 2. Arch Linux.; 3. Built myself. ### Additional context; Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation; >; > ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6; #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6; #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so; #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so; #4 <signal handler called>; #5 0x0000000000000000 in ?? (); #6 0x00007f21b7bf1322 in RooAbsA",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8060:30,Usability,clear,clear,30,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The warnings look like this:. ```; CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):; Policy CMP0116 is not set: Ninja generators transform DEPFILEs from; add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy; details. Use the cmake_policy command to set the policy and suppress this; warning.; Call Stack (most recent call first):; interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen); This warning is for project developers. Use -Wno-dev to suppress it.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8063:59,Availability,error,errors,59,A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639; - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso; - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:286,Availability,error,error,286,A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639; - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso; - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:408,Availability,error,error-related-to-c-,408,A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639; - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso; - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:578,Availability,error,error,578,A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639; - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso; - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:584,Integrability,message,message,584,A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639; - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso; - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8064:985,Availability,error,error,985,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. The interpreter's behavior w.r.t. putting `;` at the end of a line is inconsistent:. ```bash; ~ root -b; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 30 2021, 13:01:03 |; | From heads/master@v6-25-01-813-g3ba13b74a1 |; | With c++ (GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; root [0] struct A {}; root [1] using namespace ROOT; ROOT_prompt_1:1:21: error: expected ';' after namespace name; using namespace ROOT; ^; ;; root [2] int a, b; root (cont'ed, cancel with .@) [3]; ```. I think if `;` is not required after `struct A {}`, it should not be required anywhere.; The issue with `int a, b` is tracked separately, as https://sft.its.cern.ch/jira/browse/ROOT-9202 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8064
https://github.com/root-project/root/pull/8065:971,Availability,error,errors,971,"The two classes inheriting from RooAbsCollection, namely RooArgList and; RooArgSet are by default non-owning collections. This means they should; not be initialized with temporary objects, otherwise they contain; invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is; used to statically check for temporaries, such that your code doesn't; even compile if you try to construct a RooArgList or RooArgSet from; temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:; ```C++; #include ""RooRealVar.h""; #include ""RooArgList.h""; #include ""RooArgSet.h""; #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);; RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);; RooUniform u2(""u2"", ""u2"", y);. // this should work; RooArgSet (u1, u2);; RooArgList(u1, u2);. // all of these combinations should cause compiler errors; ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );; //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));; //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );; //RooArgList(u1, RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:16,Modifiability,inherit,inheriting,16,"The two classes inheriting from RooAbsCollection, namely RooArgList and; RooArgSet are by default non-owning collections. This means they should; not be initialized with temporary objects, otherwise they contain; invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is; used to statically check for temporaries, such that your code doesn't; even compile if you try to construct a RooArgList or RooArgSet from; temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:; ```C++; #include ""RooRealVar.h""; #include ""RooArgList.h""; #include ""RooArgSet.h""; #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);; RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);; RooUniform u2(""u2"", ""u2"", y);. // this should work; RooArgSet (u1, u2);; RooArgList(u1, u2);. // all of these combinations should cause compiler errors; ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );; //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));; //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );; //RooArgList(u1, RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:259,Safety,avoid,avoid,259,"The two classes inheriting from RooAbsCollection, namely RooArgList and; RooArgSet are by default non-owning collections. This means they should; not be initialized with temporary objects, otherwise they contain; invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is; used to statically check for temporaries, such that your code doesn't; even compile if you try to construct a RooArgList or RooArgSet from; temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:; ```C++; #include ""RooRealVar.h""; #include ""RooArgList.h""; #include ""RooArgSet.h""; #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);; RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);; RooUniform u2(""u2"", ""u2"", y);. // this should work; RooArgSet (u1, u2);; RooArgList(u1, u2);. // all of these combinations should cause compiler errors; ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );; //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));; //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );; //RooArgList(u1, RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:561,Security,validat,validate,561,"The two classes inheriting from RooAbsCollection, namely RooArgList and; RooArgSet are by default non-owning collections. This means they should; not be initialized with temporary objects, otherwise they contain; invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is; used to statically check for temporaries, such that your code doesn't; even compile if you try to construct a RooArgList or RooArgSet from; temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:; ```C++; #include ""RooRealVar.h""; #include ""RooArgList.h""; #include ""RooArgSet.h""; #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);; RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);; RooUniform u2(""u2"", ""u2"", y);. // this should work; RooArgSet (u1, u2);; RooArgList(u1, u2);. // all of these combinations should cause compiler errors; ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );; //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));; //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );; //RooArgList(u1, RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:715,Testability,test,test,715,"The two classes inheriting from RooAbsCollection, namely RooArgList and; RooArgSet are by default non-owning collections. This means they should; not be initialized with temporary objects, otherwise they contain; invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is; used to statically check for temporaries, such that your code doesn't; even compile if you try to construct a RooArgList or RooArgSet from; temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:; ```C++; #include ""RooRealVar.h""; #include ""RooArgList.h""; #include ""RooArgSet.h""; #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);; RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);; RooUniform u2(""u2"", ""u2"", y);. // this should work; RooArgSet (u1, u2);; RooArgList(u1, u2);. // all of these combinations should cause compiler errors; ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );; //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));; //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );; //RooArgList(u1, RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8066:27,Deployability,patch,patch,27,"Revert ROOT's ""&"" printing patch of LLVM and backport https://reviews.llvm.org/rG8518742104ab075296722ef6151f65aee7a0646d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8066
https://github.com/root-project/root/pull/8068:220,Energy Efficiency,adapt,adapts,220,"When running on machines with few cores, enabling multithreading can; give you fewer cores than requested. For most of the tests this does; not matter. However, some tests verify the number of threads used.; This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:220,Modifiability,adapt,adapts,220,"When running on machines with few cores, enabling multithreading can; give you fewer cores than requested. For most of the tests this does; not matter. However, some tests verify the number of threads used.; This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:123,Testability,test,tests,123,"When running on machines with few cores, enabling multithreading can; give you fewer cores than requested. For most of the tests this does; not matter. However, some tests verify the number of threads used.; This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:166,Testability,test,tests,166,"When running on machines with few cores, enabling multithreading can; give you fewer cores than requested. For most of the tests this does; not matter. However, some tests verify the number of threads used.; This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:233,Testability,test,tests,233,"When running on machines with few cores, enabling multithreading can; give you fewer cores than requested. For most of the tests this does; not matter. However, some tests verify the number of threads used.; This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8069:31,Deployability,upgrade,upgrade,31,Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream; https://reviews.llvm.org/D74129,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8069
https://github.com/root-project/root/issues/8071:185,Availability,failure,failures,185,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:379,Availability,error,errors,379,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:602,Availability,Error,Error,602,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:747,Availability,Error,Error,747,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:891,Availability,Error,Error,891,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:40,Testability,test,test,40,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:97,Testability,test,tests,97,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:180,Testability,test,test,180,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:262,Testability,test,test,262,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:502,Testability,test,test,502,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:507,Testability,log,log,507,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:566,Testability,test,test,566,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:571,Testability,log,log,571,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:1182,Testability,Assert,Assertion,1182,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8072:637,Availability,fault,fault,637,"### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:; ```; Relocation R_PPC64_REL32 overflow; UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800!; ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior; Working root on ppc64le. ### To Reproduce; Compile root 6.24.00 for ppc64le. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:904,Availability,fault,fault,904,"### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:; ```; Relocation R_PPC64_REL32 overflow; UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800!; ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior; Working root on ppc64le. ### To Reproduce; Compile root 6.24.00 for ppc64le. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1242,Availability,fault,fault,1242,"### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:; ```; Relocation R_PPC64_REL32 overflow; UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800!; ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior; Working root on ppc64le. ### To Reproduce; Compile root 6.24.00 for ppc64le. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:200,Deployability,upgrade,upgrade,200,"### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:; ```; Relocation R_PPC64_REL32 overflow; UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800!; ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior; Working root on ppc64le. ### To Reproduce; Compile root 6.24.00 for ppc64le. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:880,Safety,avoid,avoids,880,"### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:; ```; Relocation R_PPC64_REL32 overflow; UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800!; ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior; Working root on ppc64le. ### To Reproduce; Compile root 6.24.00 for ppc64le. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:285,Testability,assert,assert,285,"### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:; ```; Relocation R_PPC64_REL32 overflow; UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800!; ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior; Working root on ppc64le. ### To Reproduce; Compile root 6.24.00 for ppc64le. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:493,Testability,assert,assert,493,"### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:; ```; Relocation R_PPC64_REL32 overflow; UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800!; ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior; Working root on ppc64le. ### To Reproduce; Compile root 6.24.00 for ppc64le. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:740,Testability,Test,Testing,740,"### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:; ```; Relocation R_PPC64_REL32 overflow; UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800!; ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior; Working root on ppc64le. ### To Reproduce; Compile root 6.24.00 for ppc64le. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:838,Testability,assert,assert,838,"### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:; ```; Relocation R_PPC64_REL32 overflow; UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800!; ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior; Working root on ppc64le. ### To Reproduce; Compile root 6.24.00 for ppc64le. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:926,Testability,test,tests,926,"### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:; ```; Relocation R_PPC64_REL32 overflow; UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800!; ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior; Working root on ppc64le. ### To Reproduce; Compile root 6.24.00 for ppc64le. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8073:879,Availability,Error,Errors,879,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:916,Availability,error,error,916,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1459,Availability,Error,Error,1459," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1564,Availability,error,error,1564," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1943,Availability,Failure,Failures,1943," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1553,Integrability,message,message,1553," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:158,Performance,concurren,concurrentfill,158,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:989,Performance,concurren,concurrentfill,989,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1125,Performance,concurren,concurrentfill,1125," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1587,Safety,abort,aborted,1587," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:39,Testability,test,tests,39,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:92,Testability,test,tests,92,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:124,Testability,test,tests,124,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:966,Testability,Test,Test,966,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1335,Testability,Assert,Assertion,1335," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1745,Testability,test,tests,1745," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1852,Testability,test,test,1852," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1965,Testability,test,test,1965," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:858,Usability,simpl,simple,858,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8074:210,Integrability,depend,dependency,210,"### Explain what you would like to see improved; RNTuple DAOS unit tests should be automatically run in a testing build. Specifically, `-Ddaos_mock=ON` should be set if `testing` is defined. `daos_mock` has no dependency on the real libdaos and is safe to run in our testing environment. ### Optional: share how it could be improved; Once PR #6825 is merged, a follow-up PR will be created to address this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8074
https://github.com/root-project/root/issues/8074:248,Safety,safe,safe,248,"### Explain what you would like to see improved; RNTuple DAOS unit tests should be automatically run in a testing build. Specifically, `-Ddaos_mock=ON` should be set if `testing` is defined. `daos_mock` has no dependency on the real libdaos and is safe to run in our testing environment. ### Optional: share how it could be improved; Once PR #6825 is merged, a follow-up PR will be created to address this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8074
https://github.com/root-project/root/issues/8074:67,Testability,test,tests,67,"### Explain what you would like to see improved; RNTuple DAOS unit tests should be automatically run in a testing build. Specifically, `-Ddaos_mock=ON` should be set if `testing` is defined. `daos_mock` has no dependency on the real libdaos and is safe to run in our testing environment. ### Optional: share how it could be improved; Once PR #6825 is merged, a follow-up PR will be created to address this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8074
https://github.com/root-project/root/issues/8074:106,Testability,test,testing,106,"### Explain what you would like to see improved; RNTuple DAOS unit tests should be automatically run in a testing build. Specifically, `-Ddaos_mock=ON` should be set if `testing` is defined. `daos_mock` has no dependency on the real libdaos and is safe to run in our testing environment. ### Optional: share how it could be improved; Once PR #6825 is merged, a follow-up PR will be created to address this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8074
https://github.com/root-project/root/issues/8074:170,Testability,test,testing,170,"### Explain what you would like to see improved; RNTuple DAOS unit tests should be automatically run in a testing build. Specifically, `-Ddaos_mock=ON` should be set if `testing` is defined. `daos_mock` has no dependency on the real libdaos and is safe to run in our testing environment. ### Optional: share how it could be improved; Once PR #6825 is merged, a follow-up PR will be created to address this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8074
https://github.com/root-project/root/issues/8074:267,Testability,test,testing,267,"### Explain what you would like to see improved; RNTuple DAOS unit tests should be automatically run in a testing build. Specifically, `-Ddaos_mock=ON` should be set if `testing` is defined. `daos_mock` has no dependency on the real libdaos and is safe to run in our testing environment. ### Optional: share how it could be improved; Once PR #6825 is merged, a follow-up PR will be created to address this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8074
https://github.com/root-project/root/pull/8075:0,Deployability,Update,Update,0,Update links in TFile layout pages,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8075
https://github.com/root-project/root/pull/8077:138,Energy Efficiency,schedul,scheduler,138,"Implement parallel page compression using `RPageSinkBuf`. When it's time to commit the cluster, the buffered pages are passed to the task scheduler to be compressed. Each page is given a `RNTupleCompressor` which both handles the compression and serves as the compression scratch buffer. `RNTupleCompressor` was adjusted to take a user-provided size to avoid wasting memory for small pages (16MB was the fixed size).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8077
https://github.com/root-project/root/pull/8077:353,Safety,avoid,avoid,353,"Implement parallel page compression using `RPageSinkBuf`. When it's time to commit the cluster, the buffered pages are passed to the task scheduler to be compressed. Each page is given a `RNTupleCompressor` which both handles the compression and serves as the compression scratch buffer. `RNTupleCompressor` was adjusted to take a user-provided size to avoid wasting memory for small pages (16MB was the fixed size).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8077
https://github.com/root-project/root/issues/8079:64,Performance,Load,LoadSealedPage,64,The RNTuple DAOS backend should implement working versions for `LoadSealedPage()` and `CommitSealedPage()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8079
https://github.com/root-project/root/pull/8082:113,Modifiability,inherit,inherited,113,This should fix the following warning in clang 10:. ```; warning: class with destructor marked 'final' cannot be inherited from [-Wfinal-dtor-non-final-class]; ~RPageSourceFriends() final;; ^; .../v7/inc/ROOT/RPageSourceFriends.hxx:39:7: note: mark 'ROOT::Experimental::Detail::RPageSourceFriends' as 'final' to silence this warning; class RPageSourceFriends : public RPageSource {; ^; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8082
https://github.com/root-project/root/issues/8084:669,Integrability,message,message,669,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently, if our build system finds a suitable Python3 interpreter but does not find a Python2 interpreter, the CMake output looks like this:. ```; -- Looking for Python; -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_INCLUDE_DIRS Python2_LIBRARIES Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""/usr/bin/python""; ```. The CMake output should mention that Python3 was found and things are just fine. The current message looks like ROOT searched for Python2, could not find it and that was it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8084
https://github.com/root-project/root/pull/8085:5,Deployability,patch,patch,5,This patch is a backport of; https://reviews.llvm.org/rG638d84b60b7e7b7fa9099939ab4de2ec1e0c52c3. Fixes #8060.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8085
https://github.com/root-project/root/issues/8086:85,Energy Efficiency,monitor,monitor,85,"Hello,. by default I use a display depth of 30 set e.g. via `/etc/X11/xorg.conf.d/90-monitor.conf`; ```; Section ""Monitor""; 	Identifier	""Internal Display""; 	[…]; EndSection. Section ""Screen""; 	Identifier	""Screen0""; 	Device		""…""; 	Monitor		""Internal Display""; 	DefaultDepth	30; EndSection; ```; Then, doing the following:; ```; $ root; root [0] TH1 *t = new TH1I(""test"", ""test"", 2, -.5, 1.5); (TH1 *) 0x…; root [1] t->Fill(1); (int) 2; root [2] t->Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; ```; In the window, that opens, I would expect to see axis labels, a stat box etc. This is not the case. If I save the histogram, the labels are visible. The labels are also visible, if I do not set the display depth to 30 (but instead X11 uses a default depth of 24). Could ROOT be fixed, to also handle different display depths then 24 gracefully?. Best regards.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8086
https://github.com/root-project/root/issues/8086:114,Energy Efficiency,Monitor,Monitor,114,"Hello,. by default I use a display depth of 30 set e.g. via `/etc/X11/xorg.conf.d/90-monitor.conf`; ```; Section ""Monitor""; 	Identifier	""Internal Display""; 	[…]; EndSection. Section ""Screen""; 	Identifier	""Screen0""; 	Device		""…""; 	Monitor		""Internal Display""; 	DefaultDepth	30; EndSection; ```; Then, doing the following:; ```; $ root; root [0] TH1 *t = new TH1I(""test"", ""test"", 2, -.5, 1.5); (TH1 *) 0x…; root [1] t->Fill(1); (int) 2; root [2] t->Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; ```; In the window, that opens, I would expect to see axis labels, a stat box etc. This is not the case. If I save the histogram, the labels are visible. The labels are also visible, if I do not set the display depth to 30 (but instead X11 uses a default depth of 24). Could ROOT be fixed, to also handle different display depths then 24 gracefully?. Best regards.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8086
https://github.com/root-project/root/issues/8086:230,Energy Efficiency,Monitor,Monitor,230,"Hello,. by default I use a display depth of 30 set e.g. via `/etc/X11/xorg.conf.d/90-monitor.conf`; ```; Section ""Monitor""; 	Identifier	""Internal Display""; 	[…]; EndSection. Section ""Screen""; 	Identifier	""Screen0""; 	Device		""…""; 	Monitor		""Internal Display""; 	DefaultDepth	30; EndSection; ```; Then, doing the following:; ```; $ root; root [0] TH1 *t = new TH1I(""test"", ""test"", 2, -.5, 1.5); (TH1 *) 0x…; root [1] t->Fill(1); (int) 2; root [2] t->Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; ```; In the window, that opens, I would expect to see axis labels, a stat box etc. This is not the case. If I save the histogram, the labels are visible. The labels are also visible, if I do not set the display depth to 30 (but instead X11 uses a default depth of 24). Could ROOT be fixed, to also handle different display depths then 24 gracefully?. Best regards.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8086
https://github.com/root-project/root/issues/8086:363,Testability,test,test,363,"Hello,. by default I use a display depth of 30 set e.g. via `/etc/X11/xorg.conf.d/90-monitor.conf`; ```; Section ""Monitor""; 	Identifier	""Internal Display""; 	[…]; EndSection. Section ""Screen""; 	Identifier	""Screen0""; 	Device		""…""; 	Monitor		""Internal Display""; 	DefaultDepth	30; EndSection; ```; Then, doing the following:; ```; $ root; root [0] TH1 *t = new TH1I(""test"", ""test"", 2, -.5, 1.5); (TH1 *) 0x…; root [1] t->Fill(1); (int) 2; root [2] t->Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; ```; In the window, that opens, I would expect to see axis labels, a stat box etc. This is not the case. If I save the histogram, the labels are visible. The labels are also visible, if I do not set the display depth to 30 (but instead X11 uses a default depth of 24). Could ROOT be fixed, to also handle different display depths then 24 gracefully?. Best regards.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8086
https://github.com/root-project/root/issues/8086:371,Testability,test,test,371,"Hello,. by default I use a display depth of 30 set e.g. via `/etc/X11/xorg.conf.d/90-monitor.conf`; ```; Section ""Monitor""; 	Identifier	""Internal Display""; 	[…]; EndSection. Section ""Screen""; 	Identifier	""Screen0""; 	Device		""…""; 	Monitor		""Internal Display""; 	DefaultDepth	30; EndSection; ```; Then, doing the following:; ```; $ root; root [0] TH1 *t = new TH1I(""test"", ""test"", 2, -.5, 1.5); (TH1 *) 0x…; root [1] t->Fill(1); (int) 2; root [2] t->Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; ```; In the window, that opens, I would expect to see axis labels, a stat box etc. This is not the case. If I save the histogram, the labels are visible. The labels are also visible, if I do not set the display depth to 30 (but instead X11 uses a default depth of 24). Could ROOT be fixed, to also handle different display depths then 24 gracefully?. Best regards.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8086
https://github.com/root-project/root/pull/8090:473,Deployability,update,update,473,"Extend the RooDataHist tests to also validate the schema evolution; from version 5 and version 6. Version 6 is the current version, so the `dataHistv6_ref.root` reference; file was produced with ROOT master. Version 5 was used in ROOT 6.24,; which was used to produce the `dataHistv5_ref.root` reference file. The version 6 reference file is a little bit smaller than the version 5 file, as the `_realVars` member was removed with version 6. A nice aspect of the version 6 update is also that it's backwards compatible. The `initialize()` function is called in the [custom streamer](https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/src/RooDataHist.cxx#L1995) of RooDataHist, so if the `_realVars` member is missing in the ROOT file it will still be initialized. This fixes issue https://github.com/root-project/root/issues/8037.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8090
https://github.com/root-project/root/pull/8090:634,Deployability,patch,patches,634,"Extend the RooDataHist tests to also validate the schema evolution; from version 5 and version 6. Version 6 is the current version, so the `dataHistv6_ref.root` reference; file was produced with ROOT master. Version 5 was used in ROOT 6.24,; which was used to produce the `dataHistv5_ref.root` reference file. The version 6 reference file is a little bit smaller than the version 5 file, as the `_realVars` member was removed with version 6. A nice aspect of the version 6 update is also that it's backwards compatible. The `initialize()` function is called in the [custom streamer](https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/src/RooDataHist.cxx#L1995) of RooDataHist, so if the `_realVars` member is missing in the ROOT file it will still be initialized. This fixes issue https://github.com/root-project/root/issues/8037.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8090
https://github.com/root-project/root/pull/8090:0,Modifiability,Extend,Extend,0,"Extend the RooDataHist tests to also validate the schema evolution; from version 5 and version 6. Version 6 is the current version, so the `dataHistv6_ref.root` reference; file was produced with ROOT master. Version 5 was used in ROOT 6.24,; which was used to produce the `dataHistv5_ref.root` reference file. The version 6 reference file is a little bit smaller than the version 5 file, as the `_realVars` member was removed with version 6. A nice aspect of the version 6 update is also that it's backwards compatible. The `initialize()` function is called in the [custom streamer](https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/src/RooDataHist.cxx#L1995) of RooDataHist, so if the `_realVars` member is missing in the ROOT file it will still be initialized. This fixes issue https://github.com/root-project/root/issues/8037.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8090
https://github.com/root-project/root/pull/8090:37,Security,validat,validate,37,"Extend the RooDataHist tests to also validate the schema evolution; from version 5 and version 6. Version 6 is the current version, so the `dataHistv6_ref.root` reference; file was produced with ROOT master. Version 5 was used in ROOT 6.24,; which was used to produce the `dataHistv5_ref.root` reference file. The version 6 reference file is a little bit smaller than the version 5 file, as the `_realVars` member was removed with version 6. A nice aspect of the version 6 update is also that it's backwards compatible. The `initialize()` function is called in the [custom streamer](https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/src/RooDataHist.cxx#L1995) of RooDataHist, so if the `_realVars` member is missing in the ROOT file it will still be initialized. This fixes issue https://github.com/root-project/root/issues/8037.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8090
https://github.com/root-project/root/pull/8090:23,Testability,test,tests,23,"Extend the RooDataHist tests to also validate the schema evolution; from version 5 and version 6. Version 6 is the current version, so the `dataHistv6_ref.root` reference; file was produced with ROOT master. Version 5 was used in ROOT 6.24,; which was used to produce the `dataHistv5_ref.root` reference file. The version 6 reference file is a little bit smaller than the version 5 file, as the `_realVars` member was removed with version 6. A nice aspect of the version 6 update is also that it's backwards compatible. The `initialize()` function is called in the [custom streamer](https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/src/RooDataHist.cxx#L1995) of RooDataHist, so if the `_realVars` member is missing in the ROOT file it will still be initialized. This fixes issue https://github.com/root-project/root/issues/8037.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8090
https://github.com/root-project/root/pull/8091:467,Usability,usab,usable,467,"In Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966), it's suggested to include the translated RooFit tutorials in a [private branch](https://github.com/clelange/root/tree/roofit_tutorial/tutorials/roofit) from Clemens Lange. Some of these translations are already upstream, but the ones that didn't work with pyROOT without further hacks were not included. With recent improvements in pyROOT and RooFit, more of the translated tutorials become usable and we can include them upstream. This commit includes all the remaining tutorials that give exactly the same plotting and fitting results as the `.C` counterparts. In the future, pyROOT has to be further developed to also make the remaining translated tutorials run:; * [rf102_dataimport.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf102_dataimport.py); * [rf109_chi2residpull.py](https://github.com/clelange/root/blob/9ab46c2ed2a362af1dcc6813707477338539786b/tutorials/roofit/rf109_chi2residpull.py); * [rf207_comptools.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf207_comptools.py); * [rf303_conditional.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf303_conditional.py); * [rf403_weightedevts.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf403_weightedevts.py); * [rf503_wspaceread.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf503_wspaceread.py); * [rf508_listsetmanip.py](https://github.com/clelange/root/blob/b0520637a4bfc88bd2eaf44fcb14075ffe2e4f74/tutorials/roofit/rf508_listsetmanip.py); * [rf602_chi2fit.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf602_chi2fit.py); * [rf802_mcstudy_addons.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf802_mcstudy_addons.py); * [rf803_mcstudy_addons2.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf803_mcstudy_addons2.py); * [rf804_mcs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8091
https://github.com/root-project/root/issues/8092:901,Availability,echo,echo,901,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:1389,Availability,echo,echo,1389,"{; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:2525,Availability,Error,Error,2525,"[desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; Error in <DavixOpen>: can not open file ""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root"" with davix: Result HTTP 401 : Authentification Error after 3 attempts (14); [desilva@lxplus7107 rootTest]$ echo $?; 1; [desilva@lxplus7107 rootTest]$ ; ```. note that xrootd access works for LCG_100 even though webdav fails above; eg:; ```; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""root://xrootd.lcg.triumf.ca:1094//atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help',",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:2712,Availability,Error,Error,2712,"desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; Error in <DavixOpen>: can not open file ""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root"" with davix: Result HTTP 401 : Authentification Error after 3 attempts (14); [desilva@lxplus7107 rootTest]$ echo $?; 1; [desilva@lxplus7107 rootTest]$ ; ```. note that xrootd access works for LCG_100 even though webdav fails above; eg:; ```; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""root://xrootd.lcg.triumf.ca:1094//atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; root://xrootd.lcg.triumf.ca:1094",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:2772,Availability,echo,echo,2772,"desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; Error in <DavixOpen>: can not open file ""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root"" with davix: Result HTTP 401 : Authentification Error after 3 attempts (14); [desilva@lxplus7107 rootTest]$ echo $?; 1; [desilva@lxplus7107 rootTest]$ ; ```. note that xrootd access works for LCG_100 even though webdav fails above; eg:; ```; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""root://xrootd.lcg.triumf.ca:1094//atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; root://xrootd.lcg.triumf.ca:1094",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:3839,Availability,echo,echo,3839,"s7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; Error in <DavixOpen>: can not open file ""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root"" with davix: Result HTTP 401 : Authentification Error after 3 attempts (14); [desilva@lxplus7107 rootTest]$ echo $?; 1; [desilva@lxplus7107 rootTest]$ ; ```. note that xrootd access works for LCG_100 even though webdav fails above; eg:; ```; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""root://xrootd.lcg.triumf.ca:1094//atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; root://xrootd.lcg.triumf.ca:1094//atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; [desilva@lxplus7107 rootTest]$ echo $?; 0; [desilva@lxplus7107 rootTest]$ ; ```. Thanks !. regards,; Asoka",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:75,Security,access,access,75,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:189,Security,access,access,189,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:2839,Security,access,access,2839,".1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; Error in <DavixOpen>: can not open file ""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root"" with davix: Result HTTP 401 : Authentification Error after 3 attempts (14); [desilva@lxplus7107 rootTest]$ echo $?; 1; [desilva@lxplus7107 rootTest]$ ; ```. note that xrootd access works for LCG_100 even though webdav fails above; eg:; ```; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""root://xrootd.lcg.triumf.ca:1094//atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; root://xrootd.lcg.triumf.ca:1094//atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; [desilva@lxplus7107 rootTest]$ echo $?; 0; [desilva@lxplus7107 rootTest]$ ; ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:11,Testability,test,testing,11,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:179,Testability,test,test,179,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:428,Testability,test,test,428,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:452,Testability,log,login,452,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:481,Testability,test,test,481,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:490,Testability,test,test,490,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:939,Testability,log,login,939,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:968,Testability,test,test,968,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/issues/8092:977,Testability,test,test,977,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8092
https://github.com/root-project/root/pull/8093:253,Modifiability,variab,variable,253,"The RAII object in RDaos.cxx was constructed statically, which causes a DAOS-enabled RNTuple build to call `daos_init()` (or `daos_fini()` at exit) even if the only the file backend was used by user code. This commit turns the RAII object into a static variable in `RDaosPool::RDaosPool()` which is initialized during the first call to the; constructor. Note that static variable initialization is guaranteed to be thread-safe by ISO C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8093
https://github.com/root-project/root/pull/8093:371,Modifiability,variab,variable,371,"The RAII object in RDaos.cxx was constructed statically, which causes a DAOS-enabled RNTuple build to call `daos_init()` (or `daos_fini()` at exit) even if the only the file backend was used by user code. This commit turns the RAII object into a static variable in `RDaosPool::RDaosPool()` which is initialized during the first call to the; constructor. Note that static variable initialization is guaranteed to be thread-safe by ISO C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8093
https://github.com/root-project/root/pull/8093:422,Safety,safe,safe,422,"The RAII object in RDaos.cxx was constructed statically, which causes a DAOS-enabled RNTuple build to call `daos_init()` (or `daos_fini()` at exit) even if the only the file backend was used by user code. This commit turns the RAII object into a static variable in `RDaosPool::RDaosPool()` which is initialized during the first call to the; constructor. Note that static variable initialization is guaranteed to be thread-safe by ISO C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8093
https://github.com/root-project/root/pull/8094:37,Testability,test,tests,37,"In order to enable RNTuple DAOS unit tests, RNTuple is built with libdaos_mock; if `testing` is set and the user did not enable explicit DAOS support, i.e.; `-Ddaos=ON`. Closes issue #8074.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8094
https://github.com/root-project/root/pull/8094:84,Testability,test,testing,84,"In order to enable RNTuple DAOS unit tests, RNTuple is built with libdaos_mock; if `testing` is set and the user did not enable explicit DAOS support, i.e.; `-Ddaos=ON`. Closes issue #8074.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8094
https://github.com/root-project/root/issues/8095:344,Availability,error,error,344,"When using only ```cmake ../source -DPYTHON_EXECUTABLE=/usr/bin/python3```, as suggested on the [webpage](https://root.cern/install/build_from_source/), the compiler would say that pyROOT libraries would be built for python3. When looking for the libraries at $ROOTSYS/lib, they are not there, and *import ROOT* in the python interpreter gives error. . Only after using ```cmake ../source -Dpyroot=ON -DPYTHON_EXECUTABLE=/usr/bin/python3``` that the pyROOT libraries were built and python could find them. . I'm installing ROOT on Fedora 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8095
https://github.com/root-project/root/issues/8095:124,Deployability,install,install,124,"When using only ```cmake ../source -DPYTHON_EXECUTABLE=/usr/bin/python3```, as suggested on the [webpage](https://root.cern/install/build_from_source/), the compiler would say that pyROOT libraries would be built for python3. When looking for the libraries at $ROOTSYS/lib, they are not there, and *import ROOT* in the python interpreter gives error. . Only after using ```cmake ../source -Dpyroot=ON -DPYTHON_EXECUTABLE=/usr/bin/python3``` that the pyROOT libraries were built and python could find them. . I'm installing ROOT on Fedora 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8095
https://github.com/root-project/root/issues/8095:512,Deployability,install,installing,512,"When using only ```cmake ../source -DPYTHON_EXECUTABLE=/usr/bin/python3```, as suggested on the [webpage](https://root.cern/install/build_from_source/), the compiler would say that pyROOT libraries would be built for python3. When looking for the libraries at $ROOTSYS/lib, they are not there, and *import ROOT* in the python interpreter gives error. . Only after using ```cmake ../source -Dpyroot=ON -DPYTHON_EXECUTABLE=/usr/bin/python3``` that the pyROOT libraries were built and python could find them. . I'm installing ROOT on Fedora 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8095
https://github.com/root-project/root/pull/8096:18,Testability,test,test,18,Notice: I did not test Oracle functionality with 21.x,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8096
https://github.com/root-project/root/issues/8097:2612,Availability,Down,Downloading,2612,"evelopment NumPy Development.Module Development.Embed) (found version ""3.8.9""); -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- ROOT Platform: linux; -- ROOT Compiler: Clang 12.0.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.18; -- Looking for ZLib; -- Looking for Freetype; -- Looking for LZMA; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR); -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR); -- Could NOT find PNG (missing: PNG_LIBRARY PNG_PNG_INCLUDE_DIR); -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR); -- Building AfterImage library included in ROOT itself; -- Looking for LibXml2; -- Downloading and building XROOTD version; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:186,Deployability,release,release,186,"# environement. ```; (master)> cmake --version; cmake version 3.20.1; ```. ```; (master)> uname -rs; Linux 5.12.0-2-default; ```. ```; (master)> grep -e ""^VERSION_ID="" -e ""^NAME="" /etc/*release; NAME=""openSUSE Tumbleweed""; VERSION_ID=""20210502""; ```. ```; (master)> python --version; Python 2.7.18; ```. ```; (master)> python3 --version; Python 3.8.9; ```. ```; (master)> whereis python; python: /usr/bin/python3.8 /usr/bin/python /usr/bin/python2.7 /usr/bin/python2.7-config /usr/lib/python3.8 /usr/lib/python2.7 /usr/lib64/python3.8 /usr/lib64/python /usr/lib64/python2.7 /usr/local/lib/python3.8 /usr/include/python2.7 /usr/include/python /usr/share/man/man1/python.1.gz; ```. ```; (master)> sudo zypper se -i python | grep -e ""Interpreter"" -e ""dev""; i | libpython2_7-1_0 | Python Interpreter shared library | package; i | libpython3_8-1_0 | Python Interpreter shared library | package; i+ | python | Python Interpreter | package; i | python-base | Python Interpreter base package | package; i+ | python-devel | Include Files and Libraries Mandatory for Building Python Modules | package; i | python38 | Python 3 Interpreter | package; i | python38-base | Python 3 Interpreter and Stdlib Core | package; i | python38-pyudev | Udev bindings for Python | package; ```. # output. ```; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_INCLUDE_DIRS Python3_LIBRARIES Python3_NumPy_INCLUDE_DIRS Development NumPy Development.Module Development.Embed) (found version ""3.8.9""); -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- ROOT Platform: linux; -- ROOT Compiler: Clang 12.0.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:1758,Deployability,Release,Release,1758,"ackage; i | python-base | Python Interpreter base package | package; i+ | python-devel | Include Files and Libraries Mandatory for Building Python Modules | package; i | python38 | Python 3 Interpreter | package; i | python38-base | Python 3 Interpreter and Stdlib Core | package; i | python38-pyudev | Udev bindings for Python | package; ```. # output. ```; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_INCLUDE_DIRS Python3_LIBRARIES Python3_NumPy_INCLUDE_DIRS Development NumPy Development.Module Development.Embed) (found version ""3.8.9""); -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- ROOT Platform: linux; -- ROOT Compiler: Clang 12.0.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.18; -- Looking for ZLib; -- Looking for Freetype; -- Looking for LZMA; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR); -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR); -- Could NOT find PNG (missing: PNG_LIBRARY PNG_PNG_INCLUDE_DIR); -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR); -- Building AfterImage library included in ROOT itself; -- Looking for LibXml2; -- Downloading and building XROOTD version; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Native target architecture is X86; -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:2752,Deployability,Release,Release,2752,"cc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.18; -- Looking for ZLib; -- Looking for Freetype; -- Looking for LZMA; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR); -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR); -- Could NOT find PNG (missing: PNG_LIBRARY PNG_PNG_INCLUDE_DIR); -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR); -- Building AfterImage library included in ROOT itself; -- Looking for LibXml2; -- Downloading and building XROOTD version; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4291,Deployability,Configurat,Configuration,4291,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4412,Deployability,Release,Release,4412,"on: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml xrootd; -- Configuring done; -- Generating done; ```. Strangely enough the cmake outputs `-- PyROOT will be built for version 2.7.18`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4421,Deployability,Install,Install,4421,"on: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml xrootd; -- Configuring done; -- Generating done; ```. Strangely enough the cmake outputs `-- PyROOT will be built for version 2.7.18`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:469,Modifiability,config,config,469,"# environement. ```; (master)> cmake --version; cmake version 3.20.1; ```. ```; (master)> uname -rs; Linux 5.12.0-2-default; ```. ```; (master)> grep -e ""^VERSION_ID="" -e ""^NAME="" /etc/*release; NAME=""openSUSE Tumbleweed""; VERSION_ID=""20210502""; ```. ```; (master)> python --version; Python 2.7.18; ```. ```; (master)> python3 --version; Python 3.8.9; ```. ```; (master)> whereis python; python: /usr/bin/python3.8 /usr/bin/python /usr/bin/python2.7 /usr/bin/python2.7-config /usr/lib/python3.8 /usr/lib/python2.7 /usr/lib64/python3.8 /usr/lib64/python /usr/lib64/python2.7 /usr/local/lib/python3.8 /usr/include/python2.7 /usr/include/python /usr/share/man/man1/python.1.gz; ```. ```; (master)> sudo zypper se -i python | grep -e ""Interpreter"" -e ""dev""; i | libpython2_7-1_0 | Python Interpreter shared library | package; i | libpython3_8-1_0 | Python Interpreter shared library | package; i+ | python | Python Interpreter | package; i | python-base | Python Interpreter base package | package; i+ | python-devel | Include Files and Libraries Mandatory for Building Python Modules | package; i | python38 | Python 3 Interpreter | package; i | python38-base | Python 3 Interpreter and Stdlib Core | package; i | python38-pyudev | Udev bindings for Python | package; ```. # output. ```; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_INCLUDE_DIRS Python3_LIBRARIES Python3_NumPy_INCLUDE_DIRS Development NumPy Development.Module Development.Embed) (found version ""3.8.9""); -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- ROOT Platform: linux; -- ROOT Compiler: Clang 12.0.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4291,Modifiability,Config,Configuration,4291,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:5237,Modifiability,Config,Configuring,5237,"on: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml xrootd; -- Configuring done; -- Generating done; ```. Strangely enough the cmake outputs `-- PyROOT will be built for version 2.7.18`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3752,Performance,Perform,Performing,3752,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3792,Performance,Perform,Performing,3792,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3841,Performance,Perform,Performing,3841,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3884,Performance,Perform,Performing,3884,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3937,Performance,Perform,Performing,3937,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3979,Performance,Perform,Performing,3979,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4030,Performance,Perform,Performing,4030,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4065,Performance,Perform,Performing,4065,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4109,Performance,Perform,Performing,4109,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4145,Performance,Perform,Performing,4145,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4190,Performance,Perform,Performing,4190,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4233,Performance,Perform,Performing,4233,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:1288,Safety,Detect,Detected,1288,"18; ```. ```; (master)> python3 --version; Python 3.8.9; ```. ```; (master)> whereis python; python: /usr/bin/python3.8 /usr/bin/python /usr/bin/python2.7 /usr/bin/python2.7-config /usr/lib/python3.8 /usr/lib/python2.7 /usr/lib64/python3.8 /usr/lib64/python /usr/lib64/python2.7 /usr/local/lib/python3.8 /usr/include/python2.7 /usr/include/python /usr/share/man/man1/python.1.gz; ```. ```; (master)> sudo zypper se -i python | grep -e ""Interpreter"" -e ""dev""; i | libpython2_7-1_0 | Python Interpreter shared library | package; i | libpython3_8-1_0 | Python Interpreter shared library | package; i+ | python | Python Interpreter | package; i | python-base | Python Interpreter base package | package; i+ | python-devel | Include Files and Libraries Mandatory for Building Python Modules | package; i | python38 | Python 3 Interpreter | package; i | python38-base | Python 3 Interpreter and Stdlib Core | package; i | python38-pyudev | Udev bindings for Python | package; ```. # output. ```; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_INCLUDE_DIRS Python3_LIBRARIES Python3_NumPy_INCLUDE_DIRS Development NumPy Development.Module Development.Embed) (found version ""3.8.9""); -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- ROOT Platform: linux; -- ROOT Compiler: Clang 12.0.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.18; -- Looking for ZLib; -- Looking for Freetype; -- Looking for LZMA; -- Looking for X11; -- Could NOT find GIF (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3288,Safety,detect,detection,3288,"Looking for LZMA; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR); -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR); -- Could NOT find PNG (missing: PNG_LIBRARY PNG_PNG_INCLUDE_DIR); -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR); -- Building AfterImage library included in ROOT itself; -- Looking for LibXml2; -- Downloading and building XROOTD version; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3763,Testability,Test,Test,3763,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3803,Testability,Test,Test,3803,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3852,Testability,Test,Test,3852,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3895,Testability,Test,Test,3895,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3948,Testability,Test,Test,3948,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:3990,Testability,Test,Test,3990,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4041,Testability,Test,Test,4041,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4076,Testability,Test,Test,4076,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4120,Testability,Test,Test,4120,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4156,Testability,Test,Test,4156,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4201,Testability,Test,Test,4201,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8097:4244,Testability,Test,Test,4244,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8097
https://github.com/root-project/root/issues/8098:580,Safety,avoid,avoid,580,"### Explain what you would like to see improved; The TColor palettes are nicely described here: https://root.cern.ch/doc/master/classTColor.html; However, it is not clear which of these palettes are prone to artefacts, which are not CVD friendly, etc. Only the Rainbow one is mentioned and linked to https://root.cern.ch/rainbow-color-map. ### Optional: share how it could be improved; - I think it would be helpful if they would be split into two separate sections, namely those that are CVD-friendly and those that are not. This would help the users in quickly knowing which to avoid.; - Maybe adding this link in the docu would be interesting: https://www.nature.com/articles/s41467-020-19160-7; - I would also suggest to implement the 'batlow' palette described in the link above into the predefined palettes. And potentially others described in Box2 of that article.; - These graphs here are also quite informative https://matplotlib.org/stable/tutorials/colors/colormaps.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8098
https://github.com/root-project/root/issues/8098:165,Usability,clear,clear,165,"### Explain what you would like to see improved; The TColor palettes are nicely described here: https://root.cern.ch/doc/master/classTColor.html; However, it is not clear which of these palettes are prone to artefacts, which are not CVD friendly, etc. Only the Rainbow one is mentioned and linked to https://root.cern.ch/rainbow-color-map. ### Optional: share how it could be improved; - I think it would be helpful if they would be split into two separate sections, namely those that are CVD-friendly and those that are not. This would help the users in quickly knowing which to avoid.; - Maybe adding this link in the docu would be interesting: https://www.nature.com/articles/s41467-020-19160-7; - I would also suggest to implement the 'batlow' palette described in the link above into the predefined palettes. And potentially others described in Box2 of that article.; - These graphs here are also quite informative https://matplotlib.org/stable/tutorials/colors/colormaps.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8098
https://github.com/root-project/root/pull/8099:231,Testability,test,tests,231,This is a collection small things I found while working on HistFactory models -- the last batch before getting to the actual HistFactory stuff. @guitargeek Maybe the last commit is interesting for some things you tweaked? (Only in tests or debug builds of course),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8099
https://github.com/root-project/root/pull/8100:157,Performance,cache,cache,157,"1. Improve/fix problems with TKey/TDirectory handling.; In some cases objects were deleted, but still used in RBrowsable classes; 2. Fix bug with RBrowsable cache usage. ; Logic was not working when more than 1 levels of sub-directories in the TFile was there; 3. Fix statbox handling for empty histograms in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8100
https://github.com/root-project/root/pull/8100:172,Testability,Log,Logic,172,"1. Improve/fix problems with TKey/TDirectory handling.; In some cases objects were deleted, but still used in RBrowsable classes; 2. Fix bug with RBrowsable cache usage. ; Logic was not working when more than 1 levels of sub-directories in the TFile was there; 3. Fix statbox handling for empty histograms in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8100
https://github.com/root-project/root/pull/8101:157,Performance,cache,cache,157,"1. Improve/fix problems with TKey/TDirectory handling.; In some cases objects were deleted, but still used in RBrowsable classes; 2. Fix bug with RBrowsable cache usage. ; Logic was not working when more than 1 levels of sub-directories in the TFile was there; 3. Empty RBrowser cache when top-level path is reloaded. Avoids holding of too many objects which are no longer used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8101
https://github.com/root-project/root/pull/8101:279,Performance,cache,cache,279,"1. Improve/fix problems with TKey/TDirectory handling.; In some cases objects were deleted, but still used in RBrowsable classes; 2. Fix bug with RBrowsable cache usage. ; Logic was not working when more than 1 levels of sub-directories in the TFile was there; 3. Empty RBrowser cache when top-level path is reloaded. Avoids holding of too many objects which are no longer used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8101
https://github.com/root-project/root/pull/8101:318,Safety,Avoid,Avoids,318,"1. Improve/fix problems with TKey/TDirectory handling.; In some cases objects were deleted, but still used in RBrowsable classes; 2. Fix bug with RBrowsable cache usage. ; Logic was not working when more than 1 levels of sub-directories in the TFile was there; 3. Empty RBrowser cache when top-level path is reloaded. Avoids holding of too many objects which are no longer used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8101
https://github.com/root-project/root/pull/8101:172,Testability,Log,Logic,172,"1. Improve/fix problems with TKey/TDirectory handling.; In some cases objects were deleted, but still used in RBrowsable classes; 2. Fix bug with RBrowsable cache usage. ; Logic was not working when more than 1 levels of sub-directories in the TFile was there; 3. Empty RBrowser cache when top-level path is reloaded. Avoids holding of too many objects which are no longer used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8101
https://github.com/root-project/root/pull/8103:391,Testability,test,test,391,"Motivation: `std::pair` is used by one of the NanoAOD auxiliary trees (`ParameterSets`). The `std::pair` implementation largely follows `RRecordField`. There is a; question about whether `RField<std::pair<T1,T2>>::GetValueSize()` should; equal `sizeof(std::pair<T1,T2>)`, since currently the former does not add; trailing padding bytes, which are implementation defined. . E.g the following test fails on a 64-bit machine (but would pass on 32bit):. ```cpp; auto field = RField<std::pair<int64_t, float>>(""pairField"");; // sizeof check fails, RPairField does not take into account 4 trailing padding bytes; EXPECT_EQ((sizeof(std::pair<int64_t, float>)), field.GetValueSize());; ```; ```; Expected equality of these values:; (sizeof(std::pair<int64_t, float>)); Which is: 16; field.GetValueSize(); Which is: 12; ```. (EDIT: this has been fixed in the relevant commit and the PR should be ready for review and merge.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8103
https://github.com/root-project/root/pull/8106:37,Modifiability,config,config,37,Addressing issue #7662 for bash root-config. Pretty much mirrored what was done for root-config.bat in #7663. Handle unknown feature. Unknown option is already handled. Preview:. spectre@localhost ~/root/compiled/bin; (improve-root-config-bash)> ./root-config --has-xml --has-cxx14 --has-improved; yes yes --has-improved: unknown feature!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8106
https://github.com/root-project/root/pull/8106:89,Modifiability,config,config,89,Addressing issue #7662 for bash root-config. Pretty much mirrored what was done for root-config.bat in #7663. Handle unknown feature. Unknown option is already handled. Preview:. spectre@localhost ~/root/compiled/bin; (improve-root-config-bash)> ./root-config --has-xml --has-cxx14 --has-improved; yes yes --has-improved: unknown feature!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8106
https://github.com/root-project/root/pull/8106:232,Modifiability,config,config-bash,232,Addressing issue #7662 for bash root-config. Pretty much mirrored what was done for root-config.bat in #7663. Handle unknown feature. Unknown option is already handled. Preview:. spectre@localhost ~/root/compiled/bin; (improve-root-config-bash)> ./root-config --has-xml --has-cxx14 --has-improved; yes yes --has-improved: unknown feature!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8106
https://github.com/root-project/root/pull/8106:253,Modifiability,config,config,253,Addressing issue #7662 for bash root-config. Pretty much mirrored what was done for root-config.bat in #7663. Handle unknown feature. Unknown option is already handled. Preview:. spectre@localhost ~/root/compiled/bin; (improve-root-config-bash)> ./root-config --has-xml --has-cxx14 --has-improved; yes yes --has-improved: unknown feature!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8106
https://github.com/root-project/root/pull/8108:22,Deployability,update,update,22,"The motivtion of this update is the following:. It would be nice to be able to use ROOT compied with c++14 in projects that require c++ 17.; Right now it is not possible because of this header even if everything was compiled with the same compiller.; e.g. that is the case for recent Fedora builds, where root is build with gcc11 (default c++17) but with c++14 standard. An alternative is to be able regulate this behaviour with a flag, i.e.; ```; #if defined( R__HAS_STD_STRING_VIEW) || ( ROOT_IGNORE_RCONFIGURE && ( (defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L ) ). #else. ```; Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8108
https://github.com/root-project/root/pull/8109:779,Modifiability,config,configure,779,"1. String always used as storage for `RColor`. Following values are supported:; * `#00FF00` - which is standard RGB ; * `#00FF0088` - standard RGBA; * `grey` - color name; * `[0.5]` - ordinal value to select color from current palette ; * `auto` - automatic color, calculated on client side using current palette and drawable index; 2. By this change simplify CSS syntax - now any color value can be assigned as; ```; line_color: blue; fill_color: auto; marker_color: [0.3]; ``` ; 3. Introduce `RAttrOnFrame`. It has extra `onframe` attribute which indicates where drawable drawn. ; Implement first for `RLine` class, which can be now inside or outside frame; 4. Support user coordinates for drawable inside frame, provide testing with `RLine` in draw_frame.cxx tutorial; 5. Let configure all margins with single parameter, called `margin_all` in CSS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8109
https://github.com/root-project/root/pull/8109:723,Testability,test,testing,723,"1. String always used as storage for `RColor`. Following values are supported:; * `#00FF00` - which is standard RGB ; * `#00FF0088` - standard RGBA; * `grey` - color name; * `[0.5]` - ordinal value to select color from current palette ; * `auto` - automatic color, calculated on client side using current palette and drawable index; 2. By this change simplify CSS syntax - now any color value can be assigned as; ```; line_color: blue; fill_color: auto; marker_color: [0.3]; ``` ; 3. Introduce `RAttrOnFrame`. It has extra `onframe` attribute which indicates where drawable drawn. ; Implement first for `RLine` class, which can be now inside or outside frame; 4. Support user coordinates for drawable inside frame, provide testing with `RLine` in draw_frame.cxx tutorial; 5. Let configure all margins with single parameter, called `margin_all` in CSS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8109
https://github.com/root-project/root/pull/8109:351,Usability,simpl,simplify,351,"1. String always used as storage for `RColor`. Following values are supported:; * `#00FF00` - which is standard RGB ; * `#00FF0088` - standard RGBA; * `grey` - color name; * `[0.5]` - ordinal value to select color from current palette ; * `auto` - automatic color, calculated on client side using current palette and drawable index; 2. By this change simplify CSS syntax - now any color value can be assigned as; ```; line_color: blue; fill_color: auto; marker_color: [0.3]; ``` ; 3. Introduce `RAttrOnFrame`. It has extra `onframe` attribute which indicates where drawable drawn. ; Implement first for `RLine` class, which can be now inside or outside frame; 4. Support user coordinates for drawable inside frame, provide testing with `RLine` in draw_frame.cxx tutorial; 5. Let configure all margins with single parameter, called `margin_all` in CSS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8109
https://github.com/root-project/root/issues/8110:817,Availability,error,error,817,"### Is your feature request related to a problem? Please describe.; I'd like to use fast Python with ROOT bindings.; Why do I want that? I like ROOT trees, they are rather good containers, and can be very interactive with TreeViewer. I almost never use numpy, scipy or pandas (though it is said that recent PyPy versions support them). I use C++ for hard calculations (like 3-dimensional fits), but mostly I use pure Python for high-level data analysis, and it would be useful to combine PyPy and ROOT for middle-hard calculations. ; I'm also developing an architectural framework for data analysis in Python, and I'm curious whether PyPy + ROOT will ever be possible (it would be a good combination for speeding up Python). I'm interested in the possibility to use PyPy with ROOT. When I launched that, there was an error. > $ pypy; > \>\>\>\> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT/\_\_init__.py"", line 22, in <module> import cppyy; File ""/opt/root/cur/lib/cppyy/\_\_init__.py"", line 64, in <module> libcppyy_mod_name, major, minor)); ImportError: Failed to import libcppyy2_7. Please check that ROOT has been built for Python 2.7. However, I allowed Python 2 support in ROOT, and `python2` imports ROOT fine. A similar error was for Python 3, but Python 3 version for my PyPy and ROOT installations were different, so I checked that with Python 2. ### Describe the solution you'd like; Allow PyPy to use ROOT. ### Describe alternatives you've considered; I think that PyPy is the most general fast Python implementation (I didn't use other ones and not sure whether they will work with ROOT).; I've heard about `numba`, but it looks like it's mostly useful with numpy.; `Jython` didn't run when I tried it with `tox`. ### Additional context; I've sent a letter to PyPy developers, and this is what they [replied](https://mail.python.org/pipermail/pypy-dev/2021-May/016164.html):. > ROOT uses a fork of cppyy with several l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8110
https://github.com/root-project/root/issues/8110:1298,Availability,error,error,1298,"alculations (like 3-dimensional fits), but mostly I use pure Python for high-level data analysis, and it would be useful to combine PyPy and ROOT for middle-hard calculations. ; I'm also developing an architectural framework for data analysis in Python, and I'm curious whether PyPy + ROOT will ever be possible (it would be a good combination for speeding up Python). I'm interested in the possibility to use PyPy with ROOT. When I launched that, there was an error. > $ pypy; > \>\>\>\> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT/\_\_init__.py"", line 22, in <module> import cppyy; File ""/opt/root/cur/lib/cppyy/\_\_init__.py"", line 64, in <module> libcppyy_mod_name, major, minor)); ImportError: Failed to import libcppyy2_7. Please check that ROOT has been built for Python 2.7. However, I allowed Python 2 support in ROOT, and `python2` imports ROOT fine. A similar error was for Python 3, but Python 3 version for my PyPy and ROOT installations were different, so I checked that with Python 2. ### Describe the solution you'd like; Allow PyPy to use ROOT. ### Describe alternatives you've considered; I think that PyPy is the most general fast Python implementation (I didn't use other ones and not sure whether they will work with ROOT).; I've heard about `numba`, but it looks like it's mostly useful with numpy.; `Jython` didn't run when I tried it with `tox`. ### Additional context; I've sent a letter to PyPy developers, and this is what they [replied](https://mail.python.org/pipermail/pypy-dev/2021-May/016164.html):. > ROOT uses a fork of cppyy with several local modifications (and; it's also very much behind cppyy master). One of them is precisely this:; >; > \> ImportError: Failed to import libcppyy2_7. Please check that ROOT has; been built for Python 2.7; > ; > Which is referring to their ""multi-python"" build, a local ""invention."" But; also, libcppyy is not used in PyPy and should never be loaded directl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8110
https://github.com/root-project/root/issues/8110:1364,Deployability,install,installations,1364,"alculations (like 3-dimensional fits), but mostly I use pure Python for high-level data analysis, and it would be useful to combine PyPy and ROOT for middle-hard calculations. ; I'm also developing an architectural framework for data analysis in Python, and I'm curious whether PyPy + ROOT will ever be possible (it would be a good combination for speeding up Python). I'm interested in the possibility to use PyPy with ROOT. When I launched that, there was an error. > $ pypy; > \>\>\>\> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT/\_\_init__.py"", line 22, in <module> import cppyy; File ""/opt/root/cur/lib/cppyy/\_\_init__.py"", line 64, in <module> libcppyy_mod_name, major, minor)); ImportError: Failed to import libcppyy2_7. Please check that ROOT has been built for Python 2.7. However, I allowed Python 2 support in ROOT, and `python2` imports ROOT fine. A similar error was for Python 3, but Python 3 version for my PyPy and ROOT installations were different, so I checked that with Python 2. ### Describe the solution you'd like; Allow PyPy to use ROOT. ### Describe alternatives you've considered; I think that PyPy is the most general fast Python implementation (I didn't use other ones and not sure whether they will work with ROOT).; I've heard about `numba`, but it looks like it's mostly useful with numpy.; `Jython` didn't run when I tried it with `tox`. ### Additional context; I've sent a letter to PyPy developers, and this is what they [replied](https://mail.python.org/pipermail/pypy-dev/2021-May/016164.html):. > ROOT uses a fork of cppyy with several local modifications (and; it's also very much behind cppyy master). One of them is precisely this:; >; > \> ImportError: Failed to import libcppyy2_7. Please check that ROOT has; been built for Python 2.7; > ; > Which is referring to their ""multi-python"" build, a local ""invention."" But; also, libcppyy is not used in PyPy and should never be loaded directl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8110
https://github.com/root-project/root/issues/8110:2364,Modifiability,portab,portable,2364,"ost recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT/\_\_init__.py"", line 22, in <module> import cppyy; File ""/opt/root/cur/lib/cppyy/\_\_init__.py"", line 64, in <module> libcppyy_mod_name, major, minor)); ImportError: Failed to import libcppyy2_7. Please check that ROOT has been built for Python 2.7. However, I allowed Python 2 support in ROOT, and `python2` imports ROOT fine. A similar error was for Python 3, but Python 3 version for my PyPy and ROOT installations were different, so I checked that with Python 2. ### Describe the solution you'd like; Allow PyPy to use ROOT. ### Describe alternatives you've considered; I think that PyPy is the most general fast Python implementation (I didn't use other ones and not sure whether they will work with ROOT).; I've heard about `numba`, but it looks like it's mostly useful with numpy.; `Jython` didn't run when I tried it with `tox`. ### Additional context; I've sent a letter to PyPy developers, and this is what they [replied](https://mail.python.org/pipermail/pypy-dev/2021-May/016164.html):. > ROOT uses a fork of cppyy with several local modifications (and; it's also very much behind cppyy master). One of them is precisely this:; >; > \> ImportError: Failed to import libcppyy2_7. Please check that ROOT has; been built for Python 2.7; > ; > Which is referring to their ""multi-python"" build, a local ""invention."" But; also, libcppyy is not used in PyPy and should never be loaded directly for; portable use. (If they had stayed with standard Python platform tags, they; would not have to load it explicitly.); >; > \> Could you please add support of ROOT in PyPy?; >; > This really is on the ROOT folk to make their fork compatible with the; Python ecosphere, so file a bug report with them. There was a discussion on ROOT forum in 2019 (https://root-forum.cern.ch/t/how-to-start-pypy-with-root-module), but it didn't give any direct solution to the issue, and maybe something has changed since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8110
https://github.com/root-project/root/issues/8110:2343,Performance,load,loaded,2343,"ost recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT/\_\_init__.py"", line 22, in <module> import cppyy; File ""/opt/root/cur/lib/cppyy/\_\_init__.py"", line 64, in <module> libcppyy_mod_name, major, minor)); ImportError: Failed to import libcppyy2_7. Please check that ROOT has been built for Python 2.7. However, I allowed Python 2 support in ROOT, and `python2` imports ROOT fine. A similar error was for Python 3, but Python 3 version for my PyPy and ROOT installations were different, so I checked that with Python 2. ### Describe the solution you'd like; Allow PyPy to use ROOT. ### Describe alternatives you've considered; I think that PyPy is the most general fast Python implementation (I didn't use other ones and not sure whether they will work with ROOT).; I've heard about `numba`, but it looks like it's mostly useful with numpy.; `Jython` didn't run when I tried it with `tox`. ### Additional context; I've sent a letter to PyPy developers, and this is what they [replied](https://mail.python.org/pipermail/pypy-dev/2021-May/016164.html):. > ROOT uses a fork of cppyy with several local modifications (and; it's also very much behind cppyy master). One of them is precisely this:; >; > \> ImportError: Failed to import libcppyy2_7. Please check that ROOT has; been built for Python 2.7; > ; > Which is referring to their ""multi-python"" build, a local ""invention."" But; also, libcppyy is not used in PyPy and should never be loaded directly for; portable use. (If they had stayed with standard Python platform tags, they; would not have to load it explicitly.); >; > \> Could you please add support of ROOT in PyPy?; >; > This really is on the ROOT folk to make their fork compatible with the; Python ecosphere, so file a bug report with them. There was a discussion on ROOT forum in 2019 (https://root-forum.cern.ch/t/how-to-start-pypy-with-root-module), but it didn't give any direct solution to the issue, and maybe something has changed since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8110
https://github.com/root-project/root/issues/8110:2458,Performance,load,load,2458,"ost recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT/\_\_init__.py"", line 22, in <module> import cppyy; File ""/opt/root/cur/lib/cppyy/\_\_init__.py"", line 64, in <module> libcppyy_mod_name, major, minor)); ImportError: Failed to import libcppyy2_7. Please check that ROOT has been built for Python 2.7. However, I allowed Python 2 support in ROOT, and `python2` imports ROOT fine. A similar error was for Python 3, but Python 3 version for my PyPy and ROOT installations were different, so I checked that with Python 2. ### Describe the solution you'd like; Allow PyPy to use ROOT. ### Describe alternatives you've considered; I think that PyPy is the most general fast Python implementation (I didn't use other ones and not sure whether they will work with ROOT).; I've heard about `numba`, but it looks like it's mostly useful with numpy.; `Jython` didn't run when I tried it with `tox`. ### Additional context; I've sent a letter to PyPy developers, and this is what they [replied](https://mail.python.org/pipermail/pypy-dev/2021-May/016164.html):. > ROOT uses a fork of cppyy with several local modifications (and; it's also very much behind cppyy master). One of them is precisely this:; >; > \> ImportError: Failed to import libcppyy2_7. Please check that ROOT has; been built for Python 2.7; > ; > Which is referring to their ""multi-python"" build, a local ""invention."" But; also, libcppyy is not used in PyPy and should never be loaded directly for; portable use. (If they had stayed with standard Python platform tags, they; would not have to load it explicitly.); >; > \> Could you please add support of ROOT in PyPy?; >; > This really is on the ROOT folk to make their fork compatible with the; Python ecosphere, so file a bug report with them. There was a discussion on ROOT forum in 2019 (https://root-forum.cern.ch/t/how-to-start-pypy-with-root-module), but it didn't give any direct solution to the issue, and maybe something has changed since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8110
https://github.com/root-project/root/pull/8111:457,Integrability,depend,dependsOn,457,"On MacOS this simple code using std::sort of RooAbsArg crashed because std::sort MacOS implementation goes to element outside of the collection. ; This simple code reproduced the problem by crashing on MacOS. ```; std::vector<RooAbsArg*> v;; int n = 38;. for (int i = 0; i < n; ++i) {; TString name = TString::Format(""a_%d"",i);; v.push_back( new RooRealVar (name, name, 10,0,20) );; }. std::sort(v.begin(), v.end(), [](RooAbsArg*a, RooAbsArg*b) { return a->dependsOn(*b); } );; ```; ; The PR with the simple check avoid a crash observed running the example in ; https://root-forum.cern.ch/t/upper-limit-for-signal-strength-on-off-problem-multiple-independent-runs/44657",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8111
https://github.com/root-project/root/pull/8111:514,Safety,avoid,avoid,514,"On MacOS this simple code using std::sort of RooAbsArg crashed because std::sort MacOS implementation goes to element outside of the collection. ; This simple code reproduced the problem by crashing on MacOS. ```; std::vector<RooAbsArg*> v;; int n = 38;. for (int i = 0; i < n; ++i) {; TString name = TString::Format(""a_%d"",i);; v.push_back( new RooRealVar (name, name, 10,0,20) );; }. std::sort(v.begin(), v.end(), [](RooAbsArg*a, RooAbsArg*b) { return a->dependsOn(*b); } );; ```; ; The PR with the simple check avoid a crash observed running the example in ; https://root-forum.cern.ch/t/upper-limit-for-signal-strength-on-off-problem-multiple-independent-runs/44657",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8111
https://github.com/root-project/root/pull/8111:14,Usability,simpl,simple,14,"On MacOS this simple code using std::sort of RooAbsArg crashed because std::sort MacOS implementation goes to element outside of the collection. ; This simple code reproduced the problem by crashing on MacOS. ```; std::vector<RooAbsArg*> v;; int n = 38;. for (int i = 0; i < n; ++i) {; TString name = TString::Format(""a_%d"",i);; v.push_back( new RooRealVar (name, name, 10,0,20) );; }. std::sort(v.begin(), v.end(), [](RooAbsArg*a, RooAbsArg*b) { return a->dependsOn(*b); } );; ```; ; The PR with the simple check avoid a crash observed running the example in ; https://root-forum.cern.ch/t/upper-limit-for-signal-strength-on-off-problem-multiple-independent-runs/44657",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8111
https://github.com/root-project/root/pull/8111:152,Usability,simpl,simple,152,"On MacOS this simple code using std::sort of RooAbsArg crashed because std::sort MacOS implementation goes to element outside of the collection. ; This simple code reproduced the problem by crashing on MacOS. ```; std::vector<RooAbsArg*> v;; int n = 38;. for (int i = 0; i < n; ++i) {; TString name = TString::Format(""a_%d"",i);; v.push_back( new RooRealVar (name, name, 10,0,20) );; }. std::sort(v.begin(), v.end(), [](RooAbsArg*a, RooAbsArg*b) { return a->dependsOn(*b); } );; ```; ; The PR with the simple check avoid a crash observed running the example in ; https://root-forum.cern.ch/t/upper-limit-for-signal-strength-on-off-problem-multiple-independent-runs/44657",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8111
https://github.com/root-project/root/pull/8111:501,Usability,simpl,simple,501,"On MacOS this simple code using std::sort of RooAbsArg crashed because std::sort MacOS implementation goes to element outside of the collection. ; This simple code reproduced the problem by crashing on MacOS. ```; std::vector<RooAbsArg*> v;; int n = 38;. for (int i = 0; i < n; ++i) {; TString name = TString::Format(""a_%d"",i);; v.push_back( new RooRealVar (name, name, 10,0,20) );; }. std::sort(v.begin(), v.end(), [](RooAbsArg*a, RooAbsArg*b) { return a->dependsOn(*b); } );; ```; ; The PR with the simple check avoid a crash observed running the example in ; https://root-forum.cern.ch/t/upper-limit-for-signal-strength-on-off-problem-multiple-independent-runs/44657",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8111
https://github.com/root-project/root/issues/8112:1032,Deployability,upgrade,upgraded,1032,"### Describe the bug. To support CUDA `__constant__` memory and `__device__` points [CUDA separate compiling](https://developer.nvidia.com/blog/separate-compilation-linking-cuda-device-code/) is necessary, which will be enabled by the flag `-fgpu-rdc`. Related issues:; * https://github.com/root-project/cling/issues/396; * https://github.com/root-project/cling/issues/395. Unfortunately, there is a bug in Clang 9, which disturbs the function. A bug fix is implemented in the current Clang 13-dev branch: https://github.com/llvm/llvm-project/commit/b008ea304d438f0aa818918caceb3bd864412304#diff-4d89d3c6d6aa954d6d77426520d881efefc4eb631dbe25730c4599c0b5150ec6 and https://github.com/llvm/llvm-project/commit/0b2af1a2889423bb797856841ac81cf10d01c696 . Thanks to @hahnjo for finding it. @hahnjo, @vgvassilev and I have already discussed in the issue https://github.com/root-project/cling/issues/396 that a backport could cause a lot of work because of AMD's HIP development. On the other hand, it will take some time before Cling is upgraded to LLVM 13. Therefore, backporting this fix would be very useful so that I can continue my work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8112
https://github.com/root-project/root/pull/8113:174,Availability,error,errors,174,"Allow users to adjust the number of entries per cluster and the number of elements per page using `RNTupleWriteOptions`. ; I also took the opportunity to fix some whitespace errors in `RNTupleOptions.hxx`. Fixes #7853. Usage (see tests as well): ; ```cpp; RNTupleWriteOptions opt;; opt.SetNClusterEntries(100000);; opt.SetNElementsPerPage(40000);; auto ntuple = RNTupleWriter::Recreate(; std::move(model), ""ntuple"", fileGuard.GetPath(), opt; );; ```. As was pointed out in https://github.com/root-project/root/pull/7112#issue-564081466, there are some `NElementsPerPage` inputs that could cause compression problems (i.e. those where the total page memory is larger than `0xffffff`). Should we have some error checking at the `RNTupleWriteOptions` level? Or maybe this should be considered a bug on the compression side of things. cc @jalopezg-r00t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8113
https://github.com/root-project/root/pull/8113:704,Availability,error,error,704,"Allow users to adjust the number of entries per cluster and the number of elements per page using `RNTupleWriteOptions`. ; I also took the opportunity to fix some whitespace errors in `RNTupleOptions.hxx`. Fixes #7853. Usage (see tests as well): ; ```cpp; RNTupleWriteOptions opt;; opt.SetNClusterEntries(100000);; opt.SetNElementsPerPage(40000);; auto ntuple = RNTupleWriter::Recreate(; std::move(model), ""ntuple"", fileGuard.GetPath(), opt; );; ```. As was pointed out in https://github.com/root-project/root/pull/7112#issue-564081466, there are some `NElementsPerPage` inputs that could cause compression problems (i.e. those where the total page memory is larger than `0xffffff`). Should we have some error checking at the `RNTupleWriteOptions` level? Or maybe this should be considered a bug on the compression side of things. cc @jalopezg-r00t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8113
https://github.com/root-project/root/pull/8113:230,Testability,test,tests,230,"Allow users to adjust the number of entries per cluster and the number of elements per page using `RNTupleWriteOptions`. ; I also took the opportunity to fix some whitespace errors in `RNTupleOptions.hxx`. Fixes #7853. Usage (see tests as well): ; ```cpp; RNTupleWriteOptions opt;; opt.SetNClusterEntries(100000);; opt.SetNElementsPerPage(40000);; auto ntuple = RNTupleWriter::Recreate(; std::move(model), ""ntuple"", fileGuard.GetPath(), opt; );; ```. As was pointed out in https://github.com/root-project/root/pull/7112#issue-564081466, there are some `NElementsPerPage` inputs that could cause compression problems (i.e. those where the total page memory is larger than `0xffffff`). Should we have some error checking at the `RNTupleWriteOptions` level? Or maybe this should be considered a bug on the compression side of things. cc @jalopezg-r00t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8113
https://github.com/root-project/root/pull/8114:467,Energy Efficiency,Reduce,Reduce,467,"With this change, the method invocation request is received directly from civetweb server thread. The changes are executed through REveManager thread execution thread that processes. The REveManger::DoRedraw() method bacame depreciated. It is now possible to apply changes without a client interface after the connection is created. This example is implemented in autoplay of events in tutorials/eve7/event_demo.C. Other changes:; * Fix memory leaks in the client; * Reduce calls of TSystem::ProcessLine; * Add structure to transfer server messages to client log (REveLog).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8114
https://github.com/root-project/root/pull/8114:290,Integrability,interface,interface,290,"With this change, the method invocation request is received directly from civetweb server thread. The changes are executed through REveManager thread execution thread that processes. The REveManger::DoRedraw() method bacame depreciated. It is now possible to apply changes without a client interface after the connection is created. This example is implemented in autoplay of events in tutorials/eve7/event_demo.C. Other changes:; * Fix memory leaks in the client; * Reduce calls of TSystem::ProcessLine; * Add structure to transfer server messages to client log (REveLog).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8114
https://github.com/root-project/root/pull/8114:540,Integrability,message,messages,540,"With this change, the method invocation request is received directly from civetweb server thread. The changes are executed through REveManager thread execution thread that processes. The REveManger::DoRedraw() method bacame depreciated. It is now possible to apply changes without a client interface after the connection is created. This example is implemented in autoplay of events in tutorials/eve7/event_demo.C. Other changes:; * Fix memory leaks in the client; * Reduce calls of TSystem::ProcessLine; * Add structure to transfer server messages to client log (REveLog).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8114
https://github.com/root-project/root/pull/8114:559,Testability,log,log,559,"With this change, the method invocation request is received directly from civetweb server thread. The changes are executed through REveManager thread execution thread that processes. The REveManger::DoRedraw() method bacame depreciated. It is now possible to apply changes without a client interface after the connection is created. This example is implemented in autoplay of events in tutorials/eve7/event_demo.C. Other changes:; * Fix memory leaks in the client; * Reduce calls of TSystem::ProcessLine; * Add structure to transfer server messages to client log (REveLog).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8114
https://github.com/root-project/root/pull/8119:44,Deployability,install,installation,44,This is a minor clarification in the README installation instructions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8119
https://github.com/root-project/root/issues/8120:345,Safety,avoid,avoid,345,"- [ x] Checked for duplicates; ### Describe the bug; [Docs](https://root.cern/doc/master/classRooAbsCollection.html#a7427c51d759748b0fdc5c0164c0c2187); When using addOwned, the collection takes ownership of the object. When called from Python, ownership remains with PyROOT, though, so there's two owners now. A Pythonisation should be added to avoid this. It should include a call such as:; `ROOT.SetOwnership(obj, False)`. ### Expected behavior; Ownership is transferred to the collection. ### To Reproduce; Something like; ```py; coll = ROOT.RooArgSet(); if True:; x = ROOT.RooRealVar('x', 'x', -10, 10); coll.addOwned(x); # Similarly:; coll.addOwned(ROOT.RooRealVar('y', ...)). # Now should be able to touch x in coll without problems; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8120
https://github.com/root-project/root/issues/8123:91,Usability,simpl,simply,91,"It would be very helpful if RooAbsData was able to store an optional associated RooArgSet (simply as a data member?) of global observable values. These should be settable by the user. Once this is added, the methods like 'fitTo' could automatically make use of this set for the global observables. Also it would make sense that 'getParameters' considered these global observables to be observables and so getParameters doesn't return the global observables in the list. Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8123
https://github.com/root-project/root/pull/8124:124,Availability,down,down,124,"Before, cling used the first specialization, which is often incorrect. Instead pass the ""current"" specialization as context down to the relevant functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8124
https://github.com/root-project/root/issues/8125:584,Availability,Down,Download,584,"### Describe the bug; This script produces the following result:. ```; #include ""TCanvas.h""; #include ""TASImage.h"". void test_asimage(); {; new TCanvas(""bmp"",""bmp"");; auto bmp = new TASImage(""./screenshot.bmp"");; bmp->Draw();. new TCanvas(""png"",""png"");; auto png = new TASImage(""./screenshot.png"");; png->Draw();; }; ```. ![image](https://user-images.githubusercontent.com/10653970/117480572-12ae4a00-af62-11eb-936b-0f8138e05af4.png). ### Expected behavior; Both PNG and BMP pictures should be the same. the left picture looks like it has some byte misalignment. ### To Reproduce; 1. Download the screenshot files [screenshots.zip](https://github.com/root-project/root/files/6443072/screenshots.zip); 2. Run the code snippet above. ### Setup; ROOT 6.22/02 on Ubuntu18",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8125
https://github.com/root-project/root/issues/8126:417,Safety,abort,abort,417,"### Describe the bug; Using the TGCommandLinePlugin, if I type ""T"" or ""new TBr"" and press tab for autocompletion, I get a crash:. ```; /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2330: void clang::DeclContext::setMustBuildLookupTable(): Assertion `this == getPrimaryContext() && ""should only be called on primary context""' failed. 1 __GI_raise raise.c 51 0x7ffff6176fb7 ; 2 __GI_abort abort.c 79 0x7ffff6178921 ; 3 __assert_fail_base assert.c 92 0x7ffff616848a ; 4 __GI___assert_fail assert.c 101 0x7ffff6168502 ; 5 (anonymous namespace)::ClingASTImporter::Imported(clang::Decl *, clang::Decl *) 0x7fffea0cd56c ; 6 clang::ASTImporter::Import(clang::Decl *) 0x7fffec671055 ; 7 cling::ExternalInterpreterSource::ImportDecl(clang::Decl *, clang::DeclarationName&, clang::DeclarationName&, clang::DeclContext const *) 0x7fffea0cd5f4 ; 8 cling::ExternalInterpreterSource::completeVisibleDeclsMap(clang::DeclContext const *) 0x7fffea0ce4ac ; 9 LookupVisibleDecls(clang::DeclContext *, clang::LookupResult&, bool, bool, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool, bool) [clone .part.1455] 0x7fffead875c6 ; 10 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92949 ; 11 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92540 ; 12 clang::Sema::LookupVisibleDecls(clang::Scope *, clang::Sema::LookupNameKind, clang::VisibleDeclConsumer&, bool, bool) 0x7fffead9319b ; 13 clang::Sema::CodeCompleteOrdinaryName(clang::Scope *, clang::Sema::ParserCompletionContext) 0x7fffeaa73a0f ; 14 clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt *, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation *, clang::Parser::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8126
https://github.com/root-project/root/issues/8126:2827,Security,Access,AccessSpecifier,2827,"mous namespace)::VisibleDeclsRecord&, bool, bool) [clone .part.1455] 0x7fffead875c6 ; 10 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92949 ; 11 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92540 ; 12 clang::Sema::LookupVisibleDecls(clang::Scope *, clang::Sema::LookupNameKind, clang::VisibleDeclConsumer&, bool, bool) 0x7fffead9319b ; 13 clang::Sema::CodeCompleteOrdinaryName(clang::Scope *, clang::Sema::ParserCompletionContext) 0x7fffeaa73a0f ; 14 clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt *, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation *, clang::Parser::ParsedAttributesWithRange&) 0x7fffea81ba2d ; 15 clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt *, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation *) 0x7fffea81c2e9 ; 16 clang::Parser::ParseCompoundStatementBody(bool) 0x7fffea81f6a9 ; 17 clang::Parser::ParseFunctionStatementBody(clang::Decl *, clang::Parser::ParseScope&) 0x7fffea8219cb ; 18 clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList *) 0x7fffea83fbe2 ; 19 clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation *, clang::Parser::ForRangeInit *) 0x7fffea7bd7de ; 20 clang::Parser::ParseDeclOrFunctionDefInternal(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) 0x7fffea83d081 ; 21 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec *, clang::AccessSpecifier) [clone .part.262] 0x7fffea83d6a1 ; 22 clang::Parser::ParseExternalDecla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8126
https://github.com/root-project/root/issues/8126:2992,Security,Access,AccessSpecifier,2992,"mous namespace)::VisibleDeclsRecord&, bool, bool) [clone .part.1455] 0x7fffead875c6 ; 10 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92949 ; 11 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92540 ; 12 clang::Sema::LookupVisibleDecls(clang::Scope *, clang::Sema::LookupNameKind, clang::VisibleDeclConsumer&, bool, bool) 0x7fffead9319b ; 13 clang::Sema::CodeCompleteOrdinaryName(clang::Scope *, clang::Sema::ParserCompletionContext) 0x7fffeaa73a0f ; 14 clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt *, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation *, clang::Parser::ParsedAttributesWithRange&) 0x7fffea81ba2d ; 15 clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt *, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation *) 0x7fffea81c2e9 ; 16 clang::Parser::ParseCompoundStatementBody(bool) 0x7fffea81f6a9 ; 17 clang::Parser::ParseFunctionStatementBody(clang::Decl *, clang::Parser::ParseScope&) 0x7fffea8219cb ; 18 clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList *) 0x7fffea83fbe2 ; 19 clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation *, clang::Parser::ForRangeInit *) 0x7fffea7bd7de ; 20 clang::Parser::ParseDeclOrFunctionDefInternal(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) 0x7fffea83d081 ; 21 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec *, clang::AccessSpecifier) [clone .part.262] 0x7fffea83d6a1 ; 22 clang::Parser::ParseExternalDecla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8126
https://github.com/root-project/root/issues/8126:269,Testability,Assert,Assertion,269,"### Describe the bug; Using the TGCommandLinePlugin, if I type ""T"" or ""new TBr"" and press tab for autocompletion, I get a crash:. ```; /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2330: void clang::DeclContext::setMustBuildLookupTable(): Assertion `this == getPrimaryContext() && ""should only be called on primary context""' failed. 1 __GI_raise raise.c 51 0x7ffff6176fb7 ; 2 __GI_abort abort.c 79 0x7ffff6178921 ; 3 __assert_fail_base assert.c 92 0x7ffff616848a ; 4 __GI___assert_fail assert.c 101 0x7ffff6168502 ; 5 (anonymous namespace)::ClingASTImporter::Imported(clang::Decl *, clang::Decl *) 0x7fffea0cd56c ; 6 clang::ASTImporter::Import(clang::Decl *) 0x7fffec671055 ; 7 cling::ExternalInterpreterSource::ImportDecl(clang::Decl *, clang::DeclarationName&, clang::DeclarationName&, clang::DeclContext const *) 0x7fffea0cd5f4 ; 8 cling::ExternalInterpreterSource::completeVisibleDeclsMap(clang::DeclContext const *) 0x7fffea0ce4ac ; 9 LookupVisibleDecls(clang::DeclContext *, clang::LookupResult&, bool, bool, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool, bool) [clone .part.1455] 0x7fffead875c6 ; 10 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92949 ; 11 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92540 ; 12 clang::Sema::LookupVisibleDecls(clang::Scope *, clang::Sema::LookupNameKind, clang::VisibleDeclConsumer&, bool, bool) 0x7fffead9319b ; 13 clang::Sema::CodeCompleteOrdinaryName(clang::Scope *, clang::Sema::ParserCompletionContext) 0x7fffeaa73a0f ; 14 clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt *, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation *, clang::Parser::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8126
https://github.com/root-project/root/issues/8126:466,Testability,assert,assert,466,"### Describe the bug; Using the TGCommandLinePlugin, if I type ""T"" or ""new TBr"" and press tab for autocompletion, I get a crash:. ```; /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2330: void clang::DeclContext::setMustBuildLookupTable(): Assertion `this == getPrimaryContext() && ""should only be called on primary context""' failed. 1 __GI_raise raise.c 51 0x7ffff6176fb7 ; 2 __GI_abort abort.c 79 0x7ffff6178921 ; 3 __assert_fail_base assert.c 92 0x7ffff616848a ; 4 __GI___assert_fail assert.c 101 0x7ffff6168502 ; 5 (anonymous namespace)::ClingASTImporter::Imported(clang::Decl *, clang::Decl *) 0x7fffea0cd56c ; 6 clang::ASTImporter::Import(clang::Decl *) 0x7fffec671055 ; 7 cling::ExternalInterpreterSource::ImportDecl(clang::Decl *, clang::DeclarationName&, clang::DeclarationName&, clang::DeclContext const *) 0x7fffea0cd5f4 ; 8 cling::ExternalInterpreterSource::completeVisibleDeclsMap(clang::DeclContext const *) 0x7fffea0ce4ac ; 9 LookupVisibleDecls(clang::DeclContext *, clang::LookupResult&, bool, bool, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool, bool) [clone .part.1455] 0x7fffead875c6 ; 10 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92949 ; 11 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92540 ; 12 clang::Sema::LookupVisibleDecls(clang::Scope *, clang::Sema::LookupNameKind, clang::VisibleDeclConsumer&, bool, bool) 0x7fffead9319b ; 13 clang::Sema::CodeCompleteOrdinaryName(clang::Scope *, clang::Sema::ParserCompletionContext) 0x7fffeaa73a0f ; 14 clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt *, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation *, clang::Parser::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8126
https://github.com/root-project/root/issues/8126:516,Testability,assert,assert,516,"### Describe the bug; Using the TGCommandLinePlugin, if I type ""T"" or ""new TBr"" and press tab for autocompletion, I get a crash:. ```; /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2330: void clang::DeclContext::setMustBuildLookupTable(): Assertion `this == getPrimaryContext() && ""should only be called on primary context""' failed. 1 __GI_raise raise.c 51 0x7ffff6176fb7 ; 2 __GI_abort abort.c 79 0x7ffff6178921 ; 3 __assert_fail_base assert.c 92 0x7ffff616848a ; 4 __GI___assert_fail assert.c 101 0x7ffff6168502 ; 5 (anonymous namespace)::ClingASTImporter::Imported(clang::Decl *, clang::Decl *) 0x7fffea0cd56c ; 6 clang::ASTImporter::Import(clang::Decl *) 0x7fffec671055 ; 7 cling::ExternalInterpreterSource::ImportDecl(clang::Decl *, clang::DeclarationName&, clang::DeclarationName&, clang::DeclContext const *) 0x7fffea0cd5f4 ; 8 cling::ExternalInterpreterSource::completeVisibleDeclsMap(clang::DeclContext const *) 0x7fffea0ce4ac ; 9 LookupVisibleDecls(clang::DeclContext *, clang::LookupResult&, bool, bool, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool, bool) [clone .part.1455] 0x7fffead875c6 ; 10 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92949 ; 11 LookupVisibleDecls(clang::Scope *, clang::LookupResult&, (anonymous namespace)::UnqualUsingDirectiveSet&, clang::VisibleDeclConsumer&, (anonymous namespace)::VisibleDeclsRecord&, bool) 0x7fffead92540 ; 12 clang::Sema::LookupVisibleDecls(clang::Scope *, clang::Sema::LookupNameKind, clang::VisibleDeclConsumer&, bool, bool) 0x7fffead9319b ; 13 clang::Sema::CodeCompleteOrdinaryName(clang::Scope *, clang::Sema::ParserCompletionContext) 0x7fffeaa73a0f ; 14 clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt *, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation *, clang::Parser::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8126
https://github.com/root-project/root/issues/8127:397,Modifiability,plugin,plugin,397,"### Explain what you would like to see improved; In TGCommandLinePlugin, pressing tab shows a list of options. It would be nice that, if there is only one option, it gets automatically 'pasted' into the text entry. ### Optional: share how it could be improved; Parse and copy the content of the suggested code to the current text entry. (Removing the #Double_t stuff). ### To Reproduce; 1. On the plugin, type TMath::QuietN and press tab.; 2. [#Double_t#]QuietNaN() is suggested as single option.; 3. Ideally, the text entry would be now: TMath::QuietNaN() as it happens in a normal ROOT Terminal for the analogous case. ### Setup; ROOT 6.25/01",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8127
https://github.com/root-project/root/issues/8128:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Compiling ROOT with Python 3.9 produces a large number of deprecation warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8128
https://github.com/root-project/root/issues/8129:1452,Deployability,update,updated,1452,"e known. Here are some examples of g++'s output. I have not checked whether these are false positives, but in case they are, maybe we can suppress the warnings locally:; ```; /home/bgruber/root/io/io/src/TStreamerInfo.cxx: In member function ‘virtual void TStreamerInfo::BuildCheck(TFile*, Bool_t)’:; /home/bgruber/root/io/io/src/TStreamerInfo.cxx:1112:29: warning: ‘this’ pointer is null [-Wnonnull]; 1112 | Warning(""BuildCheck"", ""\n\; | ~~~~~~~^~~~~~~~~~~~~~~~~~~; 1113 | The StreamerInfo from %s does not match existing one (%s:%d)\n\; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1114 | The existing one has not been used yet and will be discarded.\n\; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1115 | Reading should work properly, however writing object of\n\; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1116 | type %s will not work properly. Most likely the version number\n\; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1117 | of the class was not properly updated [See ClassDef(%s,%d)]."",; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1118 | file->GetName(), GetName(), fClassVersion, GetName(), GetName(), fClassVersion);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```. ```; /home/bgruber/root/net/davix/src/RRawFileDavix.cxx: In member function ‘virtual void ROOT::Internal::RRawFileDavix::ReadVImpl(ROOT::Internal::RRawFile::RIOVec*, unsigned int)’:; /home/bgruber/root/net/davix/src/RRawFileDavix.cxx:104:37: warning: ‘<unknown>’ may be used uninitialized [-Wmaybe-uninitialized]; 104 | auto ret = fFileDes->pos.preadVec(fFileDes->fd, in, out, nReq, &davixErr);; | ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /usr/include/davix/davix.hpp:70,; from /home/bgruber/root/net/davix/src/RRawFileDavix.cxx:19:; /usr/include/davix/file/davposix.hpp:353:17: note: by argument 3 of type ‘const Davix::D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8129
https://github.com/root-project/root/issues/8129:2964,Modifiability,variab,variable,2964,"awFileDavix.cxx:104:37: warning: ‘<unknown>’ may be used uninitialized [-Wmaybe-uninitialized]; 104 | auto ret = fFileDes->pos.preadVec(fFileDes->fd, in, out, nReq, &davixErr);; | ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /usr/include/davix/davix.hpp:70,; from /home/bgruber/root/net/davix/src/RRawFileDavix.cxx:19:; /usr/include/davix/file/davposix.hpp:353:17: note: by argument 3 of type ‘const Davix::DavIOVecInput*’ to ‘dav_ssize_t Davix::DavPosix::preadVec(DAVIX_FD*, const Davix::DavIOVecInput*, Davix::DavIOVecOuput*, dav_size_t, Davix::DavixError**)’ declared here; 353 | dav_ssize_t preadVec(DAVIX_FD* fd, const DavIOVecInput * input_vec,; | ^~~~~~~~; ```. ```; /home/bgruber/root/graf2d/x11/src/GX11Gui.cxx:182:14: warning: ‘void operator delete(void*, std::size_t)’ called on a pointer to an unallocated object ‘1’ [-Wfree-nonheap-object]; 182 | delete kil;; | ^~~; [ 79%] Linking CXX shared; ```. A few shading warnings, where a parameter name shadows a global variable in the python headers. ```; In member function ‘T TF1::operator()(const T*, const Double_t*) [with T = double]’,; inlined from ‘virtual Double_t TF2::FindMinMax(Double_t*, Bool_t) const’ at /home/bgruber/root/hist/hist/src/TF2.cxx:374:23:; /home/bgruber/root/hist/hist/inc/TF1.h:764:18: warning: ‘xx’ may be used uninitialized [-Wmaybe-uninitialized]; 764 | return EvalPar(x, params);; | ~~~~~~~^~~~~~~~~~~; /home/bgruber/root/hist/hist/inc/TF1.h: In member function ‘virtual Double_t TF2::FindMinMax(Double_t*, Bool_t) const’:; /home/bgruber/root/hist/hist/inc/TF1.h:764:18: note: by argument 2 of type ‘const Double_t*’ {aka ‘const double*’} to ‘Double_t (TF1::)(const Double_t*, const Double_t*)’ {aka ‘double (TF1::)(const double*, const double*)’}; /home/bgruber/root/hist/hist/src/TF2.cxx:349:13: note: ‘xx’ declared here; 349 | Double_t xx[2];; | ^~; ```. ```; /home/bgruber/root/graf2d/graf/src/TText.cxx: In member function ‘virtual void TText::Copy(TObject&) const",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8129
https://github.com/root-project/root/issues/8129:4402,Safety,Safe,SafeDelete,4402,"~~~; /home/bgruber/root/hist/hist/inc/TF1.h: In member function ‘virtual Double_t TF2::FindMinMax(Double_t*, Bool_t) const’:; /home/bgruber/root/hist/hist/inc/TF1.h:764:18: note: by argument 2 of type ‘const Double_t*’ {aka ‘const double*’} to ‘Double_t (TF1::)(const Double_t*, const Double_t*)’ {aka ‘double (TF1::)(const double*, const double*)’}; /home/bgruber/root/hist/hist/src/TF2.cxx:349:13: note: ‘xx’ declared here; 349 | Double_t xx[2];; | ^~; ```. ```; /home/bgruber/root/graf2d/graf/src/TText.cxx: In member function ‘virtual void TText::Copy(TObject&) const’:; /home/bgruber/root/graf2d/graf/src/TText.cxx:117:72: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘obj’ with nonzero offset 112 [-Wfree-nonheap-object]; 117 | delete reinterpret_cast<std::wstring*>(&((TText&)obj).fWcsTitle);; | ^; ```. ```; /home/bgruber/root/geom/geom/src/TGeoManager.cxx:521:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; 521 | if (fHashVolumes) fHashVolumes->Clear(""nodelete""); SafeDelete(fHashVolumes);; | ^~; ...; /home/bgruber/root/core/foundation/inc/ROOT/RConfig.hxx:534:26: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’; 534 | # define SafeDelete(p) { if (p) { delete p; p = 0; } }; | ^; ```. Several `may be used uninitialized` warnings in `/home/bgruber/root/graf2d/asimage/src/TASImage.cxx` and `/home/bgruber/root/gui/gui/src/TGNumberEntry.cxx`. ```; In function ‘char* strncpy(char*, const char*, size_t)’,; inlined from ‘TGTextLine::TGTextLine(const char*)’ at /home/bgruber/root/gui/gui/src/TGText.cxx:74:14:; /usr/include/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ output truncated before terminating nul copying as many bytes from a string as its length; -Wstringop-truncation]; 95 | return __builtin___strncpy_chk (__dest, __src, __len,; | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; 96 | __glibc_objsize (__dest));; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8129
https://github.com/root-project/root/issues/8129:4619,Safety,Safe,SafeDelete,4619," {aka ‘const double*’} to ‘Double_t (TF1::)(const Double_t*, const Double_t*)’ {aka ‘double (TF1::)(const double*, const double*)’}; /home/bgruber/root/hist/hist/src/TF2.cxx:349:13: note: ‘xx’ declared here; 349 | Double_t xx[2];; | ^~; ```. ```; /home/bgruber/root/graf2d/graf/src/TText.cxx: In member function ‘virtual void TText::Copy(TObject&) const’:; /home/bgruber/root/graf2d/graf/src/TText.cxx:117:72: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘obj’ with nonzero offset 112 [-Wfree-nonheap-object]; 117 | delete reinterpret_cast<std::wstring*>(&((TText&)obj).fWcsTitle);; | ^; ```. ```; /home/bgruber/root/geom/geom/src/TGeoManager.cxx:521:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; 521 | if (fHashVolumes) fHashVolumes->Clear(""nodelete""); SafeDelete(fHashVolumes);; | ^~; ...; /home/bgruber/root/core/foundation/inc/ROOT/RConfig.hxx:534:26: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’; 534 | # define SafeDelete(p) { if (p) { delete p; p = 0; } }; | ^; ```. Several `may be used uninitialized` warnings in `/home/bgruber/root/graf2d/asimage/src/TASImage.cxx` and `/home/bgruber/root/gui/gui/src/TGNumberEntry.cxx`. ```; In function ‘char* strncpy(char*, const char*, size_t)’,; inlined from ‘TGTextLine::TGTextLine(const char*)’ at /home/bgruber/root/gui/gui/src/TGText.cxx:74:14:; /usr/include/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ output truncated before terminating nul copying as many bytes from a string as its length; -Wstringop-truncation]; 95 | return __builtin___strncpy_chk (__dest, __src, __len,; | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; 96 | __glibc_objsize (__dest));; | ~~~~~~~~~~~~~~~~~~~~~~~~~; /home/bgruber/root/gui/gui/src/TGText.cxx: In constructor ‘TGTextLine::TGTextLine(const char*)’:; /home/bgruber/root/gui/gui/src/TGText.cxx:72:23: note: length computed here; 72 | fLength =",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8129
https://github.com/root-project/root/issues/8129:4383,Usability,Clear,Clear,4383,"~~~; /home/bgruber/root/hist/hist/inc/TF1.h: In member function ‘virtual Double_t TF2::FindMinMax(Double_t*, Bool_t) const’:; /home/bgruber/root/hist/hist/inc/TF1.h:764:18: note: by argument 2 of type ‘const Double_t*’ {aka ‘const double*’} to ‘Double_t (TF1::)(const Double_t*, const Double_t*)’ {aka ‘double (TF1::)(const double*, const double*)’}; /home/bgruber/root/hist/hist/src/TF2.cxx:349:13: note: ‘xx’ declared here; 349 | Double_t xx[2];; | ^~; ```. ```; /home/bgruber/root/graf2d/graf/src/TText.cxx: In member function ‘virtual void TText::Copy(TObject&) const’:; /home/bgruber/root/graf2d/graf/src/TText.cxx:117:72: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘obj’ with nonzero offset 112 [-Wfree-nonheap-object]; 117 | delete reinterpret_cast<std::wstring*>(&((TText&)obj).fWcsTitle);; | ^; ```. ```; /home/bgruber/root/geom/geom/src/TGeoManager.cxx:521:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; 521 | if (fHashVolumes) fHashVolumes->Clear(""nodelete""); SafeDelete(fHashVolumes);; | ^~; ...; /home/bgruber/root/core/foundation/inc/ROOT/RConfig.hxx:534:26: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’; 534 | # define SafeDelete(p) { if (p) { delete p; p = 0; } }; | ^; ```. Several `may be used uninitialized` warnings in `/home/bgruber/root/graf2d/asimage/src/TASImage.cxx` and `/home/bgruber/root/gui/gui/src/TGNumberEntry.cxx`. ```; In function ‘char* strncpy(char*, const char*, size_t)’,; inlined from ‘TGTextLine::TGTextLine(const char*)’ at /home/bgruber/root/gui/gui/src/TGText.cxx:74:14:; /usr/include/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ output truncated before terminating nul copying as many bytes from a string as its length; -Wstringop-truncation]; 95 | return __builtin___strncpy_chk (__dest, __src, __len,; | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; 96 | __glibc_objsize (__dest));; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8129
https://github.com/root-project/root/pull/8132:21,Performance,load,loaded,21,Checks if JSROOT was loaded before,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8132
https://github.com/root-project/root/issues/8136:8,Security,sanitiz,sanitizer,8,Address sanitizer uncovered an unprotected `memcpy` happening here:; https://github.com/root-project/root/blob/08cbc9bfd363f69a8be02f07e2330c7f44e0b420/core/base/src/TString.cxx#L127-L136. Invoked from here:; https://github.com/root-project/root/blob/08cbc9bfd363f69a8be02f07e2330c7f44e0b420/hist/hist/src/TF1.cxx#L535. Note that it's always 5 characters being copied from the incoming string `formula`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8136
https://github.com/root-project/root/pull/8138:49,Testability,log,logs,49,"The `Minimization` topic appears a lot in RooFit logs, so it would be nice to fix this typo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8138
https://github.com/root-project/root/issues/8141:323,Availability,Error,Error,323,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8141
https://github.com/root-project/root/issues/8141:349,Availability,Error,Error,349,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8141
https://github.com/root-project/root/issues/8141:1240,Availability,down,download,1240,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8141
https://github.com/root-project/root/issues/8141:968,Deployability,install,installation,968,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8141
https://github.com/root-project/root/issues/8141:1070,Deployability,install,install,1070,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8141
https://github.com/root-project/root/issues/8141:1475,Deployability,patch,patches,1475,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8141
https://github.com/root-project/root/issues/8141:1635,Integrability,depend,depending,1635,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8141
https://github.com/root-project/root/issues/8141:799,Testability,log,logic,799,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8141
https://github.com/root-project/root/issues/8141:676,Usability,simpl,simply,676,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8141
https://github.com/root-project/root/pull/8142:42,Safety,avoid,avoided,42,"Creating RooArgSets on the heap should be avoided. The existing; `RooAbsArg::getParameters/Observables` created a RooArgSet calling `operator new`.; This commit adds an overload of `RooAbsArg::getParameters/Observables` that takes an; output parameter such that the output RooArgSet can also be created on; the stack. Using these new methods, a memory leak in `RooAbsReal::evaluateSpan` is fixed. This leak was recently introduced in PR https://github.com/root-project/root/pull/7742 and backported to 6.24. Therefore, this fix should also be backported to 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8142
https://github.com/root-project/root/issues/8145:379,Availability,error,error,379,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:500,Availability,Error,Error,500,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:662,Availability,error,error,662,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1159,Availability,Error,Error,1159,"..; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:88,Deployability,Release,Release,88,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:277,Deployability,Release,Release,277,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:559,Deployability,Release,Release,559,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:748,Deployability,Release,Release,748,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1321,Deployability,Release,Release,1321,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1441,Deployability,Release,Release,1441,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1563,Deployability,Release,Release,1563,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1979,Deployability,Release,Release,1979,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:2214,Deployability,Release,Release,2214,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:651,Integrability,message,message,651,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:119,Performance,perform,performance-,119,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:308,Performance,perform,performance-,308,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:590,Performance,perform,performance-,590,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:779,Performance,perform,performance-,779,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1352,Performance,perform,performance-,1352,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1472,Performance,perform,performance-,1472,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1594,Performance,perform,performance-,1594,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:2010,Performance,perform,performance-,2010,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:2245,Performance,perform,performance-,2245,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:68,Testability,benchmark,benchmark,68,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:257,Testability,benchmark,benchmark,257,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:539,Testability,benchmark,benchmark,539,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:728,Testability,benchmark,benchmark,728,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1301,Testability,benchmark,benchmark,1301,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1421,Testability,benchmark,benchmark,1421,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1543,Testability,benchmark,benchmark,1543,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:1959,Testability,benchmark,benchmark,1959,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8145:2189,Testability,benchmark,benchmark,2189,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8145
https://github.com/root-project/root/issues/8148:110,Usability,clear,clearly,110,There is long-standing issue https://sft.its.cern.ch/jira/browse/ROOT-7530. As intermediate solution one must clearly state current limitations in class docu.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8148
https://github.com/root-project/root/pull/8151:237,Safety,avoid,avoiding,237,"The function `RooAbsPdf::expectedEvents(const RooArgSet &)` doesn't have; to be reimplemented in the RooAbsPdf child classes, because it should; always redirect to `RooAbsPdf::expectedEvents(const RooArgSet *)`. In this way, we are also avoiding a virtual function call. The second PR is this commit does some modernization of `RooAddPdf::expectedEvents`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8151
https://github.com/root-project/root/issues/8152:594,Availability,Failure,Failure,594,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. Cannot create `ROOT.TF1` from python function in ROOT v6.25/01 (dev3python2 LCG slot) i tworks for dev3 slot, but nor for dev2python2 . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Failure to create `ROOT.TF1` bject from python function. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; it should work both for python2 and python3 . ### To Reproduce. ```; from __future__ import print_function; import ROOT, sys, math . print( 'Python: ', sys.version_info ); print( 'ROOT: ', ROOT.gROOT.GetVersion() ). def fun ( x,*_ ): return math.sin(x[0])/x[0] . f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); f1.Draw (); ```. as output one gets: . ```; Traceback (most recent call last):; File ""./ostap/build/tst1.py"", line 10, in <module>; f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); TypeError: Template method resolution failed:; none of the 8 overloaded methods succeeded. Full details:; TF1::TF1(const TF1& f1) =>; TypeError: takes at most 1 arguments (4 given); TF1::TF1() =>; TypeError: takes at most 0 arguments (4 given); TF1::TF1(const char* name, const char* formula, double xmin, double xmax, const char* option) =>; TypeError: takes at least 5 arguments (4 given); TF1::TF1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8152
https://github.com/root-project/root/issues/8152:3222,Availability,down,download,3222,"F1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError: could not convert argument 2 (expected string or Unicode object, function found); TF1::TF1(const char* name, ROOT::Math::ParamFunctorTempl<double> f, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(Double_t*,Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(const Double_t*,const Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; Failed to instantiate ""TF1(std::string,function,int,double)""; ``` . <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. dev3ptython2 LCG slot (ROOT v6.25/01) ; 2. lxplus.cern.ch ; 3. ; ```; ( source /cvmfs/sft.cern.ch/lcg/views/LCG_100/${CMTCONFIG}/setup.sh ; python test.py ); ```. ### Additional context; <!--; Add any other context about the problem here.; -->. It worked for all previous versions of ROOT in all released LCG slots; and it works also for dev3 and decv3python39 LCG slots",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8152
https://github.com/root-project/root/issues/8152:3204,Deployability,install,install,3204,"F1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError: could not convert argument 2 (expected string or Unicode object, function found); TF1::TF1(const char* name, ROOT::Math::ParamFunctorTempl<double> f, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(Double_t*,Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(const Double_t*,const Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; Failed to instantiate ""TF1(std::string,function,int,double)""; ``` . <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. dev3ptython2 LCG slot (ROOT v6.25/01) ; 2. lxplus.cern.ch ; 3. ; ```; ( source /cvmfs/sft.cern.ch/lcg/views/LCG_100/${CMTCONFIG}/setup.sh ; python test.py ); ```. ### Additional context; <!--; Add any other context about the problem here.; -->. It worked for all previous versions of ROOT in all released LCG slots; and it works also for dev3 and decv3python39 LCG slots",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8152
https://github.com/root-project/root/issues/8152:3561,Deployability,release,released,3561,"F1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError: could not convert argument 2 (expected string or Unicode object, function found); TF1::TF1(const char* name, ROOT::Math::ParamFunctorTempl<double> f, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(Double_t*,Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(const Double_t*,const Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; Failed to instantiate ""TF1(std::string,function,int,double)""; ``` . <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. dev3ptython2 LCG slot (ROOT v6.25/01) ; 2. lxplus.cern.ch ; 3. ; ```; ( source /cvmfs/sft.cern.ch/lcg/views/LCG_100/${CMTCONFIG}/setup.sh ; python test.py ); ```. ### Additional context; <!--; Add any other context about the problem here.; -->. It worked for all previous versions of ROOT in all released LCG slots; and it works also for dev3 and decv3python39 LCG slots",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8152
https://github.com/root-project/root/issues/8152:3412,Testability,test,test,3412,"F1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError: could not convert argument 2 (expected string or Unicode object, function found); TF1::TF1(const char* name, ROOT::Math::ParamFunctorTempl<double> f, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(Double_t*,Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(const Double_t*,const Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; Failed to instantiate ""TF1(std::string,function,int,double)""; ``` . <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. dev3ptython2 LCG slot (ROOT v6.25/01) ; 2. lxplus.cern.ch ; 3. ; ```; ( source /cvmfs/sft.cern.ch/lcg/views/LCG_100/${CMTCONFIG}/setup.sh ; python test.py ); ```. ### Additional context; <!--; Add any other context about the problem here.; -->. It worked for all previous versions of ROOT in all released LCG slots; and it works also for dev3 and decv3python39 LCG slots",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8152
https://github.com/root-project/root/issues/8152:527,Usability,clear,clear,527,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. Cannot create `ROOT.TF1` from python function in ROOT v6.25/01 (dev3python2 LCG slot) i tworks for dev3 slot, but nor for dev2python2 . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Failure to create `ROOT.TF1` bject from python function. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; it should work both for python2 and python3 . ### To Reproduce. ```; from __future__ import print_function; import ROOT, sys, math . print( 'Python: ', sys.version_info ); print( 'ROOT: ', ROOT.gROOT.GetVersion() ). def fun ( x,*_ ): return math.sin(x[0])/x[0] . f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); f1.Draw (); ```. as output one gets: . ```; Traceback (most recent call last):; File ""./ostap/build/tst1.py"", line 10, in <module>; f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); TypeError: Template method resolution failed:; none of the 8 overloaded methods succeeded. Full details:; TF1::TF1(const TF1& f1) =>; TypeError: takes at most 1 arguments (4 given); TF1::TF1() =>; TypeError: takes at most 0 arguments (4 given); TF1::TF1(const char* name, const char* formula, double xmin, double xmax, const char* option) =>; TypeError: takes at least 5 arguments (4 given); TF1::TF1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8152
https://github.com/root-project/root/issues/8152:682,Usability,clear,clear,682,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. Cannot create `ROOT.TF1` from python function in ROOT v6.25/01 (dev3python2 LCG slot) i tworks for dev3 slot, but nor for dev2python2 . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Failure to create `ROOT.TF1` bject from python function. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; it should work both for python2 and python3 . ### To Reproduce. ```; from __future__ import print_function; import ROOT, sys, math . print( 'Python: ', sys.version_info ); print( 'ROOT: ', ROOT.gROOT.GetVersion() ). def fun ( x,*_ ): return math.sin(x[0])/x[0] . f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); f1.Draw (); ```. as output one gets: . ```; Traceback (most recent call last):; File ""./ostap/build/tst1.py"", line 10, in <module>; f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); TypeError: Template method resolution failed:; none of the 8 overloaded methods succeeded. Full details:; TF1::TF1(const TF1& f1) =>; TypeError: takes at most 1 arguments (4 given); TF1::TF1() =>; TypeError: takes at most 0 arguments (4 given); TF1::TF1(const char* name, const char* formula, double xmin, double xmax, const char* option) =>; TypeError: takes at least 5 arguments (4 given); TF1::TF1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8152
https://github.com/root-project/root/pull/8154:332,Deployability,Update,Update,332,"1. More primitives can be drawn on frame and on pad - RBox, RText, RMarker; 2. Allow to draw axes only with RFrame - no need for dummy histograms; 3. Provide demo in `tutorials/v7/frame.cxx` how onframe drawing is done with and without clipping; 4. Deprecate RPadUserAxis, solve https://github.com/root-project/root/issues/7966; 5. Update v7 tutorials to be able run them after each other while now they used to generate JSON files for docu and tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8154
https://github.com/root-project/root/pull/8154:445,Testability,test,tests,445,"1. More primitives can be drawn on frame and on pad - RBox, RText, RMarker; 2. Allow to draw axes only with RFrame - no need for dummy histograms; 3. Provide demo in `tutorials/v7/frame.cxx` how onframe drawing is done with and without clipping; 4. Deprecate RPadUserAxis, solve https://github.com/root-project/root/issues/7966; 5. Update v7 tutorials to be able run them after each other while now they used to generate JSON files for docu and tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8154
https://github.com/root-project/root/issues/8155:606,Availability,Error,Error,606,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Running our test on SWAN, I found that TFIile can not read anymore a remote ROOT file from github.; The code; `; TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8155
https://github.com/root-project/root/issues/8155:1523,Availability,Error,Error,1523,"/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; TDavixFile* https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; KEY: TTree TreeS;1 TreeS; KEY: TTree TreeB;1 TreeB; KEY: TTree Sig;1 TreeS; KEY: TTree Bkg;1 TreeB; `. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; ROOT Version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8155
https://github.com/root-project/root/issues/8155:2749,Availability,down,download,2749," with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; TDavixFile* https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; KEY: TTree TreeS;1 TreeS; KEY: TTree TreeB;1 TreeB; KEY: TTree Sig;1 TreeS; KEY: TTree Bkg;1 TreeB; `. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; ROOT Version: 6.24/00; Built for linuxx8664gcc on Apr 14 2021, 14:33:50; From tags/v6-24-00@v6-24-00. LCG_100; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8155
https://github.com/root-project/root/issues/8155:2731,Deployability,install,install,2731," with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; TDavixFile* https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; KEY: TTree TreeS;1 TreeS; KEY: TTree TreeB;1 TreeB; KEY: TTree Sig;1 TreeS; KEY: TTree Bkg;1 TreeB; `. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; ROOT Version: 6.24/00; Built for linuxx8664gcc on Apr 14 2021, 14:33:50; From tags/v6-24-00@v6-24-00. LCG_100; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8155
https://github.com/root-project/root/issues/8155:395,Testability,test,test,395,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Running our test on SWAN, I found that TFIile can not read anymore a remote ROOT file from github.; The code; `; TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8155
https://github.com/root-project/root/issues/8155:865,Testability,test,test,865,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Running our test on SWAN, I found that TFIile can not read anymore a remote ROOT file from github.; The code; `; TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8155
https://github.com/root-project/root/issues/8155:1048,Usability,clear,clear,1048,"ps://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Running our test on SWAN, I found that TFIile can not read anymore a remote ROOT file from github.; The code; `; TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8155
https://github.com/root-project/root/issues/8155:1198,Usability,clear,clear,1198,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Running our test on SWAN, I found that TFIile can not read anymore a remote ROOT file from github.; The code; `; TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; TDavixFile* https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; KEY: TTree TreeS;1 TreeS; KEY: TTree TreeB;1 TreeB; KEY: TTree Sig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8155
https://github.com/root-project/root/issues/8157:317,Availability,error,error,317,"### Describe the bug. I booted a CERN Openstack VM with the CentOS7 image. I sourced dev3 on CVMFS, i.e. the LCG stack with ROOT master. In particular:. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc8-opt/setup.sh`. and I tried to import ROOT from Python. When doing so, I observed the following error:. ```; error: entry with relative path at the root level is not discoverable; { 'name': '', 'type': 'directory',; ^~; Error in modulemap.overlay!. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 7 (Thread 0x7f7003fff700 (LWP 1242) ""python""):; #0 0x00007f704d3e3549 in waitpid () from /lib64/libc.so.6; #1 0x00007f704d360f62 in do_system () from /lib64/libc.so.6; #2 0x00007f704d361311 in system () from /lib64/libc.so.6; #3 0x00007f7003163e83 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #4 0x00007f70031667a5 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f6ff7060608 in llvm::vfs::OverlayFileSystem::pushOverlay(llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #7 0x00007f6ff46b3b3c in (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.586] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #8 0x00007f6ff46b45fe in (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #9 0x00007f6ff46b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8157
https://github.com/root-project/root/issues/8157:330,Availability,error,error,330,"### Describe the bug. I booted a CERN Openstack VM with the CentOS7 image. I sourced dev3 on CVMFS, i.e. the LCG stack with ROOT master. In particular:. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc8-opt/setup.sh`. and I tried to import ROOT from Python. When doing so, I observed the following error:. ```; error: entry with relative path at the root level is not discoverable; { 'name': '', 'type': 'directory',; ^~; Error in modulemap.overlay!. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 7 (Thread 0x7f7003fff700 (LWP 1242) ""python""):; #0 0x00007f704d3e3549 in waitpid () from /lib64/libc.so.6; #1 0x00007f704d360f62 in do_system () from /lib64/libc.so.6; #2 0x00007f704d361311 in system () from /lib64/libc.so.6; #3 0x00007f7003163e83 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #4 0x00007f70031667a5 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f6ff7060608 in llvm::vfs::OverlayFileSystem::pushOverlay(llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #7 0x00007f6ff46b3b3c in (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.586] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #8 0x00007f6ff46b45fe in (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #9 0x00007f6ff46b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8157
https://github.com/root-project/root/issues/8157:441,Availability,Error,Error,441,"### Describe the bug. I booted a CERN Openstack VM with the CentOS7 image. I sourced dev3 on CVMFS, i.e. the LCG stack with ROOT master. In particular:. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc8-opt/setup.sh`. and I tried to import ROOT from Python. When doing so, I observed the following error:. ```; error: entry with relative path at the root level is not discoverable; { 'name': '', 'type': 'directory',; ^~; Error in modulemap.overlay!. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 7 (Thread 0x7f7003fff700 (LWP 1242) ""python""):; #0 0x00007f704d3e3549 in waitpid () from /lib64/libc.so.6; #1 0x00007f704d360f62 in do_system () from /lib64/libc.so.6; #2 0x00007f704d361311 in system () from /lib64/libc.so.6; #3 0x00007f7003163e83 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #4 0x00007f70031667a5 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f6ff7060608 in llvm::vfs::OverlayFileSystem::pushOverlay(llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #7 0x00007f6ff46b3b3c in (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.586] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #8 0x00007f6ff46b45fe in (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #9 0x00007f6ff46b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8157
https://github.com/root-project/root/issues/8157:5105,Availability,error,error,5105,"nst*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #13 0x00007f6ff46276da in TCling::TCling(char const*, char const*, char const* const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007f6ff4628c20 in CreateInterpreter () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007f70030165d9 in TROOT::InitInterpreter() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007f7003016a8f in ROOT::Internal::GetROOT2() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007f70035e68a2 in __static_initialization_and_destruction_0(int, int) [clone .constprop.376] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libcppyy_backend3_8.so; #18 0x00007f704e7d19c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #19 0x00007f704e7d659e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #20 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #21 0x00007f704e7d5b8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #22 0x00007f704dbf1fab in dlopen_doit () from /lib64/libdl.so.2; #23 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #24 0x00007f704dbf25ad in _dlerror_run () from /lib64/libdl.so.2; #25 0x00007f704dbf2041 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; ... (more Python-related stack); ```. Installing the ROOT dependencies in the system fixed the error. I ran the following command:. `sudo yum install git make cmake3 gcc-c++ gcc binutils libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel`. but I don't know exactly what dependency fixed it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8157
https://github.com/root-project/root/issues/8157:5048,Deployability,Install,Installing,5048,"nst*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #13 0x00007f6ff46276da in TCling::TCling(char const*, char const*, char const* const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007f6ff4628c20 in CreateInterpreter () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007f70030165d9 in TROOT::InitInterpreter() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007f7003016a8f in ROOT::Internal::GetROOT2() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007f70035e68a2 in __static_initialization_and_destruction_0(int, int) [clone .constprop.376] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libcppyy_backend3_8.so; #18 0x00007f704e7d19c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #19 0x00007f704e7d659e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #20 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #21 0x00007f704e7d5b8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #22 0x00007f704dbf1fab in dlopen_doit () from /lib64/libdl.so.2; #23 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #24 0x00007f704dbf25ad in _dlerror_run () from /lib64/libdl.so.2; #25 0x00007f704dbf2041 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; ... (more Python-related stack); ```. Installing the ROOT dependencies in the system fixed the error. I ran the following command:. `sudo yum install git make cmake3 gcc-c++ gcc binutils libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel`. but I don't know exactly what dependency fixed it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8157
https://github.com/root-project/root/issues/8157:5152,Deployability,install,install,5152,"nst*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #13 0x00007f6ff46276da in TCling::TCling(char const*, char const*, char const* const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007f6ff4628c20 in CreateInterpreter () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007f70030165d9 in TROOT::InitInterpreter() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007f7003016a8f in ROOT::Internal::GetROOT2() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007f70035e68a2 in __static_initialization_and_destruction_0(int, int) [clone .constprop.376] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libcppyy_backend3_8.so; #18 0x00007f704e7d19c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #19 0x00007f704e7d659e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #20 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #21 0x00007f704e7d5b8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #22 0x00007f704dbf1fab in dlopen_doit () from /lib64/libdl.so.2; #23 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #24 0x00007f704dbf25ad in _dlerror_run () from /lib64/libdl.so.2; #25 0x00007f704dbf2041 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; ... (more Python-related stack); ```. Installing the ROOT dependencies in the system fixed the error. I ran the following command:. `sudo yum install git make cmake3 gcc-c++ gcc binutils libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel`. but I don't know exactly what dependency fixed it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8157
https://github.com/root-project/root/issues/8157:5068,Integrability,depend,dependencies,5068,"nst*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #13 0x00007f6ff46276da in TCling::TCling(char const*, char const*, char const* const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007f6ff4628c20 in CreateInterpreter () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007f70030165d9 in TROOT::InitInterpreter() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007f7003016a8f in ROOT::Internal::GetROOT2() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007f70035e68a2 in __static_initialization_and_destruction_0(int, int) [clone .constprop.376] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libcppyy_backend3_8.so; #18 0x00007f704e7d19c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #19 0x00007f704e7d659e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #20 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #21 0x00007f704e7d5b8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #22 0x00007f704dbf1fab in dlopen_doit () from /lib64/libdl.so.2; #23 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #24 0x00007f704dbf25ad in _dlerror_run () from /lib64/libdl.so.2; #25 0x00007f704dbf2041 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; ... (more Python-related stack); ```. Installing the ROOT dependencies in the system fixed the error. I ran the following command:. `sudo yum install git make cmake3 gcc-c++ gcc binutils libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel`. but I don't know exactly what dependency fixed it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8157
https://github.com/root-project/root/issues/8157:5303,Integrability,depend,dependency,5303,"nst*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #13 0x00007f6ff46276da in TCling::TCling(char const*, char const*, char const* const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007f6ff4628c20 in CreateInterpreter () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007f70030165d9 in TROOT::InitInterpreter() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007f7003016a8f in ROOT::Internal::GetROOT2() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007f70035e68a2 in __static_initialization_and_destruction_0(int, int) [clone .constprop.376] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libcppyy_backend3_8.so; #18 0x00007f704e7d19c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #19 0x00007f704e7d659e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #20 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #21 0x00007f704e7d5b8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #22 0x00007f704dbf1fab in dlopen_doit () from /lib64/libdl.so.2; #23 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #24 0x00007f704dbf25ad in _dlerror_run () from /lib64/libdl.so.2; #25 0x00007f704dbf2041 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; ... (more Python-related stack); ```. Installing the ROOT dependencies in the system fixed the error. I ran the following command:. `sudo yum install git make cmake3 gcc-c++ gcc binutils libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel`. but I don't know exactly what dependency fixed it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8157
https://github.com/root-project/root/pull/8159:48,Availability,error,error,48,"This is done to avoid a compiler warning (or an error for me, as I treated compiler warnings as errors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8159
https://github.com/root-project/root/pull/8159:96,Availability,error,errors,96,"This is done to avoid a compiler warning (or an error for me, as I treated compiler warnings as errors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8159
https://github.com/root-project/root/pull/8159:16,Safety,avoid,avoid,16,"This is done to avoid a compiler warning (or an error for me, as I treated compiler warnings as errors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8159
https://github.com/root-project/root/pull/8167:446,Energy Efficiency,reduce,reduces,446,"Here, HistFactory is streamlined a bit. The models are restructured from this:; [HFTest4_old.pdf](https://github.com/root-project/root/files/6466419/HFTest4_old.pdf). To this:; [HFTest4.pdf](https://github.com/root-project/root/files/6466420/HFTest4.pdf). The main difference is that first, all binned parts of the calculation are executed (in batches), and then all scale factors are applied to the fully interpolated binned distributions. This reduces the number of function calls and allows for non-uniform binning (ROOT-4958), since the bin width correction is not applied as the last step, but during the binned calculations. Further, prototypes of batch evaluations functions were added for all objects in HistFactory calculations. There are some possibilities for optimisations:; - [ ] ParamHistFunc::evaluateSpan always recalculates all indices; - [ ] RooBinIntegrator doesn't support multi-dimensional batch evaluations; - [ ] Auto-vectorisation should be checked, especially for performance-critical things like the piecewise interpolation; - [ ] Profiling with an example like in `testHistfactory` but with more bins should be done.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8167
https://github.com/root-project/root/pull/8167:989,Performance,perform,performance-critical,989,"Here, HistFactory is streamlined a bit. The models are restructured from this:; [HFTest4_old.pdf](https://github.com/root-project/root/files/6466419/HFTest4_old.pdf). To this:; [HFTest4.pdf](https://github.com/root-project/root/files/6466420/HFTest4.pdf). The main difference is that first, all binned parts of the calculation are executed (in batches), and then all scale factors are applied to the fully interpolated binned distributions. This reduces the number of function calls and allows for non-uniform binning (ROOT-4958), since the bin width correction is not applied as the last step, but during the binned calculations. Further, prototypes of batch evaluations functions were added for all objects in HistFactory calculations. There are some possibilities for optimisations:; - [ ] ParamHistFunc::evaluateSpan always recalculates all indices; - [ ] RooBinIntegrator doesn't support multi-dimensional batch evaluations; - [ ] Auto-vectorisation should be checked, especially for performance-critical things like the piecewise interpolation; - [ ] Profiling with an example like in `testHistfactory` but with more bins should be done.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8167
https://github.com/root-project/root/pull/8167:1092,Testability,test,testHistfactory,1092,"Here, HistFactory is streamlined a bit. The models are restructured from this:; [HFTest4_old.pdf](https://github.com/root-project/root/files/6466419/HFTest4_old.pdf). To this:; [HFTest4.pdf](https://github.com/root-project/root/files/6466420/HFTest4.pdf). The main difference is that first, all binned parts of the calculation are executed (in batches), and then all scale factors are applied to the fully interpolated binned distributions. This reduces the number of function calls and allows for non-uniform binning (ROOT-4958), since the bin width correction is not applied as the last step, but during the binned calculations. Further, prototypes of batch evaluations functions were added for all objects in HistFactory calculations. There are some possibilities for optimisations:; - [ ] ParamHistFunc::evaluateSpan always recalculates all indices; - [ ] RooBinIntegrator doesn't support multi-dimensional batch evaluations; - [ ] Auto-vectorisation should be checked, especially for performance-critical things like the piecewise interpolation; - [ ] Profiling with an example like in `testHistfactory` but with more bins should be done.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8167
https://github.com/root-project/root/pull/8172:123,Availability,error,errors,123,"When trying to build the tests using CMake 3.10, `R__DAOS_TEST_POOL` was not; getting defined correctly which caused build errors like:. ```; expected ‘)’ before ‘R__DAOS_TEST_POOL’; 5 | std::string daosUri(""daos://"" R__DAOS_TEST_POOL "":1/a947484e-e3bc-48cb-8f71-3292c19b59a4"");; | ~ ^~~~~~~~~~~~~~~~~~; | ); ```. Moving from `COMPILE_OPTIONS` to `COMPILE_DEFINITIONS` seemed to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8172
https://github.com/root-project/root/pull/8172:25,Testability,test,tests,25,"When trying to build the tests using CMake 3.10, `R__DAOS_TEST_POOL` was not; getting defined correctly which caused build errors like:. ```; expected ‘)’ before ‘R__DAOS_TEST_POOL’; 5 | std::string daosUri(""daos://"" R__DAOS_TEST_POOL "":1/a947484e-e3bc-48cb-8f71-3292c19b59a4"");; | ~ ^~~~~~~~~~~~~~~~~~; | ); ```. Moving from `COMPILE_OPTIONS` to `COMPILE_DEFINITIONS` seemed to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8172
https://github.com/root-project/root/pull/8173:51,Deployability,patch,patches,51,Replace ROOT's own integral template type printing patches on top of Clang with newly landed upstream patches (needed to backport 2 more commits to commit the integral template type printing patch).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8173
https://github.com/root-project/root/pull/8173:102,Deployability,patch,patches,102,Replace ROOT's own integral template type printing patches on top of Clang with newly landed upstream patches (needed to backport 2 more commits to commit the integral template type printing patch).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8173
https://github.com/root-project/root/pull/8173:191,Deployability,patch,patch,191,Replace ROOT's own integral template type printing patches on top of Clang with newly landed upstream patches (needed to backport 2 more commits to commit the integral template type printing patch).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8173
https://github.com/root-project/root/pull/8174:153,Security,access,access,153,"I noticed that RooArgList doesn't handle the case where idx is negative. But also thought it would be nice to add support for use of negative numbers to access the list from the back, so it behaves like a python list in this respect. I noticed that there is nice operator[] behavior in 6.24 (uses at and throws exception) but this isn't in master???",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8174
https://github.com/root-project/root/pull/8175:335,Availability,down,down,335,"This fixes a bug when a parameter is ""released"" when it was not ""fixed"" before. Without the fix, the internal consistency of MnUserParameterState is destroyed when a user calls Release() on a parameter that is not fixed, since the call appends a wrong index to fIntParameters. The issue was discovered by an iminuit user and I tracked down the source, see https://github.com/scikit-hep/iminuit/issues/648",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8175
https://github.com/root-project/root/pull/8175:38,Deployability,release,released,38,"This fixes a bug when a parameter is ""released"" when it was not ""fixed"" before. Without the fix, the internal consistency of MnUserParameterState is destroyed when a user calls Release() on a parameter that is not fixed, since the call appends a wrong index to fIntParameters. The issue was discovered by an iminuit user and I tracked down the source, see https://github.com/scikit-hep/iminuit/issues/648",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8175
https://github.com/root-project/root/pull/8175:177,Deployability,Release,Release,177,"This fixes a bug when a parameter is ""released"" when it was not ""fixed"" before. Without the fix, the internal consistency of MnUserParameterState is destroyed when a user calls Release() on a parameter that is not fixed, since the call appends a wrong index to fIntParameters. The issue was discovered by an iminuit user and I tracked down the source, see https://github.com/scikit-hep/iminuit/issues/648",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8175
https://github.com/root-project/root/pull/8176:412,Availability,error,error-prone,412,"This finally fixes https://github.com/scikit-hep/iminuit/issues/637. The following changes are implemented:. 1) Store information that MnHesse reached call limit in MinimumError; - Add new states MnUnset, MnPosDef, and MnReachedCallLimit to MinimumError::Status; - Switch MinimumError status storage from bools to enum, since there is actually only one unique state at a time and toggling the bools correctly is error-prone; it also simplifies the implementation. 2) Propagate information from MinimumError to FunctionMinimum via Add. I slightly simplified the implementation of VariableMetricBuilder, the variable `hessianComputed` was not needed, the information whether Hesse was run can be obtained from the MinimumState object. Other changes (which could be broken into a separate PR):; - Removed trivial implementations of copy ctor and copy assignment in MnUserParameterState, the defaults should be used instead (rule of 0)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8176
https://github.com/root-project/root/pull/8176:579,Modifiability,Variab,VariableMetricBuilder,579,"This finally fixes https://github.com/scikit-hep/iminuit/issues/637. The following changes are implemented:. 1) Store information that MnHesse reached call limit in MinimumError; - Add new states MnUnset, MnPosDef, and MnReachedCallLimit to MinimumError::Status; - Switch MinimumError status storage from bools to enum, since there is actually only one unique state at a time and toggling the bools correctly is error-prone; it also simplifies the implementation. 2) Propagate information from MinimumError to FunctionMinimum via Add. I slightly simplified the implementation of VariableMetricBuilder, the variable `hessianComputed` was not needed, the information whether Hesse was run can be obtained from the MinimumState object. Other changes (which could be broken into a separate PR):; - Removed trivial implementations of copy ctor and copy assignment in MnUserParameterState, the defaults should be used instead (rule of 0)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8176
https://github.com/root-project/root/pull/8176:606,Modifiability,variab,variable,606,"This finally fixes https://github.com/scikit-hep/iminuit/issues/637. The following changes are implemented:. 1) Store information that MnHesse reached call limit in MinimumError; - Add new states MnUnset, MnPosDef, and MnReachedCallLimit to MinimumError::Status; - Switch MinimumError status storage from bools to enum, since there is actually only one unique state at a time and toggling the bools correctly is error-prone; it also simplifies the implementation. 2) Propagate information from MinimumError to FunctionMinimum via Add. I slightly simplified the implementation of VariableMetricBuilder, the variable `hessianComputed` was not needed, the information whether Hesse was run can be obtained from the MinimumState object. Other changes (which could be broken into a separate PR):; - Removed trivial implementations of copy ctor and copy assignment in MnUserParameterState, the defaults should be used instead (rule of 0)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8176
https://github.com/root-project/root/pull/8176:433,Usability,simpl,simplifies,433,"This finally fixes https://github.com/scikit-hep/iminuit/issues/637. The following changes are implemented:. 1) Store information that MnHesse reached call limit in MinimumError; - Add new states MnUnset, MnPosDef, and MnReachedCallLimit to MinimumError::Status; - Switch MinimumError status storage from bools to enum, since there is actually only one unique state at a time and toggling the bools correctly is error-prone; it also simplifies the implementation. 2) Propagate information from MinimumError to FunctionMinimum via Add. I slightly simplified the implementation of VariableMetricBuilder, the variable `hessianComputed` was not needed, the information whether Hesse was run can be obtained from the MinimumState object. Other changes (which could be broken into a separate PR):; - Removed trivial implementations of copy ctor and copy assignment in MnUserParameterState, the defaults should be used instead (rule of 0)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8176
https://github.com/root-project/root/pull/8176:546,Usability,simpl,simplified,546,"This finally fixes https://github.com/scikit-hep/iminuit/issues/637. The following changes are implemented:. 1) Store information that MnHesse reached call limit in MinimumError; - Add new states MnUnset, MnPosDef, and MnReachedCallLimit to MinimumError::Status; - Switch MinimumError status storage from bools to enum, since there is actually only one unique state at a time and toggling the bools correctly is error-prone; it also simplifies the implementation. 2) Propagate information from MinimumError to FunctionMinimum via Add. I slightly simplified the implementation of VariableMetricBuilder, the variable `hessianComputed` was not needed, the information whether Hesse was run can be obtained from the MinimumState object. Other changes (which could be broken into a separate PR):; - Removed trivial implementations of copy ctor and copy assignment in MnUserParameterState, the defaults should be used instead (rule of 0)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8176
https://github.com/root-project/root/pull/8177:53,Availability,avail,available,53,"Another little change, this makes some nice features available in python such as ```""var"" in collection```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8177
https://github.com/root-project/root/issues/8178:13,Availability,failure,failure,13,"Hello; Build failure with master branch commit 02b857a47e on Ubuntu 21.04 (gcc 10.3.0, cmake 3.18.4):. ~~~~; cmake ${ROOT_SOURCES} -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dsoversion=ON -Droofit=yes; make -j8; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooPullVar.cxx.o; In file included from /home/frankland/software/sources/root/tree/treeplayer/inc/TBranchProxy.h:22,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReaderUtils.h:26,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReader.h:26,; from /home/frankland/software/sources/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:45,; from /home/frankland/software/sources/root/tree/dataframe/src/RDFActionHelpers.cxx:11:; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:97:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 97 | virtual TClass::ObjectPtr NewObject() const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:101:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 101 | virtual TClass::ObjectPtr NewObject(void *arena) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:114:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 114 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:118:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 118 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements, void *arena) const {; | ^~~~~~~~~; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedFrame.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooQuasiRandomGenerator.cxx.o; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedMarkerSelect.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooRatio.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8178
https://github.com/root-project/root/issues/8178:833,Availability,error,error,833,"Hello; Build failure with master branch commit 02b857a47e on Ubuntu 21.04 (gcc 10.3.0, cmake 3.18.4):. ~~~~; cmake ${ROOT_SOURCES} -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dsoversion=ON -Droofit=yes; make -j8; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooPullVar.cxx.o; In file included from /home/frankland/software/sources/root/tree/treeplayer/inc/TBranchProxy.h:22,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReaderUtils.h:26,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReader.h:26,; from /home/frankland/software/sources/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:45,; from /home/frankland/software/sources/root/tree/dataframe/src/RDFActionHelpers.cxx:11:; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:97:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 97 | virtual TClass::ObjectPtr NewObject() const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:101:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 101 | virtual TClass::ObjectPtr NewObject(void *arena) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:114:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 114 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:118:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 118 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements, void *arena) const {; | ^~~~~~~~~; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedFrame.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooQuasiRandomGenerator.cxx.o; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedMarkerSelect.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooRatio.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8178
https://github.com/root-project/root/issues/8178:1043,Availability,error,error,1043,"_TYPE=RelWithDebInfo -Dsoversion=ON -Droofit=yes; make -j8; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooPullVar.cxx.o; In file included from /home/frankland/software/sources/root/tree/treeplayer/inc/TBranchProxy.h:22,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReaderUtils.h:26,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReader.h:26,; from /home/frankland/software/sources/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:45,; from /home/frankland/software/sources/root/tree/dataframe/src/RDFActionHelpers.cxx:11:; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:97:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 97 | virtual TClass::ObjectPtr NewObject() const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:101:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 101 | virtual TClass::ObjectPtr NewObject(void *arena) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:114:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 114 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:118:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 118 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements, void *arena) const {; | ^~~~~~~~~; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedFrame.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooQuasiRandomGenerator.cxx.o; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedMarkerSelect.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooRatio.cxx.o; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:160: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RDFActionHelpe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8178
https://github.com/root-project/root/issues/8178:1265,Availability,error,error,1265,"ore.dir/src/RooPullVar.cxx.o; In file included from /home/frankland/software/sources/root/tree/treeplayer/inc/TBranchProxy.h:22,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReaderUtils.h:26,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReader.h:26,; from /home/frankland/software/sources/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:45,; from /home/frankland/software/sources/root/tree/dataframe/src/RDFActionHelpers.cxx:11:; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:97:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 97 | virtual TClass::ObjectPtr NewObject() const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:101:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 101 | virtual TClass::ObjectPtr NewObject(void *arena) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:114:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 114 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:118:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 118 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements, void *arena) const {; | ^~~~~~~~~; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedFrame.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooQuasiRandomGenerator.cxx.o; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedMarkerSelect.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooRatio.cxx.o; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:160: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RDFActionHelpers.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:30359: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; ~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8178
https://github.com/root-project/root/issues/8178:1496,Availability,error,error,1496,"ore.dir/src/RooPullVar.cxx.o; In file included from /home/frankland/software/sources/root/tree/treeplayer/inc/TBranchProxy.h:22,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReaderUtils.h:26,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReader.h:26,; from /home/frankland/software/sources/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:45,; from /home/frankland/software/sources/root/tree/dataframe/src/RDFActionHelpers.cxx:11:; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:97:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 97 | virtual TClass::ObjectPtr NewObject() const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:101:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 101 | virtual TClass::ObjectPtr NewObject(void *arena) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:114:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 114 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:118:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 118 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements, void *arena) const {; | ^~~~~~~~~; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedFrame.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooQuasiRandomGenerator.cxx.o; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedMarkerSelect.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooRatio.cxx.o; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:160: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RDFActionHelpers.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:30359: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; ~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8178
https://github.com/root-project/root/issues/8178:2154,Availability,Error,Error,2154,"ore.dir/src/RooPullVar.cxx.o; In file included from /home/frankland/software/sources/root/tree/treeplayer/inc/TBranchProxy.h:22,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReaderUtils.h:26,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReader.h:26,; from /home/frankland/software/sources/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:45,; from /home/frankland/software/sources/root/tree/dataframe/src/RDFActionHelpers.cxx:11:; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:97:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 97 | virtual TClass::ObjectPtr NewObject() const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:101:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 101 | virtual TClass::ObjectPtr NewObject(void *arena) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:114:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 114 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:118:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 118 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements, void *arena) const {; | ^~~~~~~~~; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedFrame.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooQuasiRandomGenerator.cxx.o; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedMarkerSelect.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooRatio.cxx.o; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:160: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RDFActionHelpers.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:30359: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; ~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8178
https://github.com/root-project/root/issues/8178:2254,Availability,Error,Error,2254,"ore.dir/src/RooPullVar.cxx.o; In file included from /home/frankland/software/sources/root/tree/treeplayer/inc/TBranchProxy.h:22,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReaderUtils.h:26,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReader.h:26,; from /home/frankland/software/sources/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:45,; from /home/frankland/software/sources/root/tree/dataframe/src/RDFActionHelpers.cxx:11:; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:97:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 97 | virtual TClass::ObjectPtr NewObject() const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:101:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 101 | virtual TClass::ObjectPtr NewObject(void *arena) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:114:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 114 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:118:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 118 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements, void *arena) const {; | ^~~~~~~~~; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedFrame.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooQuasiRandomGenerator.cxx.o; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedMarkerSelect.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooRatio.cxx.o; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:160: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RDFActionHelpers.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:30359: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; ~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8178
https://github.com/root-project/root/pull/8179:155,Modifiability,extend,extended,155,* A pythonization of `RooAbsCollection::addOwned` is introduced to fix issue #8120. * The unit tests for the pythonization of `RooAbsCollection` were also extended to cover new developments from PR https://github.com/root-project/root/pull/8177. * A pythonization of `RooAbsCollection::operator()` is introduced as discussed in https://github.com/root-project/root/pull/8174.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8179
https://github.com/root-project/root/pull/8179:95,Testability,test,tests,95,* A pythonization of `RooAbsCollection::addOwned` is introduced to fix issue #8120. * The unit tests for the pythonization of `RooAbsCollection` were also extended to cover new developments from PR https://github.com/root-project/root/pull/8177. * A pythonization of `RooAbsCollection::operator()` is introduced as discussed in https://github.com/root-project/root/pull/8174.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8179
https://github.com/root-project/root/issues/8180:3575,Deployability,update,updateFromFile,3575," in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.; So far I have tried the 6.24.00 tag and the `v6-24-00-patches` branch, both with the same result. For reference, we had very similar issues quite a while ago, which was fixed by #4689, al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:4491,Deployability,patch,patches,4491,"ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.; So far I have tried the 6.24.00 tag and the `v6-24-00-patches` branch, both with the same result. For reference, we had very similar issues quite a while ago, which was fixed by #4689, although perhaps now it is the other way around, with ROOT linking to my llvm11 symbols.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:2990,Modifiability,Config,ConfigurableParamHelper,2990,"0x00007fffe37e8176 in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /usr/lib/root/6.24/lib/libCling.so; #4 0x00007fffe3738a79 in TCling::TCling(char const*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/ali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:3201,Modifiability,Config,ConfigurableParamHelper,3201,"0x00007fffe37e8176 in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /usr/lib/root/6.24/lib/libCling.so; #4 0x00007fffe3738a79 in TCling::TCling(char const*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/ali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:3246,Modifiability,Config,ConfigurableParam,3246,"on> > > const&, bool, cling::Interpreter const*) () from /usr/lib/root/6.24/lib/libCling.so; #4 0x00007fffe3738a79 in TCling::TCling(char const*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:3341,Modifiability,Config,ConfigurableParam,3341,"on> > > const&, bool, cling::Interpreter const*) () from /usr/lib/root/6.24/lib/libCling.so; #4 0x00007fffe3738a79 in TCling::TCling(char const*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:3404,Modifiability,Config,ConfigurableParam,3404,"*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:3493,Modifiability,Config,ConfigurableParam,3493,"*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:3556,Modifiability,Config,ConfigurableParam,3556," in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.; So far I have tried the 6.24.00 tag and the `v6-24-00-patches` branch, both with the same result. For reference, we had very similar issues quite a while ago, which was fixed by #4689, al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:3591,Modifiability,config,configFile,3591," in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.; So far I have tried the 6.24.00 tag and the `v6-24-00-patches` branch, both with the same result. For reference, we had very similar issues quite a while ago, which was fixed by #4689, al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:3718,Modifiability,Config,ConfigurableParam,3718," in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.; So far I have tried the 6.24.00 tag and the `v6-24-00-patches` branch, both with the same result. For reference, we had very similar issues quite a while ago, which was fixed by #4689, al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:3794,Performance,optimiz,optimized,3794,"ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.; So far I have tried the 6.24.00 tag and the `v6-24-00-patches` branch, both with the same result. For reference, we had very similar issues quite a while ago, which was fixed by #4689, although perhaps now it is the other way around, with ROOT linking to my llvm11 symbols.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:4056,Performance,optimiz,optimized,4056,"ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.; So far I have tried the 6.24.00 tag and the `v6-24-00-patches` branch, both with the same result. For reference, we had very similar issues quite a while ago, which was fixed by #4689, although perhaps now it is the other way around, with ROOT linking to my llvm11 symbols.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:1662,Usability,Simpl,SimpleCompiler,1662,":char_traits<char>, std::allocator<char> >)::{lambda()#1}, void>::Callbacks () from /usr/lib/llvm/11/lib64/libLLVM-11.so; (gdb) bt; #0 0x00007fffee8b09a4 in llvm::detail::UniqueFunctionBase<llvm::Expected<unsigned long>>::CallbacksHolder<llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}, llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}, void>::Callbacks () from /usr/lib/llvm/11/lib64/libLLVM-11.so; #1 0x00007fffe3871543 in std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) () from /usr/lib/root/6.24/lib/libCling.so; #2 0x00007fffe38610dd in cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const () from /usr/lib/root/6.24/lib/libCling.so; #3 0x00007fffe37e8176 in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /usr/lib/root/6.24/lib/libCling.so; #4 0x00007fffe3738a79 in TCling::TCling(char const*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/issues/8180:1828,Usability,Simpl,SimpleCompiler,1828,":char_traits<char>, std::allocator<char> >)::{lambda()#1}, void>::Callbacks () from /usr/lib/llvm/11/lib64/libLLVM-11.so; (gdb) bt; #0 0x00007fffee8b09a4 in llvm::detail::UniqueFunctionBase<llvm::Expected<unsigned long>>::CallbacksHolder<llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}, llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}, void>::Callbacks () from /usr/lib/llvm/11/lib64/libLLVM-11.so; #1 0x00007fffe3871543 in std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) () from /usr/lib/root/6.24/lib/libCling.so; #2 0x00007fffe38610dd in cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const () from /usr/lib/root/6.24/lib/libCling.so; #3 0x00007fffe37e8176 in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /usr/lib/root/6.24/lib/libCling.so; #4 0x00007fffe3738a79 in TCling::TCling(char const*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8180
https://github.com/root-project/root/pull/8181:168,Availability,error,error-restoring-tstyle-from-json,168,it has similar name as field in TAttLine and produces duplicated members; in JSON. This makes impossible to correctly read it back. Solves https://root-forum.cern.ch/t/error-restoring-tstyle-from-json/44879/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8181
https://github.com/root-project/root/issues/8183:30,Usability,clear,clear,30,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Here's a self-contained reproducer:. ```python; import ROOT. ROOT.RDataFrame(10).Define(""x"", ""int(rdfentry_)"").Snapshot(""t"", ""f.root""). f = ROOT.TFile(""f.root""); t = f.Get(""t""); reader = ROOT.TTreeReader(t); age = ROOT.TTreeReaderValue['int'](reader, ""x""); staff_list = []; for entry in reader:; print(age.Get()[0]); ```. This prints. ```; 1; 2; 3; 4; 5; 6; 7; 8; 9; 9; ```. instead of . ```; 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Either Python iteration should be disabled (in favor of `while reader.Next()`, which works as expected) or it should produce the same results as the `while reader.Next()` loop. ### Additional context; <!--; Add any other context about the problem here.; -->. First reported at https://root-forum.cern.ch/t/ttreereader-vs-rdataframe-vs-branches-to-read-ttree/44785",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8183
https://github.com/root-project/root/issues/8183:556,Usability,clear,clear,556,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Here's a self-contained reproducer:. ```python; import ROOT. ROOT.RDataFrame(10).Define(""x"", ""int(rdfentry_)"").Snapshot(""t"", ""f.root""). f = ROOT.TFile(""f.root""); t = f.Get(""t""); reader = ROOT.TTreeReader(t); age = ROOT.TTreeReaderValue['int'](reader, ""x""); staff_list = []; for entry in reader:; print(age.Get()[0]); ```. This prints. ```; 1; 2; 3; 4; 5; 6; 7; 8; 9; 9; ```. instead of . ```; 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Either Python iteration should be disabled (in favor of `while reader.Next()`, which works as expected) or it should produce the same results as the `while reader.Next()` loop. ### Additional context; <!--; Add any other context about the problem here.; -->. First reported at https://root-forum.cern.ch/t/ttreereader-vs-rdataframe-vs-branches-to-read-ttree/44785",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8183
https://github.com/root-project/root/pull/8184:381,Modifiability,extend,extend,381,"For RH1 objects one can enable `SecondX()` or/and `SecondY()` draw option. ; In this case histogram painter will draw extra axes on the frame - fully interactive with zooming, independent log scale, ...; Provide extra attributes for secondary axes in RFrame; Provide example in tutorials: https://jsroot.gsi.de/dev/examples.htm?more#v7_rh1_twoaxes. Now works only with RH1, can be extend for basic objects like RLine, RText, ...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8184
https://github.com/root-project/root/pull/8184:188,Testability,log,log,188,"For RH1 objects one can enable `SecondX()` or/and `SecondY()` draw option. ; In this case histogram painter will draw extra axes on the frame - fully interactive with zooming, independent log scale, ...; Provide extra attributes for secondary axes in RFrame; Provide example in tutorials: https://jsroot.gsi.de/dev/examples.htm?more#v7_rh1_twoaxes. Now works only with RH1, can be extend for basic objects like RLine, RText, ...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8184
https://github.com/root-project/root/pull/8185:102,Availability,error,error,102,"when fScaledImage->fImage is nullptr.; This happens in some corner cases, namely after a; ```; libpng error: Not a PNG file; Error in <TASImage::Paint>: image could not be rendered to display; ```; That happens when you call TASImage::SetImageBuffer() on a BMP buffer (it thinks it is a PNG and gives no warning). There are other potential occurrences of this problem in other functions that I am not using, like GetPixmap, etc. but for the moment this fixes it for me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8185
https://github.com/root-project/root/pull/8185:125,Availability,Error,Error,125,"when fScaledImage->fImage is nullptr.; This happens in some corner cases, namely after a; ```; libpng error: Not a PNG file; Error in <TASImage::Paint>: image could not be rendered to display; ```; That happens when you call TASImage::SetImageBuffer() on a BMP buffer (it thinks it is a PNG and gives no warning). There are other potential occurrences of this problem in other functions that I am not using, like GetPixmap, etc. but for the moment this fixes it for me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8185
https://github.com/root-project/root/issues/8187:760,Availability,error,error,760,"On 64-bit latest Tumbleweed release (20210515) there is one roottest failing; 597 - roottest-root-meta-ROOT-7462-make. It seems the issue isn't new; c.f https://github.com/root-project/root/issues/6331 and https://github.com/nicknagi/root/commit/707152a3af656a985ec3a14ad385b534c7f30062. <details>; <summary>Test output</summary>. ```; Name of real 'variable' seen as: 'fContent.'; Info: ClassInfo is not valid; Warning in <TStreamerInfo::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:1288,Availability,error,error,1288,"o::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:1501,Availability,Error,Error,1501,"o::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:1537,Availability,Error,Error,1537,"o::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:1772,Availability,error,error,1772,"ignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:2038,Availability,Error,Error,2038,"har>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name of real 'variable' seen as: 'fContent.'; string=set for writing; value=11; ```; </details>. ## Env. compiler is clang; ```; > clang -v; clang version 12.0.0; Target: x86_64-unknown-linux-gnu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:2074,Availability,Error,Error,2074,"har>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name of real 'variable' seen as: 'fContent.'; string=set for writing; value=11; ```; </details>. ## Env. compiler is clang; ```; > clang -v; clang version 12.0.0; Target: x86_64-unknown-linux-gnu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:2290,Availability,Error,Error,2290,"ude/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name of real 'variable' seen as: 'fContent.'; string=set for writing; value=11; ```; </details>. ## Env. compiler is clang; ```; > clang -v; clang version 12.0.0; Target: x86_64-unknown-linux-gnu; ```. lib is libstdc++; ```; > sudo ldconfig -p | grep stdc++; libstdc++.so.6 (libc6,x86-64) => /usr/lib64/libstdc++.so.6; libstdc++.so.6 (libc6) => /usr/lib/libstdc++.so.6; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:2326,Availability,Error,Error,2326,"ude/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name of real 'variable' seen as: 'fContent.'; string=set for writing; value=11; ```; </details>. ## Env. compiler is clang; ```; > clang -v; clang version 12.0.0; Target: x86_64-unknown-linux-gnu; ```. lib is libstdc++; ```; > sudo ldconfig -p | grep stdc++; libstdc++.so.6 (libc6,x86-64) => /usr/lib64/libstdc++.so.6; libstdc++.so.6 (libc6) => /usr/lib/libstdc++.so.6; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:2547,Availability,ERROR,ERROR,2547,"ude/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name of real 'variable' seen as: 'fContent.'; string=set for writing; value=11; ```; </details>. ## Env. compiler is clang; ```; > clang -v; clang version 12.0.0; Target: x86_64-unknown-linux-gnu; ```. lib is libstdc++; ```; > sudo ldconfig -p | grep stdc++; libstdc++.so.6 (libc6,x86-64) => /usr/lib64/libstdc++.so.6; libstdc++.so.6 (libc6) => /usr/lib/libstdc++.so.6; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:2598,Availability,Error,Error,2598,"ude/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name of real 'variable' seen as: 'fContent.'; string=set for writing; value=11; ```; </details>. ## Env. compiler is clang; ```; > clang -v; clang version 12.0.0; Target: x86_64-unknown-linux-gnu; ```. lib is libstdc++; ```; > sudo ldconfig -p | grep stdc++; libstdc++.so.6 (libc6,x86-64) => /usr/lib64/libstdc++.so.6; libstdc++.so.6 (libc6) => /usr/lib/libstdc++.so.6; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:2634,Availability,Error,Error,2634,"ude/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name of real 'variable' seen as: 'fContent.'; string=set for writing; value=11; ```; </details>. ## Env. compiler is clang; ```; > clang -v; clang version 12.0.0; Target: x86_64-unknown-linux-gnu; ```. lib is libstdc++; ```; > sudo ldconfig -p | grep stdc++; libstdc++.so.6 (libc6,x86-64) => /usr/lib64/libstdc++.so.6; libstdc++.so.6 (libc6) => /usr/lib/libstdc++.so.6; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:28,Deployability,release,release,28,"On 64-bit latest Tumbleweed release (20210515) there is one roottest failing; 597 - roottest-root-meta-ROOT-7462-make. It seems the issue isn't new; c.f https://github.com/root-project/root/issues/6331 and https://github.com/nicknagi/root/commit/707152a3af656a985ec3a14ad385b534c7f30062. <details>; <summary>Test output</summary>. ```; Name of real 'variable' seen as: 'fContent.'; Info: ClassInfo is not valid; Warning in <TStreamerInfo::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:350,Modifiability,variab,variable,350,"On 64-bit latest Tumbleweed release (20210515) there is one roottest failing; 597 - roottest-root-meta-ROOT-7462-make. It seems the issue isn't new; c.f https://github.com/root-project/root/issues/6331 and https://github.com/nicknagi/root/commit/707152a3af656a985ec3a14ad385b534c7f30062. <details>; <summary>Test output</summary>. ```; Name of real 'variable' seen as: 'fContent.'; Info: ClassInfo is not valid; Warning in <TStreamerInfo::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:2894,Modifiability,variab,variable,2894,"ude/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name of real 'variable' seen as: 'fContent.'; string=set for writing; value=11; ```; </details>. ## Env. compiler is clang; ```; > clang -v; clang version 12.0.0; Target: x86_64-unknown-linux-gnu; ```. lib is libstdc++; ```; > sudo ldconfig -p | grep stdc++; libstdc++.so.6 (libc6,x86-64) => /usr/lib64/libstdc++.so.6; libstdc++.so.6 (libc6) => /usr/lib/libstdc++.so.6; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:1786,Security,access,access,1786,"ignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8187:308,Testability,Test,Test,308,"On 64-bit latest Tumbleweed release (20210515) there is one roottest failing; 597 - roottest-root-meta-ROOT-7462-make. It seems the issue isn't new; c.f https://github.com/root-project/root/issues/6331 and https://github.com/nicknagi/root/commit/707152a3af656a985ec3a14ad385b534c7f30062. <details>; <summary>Test output</summary>. ```; Name of real 'variable' seen as: 'fContent.'; Info: ClassInfo is not valid; Warning in <TStreamerInfo::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8187
https://github.com/root-project/root/issues/8188:43,Deployability,install,install,43,"Hello, . Instructions at https://root.cern/install/build_from_source/ suggest to run. ```; git clone --branch latest-stable https://github.com/root-project/root.git root_src; ```. However, the branch `latest-stable` doesn't seem to exist in this project. There is no branch with the keyword stable or latest in the project. Cheers,; Karolos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8188
https://github.com/root-project/root/pull/8190:64,Security,access,accessed,64,otherwise I encounter a crash due to a gGLManager=nullptr being accessed in line 1147,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8190
https://github.com/root-project/root/pull/8191:84,Integrability,message,messages,84,* Rename function access a channel from EveLog() to REveLog(); * Make logger stored messages thred local,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8191
https://github.com/root-project/root/pull/8191:18,Security,access,access,18,* Rename function access a channel from EveLog() to REveLog(); * Make logger stored messages thred local,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8191
https://github.com/root-project/root/pull/8191:70,Testability,log,logger,70,* Rename function access a channel from EveLog() to REveLog(); * Make logger stored messages thred local,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8191
https://github.com/root-project/root/issues/8193:4807,Availability,Error,Error,4807,"nu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are controlled by the package manager), and that this makes a string substitution command fail, likely because of lack of quoting some variable. I set `asserts` to `OFF` in the command line, though. Ideally, if something is exposed as an option to users, like `-Dasserts=ON` is, and it's set to `OFF` on the command line, it should not be altered by the build system, as that is surprising behavior. In any case, empty default flags (or even build type) is not something that should break configuration. Note that in multi-configuration generators, `CMAKE_BUILD_TYPE` is *always* empty, so the build system cannot assume it has any value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:4937,Availability,Error,Error,4937,"nu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are controlled by the package manager), and that this makes a string substitution command fail, likely because of lack of quoting some variable. I set `asserts` to `OFF` in the command line, though. Ideally, if something is exposed as an option to users, like `-Dasserts=ON` is, and it's set to `OFF` on the command line, it should not be altered by the build system, as that is surprising behavior. In any case, empty default flags (or even build type) is not something that should break configuration. Note that in multi-configuration generators, `CMAKE_BUILD_TYPE` is *always* empty, so the build system cannot assume it has any value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:5647,Deployability,configurat,configuration,5647,"nu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are controlled by the package manager), and that this makes a string substitution command fail, likely because of lack of quoting some variable. I set `asserts` to `OFF` in the command line, though. Ideally, if something is exposed as an option to users, like `-Dasserts=ON` is, and it's set to `OFF` on the command line, it should not be altered by the build system, as that is surprising behavior. In any case, empty default flags (or even build type) is not something that should break configuration. Note that in multi-configuration generators, `CMAKE_BUILD_TYPE` is *always* empty, so the build system cannot assume it has any value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:5681,Deployability,configurat,configuration,5681,"nu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are controlled by the package manager), and that this makes a string substitution command fail, likely because of lack of quoting some variable. I set `asserts` to `OFF` in the command line, though. Ideally, if something is exposed as an option to users, like `-Dasserts=ON` is, and it's set to `OFF` on the command line, it should not be altered by the build system, as that is surprising behavior. In any case, empty default flags (or even build type) is not something that should break configuration. Note that in multi-configuration generators, `CMAKE_BUILD_TYPE` is *always* empty, so the build system cannot assume it has any value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:24,Modifiability,config,configuring,24,This is what I see when configuring ROOT:; ```; cmake -C /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=x86_64-pc-linux-gnu-gcc -DCMAKE_CXX_COMPILER=x86_64-pc-linux-gnu-g++ -DCMAKE_CUDA_HOST_COMPILER=x86_64-pc-linux-gnu-g++ -DCMAKE_C_FLAGS=-march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.8 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/9999 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/9999/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -Dbuiltin_llvm=ON -Dbuiltin_clang=ON -Dbuiltin_cling=ON -Dbuiltin_openui5=ON -Dbuiltin_afterimage=OFF -Dbuiltin_cfitsio=OFF -Dbuiltin_davix=OFF -Dbuiltin_fftw3=OFF -Dbuiltin_freetype=OFF -Dbuiltin_ftgl=OFF -Dbuiltin_gl2ps=OFF -Dbuiltin_glew=OFF -Dbuiltin_gsl=OFF -Dbuiltin_lz4=OFF -Dbuiltin_lzma=OFF -Dbuiltin_nlohmannjson=OFF -Dbuiltin_openssl=OFF -Dbuiltin_pcre=OFF -Dbuiltin_tbb=OFF -Dbuiltin_unuran=OFF -Dbuiltin_vc=OFF -Dbuiltin_vdt=OFF -Dbuiltin_veccore=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_xxhash=OFF -Dbuiltin_zlib=OFF -Dbuiltin_zstd=OFF -Dalien=OFF -Darrow=OFF -Dasimage=yes -Dccache=OFF -Dcefweb=OFF -Dclad=OFF -Dcocoa=no -Dcuda=no -Dcudnn=no -Dcxxmodules=OFF -Ddataframe=ON -Ddavix=yes -Ddcache=OFF -Ddistcc=OFF -Dfcgi=yes -Dfftw3=yes -Dfitsio=yes -Dfortran=yes -Dgdml=yes -Dgfal=OFF -Dgminimal=OFF -Dgsl_shared=yes -Dgviz=yes -Dhttp=yes -Dimt=yes -Dlibcxx=no -Dmathmore=yes -Dmemstat=OFF -Dminimal=OFF -Dminuit2=yes -Dminuit=yes -Dmlp=yes -Dmonalisa=OFF -Dmpi=yes -Dmysql=yes -Dodbc=yes -Dopengl=yes -Doracle=no -Dpgsql=yes -Dpythia6=yes -Dpyroot=yes -Dpythia8=yes -Dqt5web=yes -Dr=yes -Droofit=yes -Droot7=yes -Drootbench=OFF -Droottest=OFF -Drpath=OFF -Druntime_cxxmodul,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:5293,Modifiability,variab,variable,5293,"nu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are controlled by the package manager), and that this makes a string substitution command fail, likely because of lack of quoting some variable. I set `asserts` to `OFF` in the command line, though. Ideally, if something is exposed as an option to users, like `-Dasserts=ON` is, and it's set to `OFF` on the command line, it should not be altered by the build system, as that is surprising behavior. In any case, empty default flags (or even build type) is not something that should break configuration. Note that in multi-configuration generators, `CMAKE_BUILD_TYPE` is *always* empty, so the build system cannot assume it has any value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:5647,Modifiability,config,configuration,5647,"nu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are controlled by the package manager), and that this makes a string substitution command fail, likely because of lack of quoting some variable. I set `asserts` to `OFF` in the command line, though. Ideally, if something is exposed as an option to users, like `-Dasserts=ON` is, and it's set to `OFF` on the command line, it should not be altered by the build system, as that is surprising behavior. In any case, empty default flags (or even build type) is not something that should break configuration. Note that in multi-configuration generators, `CMAKE_BUILD_TYPE` is *always* empty, so the build system cannot assume it has any value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:5681,Modifiability,config,configuration,5681,"nu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are controlled by the package manager), and that this makes a string substitution command fail, likely because of lack of quoting some variable. I set `asserts` to `OFF` in the command line, though. Ideally, if something is exposed as an option to users, like `-Dasserts=ON` is, and it's set to `OFF` on the command line, it should not be altered by the build system, as that is surprising behavior. In any case, empty default flags (or even build type) is not something that should break configuration. Note that in multi-configuration generators, `CMAKE_BUILD_TYPE` is *always* empty, so the build system cannot assume it has any value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:2487,Performance,load,loading,2487,"yes -Ddcache=OFF -Ddistcc=OFF -Dfcgi=yes -Dfftw3=yes -Dfitsio=yes -Dfortran=yes -Dgdml=yes -Dgfal=OFF -Dgminimal=OFF -Dgsl_shared=yes -Dgviz=yes -Dhttp=yes -Dimt=yes -Dlibcxx=no -Dmathmore=yes -Dmemstat=OFF -Dminimal=OFF -Dminuit2=yes -Dminuit=yes -Dmlp=yes -Dmonalisa=OFF -Dmpi=yes -Dmysql=yes -Dodbc=yes -Dopengl=yes -Doracle=no -Dpgsql=yes -Dpythia6=yes -Dpyroot=yes -Dpythia8=yes -Dqt5web=yes -Dr=yes -Droofit=yes -Droot7=yes -Drootbench=OFF -Droottest=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:2503,Performance,cache,cache,2503,"yes -Ddcache=OFF -Ddistcc=OFF -Dfcgi=yes -Dfftw3=yes -Dfitsio=yes -Dfortran=yes -Dgdml=yes -Dgfal=OFF -Dgminimal=OFF -Dgsl_shared=yes -Dgviz=yes -Dhttp=yes -Dimt=yes -Dlibcxx=no -Dmathmore=yes -Dmemstat=OFF -Dminimal=OFF -Dminuit2=yes -Dminuit=yes -Dmlp=yes -Dmonalisa=OFF -Dmpi=yes -Dmysql=yes -Dodbc=yes -Dopengl=yes -Doracle=no -Dpgsql=yes -Dpythia6=yes -Dpyroot=yes -Dpythia8=yes -Dqt5web=yes -Dr=yes -Droofit=yes -Droot7=yes -Drootbench=OFF -Droottest=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:3947,Performance,Perform,Performing,3947,"eatures - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are contr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:3991,Performance,Perform,Performing,3991,"eatures - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are contr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:4259,Performance,Perform,Performing,4259,"eatures - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are contr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:4301,Performance,Perform,Performing,4301,"eatures - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are contr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:2703,Safety,Detect,Detecting,2703,"test=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:2737,Safety,Detect,Detecting,2737,"test=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:2866,Safety,Detect,Detecting,2866,"test=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:2899,Safety,Detect,Detecting,2899,"test=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:2939,Safety,Detect,Detecting,2939,"test=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:2975,Safety,Detect,Detecting,2975,"test=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:3108,Safety,Detect,Detecting,3108,"test=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:3143,Safety,Detect,Detecting,3143,"test=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:3239,Safety,Detect,Detected,3239,"Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:3499,Safety,Detect,Detecting,3499,"identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Wove",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:3539,Safety,Detect,Detecting,3539,"identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Wove",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:5382,Security,expose,exposed,5382,"nu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are controlled by the package manager), and that this makes a string substitution command fail, likely because of lack of quoting some variable. I set `asserts` to `OFF` in the command line, though. Ideally, if something is exposed as an option to users, like `-Dasserts=ON` is, and it's set to `OFF` on the command line, it should not be altered by the build system, as that is surprising behavior. In any case, empty default flags (or even build type) is not something that should break configuration. Note that in multi-configuration generators, `CMAKE_BUILD_TYPE` is *always* empty, so the build system cannot assume it has any value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:3958,Testability,Test,Test,3958,"eatures - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are contr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:4002,Testability,Test,Test,4002,"eatures - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are contr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:4270,Testability,Test,Test,4270,"eatures - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are contr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:4312,Testability,Test,Test,4312,"eatures - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are contr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8193:5310,Testability,assert,asserts,5310,"nu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are controlled by the package manager), and that this makes a string substitution command fail, likely because of lack of quoting some variable. I set `asserts` to `OFF` in the command line, though. Ideally, if something is exposed as an option to users, like `-Dasserts=ON` is, and it's set to `OFF` on the command line, it should not be altered by the build system, as that is surprising behavior. In any case, empty default flags (or even build type) is not something that should break configuration. Note that in multi-configuration generators, `CMAKE_BUILD_TYPE` is *always* empty, so the build system cannot assume it has any value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8193
https://github.com/root-project/root/issues/8194:13,Availability,error,error,13,"To reproduce error, just call:; ```; TClass::GetClass(""TTreeCache"")->GetStreamerInfo(); ```; Produces crash with output:; ```; input_line_9:6:31: error: 'MissCache' is a protected member of 'TTreeCache'; default_delete<TTreeCache::MissCache> _1;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; input_line_9:7:16: error: 'MissCache' is a protected member of 'TTreeCache'; TTreeCache::MissCache* _0;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; Error in <Load>: Could not declare TEmulatedTuple<TTreeCache::MissCache*,default_delete<TTreeCache::MissCache> >. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; ```. There are also few other classes with similar problems:; ```; TClass::GetClass(""TMVA::VarTransformHandler"")->GetStreamerInfo();; TClass::GetClass(""TTreeCacheUnzip"")->GetStreamerInfo();; ```. Probably, issue https://github.com/root-project/root/issues/7276 connected with this one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8194
https://github.com/root-project/root/issues/8194:146,Availability,error,error,146,"To reproduce error, just call:; ```; TClass::GetClass(""TTreeCache"")->GetStreamerInfo(); ```; Produces crash with output:; ```; input_line_9:6:31: error: 'MissCache' is a protected member of 'TTreeCache'; default_delete<TTreeCache::MissCache> _1;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; input_line_9:7:16: error: 'MissCache' is a protected member of 'TTreeCache'; TTreeCache::MissCache* _0;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; Error in <Load>: Could not declare TEmulatedTuple<TTreeCache::MissCache*,default_delete<TTreeCache::MissCache> >. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; ```. There are also few other classes with similar problems:; ```; TClass::GetClass(""TMVA::VarTransformHandler"")->GetStreamerInfo();; TClass::GetClass(""TTreeCacheUnzip"")->GetStreamerInfo();; ```. Probably, issue https://github.com/root-project/root/issues/7276 connected with this one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8194
https://github.com/root-project/root/issues/8194:374,Availability,error,error,374,"To reproduce error, just call:; ```; TClass::GetClass(""TTreeCache"")->GetStreamerInfo(); ```; Produces crash with output:; ```; input_line_9:6:31: error: 'MissCache' is a protected member of 'TTreeCache'; default_delete<TTreeCache::MissCache> _1;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; input_line_9:7:16: error: 'MissCache' is a protected member of 'TTreeCache'; TTreeCache::MissCache* _0;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; Error in <Load>: Could not declare TEmulatedTuple<TTreeCache::MissCache*,default_delete<TTreeCache::MissCache> >. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; ```. There are also few other classes with similar problems:; ```; TClass::GetClass(""TMVA::VarTransformHandler"")->GetStreamerInfo();; TClass::GetClass(""TTreeCacheUnzip"")->GetStreamerInfo();; ```. Probably, issue https://github.com/root-project/root/issues/7276 connected with this one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8194
https://github.com/root-project/root/issues/8194:568,Availability,Error,Error,568,"To reproduce error, just call:; ```; TClass::GetClass(""TTreeCache"")->GetStreamerInfo(); ```; Produces crash with output:; ```; input_line_9:6:31: error: 'MissCache' is a protected member of 'TTreeCache'; default_delete<TTreeCache::MissCache> _1;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; input_line_9:7:16: error: 'MissCache' is a protected member of 'TTreeCache'; TTreeCache::MissCache* _0;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; Error in <Load>: Could not declare TEmulatedTuple<TTreeCache::MissCache*,default_delete<TTreeCache::MissCache> >. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; ```. There are also few other classes with similar problems:; ```; TClass::GetClass(""TMVA::VarTransformHandler"")->GetStreamerInfo();; TClass::GetClass(""TTreeCacheUnzip"")->GetStreamerInfo();; ```. Probably, issue https://github.com/root-project/root/issues/7276 connected with this one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8194
https://github.com/root-project/root/issues/8194:578,Performance,Load,Load,578,"To reproduce error, just call:; ```; TClass::GetClass(""TTreeCache"")->GetStreamerInfo(); ```; Produces crash with output:; ```; input_line_9:6:31: error: 'MissCache' is a protected member of 'TTreeCache'; default_delete<TTreeCache::MissCache> _1;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; input_line_9:7:16: error: 'MissCache' is a protected member of 'TTreeCache'; TTreeCache::MissCache* _0;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; Error in <Load>: Could not declare TEmulatedTuple<TTreeCache::MissCache*,default_delete<TTreeCache::MissCache> >. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; ```. There are also few other classes with similar problems:; ```; TClass::GetClass(""TMVA::VarTransformHandler"")->GetStreamerInfo();; TClass::GetClass(""TTreeCacheUnzip"")->GetStreamerInfo();; ```. Probably, issue https://github.com/root-project/root/issues/7276 connected with this one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8194
https://github.com/root-project/root/issues/8199:175,Testability,test,testing,175,"### Describe the solution you'd like; It would be nice if ROOT provided a C++ function to generate a sequence of pseudo-random numbers that are frequently used in electronics testing, see:; https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence. ### Describe alternatives you've considered; * Perl https://metacpan.org/pod/Math::PRBS; * Matlab https://es.mathworks.com/help/serdes/ref/prbs.html; * Python https://www.reddit.com/r/askscience/comments/63a10q/for_prbs3_with_clock_input_on_each_gate_how_can/; * online examples https://www3.advantest.com/documents/11348/33b24c8a-c8cb-40b8-a2a7-37515ba4abc8 https://gist.github.com/mattbierner/d6d989bf26a7e54e7135. ### Additional context; Pulse generators usually generate this random bits. To know whether things are working in your data acquisition, you have to compare with the expected values.; https://cryptography.fandom.com/wiki/Linear_feedback_shift_register. There are also some snippets in ROOT using it, like here: https://root.cern/doc/master/civetweb_8c_source.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8199
https://github.com/root-project/root/pull/8201:56,Modifiability,extend,extended,56,"In bab22d74786052ce346302f3dac967a60997283d, #8198, the extended plotting; option of RooCurve was broken in an attempt to fix polygons created; using the VLines() plotting option. While the `VLines()` (`wmode==Straight`) indeed needed fixing, `wmode==Extended`; worked as intended, see [ROOT-10931](https://sft.its.cern.ch/jira/browse/ROOT-10931) + its forum link. The comment for `wmode==Extended` was clarified a bit to prevent future; confusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8201
https://github.com/root-project/root/pull/8201:251,Modifiability,Extend,Extended,251,"In bab22d74786052ce346302f3dac967a60997283d, #8198, the extended plotting; option of RooCurve was broken in an attempt to fix polygons created; using the VLines() plotting option. While the `VLines()` (`wmode==Straight`) indeed needed fixing, `wmode==Extended`; worked as intended, see [ROOT-10931](https://sft.its.cern.ch/jira/browse/ROOT-10931) + its forum link. The comment for `wmode==Extended` was clarified a bit to prevent future; confusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8201
https://github.com/root-project/root/pull/8201:389,Modifiability,Extend,Extended,389,"In bab22d74786052ce346302f3dac967a60997283d, #8198, the extended plotting; option of RooCurve was broken in an attempt to fix polygons created; using the VLines() plotting option. While the `VLines()` (`wmode==Straight`) indeed needed fixing, `wmode==Extended`; worked as intended, see [ROOT-10931](https://sft.its.cern.ch/jira/browse/ROOT-10931) + its forum link. The comment for `wmode==Extended` was clarified a bit to prevent future; confusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8201
https://github.com/root-project/root/pull/8203:52,Usability,guid,guide,52,This tutorial was not properly displayed in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8203
https://github.com/root-project/root/issues/8205:132,Integrability,depend,depending,132,"### Explain what you would like to see improved; Users should be allowed to customize the underlying object class of DAOS objects,; depending on their particular scenario. Unless the user specifies otherwise, we will; probably default to `OC_SX`. ### Optional: share how it could be improved; These kind of backend-specific parameters should be exposed via a subclass of; `RNTupleWriteOptions`, e.g. `RNTupleDaosWriteOptions`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8205
https://github.com/root-project/root/issues/8205:345,Security,expose,exposed,345,"### Explain what you would like to see improved; Users should be allowed to customize the underlying object class of DAOS objects,; depending on their particular scenario. Unless the user specifies otherwise, we will; probably default to `OC_SX`. ### Optional: share how it could be improved; These kind of backend-specific parameters should be exposed via a subclass of; `RNTupleWriteOptions`, e.g. `RNTupleDaosWriteOptions`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8205
https://github.com/root-project/root/pull/8208:218,Availability,error,error-while-extracting-getrealvalue-of-roorealvar-defined-with-range,218,"The signature has to match the declaration in RooAbsArg.h:. ```C++; std::ostream& operator<<(std::ostream& os, const RooAbsArg &arg);; ```. This problem was spotted by users in the forum:; https://root-forum.cern.ch/t/error-while-extracting-getrealvalue-of-roorealvar-defined-with-range/44922/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8208
https://github.com/root-project/root/pull/8209:104,Performance,optimiz,optimization,104,"`RClusterDescriptor::ContainsColumn` is called as part of the main read; path and so is a candidate for optimization efforts:. ```; RColumn::MapPage; RPageSourceFile::PopulatePage; RNTupleDescriptor::FindClusterId; RClusterDescriptor::ContainsColumn; ```. A comparison of the test case `ntuple_extended` using perf and g++ 9.3; found that `unordered_map::find` appeared to be faster than; `unordered_map::count`. The generated assembly was also shorter for `find`. perf output for `ROOT::Experimental::RClusterDescriptor::ContainsColumn`:. ```; count: 4.67% 4.67% ntuple_extended libROOTNTuple.so; find: 3.85% 3.85% ntuple_extended libROOTNTuple.so; ```; I'm not sure if I entirely trust the results, because I am running inside a VM. But for every test iteration `find` has been faster than `count`. I do think having better assembly generation for `find` is more persuasive than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%ea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8209
https://github.com/root-project/root/pull/8209:276,Testability,test,test,276,"`RClusterDescriptor::ContainsColumn` is called as part of the main read; path and so is a candidate for optimization efforts:. ```; RColumn::MapPage; RPageSourceFile::PopulatePage; RNTupleDescriptor::FindClusterId; RClusterDescriptor::ContainsColumn; ```. A comparison of the test case `ntuple_extended` using perf and g++ 9.3; found that `unordered_map::find` appeared to be faster than; `unordered_map::count`. The generated assembly was also shorter for `find`. perf output for `ROOT::Experimental::RClusterDescriptor::ContainsColumn`:. ```; count: 4.67% 4.67% ntuple_extended libROOTNTuple.so; find: 3.85% 3.85% ntuple_extended libROOTNTuple.so; ```; I'm not sure if I entirely trust the results, because I am running inside a VM. But for every test iteration `find` has been faster than `count`. I do think having better assembly generation for `find` is more persuasive than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%ea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8209
https://github.com/root-project/root/pull/8209:749,Testability,test,test,749,"`RClusterDescriptor::ContainsColumn` is called as part of the main read; path and so is a candidate for optimization efforts:. ```; RColumn::MapPage; RPageSourceFile::PopulatePage; RNTupleDescriptor::FindClusterId; RClusterDescriptor::ContainsColumn; ```. A comparison of the test case `ntuple_extended` using perf and g++ 9.3; found that `unordered_map::find` appeared to be faster than; `unordered_map::count`. The generated assembly was also shorter for `find`. perf output for `ROOT::Experimental::RClusterDescriptor::ContainsColumn`:. ```; count: 4.67% 4.67% ntuple_extended libROOTNTuple.so; find: 3.85% 3.85% ntuple_extended libROOTNTuple.so; ```; I'm not sure if I entirely trust the results, because I am running inside a VM. But for every test iteration `find` has been faster than `count`. I do think having better assembly generation for `find` is more persuasive than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%ea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8209
https://github.com/root-project/root/pull/8209:1479,Testability,test,test,1479,"ainsColumn`:. ```; count: 4.67% 4.67% ntuple_extended libROOTNTuple.so; find: 3.85% 3.85% ntuple_extended libROOTNTuple.so; ```; I'm not sure if I entirely trust the results, because I am running inside a VM. But for every test iteration `find` has been faster than `count`. I do think having better assembly generation for `find` is more persuasive than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%eax. unordered_map.find; 3.85% 3.85% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; Percent│; │; │; │ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; │ mov 0x60(%rdi),%r8; 17.31 │ mov %rsi,%rax; │ xor %edx,%edx; │ div %r8; 11.54 │ mov 0x58(%rdi),%rax; │ mov (%rax,%rdx,8),%rax; 28.85 │ mov %rdx,%r9; │ test %rax,%rax; │ ↓ je 50; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8209
https://github.com/root-project/root/pull/8209:1527,Testability,test,test,1527,"ainsColumn`:. ```; count: 4.67% 4.67% ntuple_extended libROOTNTuple.so; find: 3.85% 3.85% ntuple_extended libROOTNTuple.so; ```; I'm not sure if I entirely trust the results, because I am running inside a VM. But for every test iteration `find` has been faster than `count`. I do think having better assembly generation for `find` is more persuasive than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%eax. unordered_map.find; 3.85% 3.85% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; Percent│; │; │; │ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; │ mov 0x60(%rdi),%r8; 17.31 │ mov %rsi,%rax; │ xor %edx,%edx; │ div %r8; 11.54 │ mov 0x58(%rdi),%rax; │ mov (%rax,%rdx,8),%rax; 28.85 │ mov %rdx,%r9; │ test %rax,%rax; │ ↓ je 50; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8209
https://github.com/root-project/root/pull/8209:1623,Testability,test,test,1623,"ause I am running inside a VM. But for every test iteration `find` has been faster than `count`. I do think having better assembly generation for `find` is more persuasive than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%eax. unordered_map.find; 3.85% 3.85% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; Percent│; │; │; │ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; │ mov 0x60(%rdi),%r8; 17.31 │ mov %rsi,%rax; │ xor %edx,%edx; │ div %r8; 11.54 │ mov 0x58(%rdi),%rax; │ mov (%rax,%rdx,8),%rax; 28.85 │ mov %rdx,%r9; │ test %rax,%rax; │ ↓ je 50; │ mov (%rax),%rcx; 1.92 │ mov 0x8(%rcx),%rdi; 40.38 │ ┌──jmp 41; │ │ nop; │28:│ mov (%rcx),%rcx; │ │ test %rcx,%rcx; │ │↓ je 50; │ │ mov 0x8(%rcx),%rdi; │ │ xor %edx,%edx; │ │ mo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8209
https://github.com/root-project/root/pull/8209:1670,Testability,test,test,1670,"ause I am running inside a VM. But for every test iteration `find` has been faster than `count`. I do think having better assembly generation for `find` is more persuasive than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%eax. unordered_map.find; 3.85% 3.85% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; Percent│; │; │; │ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; │ mov 0x60(%rdi),%r8; 17.31 │ mov %rsi,%rax; │ xor %edx,%edx; │ div %r8; 11.54 │ mov 0x58(%rdi),%rax; │ mov (%rax,%rdx,8),%rax; 28.85 │ mov %rdx,%r9; │ test %rax,%rax; │ ↓ je 50; │ mov (%rax),%rcx; 1.92 │ mov 0x8(%rcx),%rdi; 40.38 │ ┌──jmp 41; │ │ nop; │28:│ mov (%rcx),%rcx; │ │ test %rcx,%rcx; │ │↓ je 50; │ │ mov 0x8(%rcx),%rdi; │ │ xor %edx,%edx; │ │ mo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8209
https://github.com/root-project/root/pull/8209:1870,Testability,test,test,1870," than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%eax. unordered_map.find; 3.85% 3.85% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; Percent│; │; │; │ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; │ mov 0x60(%rdi),%r8; 17.31 │ mov %rsi,%rax; │ xor %edx,%edx; │ div %r8; 11.54 │ mov 0x58(%rdi),%rax; │ mov (%rax,%rdx,8),%rax; 28.85 │ mov %rdx,%r9; │ test %rax,%rax; │ ↓ je 50; │ mov (%rax),%rcx; 1.92 │ mov 0x8(%rcx),%rdi; 40.38 │ ┌──jmp 41; │ │ nop; │28:│ mov (%rcx),%rcx; │ │ test %rcx,%rcx; │ │↓ je 50; │ │ mov 0x8(%rcx),%rdi; │ │ xor %edx,%edx; │ │ mov %rdi,%rax; │ │ div %r8; │ │ cmp %rdx,%r9; │ │↓ jne 50; │41:└─→cmp %rdi,%rsi; │ ↑ jne 28; │ mov $0x1,%eax; │ ← retq; │ nop; │50: xor %eax,%eax; │ ← retq; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8209
https://github.com/root-project/root/pull/8209:1903,Testability,test,test,1903," than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%eax. unordered_map.find; 3.85% 3.85% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; Percent│; │; │; │ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; │ mov 0x60(%rdi),%r8; 17.31 │ mov %rsi,%rax; │ xor %edx,%edx; │ div %r8; 11.54 │ mov 0x58(%rdi),%rax; │ mov (%rax,%rdx,8),%rax; 28.85 │ mov %rdx,%r9; │ test %rax,%rax; │ ↓ je 50; │ mov (%rax),%rcx; 1.92 │ mov 0x8(%rcx),%rdi; 40.38 │ ┌──jmp 41; │ │ nop; │28:│ mov (%rcx),%rcx; │ │ test %rcx,%rcx; │ │↓ je 50; │ │ mov 0x8(%rcx),%rdi; │ │ xor %edx,%edx; │ │ mov %rdi,%rax; │ │ div %r8; │ │ cmp %rdx,%r9; │ │↓ jne 50; │41:└─→cmp %rdi,%rsi; │ ↑ jne 28; │ mov $0x1,%eax; │ ← retq; │ nop; │50: xor %eax,%eax; │ ← retq; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8209
https://github.com/root-project/root/pull/8209:2500,Testability,test,test,2500," than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%eax. unordered_map.find; 3.85% 3.85% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; Percent│; │; │; │ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; │ mov 0x60(%rdi),%r8; 17.31 │ mov %rsi,%rax; │ xor %edx,%edx; │ div %r8; 11.54 │ mov 0x58(%rdi),%rax; │ mov (%rax,%rdx,8),%rax; 28.85 │ mov %rdx,%r9; │ test %rax,%rax; │ ↓ je 50; │ mov (%rax),%rcx; 1.92 │ mov 0x8(%rcx),%rdi; 40.38 │ ┌──jmp 41; │ │ nop; │28:│ mov (%rcx),%rcx; │ │ test %rcx,%rcx; │ │↓ je 50; │ │ mov 0x8(%rcx),%rdi; │ │ xor %edx,%edx; │ │ mov %rdi,%rax; │ │ div %r8; │ │ cmp %rdx,%r9; │ │↓ jne 50; │41:└─→cmp %rdi,%rsi; │ ↑ jne 28; │ mov $0x1,%eax; │ ← retq; │ nop; │50: xor %eax,%eax; │ ← retq; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8209
https://github.com/root-project/root/pull/8209:2628,Testability,test,test,2628," than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%eax. unordered_map.find; 3.85% 3.85% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; Percent│; │; │; │ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; │ mov 0x60(%rdi),%r8; 17.31 │ mov %rsi,%rax; │ xor %edx,%edx; │ div %r8; 11.54 │ mov 0x58(%rdi),%rax; │ mov (%rax,%rdx,8),%rax; 28.85 │ mov %rdx,%r9; │ test %rax,%rax; │ ↓ je 50; │ mov (%rax),%rcx; 1.92 │ mov 0x8(%rcx),%rdi; 40.38 │ ┌──jmp 41; │ │ nop; │28:│ mov (%rcx),%rcx; │ │ test %rcx,%rcx; │ │↓ je 50; │ │ mov 0x8(%rcx),%rdi; │ │ xor %edx,%edx; │ │ mov %rdi,%rax; │ │ div %r8; │ │ cmp %rdx,%r9; │ │↓ jne 50; │41:└─→cmp %rdi,%rsi; │ ↑ jne 28; │ mov $0x1,%eax; │ ← retq; │ nop; │50: xor %eax,%eax; │ ← retq; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8209
https://github.com/root-project/root/pull/8210:106,Integrability,interface,interface,106,"Co-authored-by: Jakob Blomer. This commit is a proof-of-concept `MapV` implementation for floats. If; the interface is approved, the remaining mappable types will done too. Spun off from https://github.com/root-project/root/pull/7112",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8210
https://github.com/root-project/root/pull/8212:160,Deployability,patch,patches,160,- Warnings about deprecated implicit declaration of copy ctor/assignment.; - Spurious trailing semicolons on function definitions. This could also go into 6.24-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8212
https://github.com/root-project/root/issues/8216:157,Deployability,release,releases,157,"Starting from ROOT 6.24.00 we support WLCG Bearer Tokens [1] through Davix, but we still are missing infrastructure for testing them.; [1] https://root.cern/releases/release-62400/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8216
https://github.com/root-project/root/issues/8216:166,Deployability,release,release-,166,"Starting from ROOT 6.24.00 we support WLCG Bearer Tokens [1] through Davix, but we still are missing infrastructure for testing them.; [1] https://root.cern/releases/release-62400/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8216
https://github.com/root-project/root/issues/8216:120,Testability,test,testing,120,"Starting from ROOT 6.24.00 we support WLCG Bearer Tokens [1] through Davix, but we still are missing infrastructure for testing them.; [1] https://root.cern/releases/release-62400/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8216
https://github.com/root-project/root/pull/8219:431,Deployability,Update,Update,431,"1. Add new TCanvas when RBrowser created via calling `new TBrowser`. Used in `df013_InspectAnalysis.C` macro; 2. Also select `ROOT Files` folder when `new TBrowser(""b"", dfDirectory);` called.; 3. Fix problem with updating of TWebCanvas - one have to set some private members in TCanvas; 4. Fix minor problems in JSROOT with TF1, TH1 and TLegend drawing; 5. All RDF tutorials correctly run with web mode `root --web` ; 6. Add `pad->Update()` in `df013_InspectAnalysis.C` macro to correctly update canvas at the end",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8219
https://github.com/root-project/root/pull/8219:489,Deployability,update,update,489,"1. Add new TCanvas when RBrowser created via calling `new TBrowser`. Used in `df013_InspectAnalysis.C` macro; 2. Also select `ROOT Files` folder when `new TBrowser(""b"", dfDirectory);` called.; 3. Fix problem with updating of TWebCanvas - one have to set some private members in TCanvas; 4. Fix minor problems in JSROOT with TF1, TH1 and TLegend drawing; 5. All RDF tutorials correctly run with web mode `root --web` ; 6. Add `pad->Update()` in `df013_InspectAnalysis.C` macro to correctly update canvas at the end",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8219
https://github.com/root-project/root/pull/8221:333,Availability,failure,failures,333,"gcc11 uses the `no_unique_address` attribute in its implementation of `std::tuple`; (which is then used by `std::unique_ptr`). However, it spells it; `__no_unique_address__`, which cling doesn't recognize. This can result; in having differing memory layouts for structures in compiled code versus; cling, which will cause mysterious failures. Patch cling to recognize `__no_unique_address__` as a synonym; for no_unique_address. See issue #8071. This should probably also go to 6.24-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8221
https://github.com/root-project/root/pull/8221:343,Deployability,Patch,Patch,343,"gcc11 uses the `no_unique_address` attribute in its implementation of `std::tuple`; (which is then used by `std::unique_ptr`). However, it spells it; `__no_unique_address__`, which cling doesn't recognize. This can result; in having differing memory layouts for structures in compiled code versus; cling, which will cause mysterious failures. Patch cling to recognize `__no_unique_address__` as a synonym; for no_unique_address. See issue #8071. This should probably also go to 6.24-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8221
https://github.com/root-project/root/pull/8221:483,Deployability,patch,patches,483,"gcc11 uses the `no_unique_address` attribute in its implementation of `std::tuple`; (which is then used by `std::unique_ptr`). However, it spells it; `__no_unique_address__`, which cling doesn't recognize. This can result; in having differing memory layouts for structures in compiled code versus; cling, which will cause mysterious failures. Patch cling to recognize `__no_unique_address__` as a synonym; for no_unique_address. See issue #8071. This should probably also go to 6.24-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8221
https://github.com/root-project/root/pull/8222:419,Deployability,patch,patches,419,"TBufferFile::ReadObjectAny does not correctly support schema evolution,; because the fact that there is a conversion never gets passed to the; streamer. This was originally reported in ROOT-8367. See there for a reproducer.; This implements the fix proposed in that report. ATLAS trigger code relies on this. I currently have a workaround in ATLAS,; but i'd like to be able to remove that. Should probably go into 6.24-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8222
https://github.com/root-project/root/pull/8224:236,Usability,guid,guide,236,"Try to better fix https://github.com/root-project/root/issues/8051; In the files `Vector2-4-3D.h` the definitions in the fwd files are now duplicated, ; in order typedef like `PtEtaPhiMVector` appears defined in `Vector4D.h` in the ref guide; as it is the file users should include.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8224
https://github.com/root-project/root/issues/8226:30,Usability,clear,clear,30,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following is a self-contained reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main(); {; ROOT::RDataFrame(1000).Define(""x"", [] { return 42; }).Snapshot<int>(""t"", ""f.root"", {""x""});. ROOT::EnableImplicitMT();; auto df_bkg = ROOT::RDataFrame(""t"", ""f.root"");; ROOT::RDF::RSnapshotOptions opts;; opts.fAutoFlush = 10;; df_bkg.Snapshot<int>(""somedir/DecayTree"", ""bkg.root"", {""x""}, opts);; }; ```. The cause of the crash is a use-after-delete or a double-delete, caused by the following lines in `TFileMerger::MergeOne` which wrongly setup the subdirectory (owned by the parent file, owned by RDF) for deletion. Deletion of the subdirectory in turn causes the deletion of the output TTree that RDF is still using:. ```cpp; 556 TList dirtodelete;; 557 auto getDirectory = [&dirtodelete](TDirectory *parent, const char *name, const TString &pathname); 558 {; 559 TDirectory *result = dynamic_cast<TDirectory*>(parent->GetList()->FindObject(name));; 560 if (!result); 561 result = parent->GetDirectory(pathname);; 562 else; 563 dirtodelete.Add(result);; 564; 565 return result;; 566 };; ```. The bug affects any application using TFileMerger this way, of course, not just RDataFrame::Snapshot, but that's the most prominent case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8226
https://github.com/root-project/root/pull/8227:8,Availability,error,error,8,"Improve error message when the requested type doesn't match the on-disk type:; ```cpp; // underlying column is a double; auto view = ntuple->GetView<float>(""myDouble"");; ```. Before:; ```; Unexpected column type: Real64 of column #0 for field myDouble; ```; After:; ```; On-disk type `Real64` of column #0 for field `myDouble` is not convertible to requested type `Real32`; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/pull/8227:14,Integrability,message,message,14,"Improve error message when the requested type doesn't match the on-disk type:; ```cpp; // underlying column is a double; auto view = ntuple->GetView<float>(""myDouble"");; ```. Before:; ```; Unexpected column type: Real64 of column #0 for field myDouble; ```; After:; ```; On-disk type `Real64` of column #0 for field `myDouble` is not convertible to requested type `Real32`; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8227
https://github.com/root-project/root/issues/8232:1892,Deployability,update,updates,1892,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently there is a setup step done in the client before actually starting the distributed computations. During the setup, a list of ranges of entries from the original dataset is computed. The logic is as follows:; 1. For each file of the dataset, open it and compute a list of all the clusters in the file.; 2. From the list of all clusters of all files, divide it into groups of clusters (`Range`s) depending on the `npartitions` parameter of the dataframe. Each `Range` will be assigned its own task in the distributed resources. The point 1. above can be particularly expensive to run since it relies on `TFile::Open` . If the files of the dataset are stored remotely, the overhead adds up pretty quickly. The call happens specifically in:; https://github.com/root-project/root/blob/db3d4240abbda1c946fd2a7af08544cf1b357911/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Ideally we could avoid calling TFile::Open in the client. @Axel-Naumann proposed on mattermost to estimate the number of clusters of each file depending on its size and consequently compute the number of tasks to run on the distributed resources:; ```; If you have these files:. 50MB; 100MB; 300MB; 3GB. then I'd translate that to cluster estimates:. 2; 3; 10; 100. and split this into n tasks accordingly.; ```. The single task in the distributed worker would then be responsible to open only the file(s) where the estimated clusters should be stored. This needs to be explored. ### Additional context; <!--; Add any other context about the problem here.; -->; Thanks to @stwunsch for bringing this up. This issue will keep track of further discussion and updates on the matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8232
https://github.com/root-project/root/issues/8232:514,Integrability,depend,depending,514,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently there is a setup step done in the client before actually starting the distributed computations. During the setup, a list of ranges of entries from the original dataset is computed. The logic is as follows:; 1. For each file of the dataset, open it and compute a list of all the clusters in the file.; 2. From the list of all clusters of all files, divide it into groups of clusters (`Range`s) depending on the `npartitions` parameter of the dataframe. Each `Range` will be assigned its own task in the distributed resources. The point 1. above can be particularly expensive to run since it relies on `TFile::Open` . If the files of the dataset are stored remotely, the overhead adds up pretty quickly. The call happens specifically in:; https://github.com/root-project/root/blob/db3d4240abbda1c946fd2a7af08544cf1b357911/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Ideally we could avoid calling TFile::Open in the client. @Axel-Naumann proposed on mattermost to estimate the number of clusters of each file depending on its size and consequently compute the number of tasks to run on the distributed resources:; ```; If you have these files:. 50MB; 100MB; 300MB; 3GB. then I'd translate that to cluster estimates:. 2; 3; 10; 100. and split this into n tasks accordingly.; ```. The single task in the distributed worker would then be responsible to open only the file(s) where the estimated clusters should be stored. This needs to be explored. ### Additional context; <!--; Add any other context about the problem here.; -->; Thanks to @stwunsch for bringing this up. This issue will keep track of further discussion and updates on the matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8232
https://github.com/root-project/root/issues/8232:1278,Integrability,depend,depending,1278,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently there is a setup step done in the client before actually starting the distributed computations. During the setup, a list of ranges of entries from the original dataset is computed. The logic is as follows:; 1. For each file of the dataset, open it and compute a list of all the clusters in the file.; 2. From the list of all clusters of all files, divide it into groups of clusters (`Range`s) depending on the `npartitions` parameter of the dataframe. Each `Range` will be assigned its own task in the distributed resources. The point 1. above can be particularly expensive to run since it relies on `TFile::Open` . If the files of the dataset are stored remotely, the overhead adds up pretty quickly. The call happens specifically in:; https://github.com/root-project/root/blob/db3d4240abbda1c946fd2a7af08544cf1b357911/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Ideally we could avoid calling TFile::Open in the client. @Axel-Naumann proposed on mattermost to estimate the number of clusters of each file depending on its size and consequently compute the number of tasks to run on the distributed resources:; ```; If you have these files:. 50MB; 100MB; 300MB; 3GB. then I'd translate that to cluster estimates:. 2; 3; 10; 100. and split this into n tasks accordingly.; ```. The single task in the distributed worker would then be responsible to open only the file(s) where the estimated clusters should be stored. This needs to be explored. ### Additional context; <!--; Add any other context about the problem here.; -->; Thanks to @stwunsch for bringing this up. This issue will keep track of further discussion and updates on the matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8232
https://github.com/root-project/root/issues/8232:1152,Safety,avoid,avoid,1152,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently there is a setup step done in the client before actually starting the distributed computations. During the setup, a list of ranges of entries from the original dataset is computed. The logic is as follows:; 1. For each file of the dataset, open it and compute a list of all the clusters in the file.; 2. From the list of all clusters of all files, divide it into groups of clusters (`Range`s) depending on the `npartitions` parameter of the dataframe. Each `Range` will be assigned its own task in the distributed resources. The point 1. above can be particularly expensive to run since it relies on `TFile::Open` . If the files of the dataset are stored remotely, the overhead adds up pretty quickly. The call happens specifically in:; https://github.com/root-project/root/blob/db3d4240abbda1c946fd2a7af08544cf1b357911/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Ideally we could avoid calling TFile::Open in the client. @Axel-Naumann proposed on mattermost to estimate the number of clusters of each file depending on its size and consequently compute the number of tasks to run on the distributed resources:; ```; If you have these files:. 50MB; 100MB; 300MB; 3GB. then I'd translate that to cluster estimates:. 2; 3; 10; 100. and split this into n tasks accordingly.; ```. The single task in the distributed worker would then be responsible to open only the file(s) where the estimated clusters should be stored. This needs to be explored. ### Additional context; <!--; Add any other context about the problem here.; -->; Thanks to @stwunsch for bringing this up. This issue will keep track of further discussion and updates on the matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8232
https://github.com/root-project/root/issues/8232:306,Testability,log,logic,306,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently there is a setup step done in the client before actually starting the distributed computations. During the setup, a list of ranges of entries from the original dataset is computed. The logic is as follows:; 1. For each file of the dataset, open it and compute a list of all the clusters in the file.; 2. From the list of all clusters of all files, divide it into groups of clusters (`Range`s) depending on the `npartitions` parameter of the dataframe. Each `Range` will be assigned its own task in the distributed resources. The point 1. above can be particularly expensive to run since it relies on `TFile::Open` . If the files of the dataset are stored remotely, the overhead adds up pretty quickly. The call happens specifically in:; https://github.com/root-project/root/blob/db3d4240abbda1c946fd2a7af08544cf1b357911/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Ideally we could avoid calling TFile::Open in the client. @Axel-Naumann proposed on mattermost to estimate the number of clusters of each file depending on its size and consequently compute the number of tasks to run on the distributed resources:; ```; If you have these files:. 50MB; 100MB; 300MB; 3GB. then I'd translate that to cluster estimates:. 2; 3; 10; 100. and split this into n tasks accordingly.; ```. The single task in the distributed worker would then be responsible to open only the file(s) where the estimated clusters should be stored. This needs to be explored. ### Additional context; <!--; Add any other context about the problem here.; -->; Thanks to @stwunsch for bringing this up. This issue will keep track of further discussion and updates on the matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8232
https://github.com/root-project/root/pull/8238:76,Integrability,message,messages,76,Also avoid some heap allocations of `RooArgSet`s in `RooAbsPdf`. See commit messages for more information. The leak was a problem reported in the forum:; https://root-forum.cern.ch/t/roomomentmorph-slow-memory-leak/45062,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8238
https://github.com/root-project/root/pull/8238:5,Safety,avoid,avoid,5,Also avoid some heap allocations of `RooArgSet`s in `RooAbsPdf`. See commit messages for more information. The leak was a problem reported in the forum:; https://root-forum.cern.ch/t/roomomentmorph-slow-memory-leak/45062,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8238
https://github.com/root-project/root/pull/8240:332,Energy Efficiency,schedul,schedules,332,"In this PR I implement the skeleton of the batch compute library as well as the new class RooFitDriver, which manages all the computations that need to be done in a fit and redirects them to the RooBatchCompute library. RooFitDriver: scans the computation graph for the dependencies, handles the memory needed for the computations, schedules the order of the computations (in the future it will also schedule multi-threaded computations). In other words it ""drives"" the computation library. RooBatchCompute: the library responsible for performing the actual computations. Each instance of it (eg RooBatchCompute_AVX, RooBatchCompute_CUDA etc) has architecture-specific code. To use it, one (a PDF or another RooAbsReal class) should call rbc::dispatch() and provide the enum name of the computing function to be used, the array in which the output should be store, the number of events and an rbc::DataMap object which holds the values for every parameter and observable in the fit model.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:400,Energy Efficiency,schedul,schedule,400,"In this PR I implement the skeleton of the batch compute library as well as the new class RooFitDriver, which manages all the computations that need to be done in a fit and redirects them to the RooBatchCompute library. RooFitDriver: scans the computation graph for the dependencies, handles the memory needed for the computations, schedules the order of the computations (in the future it will also schedule multi-threaded computations). In other words it ""drives"" the computation library. RooBatchCompute: the library responsible for performing the actual computations. Each instance of it (eg RooBatchCompute_AVX, RooBatchCompute_CUDA etc) has architecture-specific code. To use it, one (a PDF or another RooAbsReal class) should call rbc::dispatch() and provide the enum name of the computing function to be used, the array in which the output should be store, the number of events and an rbc::DataMap object which holds the values for every parameter and observable in the fit model.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:270,Integrability,depend,dependencies,270,"In this PR I implement the skeleton of the batch compute library as well as the new class RooFitDriver, which manages all the computations that need to be done in a fit and redirects them to the RooBatchCompute library. RooFitDriver: scans the computation graph for the dependencies, handles the memory needed for the computations, schedules the order of the computations (in the future it will also schedule multi-threaded computations). In other words it ""drives"" the computation library. RooBatchCompute: the library responsible for performing the actual computations. Each instance of it (eg RooBatchCompute_AVX, RooBatchCompute_CUDA etc) has architecture-specific code. To use it, one (a PDF or another RooAbsReal class) should call rbc::dispatch() and provide the enum name of the computing function to be used, the array in which the output should be store, the number of events and an rbc::DataMap object which holds the values for every parameter and observable in the fit model.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:409,Performance,multi-thread,multi-threaded,409,"In this PR I implement the skeleton of the batch compute library as well as the new class RooFitDriver, which manages all the computations that need to be done in a fit and redirects them to the RooBatchCompute library. RooFitDriver: scans the computation graph for the dependencies, handles the memory needed for the computations, schedules the order of the computations (in the future it will also schedule multi-threaded computations). In other words it ""drives"" the computation library. RooBatchCompute: the library responsible for performing the actual computations. Each instance of it (eg RooBatchCompute_AVX, RooBatchCompute_CUDA etc) has architecture-specific code. To use it, one (a PDF or another RooAbsReal class) should call rbc::dispatch() and provide the enum name of the computing function to be used, the array in which the output should be store, the number of events and an rbc::DataMap object which holds the values for every parameter and observable in the fit model.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/pull/8240:536,Performance,perform,performing,536,"In this PR I implement the skeleton of the batch compute library as well as the new class RooFitDriver, which manages all the computations that need to be done in a fit and redirects them to the RooBatchCompute library. RooFitDriver: scans the computation graph for the dependencies, handles the memory needed for the computations, schedules the order of the computations (in the future it will also schedule multi-threaded computations). In other words it ""drives"" the computation library. RooBatchCompute: the library responsible for performing the actual computations. Each instance of it (eg RooBatchCompute_AVX, RooBatchCompute_CUDA etc) has architecture-specific code. To use it, one (a PDF or another RooAbsReal class) should call rbc::dispatch() and provide the enum name of the computing function to be used, the array in which the output should be store, the number of events and an rbc::DataMap object which holds the values for every parameter and observable in the fit model.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8240
https://github.com/root-project/root/issues/8245:39,Testability,test,tests,39,"On my system I get; ```; The following tests FAILED:; 1061 - tutorial-roofit-rf208_convolution-py (Failed); 1063 - tutorial-roofit-rf210_angularconv-py (Failed); 1064 - tutorial-roofit-rf211_paramconv-py (Failed); 1095 - tutorial-roofit-rf512_wsfactory_oper-py (Failed); ```. The reason seems to be that I'm building without FFTW, and while the macro versions of those tests are correctly vetoed:; https://github.com/root-project/root/blob/098dfcf94a3939597488fef9ee128b3d2e1e591f/tutorials/CMakeLists.txt#L191-L198; similar action is missing for the versions written in Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8245
https://github.com/root-project/root/issues/8245:369,Testability,test,tests,369,"On my system I get; ```; The following tests FAILED:; 1061 - tutorial-roofit-rf208_convolution-py (Failed); 1063 - tutorial-roofit-rf210_angularconv-py (Failed); 1064 - tutorial-roofit-rf211_paramconv-py (Failed); 1095 - tutorial-roofit-rf512_wsfactory_oper-py (Failed); ```. The reason seems to be that I'm building without FFTW, and while the macro versions of those tests are correctly vetoed:; https://github.com/root-project/root/blob/098dfcf94a3939597488fef9ee128b3d2e1e591f/tutorials/CMakeLists.txt#L191-L198; similar action is missing for the versions written in Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8245
https://github.com/root-project/root/pull/8248:147,Deployability,configurat,configurations,147,Some of the newly added python versions of RooFit tutorials from PR https://github.com/root-project/root/pull/8091 need to be vetoes in some build configurations. I checked the `CMakeLists.txt` file for vetes C++ tutorials to see where I was missing to veto a corresponding new python tutorial. This fixes issue https://github.com/root-project/root/issues/8245.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8248
https://github.com/root-project/root/pull/8248:147,Modifiability,config,configurations,147,Some of the newly added python versions of RooFit tutorials from PR https://github.com/root-project/root/pull/8091 need to be vetoes in some build configurations. I checked the `CMakeLists.txt` file for vetes C++ tutorials to see where I was missing to veto a corresponding new python tutorial. This fixes issue https://github.com/root-project/root/issues/8245.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8248
https://github.com/root-project/root/issues/8250:362,Availability,avail,available,362,"I'm creating a TTree with a class that inherits from a base class, without a problem. However, in the same program a couple lines later,; ```; TClass branchClass(c->GetBranch(""event"")->GetClassName());; if (branchClass.InheritsFrom(""dicttest::EventDis"") {....}; ```; fails with; ```; Warning in <TClass::TClass>: no dictionary for class dicttest::EventPythia is available; Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); ```. It works fine interactively but not when compiled. I have a demonstrator that's pretty minimal here:; https://github.com/kkauder/rootbreaker. This behavior is new to root 6.24, tested on Apple M1 and Ubuntu. The same code worked fine in root 6.20.04; I haven't been able to test other versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:373,Availability,Error,Error,373,"I'm creating a TTree with a class that inherits from a base class, without a problem. However, in the same program a couple lines later,; ```; TClass branchClass(c->GetBranch(""event"")->GetClassName());; if (branchClass.InheritsFrom(""dicttest::EventDis"") {....}; ```; fails with; ```; Warning in <TClass::TClass>: no dictionary for class dicttest::EventPythia is available; Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); ```. It works fine interactively but not when compiled. I have a demonstrator that's pretty minimal here:; https://github.com/kkauder/rootbreaker. This behavior is new to root 6.24, tested on Apple M1 and Ubuntu. The same code worked fine in root 6.20.04; I haven't been able to test other versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:451,Availability,Error,Error,451,"I'm creating a TTree with a class that inherits from a base class, without a problem. However, in the same program a couple lines later,; ```; TClass branchClass(c->GetBranch(""event"")->GetClassName());; if (branchClass.InheritsFrom(""dicttest::EventDis"") {....}; ```; fails with; ```; Warning in <TClass::TClass>: no dictionary for class dicttest::EventPythia is available; Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); ```. It works fine interactively but not when compiled. I have a demonstrator that's pretty minimal here:; https://github.com/kkauder/rootbreaker. This behavior is new to root 6.24, tested on Apple M1 and Ubuntu. The same code worked fine in root 6.20.04; I haven't been able to test other versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:39,Modifiability,inherit,inherits,39,"I'm creating a TTree with a class that inherits from a base class, without a problem. However, in the same program a couple lines later,; ```; TClass branchClass(c->GetBranch(""event"")->GetClassName());; if (branchClass.InheritsFrom(""dicttest::EventDis"") {....}; ```; fails with; ```; Warning in <TClass::TClass>: no dictionary for class dicttest::EventPythia is available; Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); ```. It works fine interactively but not when compiled. I have a demonstrator that's pretty minimal here:; https://github.com/kkauder/rootbreaker. This behavior is new to root 6.24, tested on Apple M1 and Ubuntu. The same code worked fine in root 6.20.04; I haven't been able to test other versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:219,Modifiability,Inherit,InheritsFrom,219,"I'm creating a TTree with a class that inherits from a base class, without a problem. However, in the same program a couple lines later,; ```; TClass branchClass(c->GetBranch(""event"")->GetClassName());; if (branchClass.InheritsFrom(""dicttest::EventDis"") {....}; ```; fails with; ```; Warning in <TClass::TClass>: no dictionary for class dicttest::EventPythia is available; Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); ```. It works fine interactively but not when compiled. I have a demonstrator that's pretty minimal here:; https://github.com/kkauder/rootbreaker. This behavior is new to root 6.24, tested on Apple M1 and Ubuntu. The same code worked fine in root 6.20.04; I haven't been able to test other versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:711,Testability,test,tested,711,"I'm creating a TTree with a class that inherits from a base class, without a problem. However, in the same program a couple lines later,; ```; TClass branchClass(c->GetBranch(""event"")->GetClassName());; if (branchClass.InheritsFrom(""dicttest::EventDis"") {....}; ```; fails with; ```; Warning in <TClass::TClass>: no dictionary for class dicttest::EventPythia is available; Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); ```. It works fine interactively but not when compiled. I have a demonstrator that's pretty minimal here:; https://github.com/kkauder/rootbreaker. This behavior is new to root 6.24, tested on Apple M1 and Ubuntu. The same code worked fine in root 6.20.04; I haven't been able to test other versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8250:808,Testability,test,test,808,"I'm creating a TTree with a class that inherits from a base class, without a problem. However, in the same program a couple lines later,; ```; TClass branchClass(c->GetBranch(""event"")->GetClassName());; if (branchClass.InheritsFrom(""dicttest::EventDis"") {....}; ```; fails with; ```; Warning in <TClass::TClass>: no dictionary for class dicttest::EventPythia is available; Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); ```. It works fine interactively but not when compiled. I have a demonstrator that's pretty minimal here:; https://github.com/kkauder/rootbreaker. This behavior is new to root 6.24, tested on Apple M1 and Ubuntu. The same code worked fine in root 6.20.04; I haven't been able to test other versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8250
https://github.com/root-project/root/issues/8252:507,Performance,perform,performs,507,"When using the `CONV` operator in TF1 with a different range, but re-using the same function, the new range is not used correctly. ; This code shows the problem: ; ```; auto f1 = new TF1(""f1"",""CONV(ROOT::Math::breitwigner_pdf(x,[1],[0]),gaus)"",0,10);; f1->SetParameters(5,1,1,0,1); ; f1->Draw(); // this is ok; // do convolution in a different range; auto f2 = new TF1(""f2"",""CONV(ROOT::Math::breitwigner_pdf(x,[1],[0]),gaus)"",10,20); ; f2->SetParameters(15,1,1,0,1);; f2->Draw(); // WRONG result because it performs convolution in 0,10 instead of 10,20; ```. This problem has been reported in https://root-forum.cern.ch/t/fitting-histograms-convolution/44973/7. A simple workaround is just to call:; ```; f2-SetRange(10,20); ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8252
https://github.com/root-project/root/issues/8252:664,Usability,simpl,simple,664,"When using the `CONV` operator in TF1 with a different range, but re-using the same function, the new range is not used correctly. ; This code shows the problem: ; ```; auto f1 = new TF1(""f1"",""CONV(ROOT::Math::breitwigner_pdf(x,[1],[0]),gaus)"",0,10);; f1->SetParameters(5,1,1,0,1); ; f1->Draw(); // this is ok; // do convolution in a different range; auto f2 = new TF1(""f2"",""CONV(ROOT::Math::breitwigner_pdf(x,[1],[0]),gaus)"",10,20); ; f2->SetParameters(15,1,1,0,1);; f2->Draw(); // WRONG result because it performs convolution in 0,10 instead of 10,20; ```. This problem has been reported in https://root-forum.cern.ch/t/fitting-histograms-convolution/44973/7. A simple workaround is just to call:; ```; f2-SetRange(10,20); ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8252
https://github.com/root-project/root/pull/8255:12,Availability,error,errors,12,"I got these errors while building from master on Fedora 32 with the following command `cmake -GNinja -Ddev=ON -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release` . ```; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx: In member function ‘virtual void ROOT::Experimental::RWebBrowserImp::BrowseObj(TObject*)’:; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:89:31: error: invalid use of incomplete type ‘class TSeqCollection’; 89 | if (gROOT->GetListOfFiles()->FindObject(obj)); | ^~; In file included from /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:15:; /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:59:7: note: forward declaration of ‘class TSeqCollection’; 59 | class TSeqCollection;; | ^~~~~~~~~~~~~~; ninja: build stopped: subcommand failed.; ```. Not sure if it's the right fix, but I thought it was worth mentioning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8255
https://github.com/root-project/root/pull/8255:425,Availability,error,error,425,"I got these errors while building from master on Fedora 32 with the following command `cmake -GNinja -Ddev=ON -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release` . ```; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx: In member function ‘virtual void ROOT::Experimental::RWebBrowserImp::BrowseObj(TObject*)’:; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:89:31: error: invalid use of incomplete type ‘class TSeqCollection’; 89 | if (gROOT->GetListOfFiles()->FindObject(obj)); | ^~; In file included from /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:15:; /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:59:7: note: forward declaration of ‘class TSeqCollection’; 59 | class TSeqCollection;; | ^~~~~~~~~~~~~~; ninja: build stopped: subcommand failed.; ```. Not sure if it's the right fix, but I thought it was worth mentioning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8255
https://github.com/root-project/root/pull/8255:153,Deployability,Release,Release,153,"I got these errors while building from master on Fedora 32 with the following command `cmake -GNinja -Ddev=ON -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release` . ```; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx: In member function ‘virtual void ROOT::Experimental::RWebBrowserImp::BrowseObj(TObject*)’:; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:89:31: error: invalid use of incomplete type ‘class TSeqCollection’; 89 | if (gROOT->GetListOfFiles()->FindObject(obj)); | ^~; In file included from /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:15:; /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:59:7: note: forward declaration of ‘class TSeqCollection’; 59 | class TSeqCollection;; | ^~~~~~~~~~~~~~; ninja: build stopped: subcommand failed.; ```. Not sure if it's the right fix, but I thought it was worth mentioning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8255
https://github.com/root-project/root/issues/8256:147,Availability,error,error,147,"Hello: . I came across a problem with ROOT recently, though the program gives the expected result, it ends with the 'corrupted size vs. prev_size' error. Here I show the minimum code that can reproduce the code. Running conditions:; * OS: Linux_CentOS7.7.1908-x86_64-gcc5.2.0; * ROOT: 6.08.00; * GCC: 5.2.0; ; code: ; file1: inc.cxx; ```cpp; #include <map>. // extern std::map<std::string, const double> UNITS;; std::map<std::string, const double> UNITS;; ```; file2: test.cxx; ```cpp; #include <map>. #include ""TGraphErrors.h""; #include ""TH1F.h""; #include ""TCanvas.h"". std::map<std::string, const double> UNITS = {; {"""",	1},; {""mm"", 1e-3},; };. int main() {; 	double value[] = {1, 2, 3, 4, 5};; TCanvas *c = new TCanvas(""c"", ""c"", 1200, 900);; 	TH1F *h = new TH1F(""h"", ""h"", 5, 0.5, 5.5);; 	TGraphErrors *g = new TGraphErrors();; 	for(int i=0; i<5; i++) {; 		g->SetPoint(i, i+1, value[i]);; 		h->Fill(value[i]);; 	}. 	g->SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd63800000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:15329,Availability,error,error,15329,"000-7fd6579a7000 r-xp 00000000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd6579a7000-7fd657ba6000 ---p 00008000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba6000-7fd657ba7000 r--p 00007000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba7000-7fd657ba8000 rw-p 00008000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba8000-7fd657bd6000 rw-p 00000000 00:00 0 ; 7fd657bd6000-7fd657e0c000 r-xp 00000000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd657e0c000-7fd65800c000 ---p 00236000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd65800c000-7fd658028000 r--p 00236000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd658028000-7fd658035000 rw-p 00252000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd658035000-7fd658039000 rw-p 00000000 00:00 0 ; 7fd658039000-7fd6580a0000 r-xp 00000000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6580a0000-7fd6582a0000 ---p 00067000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582a0000-7fd6582a4000 r--p 00067000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582a4000-7fd6582ab000 rw-p 0006b000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582ab000-7fd6582c0000 r-xp 00000000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6582c0000-7fd6584bf000 ---p 00015000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584bf000-7fd6584c0000 r--p 00014000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584c0000-7fd6584c1000 rw-p 00015000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584c1000-7fd6584c3000 r-xp 00000000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1; 7fd6584c3000-7fd6586c2000 ---p 00002000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1; 7fd6586c2000-7fd6586c3000 r--p 00001000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1bash-4.2$ ; ```. Obviously, the problem is the redefinition of UNITS; but if I comment out the draw statements, that the program can run smoothly, so it looks to me that somehow the draw method trigger the error.; And I can't reduce the definition of UNITS further, when I comment out any of the content, the error become 'double free or corruption'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:15432,Availability,error,error,15432,"000-7fd6579a7000 r-xp 00000000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd6579a7000-7fd657ba6000 ---p 00008000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba6000-7fd657ba7000 r--p 00007000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba7000-7fd657ba8000 rw-p 00008000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba8000-7fd657bd6000 rw-p 00000000 00:00 0 ; 7fd657bd6000-7fd657e0c000 r-xp 00000000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd657e0c000-7fd65800c000 ---p 00236000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd65800c000-7fd658028000 r--p 00236000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd658028000-7fd658035000 rw-p 00252000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd658035000-7fd658039000 rw-p 00000000 00:00 0 ; 7fd658039000-7fd6580a0000 r-xp 00000000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6580a0000-7fd6582a0000 ---p 00067000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582a0000-7fd6582a4000 r--p 00067000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582a4000-7fd6582ab000 rw-p 0006b000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582ab000-7fd6582c0000 r-xp 00000000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6582c0000-7fd6584bf000 ---p 00015000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584bf000-7fd6584c0000 r--p 00014000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584c0000-7fd6584c1000 rw-p 00015000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584c1000-7fd6584c3000 r-xp 00000000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1; 7fd6584c3000-7fd6586c2000 ---p 00002000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1; 7fd6586c2000-7fd6586c3000 r--p 00001000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1bash-4.2$ ; ```. Obviously, the problem is the redefinition of UNITS; but if I comment out the draw statements, that the program can run smoothly, so it looks to me that somehow the draw method trigger the error.; And I can't reduce the definition of UNITS further, when I comment out any of the content, the error become 'double free or corruption'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:15349,Energy Efficiency,reduce,reduce,15349,"000-7fd6579a7000 r-xp 00000000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd6579a7000-7fd657ba6000 ---p 00008000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba6000-7fd657ba7000 r--p 00007000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba7000-7fd657ba8000 rw-p 00008000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba8000-7fd657bd6000 rw-p 00000000 00:00 0 ; 7fd657bd6000-7fd657e0c000 r-xp 00000000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd657e0c000-7fd65800c000 ---p 00236000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd65800c000-7fd658028000 r--p 00236000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd658028000-7fd658035000 rw-p 00252000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd658035000-7fd658039000 rw-p 00000000 00:00 0 ; 7fd658039000-7fd6580a0000 r-xp 00000000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6580a0000-7fd6582a0000 ---p 00067000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582a0000-7fd6582a4000 r--p 00067000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582a4000-7fd6582ab000 rw-p 0006b000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582ab000-7fd6582c0000 r-xp 00000000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6582c0000-7fd6584bf000 ---p 00015000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584bf000-7fd6584c0000 r--p 00014000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584c0000-7fd6584c1000 rw-p 00015000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584c1000-7fd6584c3000 r-xp 00000000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1; 7fd6584c3000-7fd6586c2000 ---p 00002000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1; 7fd6586c2000-7fd6586c3000 r--p 00001000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1bash-4.2$ ; ```. Obviously, the problem is the redefinition of UNITS; but if I comment out the draw statements, that the program can run smoothly, so it looks to me that somehow the draw method trigger the error.; And I can't reduce the definition of UNITS further, when I comment out any of the content, the error become 'double free or corruption'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:1133,Modifiability,config,config,1133," error. Here I show the minimum code that can reproduce the code. Running conditions:; * OS: Linux_CentOS7.7.1908-x86_64-gcc5.2.0; * ROOT: 6.08.00; * GCC: 5.2.0; ; code: ; file1: inc.cxx; ```cpp; #include <map>. // extern std::map<std::string, const double> UNITS;; std::map<std::string, const double> UNITS;; ```; file2: test.cxx; ```cpp; #include <map>. #include ""TGraphErrors.h""; #include ""TH1F.h""; #include ""TCanvas.h"". std::map<std::string, const double> UNITS = {; {"""",	1},; {""mm"", 1e-3},; };. int main() {; 	double value[] = {1, 2, 3, 4, 5};; TCanvas *c = new TCanvas(""c"", ""c"", 1200, 900);; 	TH1F *h = new TH1F(""h"", ""h"", 5, 0.5, 5.5);; 	TGraphErrors *g = new TGraphErrors();; 	for(int i=0; i<5; i++) {; 		g->SetPoint(i, i+1, value[i]);; 		h->Fill(value[i]);; 	}. 	g->SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8000-7fd6400c3000 r--p 00000000 00:32 432514122 /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:468,Testability,test,test,468,"Hello: . I came across a problem with ROOT recently, though the program gives the expected result, it ends with the 'corrupted size vs. prev_size' error. Here I show the minimum code that can reproduce the code. Running conditions:; * OS: Linux_CentOS7.7.1908-x86_64-gcc5.2.0; * ROOT: 6.08.00; * GCC: 5.2.0; ; code: ; file1: inc.cxx; ```cpp; #include <map>. // extern std::map<std::string, const double> UNITS;; std::map<std::string, const double> UNITS;; ```; file2: test.cxx; ```cpp; #include <map>. #include ""TGraphErrors.h""; #include ""TH1F.h""; #include ""TCanvas.h"". std::map<std::string, const double> UNITS = {; {"""",	1},; {""mm"", 1e-3},; };. int main() {; 	double value[] = {1, 2, 3, 4, 5};; TCanvas *c = new TCanvas(""c"", ""c"", 1200, 900);; 	TH1F *h = new TH1F(""h"", ""h"", 5, 0.5, 5.5);; 	TGraphErrors *g = new TGraphErrors();; 	for(int i=0; i<5; i++) {; 		g->SetPoint(i, i+1, value[i]);; 		h->Fill(value[i]);; 	}. 	g->SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd63800000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:991,Testability,test,test,991,"Hello: . I came across a problem with ROOT recently, though the program gives the expected result, it ends with the 'corrupted size vs. prev_size' error. Here I show the minimum code that can reproduce the code. Running conditions:; * OS: Linux_CentOS7.7.1908-x86_64-gcc5.2.0; * ROOT: 6.08.00; * GCC: 5.2.0; ; code: ; file1: inc.cxx; ```cpp; #include <map>. // extern std::map<std::string, const double> UNITS;; std::map<std::string, const double> UNITS;; ```; file2: test.cxx; ```cpp; #include <map>. #include ""TGraphErrors.h""; #include ""TH1F.h""; #include ""TCanvas.h"". std::map<std::string, const double> UNITS = {; {"""",	1},; {""mm"", 1e-3},; };. int main() {; 	double value[] = {1, 2, 3, 4, 5};; TCanvas *c = new TCanvas(""c"", ""c"", 1200, 900);; 	TH1F *h = new TH1F(""h"", ""h"", 5, 0.5, 5.5);; 	TGraphErrors *g = new TGraphErrors();; 	for(int i=0; i<5; i++) {; 		g->SetPoint(i, i+1, value[i]);; 		h->Fill(value[i]);; 	}. 	g->SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd63800000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:1106,Testability,test,test,1106," it ends with the 'corrupted size vs. prev_size' error. Here I show the minimum code that can reproduce the code. Running conditions:; * OS: Linux_CentOS7.7.1908-x86_64-gcc5.2.0; * ROOT: 6.08.00; * GCC: 5.2.0; ; code: ; file1: inc.cxx; ```cpp; #include <map>. // extern std::map<std::string, const double> UNITS;; std::map<std::string, const double> UNITS;; ```; file2: test.cxx; ```cpp; #include <map>. #include ""TGraphErrors.h""; #include ""TH1F.h""; #include ""TCanvas.h"". std::map<std::string, const double> UNITS = {; {"""",	1},; {""mm"", 1e-3},; };. int main() {; 	double value[] = {1, 2, 3, 4, 5};; TCanvas *c = new TCanvas(""c"", ""c"", 1200, 900);; 	TH1F *h = new TH1F(""h"", ""h"", 5, 0.5, 5.5);; 	TGraphErrors *g = new TGraphErrors();; 	for(int i=0; i<5; i++) {; 		g->SetPoint(i, i+1, value[i]);; 		h->Fill(value[i]);; 	}. 	g->SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:1111,Testability,test,test,1111," it ends with the 'corrupted size vs. prev_size' error. Here I show the minimum code that can reproduce the code. Running conditions:; * OS: Linux_CentOS7.7.1908-x86_64-gcc5.2.0; * ROOT: 6.08.00; * GCC: 5.2.0; ; code: ; file1: inc.cxx; ```cpp; #include <map>. // extern std::map<std::string, const double> UNITS;; std::map<std::string, const double> UNITS;; ```; file2: test.cxx; ```cpp; #include <map>. #include ""TGraphErrors.h""; #include ""TH1F.h""; #include ""TCanvas.h"". std::map<std::string, const double> UNITS = {; {"""",	1},; {""mm"", 1e-3},; };. int main() {; 	double value[] = {1, 2, 3, 4, 5};; TCanvas *c = new TCanvas(""c"", ""c"", 1200, 900);; 	TH1F *h = new TH1F(""h"", ""h"", 5, 0.5, 5.5);; 	TGraphErrors *g = new TGraphErrors();; 	for(int i=0; i<5; i++) {; 		g->SetPoint(i, i+1, value[i]);; 		h->Fill(value[i]);; 	}. 	g->SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:1170,Testability,test,test,1170," the code. Running conditions:; * OS: Linux_CentOS7.7.1908-x86_64-gcc5.2.0; * ROOT: 6.08.00; * GCC: 5.2.0; ; code: ; file1: inc.cxx; ```cpp; #include <map>. // extern std::map<std::string, const double> UNITS;; std::map<std::string, const double> UNITS;; ```; file2: test.cxx; ```cpp; #include <map>. #include ""TGraphErrors.h""; #include ""TH1F.h""; #include ""TCanvas.h"". std::map<std::string, const double> UNITS = {; {"""",	1},; {""mm"", 1e-3},; };. int main() {; 	double value[] = {1, 2, 3, 4, 5};; TCanvas *c = new TCanvas(""c"", ""c"", 1200, 900);; 	TH1F *h = new TH1F(""h"", ""h"", 5, 0.5, 5.5);; 	TGraphErrors *g = new TGraphErrors();; 	for(int i=0; i<5; i++) {; 		g->SetPoint(i, i+1, value[i]);; 		h->Fill(value[i]);; 	}. 	g->SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8000-7fd6400c3000 r--p 00000000 00:32 432514122 /root/6.08.00/fonts/FreeSans.otf; 7fd6400c3000-7fd640142",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:1799,Testability,test,test,1799,">SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8000-7fd6400c3000 r--p 00000000 00:32 432514122 /root/6.08.00/fonts/FreeSans.otf; 7fd6400c3000-7fd640142000 r-xp 00000000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640142000-7fd640342000 ---p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640342000-7fd640344000 r--p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640344000-7fd640346000 rw-p 00081000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640346000-7fd640347000 rw-p 00000000 00:00 0 ; 7fd640742000-7fd640744000 r-xp 00000000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640744000-7fd640944000 ---p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640944000-7fd640945000 r--p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640945000-7fd640946000 rw-p 00003000 08:02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:1804,Testability,test,test,1804,">SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8000-7fd6400c3000 r--p 00000000 00:32 432514122 /root/6.08.00/fonts/FreeSans.otf; 7fd6400c3000-7fd640142000 r-xp 00000000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640142000-7fd640342000 ---p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640342000-7fd640344000 r--p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640344000-7fd640346000 rw-p 00081000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640346000-7fd640347000 rw-p 00000000 00:00 0 ; 7fd640742000-7fd640744000 r-xp 00000000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640744000-7fd640944000 ---p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640944000-7fd640945000 r--p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640945000-7fd640946000 rw-p 00003000 08:02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:1865,Testability,test,test,1865,">SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8000-7fd6400c3000 r--p 00000000 00:32 432514122 /root/6.08.00/fonts/FreeSans.otf; 7fd6400c3000-7fd640142000 r-xp 00000000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640142000-7fd640342000 ---p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640342000-7fd640344000 r--p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640344000-7fd640346000 rw-p 00081000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640346000-7fd640347000 rw-p 00000000 00:00 0 ; 7fd640742000-7fd640744000 r-xp 00000000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640744000-7fd640944000 ---p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640944000-7fd640945000 r--p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640945000-7fd640946000 rw-p 00003000 08:02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:1870,Testability,test,test,1870,">SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8000-7fd6400c3000 r--p 00000000 00:32 432514122 /root/6.08.00/fonts/FreeSans.otf; 7fd6400c3000-7fd640142000 r-xp 00000000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640142000-7fd640342000 ---p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640342000-7fd640344000 r--p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640344000-7fd640346000 rw-p 00081000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640346000-7fd640347000 rw-p 00000000 00:00 0 ; 7fd640742000-7fd640744000 r-xp 00000000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640744000-7fd640944000 ---p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640944000-7fd640945000 r--p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640945000-7fd640946000 rw-p 00003000 08:02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:1931,Testability,test,test,1931,">SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8000-7fd6400c3000 r--p 00000000 00:32 432514122 /root/6.08.00/fonts/FreeSans.otf; 7fd6400c3000-7fd640142000 r-xp 00000000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640142000-7fd640342000 ---p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640342000-7fd640344000 r--p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640344000-7fd640346000 rw-p 00081000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640346000-7fd640347000 rw-p 00000000 00:00 0 ; 7fd640742000-7fd640744000 r-xp 00000000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640744000-7fd640944000 ---p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640944000-7fd640945000 r--p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640945000-7fd640946000 rw-p 00003000 08:02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8256:1936,Testability,test,test,1936,">SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8000-7fd6400c3000 r--p 00000000 00:32 432514122 /root/6.08.00/fonts/FreeSans.otf; 7fd6400c3000-7fd640142000 r-xp 00000000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640142000-7fd640342000 ---p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640342000-7fd640344000 r--p 0007f000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640344000-7fd640346000 rw-p 00081000 00:32 432291140 /root/6.08.00/lib/libHistPainter.so.6.08.00; 7fd640346000-7fd640347000 rw-p 00000000 00:00 0 ; 7fd640742000-7fd640744000 r-xp 00000000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640744000-7fd640944000 ---p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640944000-7fd640945000 r--p 00002000 08:02 80985 /usr/lib64/libXau.so.6.0.0; 7fd640945000-7fd640946000 rw-p 00003000 08:02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8256
https://github.com/root-project/root/issues/8260:46,Safety,detect,detect,46,"ROOT's current copy of `FindTBB.cmake` cannot detect versions of newer TBBs without the header `tbb/tbb_stddef.h`. As a result, `TBB_VERSION` is unset and cannot be used for further checks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8260
https://github.com/root-project/root/issues/8261:348,Modifiability,Config,Configure,348,"### Describe the bug. ``` 1018 - tutorial-roofit-rf208_convolution-py (Failed); 1020 - tutorial-roofit-rf210_angularconv-py (Failed); 1021 - tutorial-roofit-rf211_paramconv-py (Failed); 1052 - tutorial-roofit-rf512_wsfactory_oper-py (Failed); ```; if ROOT is not built with fft3. ### Expected behavior. The tutorials are skipped. ### To Reproduce. Configure with testing, without fft, run tests. ### Additional context; Add to `fftw3_veto` in `tutorials/CMakeLists.txt`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8261
https://github.com/root-project/root/issues/8261:363,Testability,test,testing,363,"### Describe the bug. ``` 1018 - tutorial-roofit-rf208_convolution-py (Failed); 1020 - tutorial-roofit-rf210_angularconv-py (Failed); 1021 - tutorial-roofit-rf211_paramconv-py (Failed); 1052 - tutorial-roofit-rf512_wsfactory_oper-py (Failed); ```; if ROOT is not built with fft3. ### Expected behavior. The tutorials are skipped. ### To Reproduce. Configure with testing, without fft, run tests. ### Additional context; Add to `fftw3_veto` in `tutorials/CMakeLists.txt`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8261
https://github.com/root-project/root/issues/8261:389,Testability,test,tests,389,"### Describe the bug. ``` 1018 - tutorial-roofit-rf208_convolution-py (Failed); 1020 - tutorial-roofit-rf210_angularconv-py (Failed); 1021 - tutorial-roofit-rf211_paramconv-py (Failed); 1052 - tutorial-roofit-rf512_wsfactory_oper-py (Failed); ```; if ROOT is not built with fft3. ### Expected behavior. The tutorials are skipped. ### To Reproduce. Configure with testing, without fft, run tests. ### Additional context; Add to `fftw3_veto` in `tutorials/CMakeLists.txt`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8261
https://github.com/root-project/root/pull/8263:208,Integrability,wrap,wrapper,208,"Python2 headers still use the register keyword, which causes; issues when compiling ROOT with C++ 17, since that is also the; standard that will be used for jitting. In particular, when cppyy generates a C++ wrapper for a Python; callable parameter, CPyCppyy/API.h is jitted and so are the; Python headers. In Python2 with C++17, such jitting fails and,; as a result, the C++ wrapper can't be generated. This commit ignores -Wregister when in Python2 and C++ 17. Fixes #8152",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/pull/8263:376,Integrability,wrap,wrapper,376,"Python2 headers still use the register keyword, which causes; issues when compiling ROOT with C++ 17, since that is also the; standard that will be used for jitting. In particular, when cppyy generates a C++ wrapper for a Python; callable parameter, CPyCppyy/API.h is jitted and so are the; Python headers. In Python2 with C++17, such jitting fails and,; as a result, the C++ wrapper can't be generated. This commit ignores -Wregister when in Python2 and C++ 17. Fixes #8152",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8263
https://github.com/root-project/root/issues/8268:52,Availability,Error,Error,52,"- [x] Checked for duplicates. ### Describe the bug. Error reading object from file. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:1473,Availability,Error,Error,1473,"(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:1610,Availability,Error,Error,1610,"_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f558",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:3378,Availability,down,download,3378,"t; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0xb5fb752; array<string,2> first offset= 0 type=62 Emulation; string second offset= 0 type=300 ,stl=365, ctype=365, Emulation; ; StreamerInfo for class: array<string,2>, version=1, checksum=0x6b3ba626; string _M_elems offset= 0 type=320 ,stl=365, ctype=365. Unfortunately, I don't how to proceed further. ### Setup. 1. Reproduced with ROOT 6.22.08, 6.24 (today's version from the branch with patches); 2. Operating system Fedora 33 / centos7; 3. binary download / you built it yourself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:3317,Deployability,patch,patches,3317,"t; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0xb5fb752; array<string,2> first offset= 0 type=62 Emulation; string second offset= 0 type=300 ,stl=365, ctype=365, Emulation; ; StreamerInfo for class: array<string,2>, version=1, checksum=0x6b3ba626; string _M_elems offset= 0 type=320 ,stl=365, ctype=365. Unfortunately, I don't how to proceed further. ### Setup. 1. Reproduced with ROOT 6.22.08, 6.24 (today's version from the branch with patches); 2. Operating system Fedora 33 / centos7; 3. binary download / you built it yourself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:1432,Performance,Load,Load,1432,"(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:1549,Security,checksum,checksum,1549,"(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:2188,Security,checksum,checksum,2188,"ect output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0xb5fb752; array<string,2> first offset= 0 type=62 Emulation; string second offset= 0 type=300 ,stl=365, ctype=365, Emulation; ; StreamerInfo for class: array<string,2>, version=1, checksum=0x6b3ba626; string _M_elems offset= 0 type=320 ,stl=365, ctype=365. Unfortunately, I don't how to proceed further. ### Setup. 1. Reproduced with ROOT 6.22.08, 6.24 (today's version from the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:2413,Security,checksum,checksum,2413,"ect output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0xb5fb752; array<string,2> first offset= 0 type=62 Emulation; string second offset= 0 type=300 ,stl=365, ctype=365, Emulation; ; StreamerInfo for class: array<string,2>, version=1, checksum=0x6b3ba626; string _M_elems offset= 0 type=320 ,stl=365, ctype=365. Unfortunately, I don't how to proceed further. ### Setup. 1. Reproduced with ROOT 6.22.08, 6.24 (today's version from the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:2691,Security,checksum,checksum,2691,"t; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0xb5fb752; array<string,2> first offset= 0 type=62 Emulation; string second offset= 0 type=300 ,stl=365, ctype=365, Emulation; ; StreamerInfo for class: array<string,2>, version=1, checksum=0x6b3ba626; string _M_elems offset= 0 type=320 ,stl=365, ctype=365. Unfortunately, I don't how to proceed further. ### Setup. 1. Reproduced with ROOT 6.22.08, 6.24 (today's version from the branch with patches); 2. Operating system Fedora 33 / centos7; 3. binary download / you built it yourself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:2916,Security,checksum,checksum,2916,"t; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0xb5fb752; array<string,2> first offset= 0 type=62 Emulation; string second offset= 0 type=300 ,stl=365, ctype=365, Emulation; ; StreamerInfo for class: array<string,2>, version=1, checksum=0x6b3ba626; string _M_elems offset= 0 type=320 ,stl=365, ctype=365. Unfortunately, I don't how to proceed further. ### Setup. 1. Reproduced with ROOT 6.22.08, 6.24 (today's version from the branch with patches); 2. Operating system Fedora 33 / centos7; 3. binary download / you built it yourself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:3106,Security,checksum,checksum,3106,"t; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0xb5fb752; array<string,2> first offset= 0 type=62 Emulation; string second offset= 0 type=300 ,stl=365, ctype=365, Emulation; ; StreamerInfo for class: array<string,2>, version=1, checksum=0x6b3ba626; string _M_elems offset= 0 type=320 ,stl=365, ctype=365. Unfortunately, I don't how to proceed further. ### Setup. 1. Reproduced with ROOT 6.22.08, 6.24 (today's version from the branch with patches); 2. Operating system Fedora 33 / centos7; 3. binary download / you built it yourself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:193,Testability,test,test,193,"- [x] Checked for duplicates. ### Describe the bug. Error reading object from file. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:312,Testability,Test,TestClass,312,"- [x] Checked for duplicates. ### Describe the bug. Error reading object from file. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:351,Testability,Test,TestClass,351,"- [x] Checked for duplicates. ### Describe the bug. Error reading object from file. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:727,Testability,Test,TestClass,727,"- [x] Checked for duplicates. ### Describe the bug. Error reading object from file. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:756,Testability,Test,TestClass,756,"- [x] Checked for duplicates. ### Describe the bug. Error reading object from file. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:775,Testability,test,test,775,"- [x] Checked for duplicates. ### Describe the bug. Error reading object from file. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:805,Testability,Test,TestClass,805,"- [x] Checked for duplicates. ### Describe the bug. Error reading object from file. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:865,Testability,test,test,865,"- [x] Checked for duplicates. ### Describe the bug. Error reading object from file. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:988,Testability,test,test,988,"- [x] Checked for duplicates. ### Describe the bug. Error reading object from file. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:1031,Testability,Test,TestClass,1031,"ile. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:1144,Testability,test,test,1144,"ile. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:1265,Testability,test,test,1265,"lude ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<arra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:1285,Testability,test,test,1285,"""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:1403,Testability,test,test,1403,"y{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:1598,Testability,test,test,1598,"(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:1803,Testability,test,test,1803,"_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f558",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:2166,Testability,Test,TestClass,2166,"ect output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0xb5fb752; array<string,2> first offset= 0 type=62 Emulation; string second offset= 0 type=300 ,stl=365, ctype=365, Emulation; ; StreamerInfo for class: array<string,2>, version=1, checksum=0x6b3ba626; string _M_elems offset= 0 type=320 ,stl=365, ctype=365. Unfortunately, I don't how to proceed further. ### Setup. 1. Reproduced with ROOT 6.22.08, 6.24 (today's version from the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8268:2669,Testability,Test,TestClass,2669,"t; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0xb5fb752; array<string,2> first offset= 0 type=62 Emulation; string second offset= 0 type=300 ,stl=365, ctype=365, Emulation; ; StreamerInfo for class: array<string,2>, version=1, checksum=0x6b3ba626; string _M_elems offset= 0 type=320 ,stl=365, ctype=365. Unfortunately, I don't how to proceed further. ### Setup. 1. Reproduced with ROOT 6.22.08, 6.24 (today's version from the branch with patches); 2. Operating system Fedora 33 / centos7; 3. binary download / you built it yourself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8268
https://github.com/root-project/root/issues/8269:108,Availability,redundant,redundant,108,"### Explain what you would like to see improved; The TGCommandPlugin has an internal TTimer that I think is redundant. I don't understand why the function CheckRemote needs to be checked every one second, which also calls frame->Layout(). Shouldn't it be better to just check in the beginning with a TTimer::SingleShot? Or if gROOT->GetApplication() changes during lifetime, with a signal/slot ?. ```; fTimer = new TTimer(this, 1000);; fTimer->Reset();; fTimer->TurnOn();; ...; ////////////////////////////////////////////////////////////////////////////////; /// Handle timer event. Bool_t TGCommandPlugin::HandleTimer(TTimer *t); {; if ((fTimer == 0) || (t != fTimer)) return kTRUE;; CheckRemote("""");; return kTRUE;; }; void TGCommandPlugin::CheckRemote(const char * /*str*/); {; Pixel_t pxl;; TApplication *app = gROOT->GetApplication();; if (!app->InheritsFrom(""TRint"")); return;; TString sPrompt = ((TRint*)app)->GetPrompt();; Int_t end = sPrompt.Index("":root ["", 0);; if (end > 0 && end != kNPOS) {; // remote session; sPrompt.Remove(end);; gClient->GetColorByName(""#ff0000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(Form(""Command (%s):"", sPrompt.Data()));; }; else {; // local session; gClient->GetColorByName(""#000000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(""Command (local):"");; }; fHf->Layout();; }; ```; Alternatively, it would be nice to provide a function to stop the timer by the user, when performance is needed and you are sure that TApplication is always the same. ### Setup; 1. ROOT from git master; 2. Ubuntu 20; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:852,Modifiability,Inherit,InheritsFrom,852,"### Explain what you would like to see improved; The TGCommandPlugin has an internal TTimer that I think is redundant. I don't understand why the function CheckRemote needs to be checked every one second, which also calls frame->Layout(). Shouldn't it be better to just check in the beginning with a TTimer::SingleShot? Or if gROOT->GetApplication() changes during lifetime, with a signal/slot ?. ```; fTimer = new TTimer(this, 1000);; fTimer->Reset();; fTimer->TurnOn();; ...; ////////////////////////////////////////////////////////////////////////////////; /// Handle timer event. Bool_t TGCommandPlugin::HandleTimer(TTimer *t); {; if ((fTimer == 0) || (t != fTimer)) return kTRUE;; CheckRemote("""");; return kTRUE;; }; void TGCommandPlugin::CheckRemote(const char * /*str*/); {; Pixel_t pxl;; TApplication *app = gROOT->GetApplication();; if (!app->InheritsFrom(""TRint"")); return;; TString sPrompt = ((TRint*)app)->GetPrompt();; Int_t end = sPrompt.Index("":root ["", 0);; if (end > 0 && end != kNPOS) {; // remote session; sPrompt.Remove(end);; gClient->GetColorByName(""#ff0000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(Form(""Command (%s):"", sPrompt.Data()));; }; else {; // local session; gClient->GetColorByName(""#000000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(""Command (local):"");; }; fHf->Layout();; }; ```; Alternatively, it would be nice to provide a function to stop the timer by the user, when performance is needed and you are sure that TApplication is always the same. ### Setup; 1. ROOT from git master; 2. Ubuntu 20; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:1428,Performance,perform,performance,1428,"### Explain what you would like to see improved; The TGCommandPlugin has an internal TTimer that I think is redundant. I don't understand why the function CheckRemote needs to be checked every one second, which also calls frame->Layout(). Shouldn't it be better to just check in the beginning with a TTimer::SingleShot? Or if gROOT->GetApplication() changes during lifetime, with a signal/slot ?. ```; fTimer = new TTimer(this, 1000);; fTimer->Reset();; fTimer->TurnOn();; ...; ////////////////////////////////////////////////////////////////////////////////; /// Handle timer event. Bool_t TGCommandPlugin::HandleTimer(TTimer *t); {; if ((fTimer == 0) || (t != fTimer)) return kTRUE;; CheckRemote("""");; return kTRUE;; }; void TGCommandPlugin::CheckRemote(const char * /*str*/); {; Pixel_t pxl;; TApplication *app = gROOT->GetApplication();; if (!app->InheritsFrom(""TRint"")); return;; TString sPrompt = ((TRint*)app)->GetPrompt();; Int_t end = sPrompt.Index("":root ["", 0);; if (end > 0 && end != kNPOS) {; // remote session; sPrompt.Remove(end);; gClient->GetColorByName(""#ff0000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(Form(""Command (%s):"", sPrompt.Data()));; }; else {; // local session; gClient->GetColorByName(""#000000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(""Command (local):"");; }; fHf->Layout();; }; ```; Alternatively, it would be nice to provide a function to stop the timer by the user, when performance is needed and you are sure that TApplication is always the same. ### Setup; 1. ROOT from git master; 2. Ubuntu 20; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/issues/8269:108,Safety,redund,redundant,108,"### Explain what you would like to see improved; The TGCommandPlugin has an internal TTimer that I think is redundant. I don't understand why the function CheckRemote needs to be checked every one second, which also calls frame->Layout(). Shouldn't it be better to just check in the beginning with a TTimer::SingleShot? Or if gROOT->GetApplication() changes during lifetime, with a signal/slot ?. ```; fTimer = new TTimer(this, 1000);; fTimer->Reset();; fTimer->TurnOn();; ...; ////////////////////////////////////////////////////////////////////////////////; /// Handle timer event. Bool_t TGCommandPlugin::HandleTimer(TTimer *t); {; if ((fTimer == 0) || (t != fTimer)) return kTRUE;; CheckRemote("""");; return kTRUE;; }; void TGCommandPlugin::CheckRemote(const char * /*str*/); {; Pixel_t pxl;; TApplication *app = gROOT->GetApplication();; if (!app->InheritsFrom(""TRint"")); return;; TString sPrompt = ((TRint*)app)->GetPrompt();; Int_t end = sPrompt.Index("":root ["", 0);; if (end > 0 && end != kNPOS) {; // remote session; sPrompt.Remove(end);; gClient->GetColorByName(""#ff0000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(Form(""Command (%s):"", sPrompt.Data()));; }; else {; // local session; gClient->GetColorByName(""#000000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(""Command (local):"");; }; fHf->Layout();; }; ```; Alternatively, it would be nice to provide a function to stop the timer by the user, when performance is needed and you are sure that TApplication is always the same. ### Setup; 1. ROOT from git master; 2. Ubuntu 20; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8269
https://github.com/root-project/root/pull/8272:320,Testability,test,test,320,"The out-of-the-box iterator provided by cppyy is not fully; applicable in the case of TTreeReader: in a given iteration, the; entry number returned by the iterator is correct, but it is; always behind the entry number of the reader itself. This commit fixes such decoupling by relying on TTreeReader::Next(); and adds a test for it. Fixes #8183",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8272
https://github.com/root-project/root/pull/8274:99,Modifiability,inherit,inherit,99,"1. This automatically provides setter/getter methods and simplifies; access to fields. Now `RLine` inherit from `RAttrLine` and API changes are:; before: `line->AttrLine().SetWidth(10)`; now: `line->SetLineWidth(10)`; One still can do: `line1->AttrLine() = line2->AttrLine()` while RAttrLine class still provides method like; `RAttrLine& AttrLine() { return *this; }` . 2. Same done for RAttrFill, RAttrText, RAttrMarker and with used classes.; 3. Adjust tutorials and JSROOT code.; 4. Change RLegend class - split RLegend::REntry on two subclasses",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8274
https://github.com/root-project/root/pull/8274:69,Security,access,access,69,"1. This automatically provides setter/getter methods and simplifies; access to fields. Now `RLine` inherit from `RAttrLine` and API changes are:; before: `line->AttrLine().SetWidth(10)`; now: `line->SetLineWidth(10)`; One still can do: `line1->AttrLine() = line2->AttrLine()` while RAttrLine class still provides method like; `RAttrLine& AttrLine() { return *this; }` . 2. Same done for RAttrFill, RAttrText, RAttrMarker and with used classes.; 3. Adjust tutorials and JSROOT code.; 4. Change RLegend class - split RLegend::REntry on two subclasses",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8274
https://github.com/root-project/root/pull/8274:57,Usability,simpl,simplifies,57,"1. This automatically provides setter/getter methods and simplifies; access to fields. Now `RLine` inherit from `RAttrLine` and API changes are:; before: `line->AttrLine().SetWidth(10)`; now: `line->SetLineWidth(10)`; One still can do: `line1->AttrLine() = line2->AttrLine()` while RAttrLine class still provides method like; `RAttrLine& AttrLine() { return *this; }` . 2. Same done for RAttrFill, RAttrText, RAttrMarker and with used classes.; 3. Adjust tutorials and JSROOT code.; 4. Change RLegend class - split RLegend::REntry on two subclasses",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8274
https://github.com/root-project/root/pull/8275:8,Deployability,release,release,8,The new release includes some improvements:; * Implement #pragma clad ON/OFF/DEFAULT to control regions where clad is active; * Add getCode() interface for interactive use. See more at: https://github.com/vgvassilev/clad/blob/v0.8/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8275:236,Deployability,Release,ReleaseNotes,236,The new release includes some improvements:; * Implement #pragma clad ON/OFF/DEFAULT to control regions where clad is active; * Add getCode() interface for interactive use. See more at: https://github.com/vgvassilev/clad/blob/v0.8/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/pull/8275:142,Integrability,interface,interface,142,The new release includes some improvements:; * Implement #pragma clad ON/OFF/DEFAULT to control regions where clad is active; * Add getCode() interface for interactive use. See more at: https://github.com/vgvassilev/clad/blob/v0.8/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8275
https://github.com/root-project/root/issues/8276:860,Energy Efficiency,allocate,allocated,860,"### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following code:. ```cpp; #include <iostream>; #include <utility>; #include <vector>; #include <ROOT/RDFHelpers.hxx>. auto foo() {; double f = 42.;. auto fn = [f](std::vector<int>) { std::cout << f << std::endl; };; fn({});; auto f2 = ROOT::RDF::PassAsVec<1, int>(fn);; f2(3);; return f2;; }. int main() {; auto fn = foo();; fn(1);; return 0;; }; ```; prints. ```; 42; 42; 4.66901e-310; ```; instead of; ```; 42; 42; 42; ```. The problem is that the `PassAsVecHelper` type stores a reference to the the lambda function.; Valgrind does not see the problem (lambdas are stack-allocated), `-fsanitize=address` does.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8276
https://github.com/root-project/root/issues/8280:197,Deployability,configurat,configuration,197,"The code; ```; if (${CMAKE_MINIMUM_REQUIRED_VERSION} VERSION_GREATER_EQUAL ""3.10.0""); message(FATAL_ERROR ""Remove this condition""); ```; in the ROOT CMakeLists introduced in #6605 breaks the CMake configuration if another package sets a higher minimum version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8280
https://github.com/root-project/root/issues/8280:86,Integrability,message,message,86,"The code; ```; if (${CMAKE_MINIMUM_REQUIRED_VERSION} VERSION_GREATER_EQUAL ""3.10.0""); message(FATAL_ERROR ""Remove this condition""); ```; in the ROOT CMakeLists introduced in #6605 breaks the CMake configuration if another package sets a higher minimum version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8280
https://github.com/root-project/root/issues/8280:197,Modifiability,config,configuration,197,"The code; ```; if (${CMAKE_MINIMUM_REQUIRED_VERSION} VERSION_GREATER_EQUAL ""3.10.0""); message(FATAL_ERROR ""Remove this condition""); ```; in the ROOT CMakeLists introduced in #6605 breaks the CMake configuration if another package sets a higher minimum version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8280
https://github.com/root-project/root/issues/8281:244,Availability,error,error,244,"First reported here: https://bugs.gentoo.org/793002. To reproduce, it should be enough to configure with; ```; $ cmake .. -DCMAKE_C_COMPILER=gcc-11.1.0 -DCMAKE_CXX_COMPILER=g++-11.1.0 -DCMAKE_CXX_STANDARD=11 -Dminimal=ON; ```; to reproduce the error below; ```; Consolidate compiler generated dependencies of target Foundation_Stage1; [ 18%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from /srv/root/src/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from /srv/root/src/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:1075,Availability,error,error,1075,"-DCMAKE_CXX_STANDARD=11 -Dminimal=ON; ```; to reproduce the error below; ```; Consolidate compiler generated dependencies of target Foundation_Stage1; [ 18%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from /srv/root/src/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from /srv/root/src/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:1314,Availability,error,error,1314,"nversionRuleParser.cxx.o; In file included from /srv/root/src/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from /srv/root/src/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Foundation_Stage1.dir/build.make:90: core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:23284: core/foundation/CMakeFiles/Foundation_Stage1.dir/all] Error 2; make: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:1543,Availability,error,error,1543,"RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Foundation_Stage1.dir/build.make:90: core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:23284: core/foundation/CMakeFiles/Foundation_Stage1.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. The master branch seems to go past this point, so probably something needs to be backported (I tested with the tip of the 6.24 branch).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:2299,Availability,Error,Error,2299,"RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Foundation_Stage1.dir/build.make:90: core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:23284: core/foundation/CMakeFiles/Foundation_Stage1.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. The master branch seems to go past this point, so probably something needs to be backported (I tested with the tip of the 6.24 branch).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:2404,Availability,Error,Error,2404,"RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Foundation_Stage1.dir/build.make:90: core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:23284: core/foundation/CMakeFiles/Foundation_Stage1.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. The master branch seems to go past this point, so probably something needs to be backported (I tested with the tip of the 6.24 branch).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:2443,Availability,Error,Error,2443,"RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Foundation_Stage1.dir/build.make:90: core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:23284: core/foundation/CMakeFiles/Foundation_Stage1.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. The master branch seems to go past this point, so probably something needs to be backported (I tested with the tip of the 6.24 branch).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:293,Integrability,depend,dependencies,293,"First reported here: https://bugs.gentoo.org/793002. To reproduce, it should be enough to configure with; ```; $ cmake .. -DCMAKE_C_COMPILER=gcc-11.1.0 -DCMAKE_CXX_COMPILER=g++-11.1.0 -DCMAKE_CXX_STANDARD=11 -Dminimal=ON; ```; to reproduce the error below; ```; Consolidate compiler generated dependencies of target Foundation_Stage1; [ 18%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from /srv/root/src/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from /srv/root/src/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:90,Modifiability,config,configure,90,"First reported here: https://bugs.gentoo.org/793002. To reproduce, it should be enough to configure with; ```; $ cmake .. -DCMAKE_C_COMPILER=gcc-11.1.0 -DCMAKE_CXX_COMPILER=g++-11.1.0 -DCMAKE_CXX_STANDARD=11 -Dminimal=ON; ```; to reproduce the error below; ```; Consolidate compiler generated dependencies of target Foundation_Stage1; [ 18%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from /srv/root/src/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from /srv/root/src/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8281:2552,Testability,test,tested,2552,"RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Foundation_Stage1.dir/build.make:90: core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:23284: core/foundation/CMakeFiles/Foundation_Stage1.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. The master branch seems to go past this point, so probably something needs to be backported (I tested with the tip of the 6.24 branch).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8281
https://github.com/root-project/root/issues/8283:49,Performance,Perform,Performance,49,"### Explain what you would like to see improved; Performance counters (e.g., total bytes written, wall clock spent writing, etc.) should be added to the `RPageSinkFile` and `RPageSinkDaos` classes. The bare minimum should allow to compute the write throughput. ### Optional: share how it could be improved; In particular, four new `RCounter`s will be added: szWritePayload, timeWallWrite, timeWallZip, timeCpuWrite, timeCpuZip.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8283
https://github.com/root-project/root/issues/8283:249,Performance,throughput,throughput,249,"### Explain what you would like to see improved; Performance counters (e.g., total bytes written, wall clock spent writing, etc.) should be added to the `RPageSinkFile` and `RPageSinkDaos` classes. The bare minimum should allow to compute the write throughput. ### Optional: share how it could be improved; In particular, four new `RCounter`s will be added: szWritePayload, timeWallWrite, timeWallZip, timeCpuWrite, timeCpuZip.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8283
https://github.com/root-project/root/issues/8284:517,Availability,error,errors,517,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; TKeys in a TFile with the same name as the requested RNTuple will be attempted to be parsed as an RNTuple, leading to internal parser errors later on. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The RNTupleReader should check the type of the TKey before parsing (and throw an exception if there's no RNTuple with the requested name).; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Create a TFile with a TKey with a certain name, then try to open that file as an RNTuple.; ```cpp; std::string filename = ""some_file.root"";; {; auto file = std::make_unique<TFile>(filename.c_str(), ""RECREATE"", """", 209);; auto tree = std::make_unique<TTree>(""Events"", """");; file->Write();; file->Close();; tree.release();; }. auto ntuple = RNTupleReader::Open(""Events"", filename);; ```; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Root master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8284
https://github.com/root-project/root/issues/8284:1753,Availability,down,download,1753,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; TKeys in a TFile with the same name as the requested RNTuple will be attempted to be parsed as an RNTuple, leading to internal parser errors later on. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The RNTupleReader should check the type of the TKey before parsing (and throw an exception if there's no RNTuple with the requested name).; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Create a TFile with a TKey with a certain name, then try to open that file as an RNTuple.; ```cpp; std::string filename = ""some_file.root"";; {; auto file = std::make_unique<TFile>(filename.c_str(), ""RECREATE"", """", 209);; auto tree = std::make_unique<TTree>(""Events"", """");; file->Write();; file->Close();; tree.release();; }. auto ntuple = RNTupleReader::Open(""Events"", filename);; ```; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Root master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8284
https://github.com/root-project/root/issues/8284:1176,Deployability,release,release,1176,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; TKeys in a TFile with the same name as the requested RNTuple will be attempted to be parsed as an RNTuple, leading to internal parser errors later on. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The RNTupleReader should check the type of the TKey before parsing (and throw an exception if there's no RNTuple with the requested name).; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Create a TFile with a TKey with a certain name, then try to open that file as an RNTuple.; ```cpp; std::string filename = ""some_file.root"";; {; auto file = std::make_unique<TFile>(filename.c_str(), ""RECREATE"", """", 209);; auto tree = std::make_unique<TTree>(""Events"", """");; file->Write();; file->Close();; tree.release();; }. auto ntuple = RNTupleReader::Open(""Events"", filename);; ```; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Root master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8284
https://github.com/root-project/root/issues/8284:1735,Deployability,install,install,1735,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; TKeys in a TFile with the same name as the requested RNTuple will be attempted to be parsed as an RNTuple, leading to internal parser errors later on. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The RNTupleReader should check the type of the TKey before parsing (and throw an exception if there's no RNTuple with the requested name).; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Create a TFile with a TKey with a certain name, then try to open that file as an RNTuple.; ```cpp; std::string filename = ""some_file.root"";; {; auto file = std::make_unique<TFile>(filename.c_str(), ""RECREATE"", """", 209);; auto tree = std::make_unique<TTree>(""Events"", """");; file->Write();; file->Close();; tree.release();; }. auto ntuple = RNTupleReader::Open(""Events"", filename);; ```; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Root master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8284
https://github.com/root-project/root/issues/8284:1348,Safety,abort,aborting,1348,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; TKeys in a TFile with the same name as the requested RNTuple will be attempted to be parsed as an RNTuple, leading to internal parser errors later on. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The RNTupleReader should check the type of the TKey before parsing (and throw an exception if there's no RNTuple with the requested name).; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Create a TFile with a TKey with a certain name, then try to open that file as an RNTuple.; ```cpp; std::string filename = ""some_file.root"";; {; auto file = std::make_unique<TFile>(filename.c_str(), ""RECREATE"", """", 209);; auto tree = std::make_unique<TTree>(""Events"", """");; file->Write();; file->Close();; tree.release();; }. auto ntuple = RNTupleReader::Open(""Events"", filename);; ```; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Root master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8284
https://github.com/root-project/root/issues/8284:542,Usability,clear,clear,542,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; TKeys in a TFile with the same name as the requested RNTuple will be attempted to be parsed as an RNTuple, leading to internal parser errors later on. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The RNTupleReader should check the type of the TKey before parsing (and throw an exception if there's no RNTuple with the requested name).; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Create a TFile with a TKey with a certain name, then try to open that file as an RNTuple.; ```cpp; std::string filename = ""some_file.root"";; {; auto file = std::make_unique<TFile>(filename.c_str(), ""RECREATE"", """", 209);; auto tree = std::make_unique<TTree>(""Events"", """");; file->Write();; file->Close();; tree.release();; }. auto ntuple = RNTupleReader::Open(""Events"", filename);; ```; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Root master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8284
https://github.com/root-project/root/issues/8284:780,Usability,clear,clear,780,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; TKeys in a TFile with the same name as the requested RNTuple will be attempted to be parsed as an RNTuple, leading to internal parser errors later on. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The RNTupleReader should check the type of the TKey before parsing (and throw an exception if there's no RNTuple with the requested name).; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Create a TFile with a TKey with a certain name, then try to open that file as an RNTuple.; ```cpp; std::string filename = ""some_file.root"";; {; auto file = std::make_unique<TFile>(filename.c_str(), ""RECREATE"", """", 209);; auto tree = std::make_unique<TTree>(""Events"", """");; file->Write();; file->Close();; tree.release();; }. auto ntuple = RNTupleReader::Open(""Events"", filename);; ```; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Root master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8284
https://github.com/root-project/root/pull/8285:157,Availability,failure,failures,157,"Fixes issue #8284 where TKeys with the same name as the requested RNTuple; would be attempted to be parsed as an RNTuple, leading to internal; parser assert failures later on. e.g.; ```cpp; // actually holds a TTree named ""Events""; auto reader = RNTupleReader::Open(""Events"", ""test80X_NANO.root"");; ```. Internal error before: ; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```. Exception thrown after: ; ```; C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:313,Availability,error,error,313,"Fixes issue #8284 where TKeys with the same name as the requested RNTuple; would be attempted to be parsed as an RNTuple, leading to internal; parser assert failures later on. e.g.; ```cpp; // actually holds a TTree named ""Events""; auto reader = RNTupleReader::Open(""Events"", ""test80X_NANO.root"");; ```. Internal error before: ; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```. Exception thrown after: ; ```; C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:425,Safety,abort,aborting,425,"Fixes issue #8284 where TKeys with the same name as the requested RNTuple; would be attempted to be parsed as an RNTuple, leading to internal; parser assert failures later on. e.g.; ```cpp; // actually holds a TTree named ""Events""; auto reader = RNTupleReader::Open(""Events"", ""test80X_NANO.root"");; ```. Internal error before: ; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```. Exception thrown after: ; ```; C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:576,Security,access,access,576,"Fixes issue #8284 where TKeys with the same name as the requested RNTuple; would be attempted to be parsed as an RNTuple, leading to internal; parser assert failures later on. e.g.; ```cpp; // actually holds a TTree named ""Events""; auto reader = RNTupleReader::Open(""Events"", ""test80X_NANO.root"");; ```. Internal error before: ; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```. Exception thrown after: ; ```; C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8285:150,Testability,assert,assert,150,"Fixes issue #8284 where TKeys with the same name as the requested RNTuple; would be attempted to be parsed as an RNTuple, leading to internal; parser assert failures later on. e.g.; ```cpp; // actually holds a TTree named ""Events""; auto reader = RNTupleReader::Open(""Events"", ""test80X_NANO.root"");; ```. Internal error before: ; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```. Exception thrown after: ; ```; C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8285
https://github.com/root-project/root/pull/8288:52,Availability,avail,available,52,- Veto tutorial multiVarGaus.C when mathmore is not available; - Disable printing error message in exampleFunction.py when mathmore is not available. This fixes ROOT-8145,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8288
https://github.com/root-project/root/pull/8288:82,Availability,error,error,82,- Veto tutorial multiVarGaus.C when mathmore is not available; - Disable printing error message in exampleFunction.py when mathmore is not available. This fixes ROOT-8145,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8288
https://github.com/root-project/root/pull/8288:139,Availability,avail,available,139,- Veto tutorial multiVarGaus.C when mathmore is not available; - Disable printing error message in exampleFunction.py when mathmore is not available. This fixes ROOT-8145,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8288
https://github.com/root-project/root/pull/8288:88,Integrability,message,message,88,- Veto tutorial multiVarGaus.C when mathmore is not available; - Disable printing error message in exampleFunction.py when mathmore is not available. This fixes ROOT-8145,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8288
https://github.com/root-project/root/issues/8292:708,Availability,down,download,708,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:723,Availability,down,download,723,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1358,Availability,error,error,1358,"ngInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1497,Availability,Error,Error,1497,"tucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1598,Availability,failure,failure,1598,"tucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1781,Availability,Error,Error,1781,"not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1875,Availability,Error,Error,1875," again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:2665,Availability,down,download,2665,"ict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.; Please fix at next release.; I would recommend to implement a “localonly” option in case you don’t have internet access from the installation PC. Georg. _ROOT Version: 6.24.00; _Platform: RetHat 8.3; _Compiler:gcc 8.3.1-5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:2680,Availability,down,download,2680,"ict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.; Please fix at next release.; I would recommend to implement a “localonly” option in case you don’t have internet access from the installation PC. Georg. _ROOT Version: 6.24.00; _Platform: RetHat 8.3; _Compiler:gcc 8.3.1-5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:261,Deployability,install,install,261,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:598,Deployability,install,install,598,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:1020,Deployability,install,install,1020,"rum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:2104,Deployability,install,install,2104,"ict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.; Please fix at next release.; I would recommend to implement a “localonly” option in case you don’t have internet access from the installation PC. Georg. _ROOT Version: 6.24.00; _Platform: RetHat 8.3; _Compiler:gcc 8.3.1-5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:2611,Deployability,install,install,2611,"ict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.; Please fix at next release.; I would recommend to implement a “localonly” option in case you don’t have internet access from the installation PC. Georg. _ROOT Version: 6.24.00; _Platform: RetHat 8.3; _Compiler:gcc 8.3.1-5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:2877,Deployability,install,install,2877,"ict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.; Please fix at next release.; I would recommend to implement a “localonly” option in case you don’t have internet access from the installation PC. Georg. _ROOT Version: 6.24.00; _Platform: RetHat 8.3; _Compiler:gcc 8.3.1-5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:2917,Deployability,release,release,2917,"ict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.; Please fix at next release.; I would recommend to implement a “localonly” option in case you don’t have internet access from the installation PC. Georg. _ROOT Version: 6.24.00; _Platform: RetHat 8.3; _Compiler:gcc 8.3.1-5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:3027,Deployability,install,installation,3027,"ict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.; Please fix at next release.; I would recommend to implement a “localonly” option in case you don’t have internet access from the installation PC. Georg. _ROOT Version: 6.24.00; _Platform: RetHat 8.3; _Compiler:gcc 8.3.1-5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:393,Integrability,depend,dependencies,393,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:459,Integrability,depend,dependencies,459,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:697,Performance,Perform,Performing,697,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:2654,Performance,Perform,Performing,2654,"ict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.; Please fix at next release.; I would recommend to implement a “localonly” option in case you don’t have internet access from the installation PC. Georg. _ROOT Version: 6.24.00; _Platform: RetHat 8.3; _Compiler:gcc 8.3.1-5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:802,Security,access,access,802,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/issues/8292:3011,Security,access,access,3011,"ict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.; Please fix at next release.; I would recommend to implement a “localonly” option in case you don’t have internet access from the installation PC. Georg. _ROOT Version: 6.24.00; _Platform: RetHat 8.3; _Compiler:gcc 8.3.1-5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8292
https://github.com/root-project/root/pull/8293:261,Energy Efficiency,power,power,261,"From a high-level perspective, this PR does two things:; * It converts the LCG state back to RANLUX numbers to avoid a bias in the generated numbers as reported by Martin Lüscher. This comes from the fact that the modulus `m = 2 ** 576 - 2 ** 240 + 1` is not a power of 2, so just treating the LCG state as a pool of entropy means that the upper `576 - 240 = 336` bits have a higher probability of being 0 than 1.; * Extract only 48 bits instead of 52 bits per random number. This restores the connection to the theoretical properties derived from understanding the original subtract-with-borrow recursion as a dynamical system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8293
https://github.com/root-project/root/pull/8293:111,Safety,avoid,avoid,111,"From a high-level perspective, this PR does two things:; * It converts the LCG state back to RANLUX numbers to avoid a bias in the generated numbers as reported by Martin Lüscher. This comes from the fact that the modulus `m = 2 ** 576 - 2 ** 240 + 1` is not a power of 2, so just treating the LCG state as a pool of entropy means that the upper `576 - 240 = 336` bits have a higher probability of being 0 than 1.; * Extract only 48 bits instead of 52 bits per random number. This restores the connection to the theoretical properties derived from understanding the original subtract-with-borrow recursion as a dynamical system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8293
https://github.com/root-project/root/pull/8294:2066,Availability,error,errors,2066,"cations to both RooFit and non-RooFit code were made as well:. 1. In `Minuit2`:; 1. We added a subclass of the AnalyticalGradientCalculator called the ExternalInternalGradientCalculator. Whereas the AGC assumes that the gradient that is passed to it (from outside of Minuit2) is in normal parameter space, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation functions to long double instead of double, otherwise round off errors would still persist and ruin any chances of exact bit-wise equality.; 2. In `mathcore`: Some additions to `IFunction` were made to allow Minuit2 to probe functions for their ability to generate gradients and second derivatives. Similar additions were made to function adapter classes in Minuit2.; 3. In RooFit:; 1. Most RooMinimizerFcn functionality was moved into an abstract base class RooAbsMinimizerFcn, which in turn forms the base class of the new RooMinimizerFcn, but also of the added RooGradMinimizerFcn (serial, but gradient external to Minuit2) and MinuitFcnGrad (with parallel MultiProcess back-end) classes.; 2. The RooRealMPFE based classes can make use of an added parameter `CPUAffinity`. In Unix systems (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:1962,Deployability,upgrade,upgrade,1962,"cations to both RooFit and non-RooFit code were made as well:. 1. In `Minuit2`:; 1. We added a subclass of the AnalyticalGradientCalculator called the ExternalInternalGradientCalculator. Whereas the AGC assumes that the gradient that is passed to it (from outside of Minuit2) is in normal parameter space, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation functions to long double instead of double, otherwise round off errors would still persist and ruin any chances of exact bit-wise equality.; 2. In `mathcore`: Some additions to `IFunction` were made to allow Minuit2 to probe functions for their ability to generate gradients and second derivatives. Similar additions were made to function adapter classes in Minuit2.; 3. In RooFit:; 1. Most RooMinimizerFcn functionality was moved into an abstract base class RooAbsMinimizerFcn, which in turn forms the base class of the new RooMinimizerFcn, but also of the added RooGradMinimizerFcn (serial, but gradient external to Minuit2) and MinuitFcnGrad (with parallel MultiProcess back-end) classes.; 2. The RooRealMPFE based classes can make use of an added parameter `CPUAffinity`. In Unix systems (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3703,Deployability,integrat,integrate,3703,"ms (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:2341,Energy Efficiency,adapt,adapter,2341,"ce, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation functions to long double instead of double, otherwise round off errors would still persist and ruin any chances of exact bit-wise equality.; 2. In `mathcore`: Some additions to `IFunction` were made to allow Minuit2 to probe functions for their ability to generate gradients and second derivatives. Similar additions were made to function adapter classes in Minuit2.; 3. In RooFit:; 1. Most RooMinimizerFcn functionality was moved into an abstract base class RooAbsMinimizerFcn, which in turn forms the base class of the new RooMinimizerFcn, but also of the added RooGradMinimizerFcn (serial, but gradient external to Minuit2) and MinuitFcnGrad (with parallel MultiProcess back-end) classes.; 2. The RooRealMPFE based classes can make use of an added parameter `CPUAffinity`. In Unix systems (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:116,Integrability,interface,interface,116,"This PR adds to RooFit:. 1. Parallelism to gradient calculation in Minuit2 minimization in the form of a extensible interface in the RooFit::MultiProcess package.; 2. A refactored test statistics framework with cleaner separation of computation and physics/statistics concepts than in existing RooAbsTestStatistic derived classes. Currently, RooFit::TestStatistics is part of roofitcore. Note: `TestStatistics/likelihood_builders` still has to be finished, this will be done in the coming few weeks.; 3. RooFitZMQ, a wrapper of ZeroMQ functionality used in RooFit::MultiProcess for communication between processes. Modified after [code](https://gitlab.cern.ch/raaij/generate_and_sort/-/tree/master/ZMQ), contributed by @roelaaij. RooFitZMQ maybe still needs some attention, because in its current form it includes a big part of the libzmq source tree (needed for ppoll, see below), which I'm sure causes licensing issues (it's LGPLv3). I'm open to suggestions on how to handle this. To make the above additions possible, some modifications to both RooFit and non-RooFit code were made as well:. 1. In `Minuit2`:; 1. We added a subclass of the AnalyticalGradientCalculator called the ExternalInternalGradientCalculator. Whereas the AGC assumes that the gradient that is passed to it (from outside of Minuit2) is in normal parameter space, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:517,Integrability,wrap,wrapper,517,"This PR adds to RooFit:. 1. Parallelism to gradient calculation in Minuit2 minimization in the form of a extensible interface in the RooFit::MultiProcess package.; 2. A refactored test statistics framework with cleaner separation of computation and physics/statistics concepts than in existing RooAbsTestStatistic derived classes. Currently, RooFit::TestStatistics is part of roofitcore. Note: `TestStatistics/likelihood_builders` still has to be finished, this will be done in the coming few weeks.; 3. RooFitZMQ, a wrapper of ZeroMQ functionality used in RooFit::MultiProcess for communication between processes. Modified after [code](https://gitlab.cern.ch/raaij/generate_and_sort/-/tree/master/ZMQ), contributed by @roelaaij. RooFitZMQ maybe still needs some attention, because in its current form it includes a big part of the libzmq source tree (needed for ppoll, see below), which I'm sure causes licensing issues (it's LGPLv3). I'm open to suggestions on how to handle this. To make the above additions possible, some modifications to both RooFit and non-RooFit code were made as well:. 1. In `Minuit2`:; 1. We added a subclass of the AnalyticalGradientCalculator called the ExternalInternalGradientCalculator. Whereas the AGC assumes that the gradient that is passed to it (from outside of Minuit2) is in normal parameter space, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:2341,Integrability,adapter,adapter,2341,"ce, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation functions to long double instead of double, otherwise round off errors would still persist and ruin any chances of exact bit-wise equality.; 2. In `mathcore`: Some additions to `IFunction` were made to allow Minuit2 to probe functions for their ability to generate gradients and second derivatives. Similar additions were made to function adapter classes in Minuit2.; 3. In RooFit:; 1. Most RooMinimizerFcn functionality was moved into an abstract base class RooAbsMinimizerFcn, which in turn forms the base class of the new RooMinimizerFcn, but also of the added RooGradMinimizerFcn (serial, but gradient external to Minuit2) and MinuitFcnGrad (with parallel MultiProcess back-end) classes.; 2. The RooRealMPFE based classes can make use of an added parameter `CPUAffinity`. In Unix systems (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3703,Integrability,integrat,integrate,3703,"ms (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:169,Modifiability,refactor,refactored,169,"This PR adds to RooFit:. 1. Parallelism to gradient calculation in Minuit2 minimization in the form of a extensible interface in the RooFit::MultiProcess package.; 2. A refactored test statistics framework with cleaner separation of computation and physics/statistics concepts than in existing RooAbsTestStatistic derived classes. Currently, RooFit::TestStatistics is part of roofitcore. Note: `TestStatistics/likelihood_builders` still has to be finished, this will be done in the coming few weeks.; 3. RooFitZMQ, a wrapper of ZeroMQ functionality used in RooFit::MultiProcess for communication between processes. Modified after [code](https://gitlab.cern.ch/raaij/generate_and_sort/-/tree/master/ZMQ), contributed by @roelaaij. RooFitZMQ maybe still needs some attention, because in its current form it includes a big part of the libzmq source tree (needed for ppoll, see below), which I'm sure causes licensing issues (it's LGPLv3). I'm open to suggestions on how to handle this. To make the above additions possible, some modifications to both RooFit and non-RooFit code were made as well:. 1. In `Minuit2`:; 1. We added a subclass of the AnalyticalGradientCalculator called the ExternalInternalGradientCalculator. Whereas the AGC assumes that the gradient that is passed to it (from outside of Minuit2) is in normal parameter space, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:2341,Modifiability,adapt,adapter,2341,"ce, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation functions to long double instead of double, otherwise round off errors would still persist and ruin any chances of exact bit-wise equality.; 2. In `mathcore`: Some additions to `IFunction` were made to allow Minuit2 to probe functions for their ability to generate gradients and second derivatives. Similar additions were made to function adapter classes in Minuit2.; 3. In RooFit:; 1. Most RooMinimizerFcn functionality was moved into an abstract base class RooAbsMinimizerFcn, which in turn forms the base class of the new RooMinimizerFcn, but also of the added RooGradMinimizerFcn (serial, but gradient external to Minuit2) and MinuitFcnGrad (with parallel MultiProcess back-end) classes.; 2. The RooRealMPFE based classes can make use of an added parameter `CPUAffinity`. In Unix systems (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:5147,Performance,Queue,Queue,5147,"t_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the sourc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:5318,Performance,Queue,Queue,5318,"2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:5339,Performance,Queue,Queue,5339,"itZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:5499,Performance,optimiz,optimization,5499,"Science Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison while benchmarking and reproducing the results of the proof-of-concept benchmarks. Note: BidirMMapPipe is in there as well, since it was moved there. This cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3070,Security,access,accessed,3070," errors would still persist and ruin any chances of exact bit-wise equality.; 2. In `mathcore`: Some additions to `IFunction` were made to allow Minuit2 to probe functions for their ability to generate gradients and second derivatives. Similar additions were made to function adapter classes in Minuit2.; 3. In RooFit:; 1. Most RooMinimizerFcn functionality was moved into an abstract base class RooAbsMinimizerFcn, which in turn forms the base class of the new RooMinimizerFcn, but also of the added RooGradMinimizerFcn (serial, but gradient external to Minuit2) and MinuitFcnGrad (with parallel MultiProcess back-end) classes.; 2. The RooRealMPFE based classes can make use of an added parameter `CPUAffinity`. In Unix systems (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:180,Testability,test,test,180,"This PR adds to RooFit:. 1. Parallelism to gradient calculation in Minuit2 minimization in the form of a extensible interface in the RooFit::MultiProcess package.; 2. A refactored test statistics framework with cleaner separation of computation and physics/statistics concepts than in existing RooAbsTestStatistic derived classes. Currently, RooFit::TestStatistics is part of roofitcore. Note: `TestStatistics/likelihood_builders` still has to be finished, this will be done in the coming few weeks.; 3. RooFitZMQ, a wrapper of ZeroMQ functionality used in RooFit::MultiProcess for communication between processes. Modified after [code](https://gitlab.cern.ch/raaij/generate_and_sort/-/tree/master/ZMQ), contributed by @roelaaij. RooFitZMQ maybe still needs some attention, because in its current form it includes a big part of the libzmq source tree (needed for ppoll, see below), which I'm sure causes licensing issues (it's LGPLv3). I'm open to suggestions on how to handle this. To make the above additions possible, some modifications to both RooFit and non-RooFit code were made as well:. 1. In `Minuit2`:; 1. We added a subclass of the AnalyticalGradientCalculator called the ExternalInternalGradientCalculator. Whereas the AGC assumes that the gradient that is passed to it (from outside of Minuit2) is in normal parameter space, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:350,Testability,Test,TestStatistics,350,"This PR adds to RooFit:. 1. Parallelism to gradient calculation in Minuit2 minimization in the form of a extensible interface in the RooFit::MultiProcess package.; 2. A refactored test statistics framework with cleaner separation of computation and physics/statistics concepts than in existing RooAbsTestStatistic derived classes. Currently, RooFit::TestStatistics is part of roofitcore. Note: `TestStatistics/likelihood_builders` still has to be finished, this will be done in the coming few weeks.; 3. RooFitZMQ, a wrapper of ZeroMQ functionality used in RooFit::MultiProcess for communication between processes. Modified after [code](https://gitlab.cern.ch/raaij/generate_and_sort/-/tree/master/ZMQ), contributed by @roelaaij. RooFitZMQ maybe still needs some attention, because in its current form it includes a big part of the libzmq source tree (needed for ppoll, see below), which I'm sure causes licensing issues (it's LGPLv3). I'm open to suggestions on how to handle this. To make the above additions possible, some modifications to both RooFit and non-RooFit code were made as well:. 1. In `Minuit2`:; 1. We added a subclass of the AnalyticalGradientCalculator called the ExternalInternalGradientCalculator. Whereas the AGC assumes that the gradient that is passed to it (from outside of Minuit2) is in normal parameter space, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:395,Testability,Test,TestStatistics,395,"This PR adds to RooFit:. 1. Parallelism to gradient calculation in Minuit2 minimization in the form of a extensible interface in the RooFit::MultiProcess package.; 2. A refactored test statistics framework with cleaner separation of computation and physics/statistics concepts than in existing RooAbsTestStatistic derived classes. Currently, RooFit::TestStatistics is part of roofitcore. Note: `TestStatistics/likelihood_builders` still has to be finished, this will be done in the coming few weeks.; 3. RooFitZMQ, a wrapper of ZeroMQ functionality used in RooFit::MultiProcess for communication between processes. Modified after [code](https://gitlab.cern.ch/raaij/generate_and_sort/-/tree/master/ZMQ), contributed by @roelaaij. RooFitZMQ maybe still needs some attention, because in its current form it includes a big part of the libzmq source tree (needed for ppoll, see below), which I'm sure causes licensing issues (it's LGPLv3). I'm open to suggestions on how to handle this. To make the above additions possible, some modifications to both RooFit and non-RooFit code were made as well:. 1. In `Minuit2`:; 1. We added a subclass of the AnalyticalGradientCalculator called the ExternalInternalGradientCalculator. Whereas the AGC assumes that the gradient that is passed to it (from outside of Minuit2) is in normal parameter space, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3340,Testability,benchmark,benchmark,3340," adapter classes in Minuit2.; 3. In RooFit:; 1. Most RooMinimizerFcn functionality was moved into an abstract base class RooAbsMinimizerFcn, which in turn forms the base class of the new RooMinimizerFcn, but also of the added RooGradMinimizerFcn (serial, but gradient external to Minuit2) and MinuitFcnGrad (with parallel MultiProcess back-end) classes.; 2. The RooRealMPFE based classes can make use of an added parameter `CPUAffinity`. In Unix systems (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_po",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3773,Testability,test,test,3773,"ms (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:3980,Testability,test,tests,3980,". It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:4031,Testability,test,testing,4031,". It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:4198,Testability,Test,TestStatistics,4198,", e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter upd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:4218,Testability,test,testLikelihoodGradientJob,4218," GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:4248,Testability,test,testLikelihoodSerial,4248,"d frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using app",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:4273,Testability,test,testRooRealL,4273,"mit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ socke",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:4424,Testability,test,testRooGradMinimizer,4424,"ibutions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:4449,Testability,test,testBidirMMapPipe,4449,"CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess fun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:4471,Testability,test,testMPFEnll,4471,"oi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:5482,Testability,Benchmark,Benchmarking,5482,"Science Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison while benchmarking and reproducing the results of the proof-of-concept benchmarks. Note: BidirMMapPipe is in there as well, since it was moved there. This cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:5788,Testability,test,tests,5788,"RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison while benchmarking and reproducing the results of the proof-of-concept benchmarks. Note: BidirMMapPipe is in there as well, since it was moved there. This class is used in the RooRealMPFE event-based parallelization method that was present already before I started. `RooGaussMinimizerFcn` and `RooTaskSpec` were also part of our proof-of-concept exploration work.; - Similarly, there is some left-over code from benchmarks that is probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:6366,Testability,benchmark,benchmarking,6366,"ue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison while benchmarking and reproducing the results of the proof-of-concept benchmarks. Note: BidirMMapPipe is in there as well, since it was moved there. This class is used in the RooRealMPFE event-based parallelization method that was present already before I started. `RooGaussMinimizerFcn` and `RooTaskSpec` were also part of our proof-of-concept exploration work.; - Similarly, there is some left-over code from benchmarks that is probably now deprecated. In particular, `RooTimer` and `RooJSONListFile`, but also strewn around the code there are still some `chrono` includes or other timing remnants. This work was done over the past 5 years at the initiative of Wouter Verkerke @wverkerke under a Netherlands eScience Center grant, with direct code contributions from @vincecr0ft and @ipelupessy on the RooFit side and @roelaaij on ZeroMQ, lots of support from @cburgard, Lydia Brenner and @jiskattema, invaluable design input from @hageboeck and @lmoneta in the final stage of mov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:6431,Testability,benchmark,benchmarks,6431,"ue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison while benchmarking and reproducing the results of the proof-of-concept benchmarks. Note: BidirMMapPipe is in there as well, since it was moved there. This class is used in the RooRealMPFE event-based parallelization method that was present already before I started. `RooGaussMinimizerFcn` and `RooTaskSpec` were also part of our proof-of-concept exploration work.; - Similarly, there is some left-over code from benchmarks that is probably now deprecated. In particular, `RooTimer` and `RooJSONListFile`, but also strewn around the code there are still some `chrono` includes or other timing remnants. This work was done over the past 5 years at the initiative of Wouter Verkerke @wverkerke under a Netherlands eScience Center grant, with direct code contributions from @vincecr0ft and @ipelupessy on the RooFit side and @roelaaij on ZeroMQ, lots of support from @cburgard, Lydia Brenner and @jiskattema, invaluable design input from @hageboeck and @lmoneta in the final stage of mov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/pull/8294:6772,Testability,benchmark,benchmarks,6772," so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison while benchmarking and reproducing the results of the proof-of-concept benchmarks. Note: BidirMMapPipe is in there as well, since it was moved there. This class is used in the RooRealMPFE event-based parallelization method that was present already before I started. `RooGaussMinimizerFcn` and `RooTaskSpec` were also part of our proof-of-concept exploration work.; - Similarly, there is some left-over code from benchmarks that is probably now deprecated. In particular, `RooTimer` and `RooJSONListFile`, but also strewn around the code there are still some `chrono` includes or other timing remnants. This work was done over the past 5 years at the initiative of Wouter Verkerke @wverkerke under a Netherlands eScience Center grant, with direct code contributions from @vincecr0ft and @ipelupessy on the RooFit side and @roelaaij on ZeroMQ, lots of support from @cburgard, Lydia Brenner and @jiskattema, invaluable design input from @hageboeck and @lmoneta in the final stage of moving from proof of concept version to the version before you.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8294
https://github.com/root-project/root/issues/8295:2158,Modifiability,config,config,2158,"side a RDataFrame Snapshot, silently writes wrong data:. ```cpp; // xy_t.h; #pragma once; #include <Rtypes.h>. class xy_t {; public:; double x;; double y;. xy_t() : x(-1), y(-1) {}; ~xy_t(){};; ClassDef(xy_t, 1); // remove this to remove the problem; };; ```; ```cpp; // main.cpp; #include <TFile.h>; #include <TChain.h>; #include <TSystem.h>; #include <TTree.h>; #include <TTreeReader.h>; #include <iostream>; #include ""xy_t.h"". void write_inputs() {; xy_t xy;; int i = 0;; {; TFile f(""in1.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Branch(""xy"", &xy);; t.Branch(""i"", &i);; i = 1;; xy.x = xy.y = 1;; t.Fill();; t.Write();; f.Close();; }; {; TFile f(""in2.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Branch(""xy"", &xy);; t.Branch(""i"", &i);; i = 2;; xy.x = xy.y = 2;; t.Fill();; t.Write();; f.Close();; }; }. int main() {; write_inputs();. TChain c(""t"");; c.Add(""in1.root"");; c.Add(""in2.root"");; TTreeReader r(&c);; TTreeReaderValue<int> ri(r, ""i"");; TTreeReaderValue<double> rx(r, ""x"");; TTreeReaderValue<xy_t> rxy(r, ""xy"");. {; r.Next();; TFile f(""out.root"", ""recreate"");; TTree t(""t"", ""t"");; c.AddClone(&t);; t.Branch(""i"", &(*ri));; t.Branch(""x"", &(*rx));; t.Branch(""xy"", &(*rxy));; std::cout << ""x: "" << *rx << '\n';; t.Fill();; r.Next();; *ri;; *rx;; *rxy;; std::cout << ""x: "" << *rx << '\n';; t.Fill();; t.Write();; }. TFile f(""out.root"");; f.Get<TTree>(""t"")->Scan();; }; ```. Can be run with:. ```; $ root -l -b -q xy_t.h+; g++ -o main main.cpp xy_t_h.so $(root-config --libs --cflags) && env LD_LIBRARY_PATH=""$LD_LIBRARY_PATH:."" ./main; ```. Reading and writing of the `xy` branch can be removed, in which case a warning is printed but wrong data is still written to file. Removing the `ClassDef` from `xy_t` removes the problem and the correct data is written out. ### Additional context; <!--; Add any other context about the problem here.; -->. The original report is https://root-forum.cern.ch/t/rdataframe-multi-file-with-class-branch-bug-report/45156, in the context of RDataFrame::Snapshot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8295
https://github.com/root-project/root/pull/8299:38,Security,access,accessible,38,"This is to make the RooArgSet payload accessible via; RooCmdConfig::decodeObjOnTheFly, which is used [in one of the RooNLLVar; constructors](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooNLLVar.cxx#L97). This fixes Jira issue [ROOT-6895](https://sft.its.cern.ch/jira/browse/ROOT-6895).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8299
https://github.com/root-project/root/issues/8300:1062,Availability,down,download,1062,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; In:. https://root.cern.ch/doc/master/classTTree.html#a9fc48df5560fce1a2d63ecd1ac5b40cb. the entry number is zero by default, that should not be a default parameter. If I wanted to get the zeroth entry, I would just get the zeroth entry. On the other hand, If the user forgets to put the entry there, the compiler will be fine with it and we won't find the mistake until we check the outputs that will all correspond to the zeroth entry. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8300
https://github.com/root-project/root/issues/8300:1044,Deployability,install,install,1044,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; In:. https://root.cern.ch/doc/master/classTTree.html#a9fc48df5560fce1a2d63ecd1ac5b40cb. the entry number is zero by default, that should not be a default parameter. If I wanted to get the zeroth entry, I would just get the zeroth entry. On the other hand, If the user forgets to put the entry there, the compiler will be fine with it and we won't find the mistake until we check the outputs that will all correspond to the zeroth entry. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8300
https://github.com/root-project/root/pull/8301:70,Modifiability,variab,variable,70,"../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop; variable ‘col’ of type ‘const string&’ {aka ‘const; std::__cxx11::basic_string<char>&’} binds to a temporary constructed; from type ‘const char* const’ [-Wrange-loop-construct]. @Axel-Naumann I don't really understand why the const ref does not increase the lifetime of the temporary as usual in this case, but this is the warning: https://godbolt.org/z/ss4zz8v3M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/pull/8301:18,Testability,test,test,18,"../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop; variable ‘col’ of type ‘const string&’ {aka ‘const; std::__cxx11::basic_string<char>&’} binds to a temporary constructed; from type ‘const char* const’ [-Wrange-loop-construct]. @Axel-Naumann I don't really understand why the const ref does not increase the lifetime of the temporary as usual in this case, but this is the warning: https://godbolt.org/z/ss4zz8v3M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8301
https://github.com/root-project/root/issues/8304:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Weird/wrong results printed when converting different entities to `bool`:. 1.; ```; root [0] int foo = 42; (int) 42; root [1] (bool)foo; (bool) true; root [2] bool(foo); (bool) false; ```. 2.; ```; root [0] const char *foo = ""asda""; (const char *) ""asda""; root [1] !foo; (bool) false; root [2] bool(foo); (bool) false; root [3] bool(foo[0]); (bool ([0]) @0x55c4ba66f180; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8304
https://github.com/root-project/root/pull/8306:60,Usability,simpl,simple,60,Fixes #8305 . 5 places in RootMacros.cmake use regex when a simple string(FIND) suffices,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8306
https://github.com/root-project/root/issues/8307:862,Availability,error,error,862,"Hello. I noticed a weird feature in root 6.24.00, when trying to fit a model using a RooSimultaneous pdf. . Am I doing something forbidden in root 6.24.00 ?. Best,. Jean-Baptiste. ### Describe the bug; I have a model with a single category, describing the shape of a distribution, with three unconstrained nuisance parameters, one constrained nuisance parameter and one parameter of interest. The three unconstrained NP describe the shape of the background and the background yield. The poi is proportional to the signal yield. The dataset is a background only dataset. . I can do the fit with as pdf : model_had1A = RooProdPdf (fsb_had1A, constbias_had1A) where; fsb = ns x fs + nb x fb, fs and fb are signal and background pdf, ns contains the poi, nb is free floating. It runs; smoothly even if we are close to the unphysical region (poi < 0). (Probably many error messages from the exploration of the unphysical region have been removed from the output.); I can also try a fit with the pdf : simPdf = RooSimultaneous (indexCat=had1A, had1A=model_had1A) : this is virtually the same pdf, but this time embeded in a RooSimultaneous object. The fit fails. Between the two root versions, one things that appeared weird to me is that fsb_had1A does not seem to be; normalized when embeded in the RooSimultaneous in root 6.24.00. Maybe that is fine, but this is different from; what I see in root 6.22.02. ### Expected behavior; I would expect exactly the same results in both fits, with a best fit poi = 0 and a reasonable uncertainty.; This is what I see in root-6.22.02. In root 6.24.00 the fit with a RooSimultaneous fails. . ### To Reproduce; I put the code here /afs/cern.ch/user/j/jdevivi/public/ISSUEROOFIT. In root-6.24.00, I just do ; root.exe testWSsimulvsprod.C. In root-6.22.02, I do; root.exe load.C testWSsimulvsprod.C; since I use a RooCrystalBall from root-6.24 and did not put the code in the workspace. Log files can be found in the same directory. ### Setup; ROOT version : 6.24.00; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8307
https://github.com/root-project/root/issues/8307:868,Integrability,message,messages,868,"Hello. I noticed a weird feature in root 6.24.00, when trying to fit a model using a RooSimultaneous pdf. . Am I doing something forbidden in root 6.24.00 ?. Best,. Jean-Baptiste. ### Describe the bug; I have a model with a single category, describing the shape of a distribution, with three unconstrained nuisance parameters, one constrained nuisance parameter and one parameter of interest. The three unconstrained NP describe the shape of the background and the background yield. The poi is proportional to the signal yield. The dataset is a background only dataset. . I can do the fit with as pdf : model_had1A = RooProdPdf (fsb_had1A, constbias_had1A) where; fsb = ns x fs + nb x fb, fs and fb are signal and background pdf, ns contains the poi, nb is free floating. It runs; smoothly even if we are close to the unphysical region (poi < 0). (Probably many error messages from the exploration of the unphysical region have been removed from the output.); I can also try a fit with the pdf : simPdf = RooSimultaneous (indexCat=had1A, had1A=model_had1A) : this is virtually the same pdf, but this time embeded in a RooSimultaneous object. The fit fails. Between the two root versions, one things that appeared weird to me is that fsb_had1A does not seem to be; normalized when embeded in the RooSimultaneous in root 6.24.00. Maybe that is fine, but this is different from; what I see in root 6.22.02. ### Expected behavior; I would expect exactly the same results in both fits, with a best fit poi = 0 and a reasonable uncertainty.; This is what I see in root-6.22.02. In root 6.24.00 the fit with a RooSimultaneous fails. . ### To Reproduce; I put the code here /afs/cern.ch/user/j/jdevivi/public/ISSUEROOFIT. In root-6.24.00, I just do ; root.exe testWSsimulvsprod.C. In root-6.22.02, I do; root.exe load.C testWSsimulvsprod.C; since I use a RooCrystalBall from root-6.24 and did not put the code in the workspace. Log files can be found in the same directory. ### Setup; ROOT version : 6.24.00; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8307
https://github.com/root-project/root/issues/8307:1805,Performance,load,load,1805,"ng something forbidden in root 6.24.00 ?. Best,. Jean-Baptiste. ### Describe the bug; I have a model with a single category, describing the shape of a distribution, with three unconstrained nuisance parameters, one constrained nuisance parameter and one parameter of interest. The three unconstrained NP describe the shape of the background and the background yield. The poi is proportional to the signal yield. The dataset is a background only dataset. . I can do the fit with as pdf : model_had1A = RooProdPdf (fsb_had1A, constbias_had1A) where; fsb = ns x fs + nb x fb, fs and fb are signal and background pdf, ns contains the poi, nb is free floating. It runs; smoothly even if we are close to the unphysical region (poi < 0). (Probably many error messages from the exploration of the unphysical region have been removed from the output.); I can also try a fit with the pdf : simPdf = RooSimultaneous (indexCat=had1A, had1A=model_had1A) : this is virtually the same pdf, but this time embeded in a RooSimultaneous object. The fit fails. Between the two root versions, one things that appeared weird to me is that fsb_had1A does not seem to be; normalized when embeded in the RooSimultaneous in root 6.24.00. Maybe that is fine, but this is different from; what I see in root 6.22.02. ### Expected behavior; I would expect exactly the same results in both fits, with a best fit poi = 0 and a reasonable uncertainty.; This is what I see in root-6.22.02. In root 6.24.00 the fit with a RooSimultaneous fails. . ### To Reproduce; I put the code here /afs/cern.ch/user/j/jdevivi/public/ISSUEROOFIT. In root-6.24.00, I just do ; root.exe testWSsimulvsprod.C. In root-6.22.02, I do; root.exe load.C testWSsimulvsprod.C; since I use a RooCrystalBall from root-6.24 and did not put the code in the workspace. Log files can be found in the same directory. ### Setup; ROOT version : 6.24.00; Operating system : macos 10.15.7 clang-12; I built root myself. But I also tried via a docker image built for ATLAS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8307
https://github.com/root-project/root/issues/8307:1752,Testability,test,testWSsimulvsprod,1752,"ng something forbidden in root 6.24.00 ?. Best,. Jean-Baptiste. ### Describe the bug; I have a model with a single category, describing the shape of a distribution, with three unconstrained nuisance parameters, one constrained nuisance parameter and one parameter of interest. The three unconstrained NP describe the shape of the background and the background yield. The poi is proportional to the signal yield. The dataset is a background only dataset. . I can do the fit with as pdf : model_had1A = RooProdPdf (fsb_had1A, constbias_had1A) where; fsb = ns x fs + nb x fb, fs and fb are signal and background pdf, ns contains the poi, nb is free floating. It runs; smoothly even if we are close to the unphysical region (poi < 0). (Probably many error messages from the exploration of the unphysical region have been removed from the output.); I can also try a fit with the pdf : simPdf = RooSimultaneous (indexCat=had1A, had1A=model_had1A) : this is virtually the same pdf, but this time embeded in a RooSimultaneous object. The fit fails. Between the two root versions, one things that appeared weird to me is that fsb_had1A does not seem to be; normalized when embeded in the RooSimultaneous in root 6.24.00. Maybe that is fine, but this is different from; what I see in root 6.22.02. ### Expected behavior; I would expect exactly the same results in both fits, with a best fit poi = 0 and a reasonable uncertainty.; This is what I see in root-6.22.02. In root 6.24.00 the fit with a RooSimultaneous fails. . ### To Reproduce; I put the code here /afs/cern.ch/user/j/jdevivi/public/ISSUEROOFIT. In root-6.24.00, I just do ; root.exe testWSsimulvsprod.C. In root-6.22.02, I do; root.exe load.C testWSsimulvsprod.C; since I use a RooCrystalBall from root-6.24 and did not put the code in the workspace. Log files can be found in the same directory. ### Setup; ROOT version : 6.24.00; Operating system : macos 10.15.7 clang-12; I built root myself. But I also tried via a docker image built for ATLAS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8307
https://github.com/root-project/root/issues/8307:1812,Testability,test,testWSsimulvsprod,1812,"ng something forbidden in root 6.24.00 ?. Best,. Jean-Baptiste. ### Describe the bug; I have a model with a single category, describing the shape of a distribution, with three unconstrained nuisance parameters, one constrained nuisance parameter and one parameter of interest. The three unconstrained NP describe the shape of the background and the background yield. The poi is proportional to the signal yield. The dataset is a background only dataset. . I can do the fit with as pdf : model_had1A = RooProdPdf (fsb_had1A, constbias_had1A) where; fsb = ns x fs + nb x fb, fs and fb are signal and background pdf, ns contains the poi, nb is free floating. It runs; smoothly even if we are close to the unphysical region (poi < 0). (Probably many error messages from the exploration of the unphysical region have been removed from the output.); I can also try a fit with the pdf : simPdf = RooSimultaneous (indexCat=had1A, had1A=model_had1A) : this is virtually the same pdf, but this time embeded in a RooSimultaneous object. The fit fails. Between the two root versions, one things that appeared weird to me is that fsb_had1A does not seem to be; normalized when embeded in the RooSimultaneous in root 6.24.00. Maybe that is fine, but this is different from; what I see in root 6.22.02. ### Expected behavior; I would expect exactly the same results in both fits, with a best fit poi = 0 and a reasonable uncertainty.; This is what I see in root-6.22.02. In root 6.24.00 the fit with a RooSimultaneous fails. . ### To Reproduce; I put the code here /afs/cern.ch/user/j/jdevivi/public/ISSUEROOFIT. In root-6.24.00, I just do ; root.exe testWSsimulvsprod.C. In root-6.22.02, I do; root.exe load.C testWSsimulvsprod.C; since I use a RooCrystalBall from root-6.24 and did not put the code in the workspace. Log files can be found in the same directory. ### Setup; ROOT version : 6.24.00; Operating system : macos 10.15.7 clang-12; I built root myself. But I also tried via a docker image built for ATLAS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8307
https://github.com/root-project/root/issues/8307:1920,Testability,Log,Log,1920,"ng something forbidden in root 6.24.00 ?. Best,. Jean-Baptiste. ### Describe the bug; I have a model with a single category, describing the shape of a distribution, with three unconstrained nuisance parameters, one constrained nuisance parameter and one parameter of interest. The three unconstrained NP describe the shape of the background and the background yield. The poi is proportional to the signal yield. The dataset is a background only dataset. . I can do the fit with as pdf : model_had1A = RooProdPdf (fsb_had1A, constbias_had1A) where; fsb = ns x fs + nb x fb, fs and fb are signal and background pdf, ns contains the poi, nb is free floating. It runs; smoothly even if we are close to the unphysical region (poi < 0). (Probably many error messages from the exploration of the unphysical region have been removed from the output.); I can also try a fit with the pdf : simPdf = RooSimultaneous (indexCat=had1A, had1A=model_had1A) : this is virtually the same pdf, but this time embeded in a RooSimultaneous object. The fit fails. Between the two root versions, one things that appeared weird to me is that fsb_had1A does not seem to be; normalized when embeded in the RooSimultaneous in root 6.24.00. Maybe that is fine, but this is different from; what I see in root 6.22.02. ### Expected behavior; I would expect exactly the same results in both fits, with a best fit poi = 0 and a reasonable uncertainty.; This is what I see in root-6.22.02. In root 6.24.00 the fit with a RooSimultaneous fails. . ### To Reproduce; I put the code here /afs/cern.ch/user/j/jdevivi/public/ISSUEROOFIT. In root-6.24.00, I just do ; root.exe testWSsimulvsprod.C. In root-6.22.02, I do; root.exe load.C testWSsimulvsprod.C; since I use a RooCrystalBall from root-6.24 and did not put the code in the workspace. Log files can be found in the same directory. ### Setup; ROOT version : 6.24.00; Operating system : macos 10.15.7 clang-12; I built root myself. But I also tried via a docker image built for ATLAS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8307
https://github.com/root-project/root/issues/8308:2496,Availability,Error,Error,2496,"put file; TwoInts ti(1, 2);; TFile out_f(""f.root"", ""recreate"");; out_f.WriteObjectAny(&ti, ""TwoInts"", ""ti"");; std::cout << ""Written TwoInts("" << ti.GetA() << "", "" << ti.GetB() << "")\n"";; }. // read back the `ti` object from the file; TFile in_f(""f.root"");; auto *tiptr = in_f.Get<TwoInts>(""ti"");; std::cout << ""Read TwoInts("" << tiptr->GetA() << "", "" << tiptr->GetB() << "")\n"";. return 0;; }; ```. ```cpp; #ifdef __CLING__; #pragma link off all globals;; #pragma link off all classes;; #pragma link off all functions;. #pragma link C++ nestedclasses;; #pragma link C++ class TwoInts;. #endif // __CLING__; ```. ```cmake; # CMakeLists.txt; cmake_minimum_required(VERSION 3.9); project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp LINKDEF LinkDef.h). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp twoints_dict.cxx); target_link_libraries(readwrite_twoints ROOT::RIO). # These lines should not be necessary:; configure_file(twoints.hpp twoints.hpp COPYONLY) # This is necessary for out-of-source builds; add_dependencies(readwrite_twoints twoints_dict) # This ensures that the dictionary is generated before the executable; ```. The last two lines, especially the `configure_file`, should not be needed, ideally. `ROOT_GENERATE_DICTIONARY` should add the source directory to the include directories automatically, or at the very least it should make it possible to add it manually via `target_include_directories(twoints_dict.cxx PRIVATE .)`, which currently does not work:. ```; CMake Error at CMakeLists.txt:12 (target_include_directories):; Cannot specify include directories for target ""twoints_dict.cxx"" which is; not built by this project.; ```. The end result is that `ROOT_GENERATE_DICTIONARY` is unnecessarily tricky to use correctly (in fact I don't think we document the correct usage anywhere). . More discussion can be found at https://mattermost.web.cern.ch/root/pl/ofzcxfxh3pfxdp4bzda319ftke .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/issues/8308:748,Modifiability,config,config,748,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Consider the following source directory:. ```cpp; // TwoInts.hpp; #pragma once. class TwoInts {; int _a;; int _b;. public:; TwoInts() {}; TwoInts(int a, int b) : _a(a), _b(b) {}; int GetA() const;; int GetB() const;; TwoInts& SetA(int a);; TwoInts& SetB(int b);; };; ```. ```cpp; // TwoInts.cpp; #include ""twoints.hpp"". int TwoInts::GetA() const { return _a; }; int TwoInts::GetB() const { return _b; }; TwoInts& TwoInts::SetA(int a) { _a = a; return *this; }; TwoInts& TwoInts::SetB(int b) { _b = b; return *this; }; ```. ```cpp; // readwrite_twoints.cpp; // compile with e.g.:; // g++ -o readwrite_twoints readwrite_twoints.cpp $(root-config --libs --cflags) twoints.cpp twoints_dict.cpp. #include ""TFile.h""; #include ""twoints.hpp""; #include <iostream>. int main() {; {; // write the `ti` object to an output file; TwoInts ti(1, 2);; TFile out_f(""f.root"", ""recreate"");; out_f.WriteObjectAny(&ti, ""TwoInts"", ""ti"");; std::cout << ""Written TwoInts("" << ti.GetA() << "", "" << ti.GetB() << "")\n"";; }. // read back the `ti` object from the file; TFile in_f(""f.root"");; auto *tiptr = in_f.Get<TwoInts>(""ti"");; std::cout << ""Read TwoInts("" << tiptr->GetA() << "", "" << tiptr->GetB() << "")\n"";. return 0;; }; ```. ```cpp; #ifdef __CLING__; #pragma link off all globals;; #pragma link off all classes;; #pragma link off all functions;. #pragma link C++ nestedclasses;; #pragma link C++ class TwoInts;. #endif // __CLING__; ```. ```cmake; # CMakeLists.txt; cmake_minimum_required(VERSION 3.9); project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp LINKDEF LinkDef.h). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp twoints_dict.cxx); target_link_libraries(readwrite_twoints ROOT::RIO). # These lines should not be necessary:; configure_file(twoints.hpp twoints.hpp COPYONLY) # This is necessary for out-of-so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8308
https://github.com/root-project/root/pull/8309:62,Performance,load,load,62,"First, this PR factors out common parts of the code in commit/load of (sealed) pages. Specifically, this affects:; - `CommitPageImpl` and `CommitSealedPageImpl`.; - `PopulatePageFromCluster()` and `LoadSealedPage()`. Locating the RPageInfo from the cluster index is now a member function of RPageRange. Second, it provides support for sealed pages in the DAOS backend. Closes issue #8079.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8309
https://github.com/root-project/root/pull/8309:198,Performance,Load,LoadSealedPage,198,"First, this PR factors out common parts of the code in commit/load of (sealed) pages. Specifically, this affects:; - `CommitPageImpl` and `CommitSealedPageImpl`.; - `PopulatePageFromCluster()` and `LoadSealedPage()`. Locating the RPageInfo from the cluster index is now a member function of RPageRange. Second, it provides support for sealed pages in the DAOS backend. Closes issue #8079.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8309
https://github.com/root-project/root/pull/8314:439,Deployability,patch,patch,439,"TTree::CopyAddresses has the built-in pre-condition that the input and; output branches are of the same kind. Clones might be added, however,; for which the pre-condition is violated. This is currently the case,; for example, with certain usages of RDataFrame::Snapshot, which might; create an output branch that is a simple TBranch while the input branch; is e.g. a TBranchElement. This results in wrong data being written out. With this patch we detect this case and complain.; A proper fix will be proposed soon. The issue is tracked as #8295.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8314
https://github.com/root-project/root/pull/8314:448,Safety,detect,detect,448,"TTree::CopyAddresses has the built-in pre-condition that the input and; output branches are of the same kind. Clones might be added, however,; for which the pre-condition is violated. This is currently the case,; for example, with certain usages of RDataFrame::Snapshot, which might; create an output branch that is a simple TBranch while the input branch; is e.g. a TBranchElement. This results in wrong data being written out. With this patch we detect this case and complain.; A proper fix will be proposed soon. The issue is tracked as #8295.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8314
https://github.com/root-project/root/pull/8314:318,Usability,simpl,simple,318,"TTree::CopyAddresses has the built-in pre-condition that the input and; output branches are of the same kind. Clones might be added, however,; for which the pre-condition is violated. This is currently the case,; for example, with certain usages of RDataFrame::Snapshot, which might; create an output branch that is a simple TBranch while the input branch; is e.g. a TBranchElement. This results in wrong data being written out. With this patch we detect this case and complain.; A proper fix will be proposed soon. The issue is tracked as #8295.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8314
https://github.com/root-project/root/pull/8316:186,Safety,Safe,SafeDelete,186,"Warning like:; ```; geom/geom/src/TGeoManager.cxx:521:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; 521 | if (fHashVolumes) fHashVolumes->Clear(""nodelete""); SafeDelete(fHashVolumes);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8316:167,Usability,Clear,Clear,167,"Warning like:; ```; geom/geom/src/TGeoManager.cxx:521:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; 521 | if (fHashVolumes) fHashVolumes->Clear(""nodelete""); SafeDelete(fHashVolumes);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8316
https://github.com/root-project/root/pull/8319:12,Security,access,accessed,12,"`fWcsTitle` accessed wrongly, following macro crashes:. ```; void bug(); {; TText txt1(0,0, L""Any text 1"");; TText txt2(0,0, L""Any text 2"");; ; txt2 = txt1; // this is crashing; }; ```. Discovered in gcc11 warnings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8319
https://github.com/root-project/root/pull/8321:38,Modifiability,variab,variable,38,"gcc11 complains about non-initialized variable, just make it happy.; Warnings are:; ```; /home/linev/git/webgui/graf2d/asimage/src/TASImage.cxx:5592:9: warning: ‘ET.EdgeTable::scanlines._ScanLineList::next’ may be used uninitialized [-Wmaybe-uninitialized]; 5592 | pSLL = ET.scanlines.next;; | ~~~~~^~~~~~~~~~~~~~~~~~~; /home/linev/git/webgui/graf2d/asimage/src/TASImage.cxx:5582:14: note: ‘ET’ declared here; 5582 | EdgeTable ET; // Edge Table header node; | ^~; /home/linev/git/webgui/graf2d/asimage/src/TASImage.cxx:5594:11: warning: ‘ET.EdgeTable::ymin’ may be used uninitialized [-Wmaybe-uninitialized]; 5594 | for (y = ET.ymin; y < ET.ymax; y++) {; | ~~^~~~~~~~~; /home/linev/git/webgui/graf2d/asimage/src/TASImage.cxx:5582:14: note: ‘ET’ declared here; 5582 | EdgeTable ET; // Edge Table header node; | ^~; /home/linev/git/webgui/graf2d/asimage/src/TASImage.cxx:5594:29: warning: ‘ET.EdgeTable::ymax’ may be used uninitialized [-Wmaybe-uninitialized]; 5594 | for (y = ET.ymin; y < ET.ymax; y++) {; | ~~~^~~~; /home/linev/git/webgui/graf2d/asimage/src/TASImage.cxx:5582:14: note: ‘ET’ declared here; 5582 | EdgeTable ET; // Edge Table header node; | ^~; /home/linev/git/webgui/graf2d/asimage/src/TASImage.cxx: In member function ‘virtual void TASImage::DrawFillArea(UInt_t, TPoint*, const char*, const char*, UInt_t, UInt_t)’:; /home/linev/git/webgui/graf2d/asimage/src/TASImage.cxx:5492:9: warning: ‘ET.EdgeTable::scanlines._ScanLineList::next’ may be used uninitialized [-Wmaybe-uninitialized]; 5492 | pSLL = ET.scanlines.next;; | ~~~~~^~~~~~~~~~~~~~~~~~~; /home/linev/git/webgui/graf2d/asimage/src/TASImage.cxx:5472:14: note: ‘ET’ declared here; 5472 | EdgeTable ET; // Edge Table header node; | ^~; /home/linev/git/webgui/graf2d/asimage/src/TASImage.cxx:5494:11: warning: ‘ET.EdgeTable::ymin’ may be used uninitialized [-Wmaybe-uninitialized]; 5494 | for (y = ET.ymin; y < ET.ymax; y++) {; | ~~^~~~~~~~~; /home/linev/git/webgui/graf2d/asimage/src/TASImage.cxx:5472:14: note: ‘ET’ declared he",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8321
https://github.com/root-project/root/issues/8323:2363,Energy Efficiency,allocate,allocate,2363,"; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }; if (i==0); startMemResident=pinfo.fMemResident;; if (i==(niters-1)); endMemResident=pinfo.fMemResident;; }. int deltaMem=endMemResident-startMemResident;; double avgMem=(double)deltaMem/niters;; cout << endl << ""Memory increase = "" << deltaMem << endl;; cout << ""Avg increase per iteration = "" << avgMem << endl;; }; ```. The increase can be completely eliminated by not using the memory pool for RooDataSet. It is remarkable that the memory pool itself doesn't seem to be the problem. In fact, one can replace `RooDataSet::operator new` and `RooDataSet::operator delete` such that the memory pool is still active, but we don't use the addresses it gives us and pretend to deallocate immediately after allocating. This can be achieved by substituting the following code in [RooDataSet.cxx](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooDataSet.cxx#L143):. ```C++; void* RooDataSet::operator new (size_t bytes) {; // pretend we use the memory pool to demonstrate the pool itself is not the problem; memPool()->deallocate(memPool()->allocate(bytes));. return ::operator new(bytes);; }. void RooDataSet::operator delete (void* ptr) { ::operator delete(ptr); }; ```. With this change, the memory increase is completely gone, at least for my setup. To me it is not clear why using the memory pool causes the memory increase. The memory increase happens about every 5000 iterations and is exactly 624 bytes. However, these events are uncorrelated with special events in the memory pool, i.e. adding a new arena to the memory pool. Could it be that without using the addresses suggested by the default allocator, we get some heap fragmentation which causes the memory reserved by the process to go up, while we don't have an actual increase of allocated memory?. The solution is probably to avoid using the memory pool for RooDataSet. My setup is ROOT master on Arch Linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:3069,Energy Efficiency,allocate,allocated,3069,"; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }; if (i==0); startMemResident=pinfo.fMemResident;; if (i==(niters-1)); endMemResident=pinfo.fMemResident;; }. int deltaMem=endMemResident-startMemResident;; double avgMem=(double)deltaMem/niters;; cout << endl << ""Memory increase = "" << deltaMem << endl;; cout << ""Avg increase per iteration = "" << avgMem << endl;; }; ```. The increase can be completely eliminated by not using the memory pool for RooDataSet. It is remarkable that the memory pool itself doesn't seem to be the problem. In fact, one can replace `RooDataSet::operator new` and `RooDataSet::operator delete` such that the memory pool is still active, but we don't use the addresses it gives us and pretend to deallocate immediately after allocating. This can be achieved by substituting the following code in [RooDataSet.cxx](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooDataSet.cxx#L143):. ```C++; void* RooDataSet::operator new (size_t bytes) {; // pretend we use the memory pool to demonstrate the pool itself is not the problem; memPool()->deallocate(memPool()->allocate(bytes));. return ::operator new(bytes);; }. void RooDataSet::operator delete (void* ptr) { ::operator delete(ptr); }; ```. With this change, the memory increase is completely gone, at least for my setup. To me it is not clear why using the memory pool causes the memory increase. The memory increase happens about every 5000 iterations and is exactly 624 bytes. However, these events are uncorrelated with special events in the memory pool, i.e. adding a new arena to the memory pool. Could it be that without using the addresses suggested by the default allocator, we get some heap fragmentation which causes the memory reserved by the process to go up, while we don't have an actual increase of allocated memory?. The solution is probably to avoid using the memory pool for RooDataSet. My setup is ROOT master on Arch Linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:3116,Safety,avoid,avoid,3116,"; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }; if (i==0); startMemResident=pinfo.fMemResident;; if (i==(niters-1)); endMemResident=pinfo.fMemResident;; }. int deltaMem=endMemResident-startMemResident;; double avgMem=(double)deltaMem/niters;; cout << endl << ""Memory increase = "" << deltaMem << endl;; cout << ""Avg increase per iteration = "" << avgMem << endl;; }; ```. The increase can be completely eliminated by not using the memory pool for RooDataSet. It is remarkable that the memory pool itself doesn't seem to be the problem. In fact, one can replace `RooDataSet::operator new` and `RooDataSet::operator delete` such that the memory pool is still active, but we don't use the addresses it gives us and pretend to deallocate immediately after allocating. This can be achieved by substituting the following code in [RooDataSet.cxx](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooDataSet.cxx#L143):. ```C++; void* RooDataSet::operator new (size_t bytes) {; // pretend we use the memory pool to demonstrate the pool itself is not the problem; memPool()->deallocate(memPool()->allocate(bytes));. return ::operator new(bytes);; }. void RooDataSet::operator delete (void* ptr) { ::operator delete(ptr); }; ```. With this change, the memory increase is completely gone, at least for my setup. To me it is not clear why using the memory pool causes the memory increase. The memory increase happens about every 5000 iterations and is exactly 624 bytes. However, these events are uncorrelated with special events in the memory pool, i.e. adding a new arena to the memory pool. Could it be that without using the addresses suggested by the default allocator, we get some heap fragmentation which causes the memory reserved by the process to go up, while we don't have an actual increase of allocated memory?. The solution is probably to avoid using the memory pool for RooDataSet. My setup is ROOT master on Arch Linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:427,Testability,test,test,427,"A steady memory increase when iteratively calling RooAbsPdf::fitTo was reported in the forum:; https://root-forum.cern.ch/t/roofit-memory-increase-per-fitto-iteration/44726. It can be reproduced with this C++ code:. ```C++; #include ""RooFitResult.h""; #include ""RooDataSet.h""; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooMsgService.h"". #include ""TRandom3.h""; #include ""TSystem.h"". void test() {. using namespace std;. RooRealVar x(""x"",""x"",-10,10);; RooDataSet d(""d"",""d"",RooArgSet(x));; RooRealVar s(""s"",""s"",1,1,10);; RooRealVar m(""m"",""m"",0,-10,10);; RooGaussian g(""gauss"",""gauss(x,m,s)"",x,m,s);; RooPlot *f=x.frame();. for (Int_t j=0; j<300; ++j){; x.setVal(gRandom->Gaus(0,1));; d.add(x);; }. RooMsgService::instance().getStream(1).removeTopic(RooFit::Minimization);. ProcInfo_t pinfo;; int startMemResident;; int endMemResident;; int niters=1000000;; RooArgSet input=RooArgSet(x);; for (Int_t i=0; i<niters; i++) {; std::unique_ptr<RooFitResult> roo_result{; g.fitTo(d,RooFit::PrintLevel(-1),RooFit::Save(),; RooFit::Minos(true),RooFit::BatchMode(true),RooFit::Save()); };; x.setVal(0);; g.getVal(input);. gSystem->GetProcInfo(&pinfo);; if(i % 100 == 0) {; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }; if (i==0); startMemResident=pinfo.fMemResident;; if (i==(niters-1)); endMemResident=pinfo.fMemResident;; }. int deltaMem=endMemResident-startMemResident;; double avgMem=(double)deltaMem/niters;; cout << endl << ""Memory increase = "" << deltaMem << endl;; cout << ""Avg increase per iteration = "" << avgMem << endl;; }; ```. The increase can be completely eliminated by not using the memory pool for RooDataSet. It is remarkable that the memory pool itself doesn't seem to be the problem. In fact, one can replace `RooDataSet::operator new` and `RooDataSet::operator delete` such that the memory pool is still active, but we don't use the addresses it gives us and pretend to deallocate immediately a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/issues/8323:2592,Usability,clear,clear,2592,"; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }; if (i==0); startMemResident=pinfo.fMemResident;; if (i==(niters-1)); endMemResident=pinfo.fMemResident;; }. int deltaMem=endMemResident-startMemResident;; double avgMem=(double)deltaMem/niters;; cout << endl << ""Memory increase = "" << deltaMem << endl;; cout << ""Avg increase per iteration = "" << avgMem << endl;; }; ```. The increase can be completely eliminated by not using the memory pool for RooDataSet. It is remarkable that the memory pool itself doesn't seem to be the problem. In fact, one can replace `RooDataSet::operator new` and `RooDataSet::operator delete` such that the memory pool is still active, but we don't use the addresses it gives us and pretend to deallocate immediately after allocating. This can be achieved by substituting the following code in [RooDataSet.cxx](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooDataSet.cxx#L143):. ```C++; void* RooDataSet::operator new (size_t bytes) {; // pretend we use the memory pool to demonstrate the pool itself is not the problem; memPool()->deallocate(memPool()->allocate(bytes));. return ::operator new(bytes);; }. void RooDataSet::operator delete (void* ptr) { ::operator delete(ptr); }; ```. With this change, the memory increase is completely gone, at least for my setup. To me it is not clear why using the memory pool causes the memory increase. The memory increase happens about every 5000 iterations and is exactly 624 bytes. However, these events are uncorrelated with special events in the memory pool, i.e. adding a new arena to the memory pool. Could it be that without using the addresses suggested by the default allocator, we get some heap fragmentation which causes the memory reserved by the process to go up, while we don't have an actual increase of allocated memory?. The solution is probably to avoid using the memory pool for RooDataSet. My setup is ROOT master on Arch Linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8323
https://github.com/root-project/root/pull/8324:170,Energy Efficiency,allocate,allocated,170,"Disables the memory pool for RooArgSet and RooDataSet to fix https://github.com/root-project/root/issues/8323. This entails that we can't rely anymore on all RooDataSets allocated on the heap having a unique memory address, so a new `uniqueId` class member is introduced to replace the pointer comparisons. The RooArgSet already had such a `uniqueId` class member, which is already used as a key for caching as of PR https://github.com/root-project/root/pull/10333, instead of doing pointer comparisons. More details in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8324
https://github.com/root-project/root/issues/8326:1794,Deployability,update,update,1794,"ect/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. On Linux, in a Juyter/ROOT Python notebook, every cell execution makes the `python` process open two ""files"":; ; lrwx------ 1 user users 64 2 Jun 22.33 77 -> /dev/pts/7; lr-x------ 1 user users 64 2 Jun 22.33 78 -> 'pipe:[214404]'; ; one to the terminal bound to the notebook server (`/dev/pts/7`), and another always a different pipe reading for nothing to write in it, e.g. from `lsof`:; ; python3.8 16586 user 78r FIFO 0,10 0t0 214404 pipe; ; These stay open, making the process reach the OS limit of open files sooner or later, at which point grief ensues.; Some commands (e.g. `matplotlib` figures) may create additional pairs out of the void. ### Expected behavior. The open file descriptor count should be roughly stable and not proportional to the number of executed cells. ### To Reproduce; ; jupyter --notebook # or root --notebook; ; then execute _(empty lines mark cell boundaries)_:; ```.py; import os; def printFiles(): print(f""PID={os.getpid()} files={len(os.listdir(f'/proc/{os.getpid()}/fd'))}""); printFiles(). printFiles(). printFiles(). printFiles(). import ROOT; printFiles(). printFiles(). printFiles(). printFiles(); ```; I get a file count of `43` or `44` on each cell before importing ROOT, and from the _next_ cell, each cell increments by 4 (`48`, `52`, ...).; The issue does not appear on plain `python`/`ipython`. ### Setup. Working with:; * Gentoo Linux, amd64, kernel 5.12.4 (last update a few days ago); * ROOT 6.24/00; * Python 3.8.10 (`dev-lang/python-3.8.10_p1` from Gentoo); * Jupyter 1.0.0; * ipython 7.24.0. I assume this issue is setup-dependent, or it would have been reported already... ([actually, it was in 2017](https://github.com/matplotlib/matplotlib/issues/8308)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8326
https://github.com/root-project/root/issues/8326:1957,Integrability,depend,dependent,1957,"ect/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. On Linux, in a Juyter/ROOT Python notebook, every cell execution makes the `python` process open two ""files"":; ; lrwx------ 1 user users 64 2 Jun 22.33 77 -> /dev/pts/7; lr-x------ 1 user users 64 2 Jun 22.33 78 -> 'pipe:[214404]'; ; one to the terminal bound to the notebook server (`/dev/pts/7`), and another always a different pipe reading for nothing to write in it, e.g. from `lsof`:; ; python3.8 16586 user 78r FIFO 0,10 0t0 214404 pipe; ; These stay open, making the process reach the OS limit of open files sooner or later, at which point grief ensues.; Some commands (e.g. `matplotlib` figures) may create additional pairs out of the void. ### Expected behavior. The open file descriptor count should be roughly stable and not proportional to the number of executed cells. ### To Reproduce; ; jupyter --notebook # or root --notebook; ; then execute _(empty lines mark cell boundaries)_:; ```.py; import os; def printFiles(): print(f""PID={os.getpid()} files={len(os.listdir(f'/proc/{os.getpid()}/fd'))}""); printFiles(). printFiles(). printFiles(). printFiles(). import ROOT; printFiles(). printFiles(). printFiles(). printFiles(); ```; I get a file count of `43` or `44` on each cell before importing ROOT, and from the _next_ cell, each cell increments by 4 (`48`, `52`, ...).; The issue does not appear on plain `python`/`ipython`. ### Setup. Working with:; * Gentoo Linux, amd64, kernel 5.12.4 (last update a few days ago); * ROOT 6.24/00; * Python 3.8.10 (`dev-lang/python-3.8.10_p1` from Gentoo); * Jupyter 1.0.0; * ipython 7.24.0. I assume this issue is setup-dependent, or it would have been reported already... ([actually, it was in 2017](https://github.com/matplotlib/matplotlib/issues/8308)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8326
https://github.com/root-project/root/pull/8327:78,Availability,error,error,78,"After updating Visual Studio 2019 to the version `16.10.0`, there is a `fatal error C1001: Internal compiler error` when compiling `G__MathCore.cxx`; See the bug report at Microsoft: [[v16.10.0] Fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/v16100-fatal-error-c1001-internal-compiler-error/1437980?from=email&viewtype=all); And the proposed workaround:. 1. Remove the `auto` return type from `FunctorGradHandler::Clone()`. This function is the cause of the ICE and replacing `auto` with `ImplFunc*` will resolve the issue.; 2. Only if fixing the source is not an option, add `/d1deducedReturnEncoding-` to your build. This will disable the recent compiler work around deduced return types. Keep in mind that this option should only be used as a last resort because it is not a permanent switch. Interestingly enough, the `auto` return type was introduced as a workaround for another compiler error with `VS 2019 (16.4.3)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8327
https://github.com/root-project/root/pull/8327:109,Availability,error,error,109,"After updating Visual Studio 2019 to the version `16.10.0`, there is a `fatal error C1001: Internal compiler error` when compiling `G__MathCore.cxx`; See the bug report at Microsoft: [[v16.10.0] Fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/v16100-fatal-error-c1001-internal-compiler-error/1437980?from=email&viewtype=all); And the proposed workaround:. 1. Remove the `auto` return type from `FunctorGradHandler::Clone()`. This function is the cause of the ICE and replacing `auto` with `ImplFunc*` will resolve the issue.; 2. Only if fixing the source is not an option, add `/d1deducedReturnEncoding-` to your build. This will disable the recent compiler work around deduced return types. Keep in mind that this option should only be used as a last resort because it is not a permanent switch. Interestingly enough, the `auto` return type was introduced as a workaround for another compiler error with `VS 2019 (16.4.3)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8327
https://github.com/root-project/root/pull/8327:201,Availability,error,error,201,"After updating Visual Studio 2019 to the version `16.10.0`, there is a `fatal error C1001: Internal compiler error` when compiling `G__MathCore.cxx`; See the bug report at Microsoft: [[v16.10.0] Fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/v16100-fatal-error-c1001-internal-compiler-error/1437980?from=email&viewtype=all); And the proposed workaround:. 1. Remove the `auto` return type from `FunctorGradHandler::Clone()`. This function is the cause of the ICE and replacing `auto` with `ImplFunc*` will resolve the issue.; 2. Only if fixing the source is not an option, add `/d1deducedReturnEncoding-` to your build. This will disable the recent compiler work around deduced return types. Keep in mind that this option should only be used as a last resort because it is not a permanent switch. Interestingly enough, the `auto` return type was introduced as a workaround for another compiler error with `VS 2019 (16.4.3)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8327
https://github.com/root-project/root/pull/8327:232,Availability,error,error,232,"After updating Visual Studio 2019 to the version `16.10.0`, there is a `fatal error C1001: Internal compiler error` when compiling `G__MathCore.cxx`; See the bug report at Microsoft: [[v16.10.0] Fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/v16100-fatal-error-c1001-internal-compiler-error/1437980?from=email&viewtype=all); And the proposed workaround:. 1. Remove the `auto` return type from `FunctorGradHandler::Clone()`. This function is the cause of the ICE and replacing `auto` with `ImplFunc*` will resolve the issue.; 2. Only if fixing the source is not an option, add `/d1deducedReturnEncoding-` to your build. This will disable the recent compiler work around deduced return types. Keep in mind that this option should only be used as a last resort because it is not a permanent switch. Interestingly enough, the `auto` return type was introduced as a workaround for another compiler error with `VS 2019 (16.4.3)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8327
https://github.com/root-project/root/pull/8327:298,Availability,error,error-,298,"After updating Visual Studio 2019 to the version `16.10.0`, there is a `fatal error C1001: Internal compiler error` when compiling `G__MathCore.cxx`; See the bug report at Microsoft: [[v16.10.0] Fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/v16100-fatal-error-c1001-internal-compiler-error/1437980?from=email&viewtype=all); And the proposed workaround:. 1. Remove the `auto` return type from `FunctorGradHandler::Clone()`. This function is the cause of the ICE and replacing `auto` with `ImplFunc*` will resolve the issue.; 2. Only if fixing the source is not an option, add `/d1deducedReturnEncoding-` to your build. This will disable the recent compiler work around deduced return types. Keep in mind that this option should only be used as a last resort because it is not a permanent switch. Interestingly enough, the `auto` return type was introduced as a workaround for another compiler error with `VS 2019 (16.4.3)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8327
https://github.com/root-project/root/pull/8327:328,Availability,error,error,328,"After updating Visual Studio 2019 to the version `16.10.0`, there is a `fatal error C1001: Internal compiler error` when compiling `G__MathCore.cxx`; See the bug report at Microsoft: [[v16.10.0] Fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/v16100-fatal-error-c1001-internal-compiler-error/1437980?from=email&viewtype=all); And the proposed workaround:. 1. Remove the `auto` return type from `FunctorGradHandler::Clone()`. This function is the cause of the ICE and replacing `auto` with `ImplFunc*` will resolve the issue.; 2. Only if fixing the source is not an option, add `/d1deducedReturnEncoding-` to your build. This will disable the recent compiler work around deduced return types. Keep in mind that this option should only be used as a last resort because it is not a permanent switch. Interestingly enough, the `auto` return type was introduced as a workaround for another compiler error with `VS 2019 (16.4.3)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8327
https://github.com/root-project/root/pull/8327:936,Availability,error,error,936,"After updating Visual Studio 2019 to the version `16.10.0`, there is a `fatal error C1001: Internal compiler error` when compiling `G__MathCore.cxx`; See the bug report at Microsoft: [[v16.10.0] Fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/v16100-fatal-error-c1001-internal-compiler-error/1437980?from=email&viewtype=all); And the proposed workaround:. 1. Remove the `auto` return type from `FunctorGradHandler::Clone()`. This function is the cause of the ICE and replacing `auto` with `ImplFunc*` will resolve the issue.; 2. Only if fixing the source is not an option, add `/d1deducedReturnEncoding-` to your build. This will disable the recent compiler work around deduced return types. Keep in mind that this option should only be used as a last resort because it is not a permanent switch. Interestingly enough, the `auto` return type was introduced as a workaround for another compiler error with `VS 2019 (16.4.3)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8327
https://github.com/root-project/root/pull/8328:33,Performance,perform,performance,33,"This pull-request adds new write performance counters to the file/DAOS backends:; - fSzWritePayload: that keeps track of the total volume written in committed pages.; - fSzZip: volume before zipping; - fTime{Wall,Cpu}Zip: that measure the wall clock/cpu time spent compressing. This suffices to compute the actual write throughput, where needed. Closes issue #8283.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8328
https://github.com/root-project/root/pull/8328:320,Performance,throughput,throughput,320,"This pull-request adds new write performance counters to the file/DAOS backends:; - fSzWritePayload: that keeps track of the total volume written in committed pages.; - fSzZip: volume before zipping; - fTime{Wall,Cpu}Zip: that measure the wall clock/cpu time spent compressing. This suffices to compute the actual write throughput, where needed. Closes issue #8283.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8328
https://github.com/root-project/root/pull/8329:299,Deployability,pipeline,pipeline,299,"This is a very early draft for caching `RNTuple`s. The goal is to save only the portions (clusters) of the original RNTuple that are actually read during an analysis to a new RNTuple . In this draft it is shown an attempt at exercising the part where the compressed clusters are saved during the IO pipeline already implemented in RClusterPool. To this end, an `RPageSink` is created at the beginning of the pipeline with the same header as the RNTuple being read. After the compressed cluster is retrieved in memory, its columns and pages are traversed and saved to the cached RNTuple. For now this feature can be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:408,Deployability,pipeline,pipeline,408,"This is a very early draft for caching `RNTuple`s. The goal is to save only the portions (clusters) of the original RNTuple that are actually read during an analysis to a new RNTuple . In this draft it is shown an attempt at exercising the part where the compressed clusters are saved during the IO pipeline already implemented in RClusterPool. To this end, an `RPageSink` is created at the beginning of the pipeline with the same header as the RNTuple being read. After the compressed cluster is retrieved in memory, its columns and pages are traversed and saved to the cached RNTuple. For now this feature can be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:2423,Modifiability,variab,variable,2423," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:571,Performance,cache,cached,571,"This is a very early draft for caching `RNTuple`s. The goal is to save only the portions (clusters) of the original RNTuple that are actually read during an analysis to a new RNTuple . In this draft it is shown an attempt at exercising the part where the compressed clusters are saved during the IO pipeline already implemented in RClusterPool. To this end, an `RPageSink` is created at the beginning of the pipeline with the same header as the RNTuple being read. After the compressed cluster is retrieved in memory, its columns and pages are traversed and saved to the cached RNTuple. For now this feature can be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:1339,Performance,cache,cachedntuple,1339,"d in RClusterPool. To this end, an `RPageSink` is created at the beginning of the pipeline with the same header as the RNTuple being read. After the compressed cluster is retrieved in memory, its columns and pages are traversed and saved to the cached RNTuple. For now this feature can be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:1579,Performance,Load,LoadEntry,1579,"RNTuple. For now this feature can be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the cachi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:1636,Performance,cache,cached,1636," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:1751,Performance,cache,cachedntuple,1751," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:2073,Performance,Load,LoadEntry,2073," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:2355,Performance,cache,cached,2355," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:2496,Safety,avoid,avoided,2496," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:2309,Testability,log,logic,2309," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:2508,Testability,Test,Tests,2508," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8329:2554,Testability,log,logic,2554," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8329
https://github.com/root-project/root/pull/8333:7,Testability,Log,Log,7,Change Log:; - Enable RFileDialog through REveManager; - Add checks for validity of table and filter expressions; - Clear unnecessary REveManager printouts,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8333:116,Usability,Clear,Clear,116,Change Log:; - Enable RFileDialog through REveManager; - Add checks for validity of table and filter expressions; - Clear unnecessary REveManager printouts,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8333
https://github.com/root-project/root/pull/8334:164,Safety,avoid,avoid,164,"Allow users to request multithreaded (de)compression even if IMT is not enabled globally with `ROOT::EnableImplicitMT()`. This required a change to `TTaskGroup` to avoid checking if IMT was enabled -- as I understand it, we can use TBB even if IMT isn't turned on because we don't use `RTaskArena`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8334
https://github.com/root-project/root/pull/8335:614,Safety,avoid,avoid,614,See the bug report at Microsoft: [Problem with how the compiler generates covariant virtual functions](https://developercommunity.visualstudio.com/t/Problem-with-how-the-compiler-generates/1441440); And the proposed workaround:; >It turns out to be a problem with how the compiler generates the covariant virtual function `Clone` in `FunctorGradHandler`. To address the issue just use the original return type of the virtual base:; >```; >template; >class FunctorGradHandler : public ParentFunctor::Impl {; >...; > typename ParentFunctor::ImplBase* Clone() const { return Copy(); }; >...; >};; >```; > This should avoid the need for the compiler to generate the problematic covariant function.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8335
https://github.com/root-project/root/pull/8336:150,Deployability,Update,Update,150,Fixes as well https://github.com/root-project/root/issues/8280. (Thanks a lot to @amadio for pointing out the most reasonable for ROOT build system). Update: sadly we can't move directly to 3.16 because Debian 10 has only cmake 3.13 packaged https://pkgs.org/search/?q=cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8336
https://github.com/root-project/root/pull/8337:147,Availability,error,error,147,Before this patch we skipped running CleanUpTask if the status; of the TTreeReader after a single-thread event loop over ROOT data; encountered an error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8337
https://github.com/root-project/root/pull/8337:12,Deployability,patch,patch,12,Before this patch we skipped running CleanUpTask if the status; of the TTreeReader after a single-thread event loop over ROOT data; encountered an error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8337
https://github.com/root-project/root/pull/8338:62,Availability,error,error,62,This is a workaround for the issue reported as [Another fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/another-fatal-error-c1001-internal-compiler-error/1441527),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8338
https://github.com/root-project/root/pull/8338:93,Availability,error,error,93,This is a workaround for the issue reported as [Another fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/another-fatal-error-c1001-internal-compiler-error/1441527),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8338
https://github.com/root-project/root/pull/8338:160,Availability,error,error-,160,This is a workaround for the issue reported as [Another fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/another-fatal-error-c1001-internal-compiler-error/1441527),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8338
https://github.com/root-project/root/pull/8338:190,Availability,error,error,190,This is a workaround for the issue reported as [Another fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/another-fatal-error-c1001-internal-compiler-error/1441527),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8338
https://github.com/root-project/root/issues/8340:325,Availability,error,error,325,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; Here:. https://root.cern.ch/doc/master/TH2Poly_8h_source.html#l00033. The code suggests that we cannot store in these bins neither the bin error nor the sum of the squares of the weights. Thus in order to keep track of the errors we need two TH2Poly instances, one for the values and the other for the errors. What is the logic behind this design? I do not think this makes sense. Can this be changed? ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; Add setters and getters for errors, add members for the error and a member for the sum of squares of weights. . ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:409,Availability,error,errors,409,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; Here:. https://root.cern.ch/doc/master/TH2Poly_8h_source.html#l00033. The code suggests that we cannot store in these bins neither the bin error nor the sum of the squares of the weights. Thus in order to keep track of the errors we need two TH2Poly instances, one for the values and the other for the errors. What is the logic behind this design? I do not think this makes sense. Can this be changed? ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; Add setters and getters for errors, add members for the error and a member for the sum of squares of weights. . ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:488,Availability,error,errors,488,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; Here:. https://root.cern.ch/doc/master/TH2Poly_8h_source.html#l00033. The code suggests that we cannot store in these bins neither the bin error nor the sum of the squares of the weights. Thus in order to keep track of the errors we need two TH2Poly instances, one for the values and the other for the errors. What is the logic behind this design? I do not think this makes sense. Can this be changed? ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; Add setters and getters for errors, add members for the error and a member for the sum of squares of weights. . ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:728,Availability,error,errors,728,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; Here:. https://root.cern.ch/doc/master/TH2Poly_8h_source.html#l00033. The code suggests that we cannot store in these bins neither the bin error nor the sum of the squares of the weights. Thus in order to keep track of the errors we need two TH2Poly instances, one for the values and the other for the errors. What is the logic behind this design? I do not think this makes sense. Can this be changed? ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; Add setters and getters for errors, add members for the error and a member for the sum of squares of weights. . ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:756,Availability,error,error,756,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; Here:. https://root.cern.ch/doc/master/TH2Poly_8h_source.html#l00033. The code suggests that we cannot store in these bins neither the bin error nor the sum of the squares of the weights. Thus in order to keep track of the errors we need two TH2Poly instances, one for the values and the other for the errors. What is the logic behind this design? I do not think this makes sense. Can this be changed? ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; Add setters and getters for errors, add members for the error and a member for the sum of squares of weights. . ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:508,Testability,log,logic,508,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; Here:. https://root.cern.ch/doc/master/TH2Poly_8h_source.html#l00033. The code suggests that we cannot store in these bins neither the bin error nor the sum of the squares of the weights. Thus in order to keep track of the errors we need two TH2Poly instances, one for the values and the other for the errors. What is the logic behind this design? I do not think this makes sense. Can this be changed? ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; Add setters and getters for errors, add members for the error and a member for the sum of squares of weights. . ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:76,Usability,clear,clear,76,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; Here:. https://root.cern.ch/doc/master/TH2Poly_8h_source.html#l00033. The code suggests that we cannot store in these bins neither the bin error nor the sum of the squares of the weights. Thus in order to keep track of the errors we need two TH2Poly instances, one for the values and the other for the errors. What is the logic behind this design? I do not think this makes sense. Can this be changed? ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; Add setters and getters for errors, add members for the error and a member for the sum of squares of weights. . ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/issues/8340:636,Usability,clear,clear,636,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; Here:. https://root.cern.ch/doc/master/TH2Poly_8h_source.html#l00033. The code suggests that we cannot store in these bins neither the bin error nor the sum of the squares of the weights. Thus in order to keep track of the errors we need two TH2Poly instances, one for the values and the other for the errors. What is the logic behind this design? I do not think this makes sense. Can this be changed? ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; Add setters and getters for errors, add members for the error and a member for the sum of squares of weights. . ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8340
https://github.com/root-project/root/pull/8344:110,Testability,test,test,110,"Suppose by default that string coded as utf-8, providing correct representation in JSON. Adding correspondent test. Solves: #6681",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8344
https://github.com/root-project/root/pull/8345:45,Deployability,install,installed,45,On some platforms external nlohmann/json.hpp installed without; such special include. In this case full version has to be used. Provide special define when compile EVE7 which indicates if; json_fwd.hpp can be used. In the macros such define is not; exported and therefore full version of nlohmann/json.hpp; will be used. Better solution then https://github.com/root-project/root/pull/8343,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8345
https://github.com/root-project/root/pull/8349:147,Availability,error,error,147,Before this patch we skipped running CleanUpTask if the status; of the TTreeReader after a single-thread event loop over ROOT data; encountered an error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8349
https://github.com/root-project/root/pull/8349:12,Deployability,patch,patch,12,Before this patch we skipped running CleanUpTask if the status; of the TTreeReader after a single-thread event loop over ROOT data; encountered an error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8349
https://github.com/root-project/root/pull/8350:439,Deployability,patch,patch,439,"TTree::CopyAddresses has the built-in pre-condition that the input and; output branches are of the same kind. Clones might be added, however,; for which the pre-condition is violated. This is currently the case,; for example, with certain usages of RDataFrame::Snapshot, which might; create an output branch that is a simple TBranch while the input branch; is e.g. a TBranchElement. This results in wrong data being written out. With this patch we detect this case and complain.; A proper fix will be proposed soon. The issue is tracked as #8295.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8350
https://github.com/root-project/root/pull/8350:448,Safety,detect,detect,448,"TTree::CopyAddresses has the built-in pre-condition that the input and; output branches are of the same kind. Clones might be added, however,; for which the pre-condition is violated. This is currently the case,; for example, with certain usages of RDataFrame::Snapshot, which might; create an output branch that is a simple TBranch while the input branch; is e.g. a TBranchElement. This results in wrong data being written out. With this patch we detect this case and complain.; A proper fix will be proposed soon. The issue is tracked as #8295.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8350
https://github.com/root-project/root/pull/8350:318,Usability,simpl,simple,318,"TTree::CopyAddresses has the built-in pre-condition that the input and; output branches are of the same kind. Clones might be added, however,; for which the pre-condition is violated. This is currently the case,; for example, with certain usages of RDataFrame::Snapshot, which might; create an output branch that is a simple TBranch while the input branch; is e.g. a TBranchElement. This results in wrong data being written out. With this patch we detect this case and complain.; A proper fix will be proposed soon. The issue is tracked as #8295.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8350
https://github.com/root-project/root/pull/8352:104,Availability,failure,failures,104,"After the latest LLVM upgrade, changes in cling's symbol resolution; logic cause some unresolved symbol failures in RDF jitting. Adding RJittedAction to the rootmap should help cling autoloading; and work around the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8352
https://github.com/root-project/root/pull/8352:22,Deployability,upgrade,upgrade,22,"After the latest LLVM upgrade, changes in cling's symbol resolution; logic cause some unresolved symbol failures in RDF jitting. Adding RJittedAction to the rootmap should help cling autoloading; and work around the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8352
https://github.com/root-project/root/pull/8352:69,Testability,log,logic,69,"After the latest LLVM upgrade, changes in cling's symbol resolution; logic cause some unresolved symbol failures in RDF jitting. Adding RJittedAction to the rootmap should help cling autoloading; and work around the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8352
https://github.com/root-project/root/pull/8353:241,Deployability,patch,patch,241,"Recent changes that added support for jitted Book actions broke the; edge case in which the action helper takes no columns:; `df.Book(Helper{}, {})` now means ""jit this action"" rather than ""this; action does not take any columns"". With this patch, we resolve this ambiguity at runtime by looking at; the list of column names. A helper type is used to make sure that; compilation is fine in all cases. cc: @bendavid",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8353
https://github.com/root-project/root/pull/8354:99,Modifiability,inherit,inheritance,99,One cannot simply call `delete this` in base class - ; especially when derived class uses multiple inheritance.; Therefore provide OnZeroRefCount implementation in all derived classes; In REve also mark this method as abstract to ensure that such problem; not appear in the future,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8354
https://github.com/root-project/root/pull/8354:11,Usability,simpl,simply,11,One cannot simply call `delete this` in base class - ; especially when derived class uses multiple inheritance.; Therefore provide OnZeroRefCount implementation in all derived classes; In REve also mark this method as abstract to ensure that such problem; not appear in the future,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8354
https://github.com/root-project/root/issues/8357:140,Availability,avail,available,140,"With the bundled MS corefonts, root license isn't completely free. What I ask is to make MS corefonts optional. A patch from Fedora is also available here https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:114,Deployability,patch,patch,114,"With the bundled MS corefonts, root license isn't completely free. What I ask is to make MS corefonts optional. A patch from Fedora is also available here https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8357:226,Deployability,patch,patch,226,"With the bundled MS corefonts, root license isn't completely free. What I ask is to make MS corefonts optional. A patch from Fedora is also available here https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8357
https://github.com/root-project/root/issues/8360:54,Performance,perform,performance,54,"### Explain what you would like to see improved; Some performance counters are expected to be common among different; subclasses of `RPage{Sink,Source}`. These should be handled by the base; class instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8360
https://github.com/root-project/root/issues/8361:386,Availability,avail,available,386,"### Explain what you would like to see improved. We have [a proposal for an improved `rootls`](https://root-forum.cern.ch/t/terminal-program-for-printing-root-file-contents-in-a-tree-format/44185/12; ). After discussion we decided to implement missing features in `rootls` - for instance to keep it in Python (platform-independent terminal interaction) and to continue to make the code available to the other command line utilities. In our usage of `rootls`, what's missing? Let's collect this in comments below. ### Optional: share how it could be improved. See comments below. ### To Reproduce. See comments below. ### Setup. ROOT master, please - there are some +/- recent changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8361
https://github.com/root-project/root/pull/8362:26,Deployability,update,updateNormVars,26,The first call to `frame->updateNormVars(*frame->getPlotVar())` should; be made before the first call to `frame->getNormVars()` in the; `RooAbsPdf::plotOn` function. This fixes the Jira issue [ROOT-5529](https://sft.its.cern.ch/jira/browse/ROOT-5529).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8362
https://github.com/root-project/root/pull/8364:4,Availability,down,downsteam,4,"The downsteam code, -- like RooAddPdf::getValV for example -- assume; that a nullptr is passed when no normalization is requested. The case of; an empty norm set is not handled correctly in RooAddPdf::getValV,; leading to wrong results. However, some calling code passes an empty norm set to; RooAbsReal::getVal instead of a `nullptr` in an attempt to disable; normalization. This commit suggests to solve this ambiguity at the highest possible; level: right at the beginning of RooAbsReal::getVal. If the; normalization set is empty, the pointer pointing to it will be set to; `nullptr`. This fixes issue #8307. To give some context: the code in RooAddPdf that doesn't handle the ambiguity correctly was introduced in f6d1543, which was also backported to 6.24. Hence, a backport to 6.24 is necessary also for this PR. The backport PR to 6.24 is https://github.com/root-project/root/pull/8372, which first go included in 6.24.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8364
https://github.com/root-project/root/issues/8365:5851,Availability,Down,Download,5851,"90 is 64 bytes inside a block of size 72 alloc'd; operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so); TStorage::ReAlloc(void*, unsigned long, unsigned long) (TStorage.cxx:238); TOrdCollection::SetCapacity(int) (TOrdCollection.cxx:387); TOrdCollection::AddAt(TObject*, int) (TOrdCollection.cxx:66); TOrdCollection::AddLast(TObject*) (TOrdCollection.cxx:102); TSeqCollection::Add(TObject*) (TSeqCollection.h:38); TSystem::AddTimer(TTimer*) (TSystem.cxx:476); TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2974); TTimer::TurnOn() (TTimer.cxx:247); TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:110); MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:616); main (main.cxx:86); ```. and several more can be seen in helgrind.log in the forum post, or in helgrind.xml attached here. [helgrind.xml.zip](https://github.com/root-project/root/files/6612569/helgrind.xml.zip). When opening the XML with QtCreator, they are rendered nicely:; ![image](https://user-images.githubusercontent.com/10653970/121102408-7e870b00-c7cb-11eb-8436-816dd434bdf3.png). ### Expected behavior; No data races are found. Or they are added to helgrind-root.supp. ### To Reproduce; 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it; 2. mkdir build && cd build; 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 4. make; 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ### Setup; 1. ROOT master; 2. Ubuntu 18; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14; https://github.com/root-project/root/issues/8297",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:2037,Security,access,accessed,2037,"<>(char const*, int) (TQObject.h:137). This conflicts with a previous write of size 4 by thread #3; Locks held: 1, at address 0x167C9B50; at 0x52005E4: TOrdCollection::AddAt(TObject*, int) (TOrdCollection.cxx:70); by 0x5200785: TOrdCollection::AddLast(TObject*) (TOrdCollection.cxx:102); by 0x5201C2D: TSeqCollection::Add(TObject*) (TSeqCollection.h:38); by 0x519E68B: TSystem::AddTimer(TTimer*) (TSystem.cxx:476); by 0x52CDC32: TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2974); by 0x64AC1E3: TThreadTimer::TThreadTimer(long) (TThread.cxx:1200); by 0x64AB943: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1037); by 0x64AB448: TThread::Printf(char const*, ...) (TThread.cxx:950); ```. 1); ```; TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1058); TThreadTimer::Notify() (TThread.cxx:1208); ```; ![image](https://user-images.githubusercontent.com/10653970/121098991-0584b500-c7c5-11eb-8a4a-2c07f74d1486.png). --> TThread::fgXact is accessed unprotected, it could have been changed at the same time by XARequest:. ![image](https://user-images.githubusercontent.com/10653970/121099097-3664ea00-c7c5-11eb-86e7-41daed97a959.png). 2); ```; TApplication::IsRunning() const (TApplication.h:148); TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1029); This conflicts with a previous write of size 1 by thread #1; TApplication::Run(bool) (TApplication.cxx:1622); ```; ![image](https://user-images.githubusercontent.com/10653970/121100197-4f6e9a80-c7c7-11eb-883b-0f7aec2059d2.png); ![image](https://user-images.githubusercontent.com/10653970/121100214-58f80280-c7c7-11eb-80b8-cdbc68dd1efe.png). 3); ```; Possible data race during read of size 4 at 0x7F25098 by thread #3; Locks held: 1, at address 0x167C9B50; TCollection::GetSize() const (TCollection.h:182); TOrdCollectionIter::Next() (TOrdCollection.cxx:506); TIter::Next() (TCollection.h:249); TIter::operator()() (TCollection.h:248); TCollection::FindObject(TObject const*) const (TCollection.cxx:34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5358,Testability,log,log,5358,"c(void*, TInterpreterValue*) (TClingCallFunc.cxx:2102); Address 0x1b96f790 is 64 bytes inside a block of size 72 alloc'd; operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so); TStorage::ReAlloc(void*, unsigned long, unsigned long) (TStorage.cxx:238); TOrdCollection::SetCapacity(int) (TOrdCollection.cxx:387); TOrdCollection::AddAt(TObject*, int) (TOrdCollection.cxx:66); TOrdCollection::AddLast(TObject*) (TOrdCollection.cxx:102); TSeqCollection::Add(TObject*) (TSeqCollection.h:38); TSystem::AddTimer(TTimer*) (TSystem.cxx:476); TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2974); TTimer::TurnOn() (TTimer.cxx:247); TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:110); MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:616); main (main.cxx:86); ```. and several more can be seen in helgrind.log in the forum post, or in helgrind.xml attached here. [helgrind.xml.zip](https://github.com/root-project/root/files/6612569/helgrind.xml.zip). When opening the XML with QtCreator, they are rendered nicely:; ![image](https://user-images.githubusercontent.com/10653970/121102408-7e870b00-c7cb-11eb-8436-816dd434bdf3.png). ### Expected behavior; No data races are found. Or they are added to helgrind-root.supp. ### To Reproduce; 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it; 2. mkdir build && cd build; 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 4. make; 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ### Setup; 1. ROOT master; 2. Ubuntu 18; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:6192,Testability,log,log-file,6192,"90 is 64 bytes inside a block of size 72 alloc'd; operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so); TStorage::ReAlloc(void*, unsigned long, unsigned long) (TStorage.cxx:238); TOrdCollection::SetCapacity(int) (TOrdCollection.cxx:387); TOrdCollection::AddAt(TObject*, int) (TOrdCollection.cxx:66); TOrdCollection::AddLast(TObject*) (TOrdCollection.cxx:102); TSeqCollection::Add(TObject*) (TSeqCollection.h:38); TSystem::AddTimer(TTimer*) (TSystem.cxx:476); TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2974); TTimer::TurnOn() (TTimer.cxx:247); TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:110); MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:616); main (main.cxx:86); ```. and several more can be seen in helgrind.log in the forum post, or in helgrind.xml attached here. [helgrind.xml.zip](https://github.com/root-project/root/files/6612569/helgrind.xml.zip). When opening the XML with QtCreator, they are rendered nicely:; ![image](https://user-images.githubusercontent.com/10653970/121102408-7e870b00-c7cb-11eb-8436-816dd434bdf3.png). ### Expected behavior; No data races are found. Or they are added to helgrind-root.supp. ### To Reproduce; 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it; 2. mkdir build && cd build; 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 4. make; 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ### Setup; 1. ROOT master; 2. Ubuntu 18; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14; https://github.com/root-project/root/issues/8297",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:6210,Testability,log,log,6210,"90 is 64 bytes inside a block of size 72 alloc'd; operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so); TStorage::ReAlloc(void*, unsigned long, unsigned long) (TStorage.cxx:238); TOrdCollection::SetCapacity(int) (TOrdCollection.cxx:387); TOrdCollection::AddAt(TObject*, int) (TOrdCollection.cxx:66); TOrdCollection::AddLast(TObject*) (TOrdCollection.cxx:102); TSeqCollection::Add(TObject*) (TSeqCollection.h:38); TSystem::AddTimer(TTimer*) (TSystem.cxx:476); TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2974); TTimer::TurnOn() (TTimer.cxx:247); TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:110); MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:616); main (main.cxx:86); ```. and several more can be seen in helgrind.log in the forum post, or in helgrind.xml attached here. [helgrind.xml.zip](https://github.com/root-project/root/files/6612569/helgrind.xml.zip). When opening the XML with QtCreator, they are rendered nicely:; ![image](https://user-images.githubusercontent.com/10653970/121102408-7e870b00-c7cb-11eb-8436-816dd434bdf3.png). ### Expected behavior; No data races are found. Or they are added to helgrind-root.supp. ### To Reproduce; 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it; 2. mkdir build && cd build; 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 4. make; 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ### Setup; 1. ROOT master; 2. Ubuntu 18; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14; https://github.com/root-project/root/issues/8297",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/pull/8366:16,Availability,failure,failure,16,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:840,Availability,Error,Error,840,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:945,Availability,error,error,945,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:356,Integrability,interface,interface,356,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:664,Integrability,interface,interface,664,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:934,Integrability,message,message,934,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:495,Performance,load,load,495,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:794,Performance,load,load,794,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:11,Testability,test,test,11,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:40,Testability,Test,Test,40,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/issues/8367:6070,Availability,down,download,6070,"essor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/sakib/root/lib/libCling.so; #26 0x00007ff62b940b4e in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/sakib/root/lib/libCling.so; #27 0x00007ff62b9417da in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/sakib/root/lib/libCling.so; #28 0x00007ff6302ed70a in TApplication::ExecuteFile(char const*, int*, bool) () from /home/sakib/root/lib/libCore.so.6.24; #29 0x00007ff6302ee443 in TApplication::ProcessLine(char const*, bool, int*) () from /home/sakib/root/lib/libCore.so.6.24; #30 0x00007ff630666166 in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/sakib/root/lib/libRint.so.6.24; #31 0x00007ff63066656a in TRint::HandleTermInput() () from /home/sakib/root/lib/libRint.so.6.24; #32 0x00007ff630441b62 in TUnixSystem::CheckDescriptors() () from /home/sakib/root/lib/libCore.so.6.24; #33 0x00007ff630443828 in TUnixSystem::DispatchOneEvent(bool) () from /home/sakib/root/lib/libCore.so.6.24; #34 0x00007ff630353669 in TSystem::Run() () from /home/sakib/root/lib/libCore.so.6.24; #35 0x00007ff6302eb443 in TApplication::Run(bool) () from /home/sakib/root/lib/libCore.so.6.24; #36 0x00007ff630667c0e in TRint::Run(bool) () from /home/sakib/root/lib/libRint.so.6.24; #37 0x000055b5825ea180 in main (); ===========================================================; ```. ### Describe the bug; tried to execute a code, crashes. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Steps to reproduce the behavior:; 1. ; ```; {; g = new TGraph();; ; for(i=0; i<12; i++) {; g->SetPoint(i, i, i*i + 4*i + 7);; }; ; g->SetMarkerStyle(49);; ; g->Draw(""ALP"");; }; ```; 2. .x graph2.C. ### Setup; 1. ROOT version 6.24.00; 2. Operating system ubuntu 20.04; 3. How you obtained ROOT-> binary download . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:463,Performance,optimiz,optimized,463,"```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007ff62fe1bdba in __GI___wait4 (pid=227643, stat_loc=stat_loc; entry=0x7ffe314e7e68, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007ff62fe1bd7b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffe314e7e68, options=options; entry=0) at waitpid.c:38; #2 0x00007ff62fd8b0e7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007ff630445bfe in TUnixSystem::StackTrace() () from /home/sakib/root/lib/libCore.so.6.24; #4 0x00007ff630442a85 in TUnixSystem::DispatchSignals(ESignals) () from /home/sakib/root/lib/libCore.so.6.24; #5 <signal handler called>; #6 0x00007ff62be79d78 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/sakib/root/lib/libCling.so; #7 0x00007ff62be7c77b in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/sakib/root/lib/libCling.so; #8 0x00007ff62be2dfcf in clang::CodeGen::CodeGenFunction::EvaluateExprAsBool(clang::Expr const*) () from /home/sakib/root/lib/libCling.so; #9 0x00007ff62bc077f5 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&, llvm::ArrayRef<clang::Attr const*>) () from /home/sakib/root/lib/libCling.so; #10 0x00007ff62bc05848 in clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef<clang::Attr const*>) () from /home/sakib/root/lib/libCling.so; #11 0x00007ff62bc05979 in clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) () from /home/sakib/root/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:605,Performance,optimiz,optimized,605,"```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007ff62fe1bdba in __GI___wait4 (pid=227643, stat_loc=stat_loc; entry=0x7ffe314e7e68, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007ff62fe1bd7b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffe314e7e68, options=options; entry=0) at waitpid.c:38; #2 0x00007ff62fd8b0e7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007ff630445bfe in TUnixSystem::StackTrace() () from /home/sakib/root/lib/libCore.so.6.24; #4 0x00007ff630442a85 in TUnixSystem::DispatchSignals(ESignals) () from /home/sakib/root/lib/libCore.so.6.24; #5 <signal handler called>; #6 0x00007ff62be79d78 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/sakib/root/lib/libCling.so; #7 0x00007ff62be7c77b in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/sakib/root/lib/libCling.so; #8 0x00007ff62be2dfcf in clang::CodeGen::CodeGenFunction::EvaluateExprAsBool(clang::Expr const*) () from /home/sakib/root/lib/libCling.so; #9 0x00007ff62bc077f5 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&, llvm::ArrayRef<clang::Attr const*>) () from /home/sakib/root/lib/libCling.so; #10 0x00007ff62bc05848 in clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef<clang::Attr const*>) () from /home/sakib/root/lib/libCling.so; #11 0x00007ff62bc05979 in clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) () from /home/sakib/root/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5682,Usability,clear,clear,5682,"essor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/sakib/root/lib/libCling.so; #26 0x00007ff62b940b4e in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/sakib/root/lib/libCling.so; #27 0x00007ff62b9417da in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/sakib/root/lib/libCling.so; #28 0x00007ff6302ed70a in TApplication::ExecuteFile(char const*, int*, bool) () from /home/sakib/root/lib/libCore.so.6.24; #29 0x00007ff6302ee443 in TApplication::ProcessLine(char const*, bool, int*) () from /home/sakib/root/lib/libCore.so.6.24; #30 0x00007ff630666166 in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/sakib/root/lib/libRint.so.6.24; #31 0x00007ff63066656a in TRint::HandleTermInput() () from /home/sakib/root/lib/libRint.so.6.24; #32 0x00007ff630441b62 in TUnixSystem::CheckDescriptors() () from /home/sakib/root/lib/libCore.so.6.24; #33 0x00007ff630443828 in TUnixSystem::DispatchOneEvent(bool) () from /home/sakib/root/lib/libCore.so.6.24; #34 0x00007ff630353669 in TSystem::Run() () from /home/sakib/root/lib/libCore.so.6.24; #35 0x00007ff6302eb443 in TApplication::Run(bool) () from /home/sakib/root/lib/libCore.so.6.24; #36 0x00007ff630667c0e in TRint::Run(bool) () from /home/sakib/root/lib/libRint.so.6.24; #37 0x000055b5825ea180 in main (); ===========================================================; ```. ### Describe the bug; tried to execute a code, crashes. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Steps to reproduce the behavior:; 1. ; ```; {; g = new TGraph();; ; for(i=0; i<12; i++) {; g->SetPoint(i, i, i*i + 4*i + 7);; }; ; g->SetMarkerStyle(49);; ; g->Draw(""ALP"");; }; ```; 2. .x graph2.C. ### Setup; 1. ROOT version 6.24.00; 2. Operating system ubuntu 20.04; 3. How you obtained ROOT-> binary download . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/pull/8368:328,Availability,ERROR,ERROR,328,"```; .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':; .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]; 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;; | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':; .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]; 156 | << "" is not of type RooAbsReal, fatal error"" << endl;; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':; .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]; 131 | Int_t n = event->GetNVariables();; | ~~~~~~~~~~~~~~~~~~~~^~; In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,; from .../tmva/tmva/inc/TMVA/Tools.h:58,; from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,; from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,; from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,; from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:; .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'; 88 | UInt_t GetNVariables() const;; | ^~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8368
https://github.com/root-project/root/pull/8368:719,Availability,error,error,719,"```; .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':; .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]; 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;; | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':; .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]; 156 | << "" is not of type RooAbsReal, fatal error"" << endl;; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':; .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]; 131 | Int_t n = event->GetNVariables();; | ~~~~~~~~~~~~~~~~~~~~^~; In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,; from .../tmva/tmva/inc/TMVA/Tools.h:58,; from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,; from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,; from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,; from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:; .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'; 88 | UInt_t GetNVariables() const;; | ^~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8368
https://github.com/root-project/root/pull/8368:1347,Modifiability,Variab,VariableTransformBase,1347,"```; .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':; .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]; 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;; | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':; .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]; 156 | << "" is not of type RooAbsReal, fatal error"" << endl;; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':; .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]; 131 | Int_t n = event->GetNVariables();; | ~~~~~~~~~~~~~~~~~~~~^~; In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,; from .../tmva/tmva/inc/TMVA/Tools.h:58,; from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,; from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,; from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,; from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:; .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'; 88 | UInt_t GetNVariables() const;; | ^~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8368
https://github.com/root-project/root/pull/8369:599,Performance,optimiz,optimization,599,"This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:815,Testability,test,tested,815,"This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/issues/8370:392,Availability,error,error,392,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:496,Availability,error,error,496,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:735,Availability,error,error,735,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:804,Availability,error,error,804,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:224,Testability,test,test,224,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:292,Testability,test,test,292,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:350,Testability,test,test,350,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:355,Testability,test,test,355,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:422,Testability,test,test,422,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:480,Testability,test,test,480,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/pull/8371:174,Integrability,wrap,wraps,174,TFormula already supports gradient calculation using clad. This commit extends that support for hessian calculation. Thus the hessian generation is done by clad and TFormula wraps it in a trampoline function.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:71,Modifiability,extend,extends,71,TFormula already supports gradient calculation using clad. This commit extends that support for hessian calculation. Thus the hessian generation is done by clad and TFormula wraps it in a trampoline function.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
