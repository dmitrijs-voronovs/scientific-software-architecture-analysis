id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://psicode.org/psi4manual/4.0b4/dcft-1.html:1562,Integrability,rout,route,1562,"ression in terms of the one- and; two-particle density matrices (OPDM and TPDM):. Here we used Einstein convention for the summation over the repeated indices,; and are the standard one- and two-electron integrals,; and are the elements of the OPDM and TPDM,; respectively. Naively, one might expect that it is possible to minimize the; energy functional in the equation above and obtain the exact energy. This is,; however, not trivial, as the density matrix elements and; cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, i.e.; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consist",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:1874,Integrability,depend,depends,1874,",; respectively. Naively, one might expect that it is possible to minimize the; energy functional in the equation above and obtain the exact energy. This is,; however, not trivial, as the density matrix elements and; cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, i.e.; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively s",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:7767,Modifiability,coupling,coupling,7767,"he cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transf",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:7938,Modifiability,coupling,coupling,7938,"dratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to d",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:6217,Performance,perform,performed,6217,"putations can only be run with the unrestricted; orbitals. If the REFERENCE option is not specified in the input file,; the PSI4 Python driver will conveniently set it to UHF for the DCFT; computations. Iterative AlgorithmsÂ¶; As explained in the Theory section, in order to obtain the DCFT energy one; needs to solve the system of coupled equations for the orbitals and the density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; ALGORITHM option.; 1) Two-step algorithm (can be invoked by setting ALGORITHM option to; TWOSTEP and is currently the default). In two-step algorithm the DCFT equations; are solved in macroiterations. Each macroiteration consists of two sets of; microiterations. In the first set the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update follo",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:6345,Performance,perform,performing,6345,"hon driver will conveniently set it to UHF for the DCFT; computations. Iterative AlgorithmsÂ¶; As explained in the Theory section, in order to obtain the DCFT energy one; needs to solve the system of coupled equations for the orbitals and the density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; ALGORITHM option.; 1) Two-step algorithm (can be invoked by setting ALGORITHM option to; TWOSTEP and is currently the default). In two-step algorithm the DCFT equations; are solved in macroiterations. Each macroiteration consists of two sets of; microiterations. In the first set the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using th",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:7323,Performance,perform,performed,7323,"the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensi",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:7595,Performance,perform,performed,7595," In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the ",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:8114,Performance,optimiz,optimized,8114,"oiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic Gra",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:9907,Performance,perform,perform,9907,"ron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 en",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:9928,Performance,optimiz,optimizations,9928,"ron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 en",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:10192,Performance,perform,perform,10192," Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computatio",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:10327,Performance,perform,perform,10327,"must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of ",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:10639,Performance,perform,perform,10639,"Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simulta",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:10660,Performance,optimiz,optimization,10660,"Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simulta",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:10747,Performance,optimiz,optimize,10747,"be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method a",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:10769,Performance,optimiz,optimize,10769," the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the ca",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:10802,Performance,perform,perform,10802," the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the ca",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:10943,Performance,perform,perform,10943,"DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:11051,Performance,perform,perform,11051,"DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:11073,Performance,optimiz,optimization,11073,"DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:8806,Safety,avoid,avoiding,8806,"ds to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradient",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:5176,Testability,test,test,5176,"the density cumulant; in an approximate way, the DC-12 method derives this contribution exactly, and; therefore takes full advantage of the N-representability conditions. Both DC-06; and DC-12 methods have similar computational cost. However, the DC-12 method; usually exhibits much better numerical stability and can be significantly; cheaper than the DC-06 in the problematic cases as the result of the improved; convergence. For the comparison of the quality of these methods we refer; user to the recent publications.; The DCFT functional can be specified by the DCFT_FUNCTIONAL option. The; default choice is the DC-06 functional. In addition to the two methods listed; above, DCFT_FUNCTIONAL option can be set to CEPA0 (coupled electron; pair approximation zero, equivalent to linearized coupled cluster doubles; method, LCCD). CEPA0 can be considered as a particular case of the DC-06 and DC-12; methods in the limit of zero non-idempotency of OPDM. This option has a limited; functionality and should only be used for the test purposes.; At the present moment DCFT computations can only be run with the unrestricted; orbitals. If the REFERENCE option is not specified in the input file,; the PSI4 Python driver will conveniently set it to UHF for the DCFT; computations. Iterative AlgorithmsÂ¶; As explained in the Theory section, in order to obtain the DCFT energy one; needs to solve the system of coupled equations for the orbitals and the density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; ALGORITHM option.; 1) Two-step algorithm (can be invoked by setting ALGORITHM option to; TWOSTEP and is currently the default). In two-step algorithm the DCFT equations; are solved in macroiterations. Each macroiteration consists of two sets of; microiterations. In the first set the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After th",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:1265,Usability,simpl,simple,1265," Sokolov; Module: Keywords, PSI Variables, DCFT. TheoryÂ¶; Density cumulant functional theory (DCFT) is a density-based ab initio theory; that can compute electronic energies without the use of the wavefunction. The; theory starts by writing the exact energy expression in terms of the one- and; two-particle density matrices (OPDM and TPDM):. Here we used Einstein convention for the summation over the repeated indices,; and are the standard one- and two-electron integrals,; and are the elements of the OPDM and TPDM,; respectively. Naively, one might expect that it is possible to minimize the; energy functional in the equation above and obtain the exact energy. This is,; however, not trivial, as the density matrix elements and; cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, i.e.; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the den",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft-1.html:2650,Usability,simpl,simplified,2650," matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the variation of the; idempotent part of the one-particle density matrix . This is; achieved by the self-consistent diagonalization of the generalized Fock; operator matrix defined above, which introduces the relaxation of the orbitals.; 2) The energy must be stationary with respect to the variation of the density; cumulant , constrained to the N-representability conditions.; Making the energy stationary requires the solution of the two sets of coupled; equations for the orbital and cumulant updates, respectively (also known as; residual equations). At the present moment three different algorithms for the; solution of the system of coupled equations are available (see s",MatchSource.WIKI,psi4manual/4.0b4/dcft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft-1.html
https://psicode.org/psi4manual/4.0b4/dcft.html:3648,Availability,avail,available,3648,"ty; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the variation of the; idempotent part of the one-particle density matrix . This is; achieved by the self-consistent diagonalization of the generalized Fock; operator matrix defined above, which introduces the relaxation of the orbitals.; 2) The energy must be stationary with respect to the variation of the density; cumulant , constrained to the N-representability conditions.; Making the energy stationary requires the solution of the two sets of coupled; equations for the orbital and cumulant updates, respectively (also known as; residual equations). At the present moment three different algorithms for the; solution of the system of coupled equations are available (see section; Iterative Algorithms for details).; Publications resulting from the use of the DCFT code should cite contributions; listed here. MethodsÂ¶; Currently two DCFT methods (functionals) are available: DC-06 and DC-12. Both; methods use approximate N-representability conditions derived from the; second-order perturbation theory, but differ in the description of the; correlated (non-idempotent) part of the one-particle density; matrix. While in the DC-06 method is derived from the density cumulant; in an approximate way, the DC-12 method derives this contribution exactly, and; therefore takes full advantage of the N-representability conditions. Both DC-06; and DC-12 methods have similar computational cost. However, the DC-12 method; usually exhibits much better numerical stability and can be significantly; cheaper than the DC-06 in the problematic cases as the result of the improved; convergence. For the comparison of the quality of these methods",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:3856,Availability,avail,available,3856,"mall part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the variation of the; idempotent part of the one-particle density matrix . This is; achieved by the self-consistent diagonalization of the generalized Fock; operator matrix defined above, which introduces the relaxation of the orbitals.; 2) The energy must be stationary with respect to the variation of the density; cumulant , constrained to the N-representability conditions.; Making the energy stationary requires the solution of the two sets of coupled; equations for the orbital and cumulant updates, respectively (also known as; residual equations). At the present moment three different algorithms for the; solution of the system of coupled equations are available (see section; Iterative Algorithms for details).; Publications resulting from the use of the DCFT code should cite contributions; listed here. MethodsÂ¶; Currently two DCFT methods (functionals) are available: DC-06 and DC-12. Both; methods use approximate N-representability conditions derived from the; second-order perturbation theory, but differ in the description of the; correlated (non-idempotent) part of the one-particle density; matrix. While in the DC-06 method is derived from the density cumulant; in an approximate way, the DC-12 method derives this contribution exactly, and; therefore takes full advantage of the N-representability conditions. Both DC-06; and DC-12 methods have similar computational cost. However, the DC-12 method; usually exhibits much better numerical stability and can be significantly; cheaper than the DC-06 in the problematic cases as the result of the improved; convergence. For the comparison of the quality of these methods we refer; user to the recent publications.; The DCFT functional can be specified by the DCFT_FUNCTIONAL option. The; default choice is the DC-06 functional. In addition to the two methods listed; above, DCFT_FUNCTIONA",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:5703,Availability,avail,available,5703,"ons.; The DCFT functional can be specified by the DCFT_FUNCTIONAL option. The; default choice is the DC-06 functional. In addition to the two methods listed; above, DCFT_FUNCTIONAL option can be set to CEPA0 (coupled electron; pair approximation zero, equivalent to linearized coupled cluster doubles; method, LCCD). CEPA0 can be considered as a particular case of the DC-06 and DC-12; methods in the limit of zero non-idempotency of OPDM. This option has a limited; functionality and should only be used for the test purposes.; At the present moment DCFT computations can only be run with the unrestricted; orbitals. If the REFERENCE option is not specified in the input file,; the PSI4 Python driver will conveniently set it to UHF for the DCFT; computations. Iterative AlgorithmsÂ¶; As explained in the Theory section, in order to obtain the DCFT energy one; needs to solve the system of coupled equations for the orbitals and the density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; ALGORITHM option.; 1) Two-step algorithm (can be invoked by setting ALGORITHM option to; TWOSTEP and is currently the default). In two-step algorithm the DCFT equations; are solved in macroiterations. Each macroiteration consists of two sets of; microiterations. In the first set the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed b",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:9153,Availability,avail,available,9153,"owly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT mod",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:9205,Availability,avail,available,9205,"ve algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to o",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:9477,Availability,avail,available,9477,". As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:9857,Availability,avail,available,9857,"ron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 en",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:11851,Availability,avail,available,11851,"o obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with the two-step algorithm, this option can significantly; increase the cost of the energy computation.; In the case when the oscillatory convergence is observed before the DIIS; extrapolation is initialized, it is recommended to increase the threshold for; the RMS of the density cumulant or orbital update residual, below which the; DIIS extrapolation starts. This can be done by setting; DIIS_START_CONVERGENCE option to the value greater than; by one or two orders of magnitude (e.g. or; ).; If the oscillatory convergence is observed for atoms or molecules with high; symmetry, it is recommended to use quadratically-convergent algorithm.; When using quadratically-convergent algorithm for closed-shell molecules, it; is recommended to set QC_COUPLING option to FALSE for efficiency; reasons. Table Of Contents. DCFT: Density Cumulant Functional Theory; Theory; Metho",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:3483,Deployability,update,updates,3483,"ties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the variation of the; idempotent part of the one-particle density matrix . This is; achieved by the self-consistent diagonalization of the generalized Fock; operator matrix defined above, which introduces the relaxation of the orbitals.; 2) The energy must be stationary with respect to the variation of the density; cumulant , constrained to the N-representability conditions.; Making the energy stationary requires the solution of the two sets of coupled; equations for the orbital and cumulant updates, respectively (also known as; residual equations). At the present moment three different algorithms for the; solution of the system of coupled equations are available (see section; Iterative Algorithms for details).; Publications resulting from the use of the DCFT code should cite contributions; listed here. MethodsÂ¶; Currently two DCFT methods (functionals) are available: DC-06 and DC-12. Both; methods use approximate N-representability conditions derived from the; second-order perturbation theory, but differ in the description of the; correlated (non-idempotent) part of the one-particle density; matrix. While in the DC-06 method is derived from the density cumulant; in an approximate way, the DC-12 method derives this contribution exactly, and; therefore takes full advantage of the N-representability conditions. Both DC-06; and DC-12 methods have similar computational cost. However, the DC-12 method; usually exhibits much better numerical stabil",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:6252,Deployability,update,update,6252,"putations can only be run with the unrestricted; orbitals. If the REFERENCE option is not specified in the input file,; the PSI4 Python driver will conveniently set it to UHF for the DCFT; computations. Iterative AlgorithmsÂ¶; As explained in the Theory section, in order to obtain the DCFT energy one; needs to solve the system of coupled equations for the orbitals and the density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; ALGORITHM option.; 1) Two-step algorithm (can be invoked by setting ALGORITHM option to; TWOSTEP and is currently the default). In two-step algorithm the DCFT equations; are solved in macroiterations. Each macroiteration consists of two sets of; microiterations. In the first set the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update follo",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:6646,Deployability,update,update,6646,"gorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; ALGORITHM option.; 1) Two-step algorithm (can be invoked by setting ALGORITHM option to; TWOSTEP and is currently the default). In two-step algorithm the DCFT equations; are solved in macroiterations. Each macroiteration consists of two sets of; microiterations. In the first set the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian ",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:6700,Deployability,update,update,6700,"gorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; ALGORITHM option.; 1) Two-step algorithm (can be invoked by setting ALGORITHM option to; TWOSTEP and is currently the default). In two-step algorithm the DCFT equations; are solved in macroiterations. Each macroiteration consists of two sets of; microiterations. In the first set the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian ",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:7049,Deployability,update,update,7049,"t equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadr",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:7210,Deployability,update,update,7210,"et of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbi",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:7566,Deployability,update,updates,7566," In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the ",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:7583,Deployability,update,updates,7583," In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the ",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:8498,Deployability,update,updates,8498,"he; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires th",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:9633,Deployability,update,updates,9633," molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:12279,Deployability,update,update,12279," than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with the two-step algorithm, this option can significantly; increase the cost of the energy computation.; In the case when the oscillatory convergence is observed before the DIIS; extrapolation is initialized, it is recommended to increase the threshold for; the RMS of the density cumulant or orbital update residual, below which the; DIIS extrapolation starts. This can be done by setting; DIIS_START_CONVERGENCE option to the value greater than; by one or two orders of magnitude (e.g. or; ).; If the oscillatory convergence is observed for atoms or molecules with high; symmetry, it is recommended to use quadratically-convergent algorithm.; When using quadratically-convergent algorithm for closed-shell molecules, it; is recommended to set QC_COUPLING option to FALSE for efficiency; reasons. Table Of Contents. DCFT: Density Cumulant Functional Theory; Theory; Methods; Iterative Algorithms; Analytic Gradients; Minimal Input; Recommendations. Previous topic; DFT: Density Functional Theory; Next topic; DF-MP2: Density-Fitted Second-Order MÃ¸ller-Plesset Perturbation Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . pr",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:13316,Deployability,update,updated,13316," (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with the two-step algorithm, this option can significantly; increase the cost of the energy computation.; In the case when the oscillatory convergence is observed before the DIIS; extrapolation is initialized, it is recommended to increase the threshold for; the RMS of the density cumulant or orbital update residual, below which the; DIIS extrapolation starts. This can be done by setting; DIIS_START_CONVERGENCE option to the value greater than; by one or two orders of magnitude (e.g. or; ).; If the oscillatory convergence is observed for atoms or molecules with high; symmetry, it is recommended to use quadratically-convergent algorithm.; When using quadratically-convergent algorithm for closed-shell molecules, it; is recommended to set QC_COUPLING option to FALSE for efficiency; reasons. Table Of Contents. DCFT: Density Cumulant Functional Theory; Theory; Methods; Iterative Algorithms; Analytic Gradients; Minimal Input; Recommendations. Previous topic; DFT: Density Functional Theory; Next topic; DF-MP2: Density-Fitted Second-Order MÃ¸ller-Plesset Perturbation Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:574,Energy Efficiency,energy,energy,574,"ï»¿. DCFT: Density Cumulant Functional Theory â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». DCFT: Density Cumulant Functional TheoryÂ¶; Code author: Alexander Yu. Sokolov and Andrew C. Simmonett; Section author: Alexander Yu. Sokolov; Module: Keywords, PSI Variables, DCFT. TheoryÂ¶; Density cumulant functional theory (DCFT) is a density-based ab initio theory; that can compute electronic energies without the use of the wavefunction. The; theory starts by writing the exact energy expression in terms of the one- and; two-particle density matrices (OPDM and TPDM):. Here we used Einstein convention for the summation over the repeated indices,; and are the standard one- and two-electron integrals,; and are the elements of the OPDM and TPDM,; respectively. Naively, one might expect that it is possible to minimize the; energy functional in the equation above and obtain the exact energy. This is,; however, not trivial, as the density matrix elements and; cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, i.e.; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the ene",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:921,Energy Efficiency,energy,energy,921,"ï»¿. DCFT: Density Cumulant Functional Theory â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». DCFT: Density Cumulant Functional TheoryÂ¶; Code author: Alexander Yu. Sokolov and Andrew C. Simmonett; Section author: Alexander Yu. Sokolov; Module: Keywords, PSI Variables, DCFT. TheoryÂ¶; Density cumulant functional theory (DCFT) is a density-based ab initio theory; that can compute electronic energies without the use of the wavefunction. The; theory starts by writing the exact energy expression in terms of the one- and; two-particle density matrices (OPDM and TPDM):. Here we used Einstein convention for the summation over the repeated indices,; and are the standard one- and two-electron integrals,; and are the elements of the OPDM and TPDM,; respectively. Naively, one might expect that it is possible to minimize the; energy functional in the equation above and obtain the exact energy. This is,; however, not trivial, as the density matrix elements and; cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, i.e.; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the ene",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:982,Energy Efficiency,energy,energy,982,"ï»¿. DCFT: Density Cumulant Functional Theory â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». DCFT: Density Cumulant Functional TheoryÂ¶; Code author: Alexander Yu. Sokolov and Andrew C. Simmonett; Section author: Alexander Yu. Sokolov; Module: Keywords, PSI Variables, DCFT. TheoryÂ¶; Density cumulant functional theory (DCFT) is a density-based ab initio theory; that can compute electronic energies without the use of the wavefunction. The; theory starts by writing the exact energy expression in terms of the one- and; two-particle density matrices (OPDM and TPDM):. Here we used Einstein convention for the summation over the repeated indices,; and are the standard one- and two-electron integrals,; and are the elements of the OPDM and TPDM,; respectively. Naively, one might expect that it is possible to minimize the; energy functional in the equation above and obtain the exact energy. This is,; however, not trivial, as the density matrix elements and; cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, i.e.; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the ene",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:1998,Energy Efficiency,energy,energy,1998,"This is,; however, not trivial, as the density matrix elements and; cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, i.e.; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the v",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:2219,Energy Efficiency,energy,energy,2219,"et of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the variation of the; idempotent part of the one-particle density matrix . This is; achieved by the self-consistent diagonalization of the generalized Fock; operator matrix defined above, which introduces the relaxation of the orbitals.; 2) The energy must be stationary with respect to ",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:2358,Energy Efficiency,energy,energy,2358,"sed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the variation of the; idempotent part of the one-particle density matrix . This is; achieved by the self-consistent diagonalization of the generalized Fock; operator matrix defined above, which introduces the relaxation of the orbitals.; 2) The energy must be stationary with respect to the variation of the density; cumulant , constrained to the N-representability conditions.; Making the energy stationary requi",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:2894,Energy Efficiency,energy,energy,2894,"ng the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the variation of the; idempotent part of the one-particle density matrix . This is; achieved by the self-consistent diagonalization of the generalized Fock; operator matrix defined above, which introduces the relaxation of the orbitals.; 2) The energy must be stationary with respect to the variation of the density; cumulant , constrained to the N-representability conditions.; Making the energy stationary requires the solution of the two sets of coupled; equations for the orbital and cumulant updates, respectively (also known as; residual equations). At the present moment three different algorithms for the; solution of the system of coupled equations are available (see section; Iterative Algorithms for details).; Publications resulting from the use of the DCFT code should cite contributions; listed here. MethodsÂ¶; Currently two DCFT methods (functionals) are available: DC-06 and DC-12. Both; methods use approximate N-representability conditions derived from the; ",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:2944,Energy Efficiency,energy,energy,2944,"ng the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the variation of the; idempotent part of the one-particle density matrix . This is; achieved by the self-consistent diagonalization of the generalized Fock; operator matrix defined above, which introduces the relaxation of the orbitals.; 2) The energy must be stationary with respect to the variation of the density; cumulant , constrained to the N-representability conditions.; Making the energy stationary requires the solution of the two sets of coupled; equations for the orbital and cumulant updates, respectively (also known as; residual equations). At the present moment three different algorithms for the; solution of the system of coupled equations are available (see section; Iterative Algorithms for details).; Publications resulting from the use of the DCFT code should cite contributions; listed here. MethodsÂ¶; Currently two DCFT methods (functionals) are available: DC-06 and DC-12. Both; methods use approximate N-representability conditions derived from the; ",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:3231,Energy Efficiency,energy,energy,3231,"mpotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the variation of the; idempotent part of the one-particle density matrix . This is; achieved by the self-consistent diagonalization of the generalized Fock; operator matrix defined above, which introduces the relaxation of the orbitals.; 2) The energy must be stationary with respect to the variation of the density; cumulant , constrained to the N-representability conditions.; Making the energy stationary requires the solution of the two sets of coupled; equations for the orbital and cumulant updates, respectively (also known as; residual equations). At the present moment three different algorithms for the; solution of the system of coupled equations are available (see section; Iterative Algorithms for details).; Publications resulting from the use of the DCFT code should cite contributions; listed here. MethodsÂ¶; Currently two DCFT methods (functionals) are available: DC-06 and DC-12. Both; methods use approximate N-representability conditions derived from the; second-order perturbation theory, but differ in the description of the; correlated (non-idempotent) part of the one-particle density; matrix. While in the DC-06 method is derived from the density cumulant; in an approximate way, the DC-12 method derives this contribution exactly, and; therefore takes full advantage of the N-repre",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:3376,Energy Efficiency,energy,energy,3376,"ties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the variation of the; idempotent part of the one-particle density matrix . This is; achieved by the self-consistent diagonalization of the generalized Fock; operator matrix defined above, which introduces the relaxation of the orbitals.; 2) The energy must be stationary with respect to the variation of the density; cumulant , constrained to the N-representability conditions.; Making the energy stationary requires the solution of the two sets of coupled; equations for the orbital and cumulant updates, respectively (also known as; residual equations). At the present moment three different algorithms for the; solution of the system of coupled equations are available (see section; Iterative Algorithms for details).; Publications resulting from the use of the DCFT code should cite contributions; listed here. MethodsÂ¶; Currently two DCFT methods (functionals) are available: DC-06 and DC-12. Both; methods use approximate N-representability conditions derived from the; second-order perturbation theory, but differ in the description of the; correlated (non-idempotent) part of the one-particle density; matrix. While in the DC-06 method is derived from the density cumulant; in an approximate way, the DC-12 method derives this contribution exactly, and; therefore takes full advantage of the N-representability conditions. Both DC-06; and DC-12 methods have similar computational cost. However, the DC-12 method; usually exhibits much better numerical stabil",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:5512,Energy Efficiency,energy,energy,5512,"atic cases as the result of the improved; convergence. For the comparison of the quality of these methods we refer; user to the recent publications.; The DCFT functional can be specified by the DCFT_FUNCTIONAL option. The; default choice is the DC-06 functional. In addition to the two methods listed; above, DCFT_FUNCTIONAL option can be set to CEPA0 (coupled electron; pair approximation zero, equivalent to linearized coupled cluster doubles; method, LCCD). CEPA0 can be considered as a particular case of the DC-06 and DC-12; methods in the limit of zero non-idempotency of OPDM. This option has a limited; functionality and should only be used for the test purposes.; At the present moment DCFT computations can only be run with the unrestricted; orbitals. If the REFERENCE option is not specified in the input file,; the PSI4 Python driver will conveniently set it to UHF for the DCFT; computations. Iterative AlgorithmsÂ¶; As explained in the Theory section, in order to obtain the DCFT energy one; needs to solve the system of coupled equations for the orbitals and the density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; ALGORITHM option.; 1) Two-step algorithm (can be invoked by setting ALGORITHM option to; TWOSTEP and is currently the default). In two-step algorithm the DCFT equations; are solved in macroiterations. Each macroiteration consists of two sets of; microiterations. In the first set the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous al",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:8297,Energy Efficiency,energy,energy,8297,"ntegrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULT",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:9282,Energy Efficiency,energy,energy,9282,"ve algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to o",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10073,Energy Efficiency,energy,energy,10073,"ee; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimiz",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10093,Energy Efficiency,energy,energy,10093," Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computatio",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10116,Energy Efficiency,energy,energy,10116," Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computatio",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10339,Energy Efficiency,energy,energy,10339,"must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of ",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10869,Energy Efficiency,energy,energy,10869," the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the ca",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:11040,Energy Efficiency,energy,energy,11040,"DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:11916,Energy Efficiency,reduce,reduce,11916,"ode will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with the two-step algorithm, this option can significantly; increase the cost of the energy computation.; In the case when the oscillatory convergence is observed before the DIIS; extrapolation is initialized, it is recommended to increase the threshold for; the RMS of the density cumulant or orbital update residual, below which the; DIIS extrapolation starts. This can be done by setting; DIIS_START_CONVERGENCE option to the value greater than; by one or two orders of magnitude (e.g. or; ).; If the oscillatory convergence is observed for atoms or molecules with high; symmetry, it is recommended to use quadratically-convergent algorithm.; When using quadratically-convergent algorithm for closed-shell molecules, it; is recommended to set QC_COUPLING option to FALSE for efficiency; reasons. Table Of Contents. DCFT: Density Cumulant Functional Theory; Theory; Methods; Iterative Algorithms; Analytic Gradients; Minimal Input; Recommen",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:12062,Energy Efficiency,energy,energy,12062,"tic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with the two-step algorithm, this option can significantly; increase the cost of the energy computation.; In the case when the oscillatory convergence is observed before the DIIS; extrapolation is initialized, it is recommended to increase the threshold for; the RMS of the density cumulant or orbital update residual, below which the; DIIS extrapolation starts. This can be done by setting; DIIS_START_CONVERGENCE option to the value greater than; by one or two orders of magnitude (e.g. or; ).; If the oscillatory convergence is observed for atoms or molecules with high; symmetry, it is recommended to use quadratically-convergent algorithm.; When using quadratically-convergent algorithm for closed-shell molecules, it; is recommended to set QC_COUPLING option to FALSE for efficiency; reasons. Table Of Contents. DCFT: Density Cumulant Functional Theory; Theory; Methods; Iterative Algorithms; Analytic Gradients; Minimal Input; Recommendations. Previous topic; DFT: Density Functional Theory; Next topic; DF-MP2: Density-Fitted Sec",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:1562,Integrability,rout,route,1562,"ression in terms of the one- and; two-particle density matrices (OPDM and TPDM):. Here we used Einstein convention for the summation over the repeated indices,; and are the standard one- and two-electron integrals,; and are the elements of the OPDM and TPDM,; respectively. Naively, one might expect that it is possible to minimize the; energy functional in the equation above and obtain the exact energy. This is,; however, not trivial, as the density matrix elements and; cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, i.e.; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consist",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:1874,Integrability,depend,depends,1874,",; respectively. Naively, one might expect that it is possible to minimize the; energy functional in the equation above and obtain the exact energy. This is,; however, not trivial, as the density matrix elements and; cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, i.e.; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively s",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:7767,Modifiability,coupling,coupling,7767,"he cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transf",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:7938,Modifiability,coupling,coupling,7938,"dratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to d",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:6217,Performance,perform,performed,6217,"putations can only be run with the unrestricted; orbitals. If the REFERENCE option is not specified in the input file,; the PSI4 Python driver will conveniently set it to UHF for the DCFT; computations. Iterative AlgorithmsÂ¶; As explained in the Theory section, in order to obtain the DCFT energy one; needs to solve the system of coupled equations for the orbitals and the density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; ALGORITHM option.; 1) Two-step algorithm (can be invoked by setting ALGORITHM option to; TWOSTEP and is currently the default). In two-step algorithm the DCFT equations; are solved in macroiterations. Each macroiteration consists of two sets of; microiterations. In the first set the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update follo",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:6345,Performance,perform,performing,6345,"hon driver will conveniently set it to UHF for the DCFT; computations. Iterative AlgorithmsÂ¶; As explained in the Theory section, in order to obtain the DCFT energy one; needs to solve the system of coupled equations for the orbitals and the density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; ALGORITHM option.; 1) Two-step algorithm (can be invoked by setting ALGORITHM option to; TWOSTEP and is currently the default). In two-step algorithm the DCFT equations; are solved in macroiterations. Each macroiteration consists of two sets of; microiterations. In the first set the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using th",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:7323,Performance,perform,performed,7323,"the; integrals. The convergence of the two-step algorithm is accelerated using the; DIIS extrapolation technique.; 2) Simultaneous algorithm (set ALGORITHM to SIMULTANEOUS). In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensi",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:7595,Performance,perform,performed,7595," In this algorithm; each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and the orbitals is achieved. As in the two-step algorithm, the DIIS; extrapolation is used to accelerate the convergence.; 3) Quadratically-convergent algorithm (set ALGORITHM to QC). The; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the ",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:8114,Performance,optimiz,optimized,8114,"oiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. The electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. By default the; electronic Hessian also contains the matrix elements that couple the orbitals; and the density cumulant. The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic Gra",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:9907,Performance,perform,perform,9907,"ron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 en",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:9928,Performance,optimiz,optimizations,9928,"ron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 en",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10192,Performance,perform,perform,10192," Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computatio",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10327,Performance,perform,perform,10327,"must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of ",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10639,Performance,perform,perform,10639,"Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simulta",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10660,Performance,optimiz,optimization,10660,"Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simulta",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10747,Performance,optimiz,optimize,10747,"be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method a",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10769,Performance,optimiz,optimize,10769," the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the ca",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10802,Performance,perform,perform,10802," the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. Minimal InputÂ¶; Minimal input for the DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the ca",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:10943,Performance,perform,perform,10943,"DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:11051,Performance,perform,perform,11051,"DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:11073,Performance,optimiz,optimization,11073,"DCFT single-point computation looks like this:; molecule {; H; H 1 1.0; }. set basis 3-21G. energy('dcft'). The energy('dcft') call to energy() executes the DCFT module, which will first call the SCF module and perform the SCF computation with UHF reference to obtain the guess for the DCFT orbitals. After the SCF is converged, the program will perform the energy computation using the DC-06 method. By default, the two-step algorithm will be used for the solution of the equations. Note that while the default value for the option REFERENCE is RHF, this option is set to UHF before the DCFT module is executed. For the DC-06 method one can also request to perform the geometry optimization following the example below:; molecule {; H; H 1 1.0; }. set basis 3-21G. optimize('dcft'). The optimize('dcft') call will first perform all of the procedures; described above to obtain the DC-06 energy. After that the DC-06 analytic; gradients code will be executed to perform the solution of the DCFT response; equations, compute the analytic gradients of the DCFT energy and perform the; geometry optimization. RecommendationsÂ¶; Here is the list of the recommendations for the DCFT module:. For the computations of small systems (less than 150 basis; functions and high symmetry) the use of the default parameters is recommended,; including the choice of the two-step algorithm.; For large systems (more than 150 basis functions) the simultaneous algorithm; is preferred and can be significantly faster than two-step, as the result of; smaller number of the expensive steps. In addition,; significant savings can be achieved if one sets AO_BASIS option to; DISK together with simultaneous algorithm. It should be noted, however, that; the analytic gradients of the DC-06 method are currently not implemented for; AOBASIS DISK option.; In the case when insufficient memory is available, set AO_BASIS option; to DISK. This will significantly reduce the memory requirements. However, when; used together with",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:8806,Safety,avoid,avoiding,8806,"ds to faster convergence and is; recommended for open-shell systems. If the computation of the coupling elements; is not desired, it can be turned off by setting QC_COUPLING to FALSE.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below .; The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive ; cumulant updates. As a result, for the small closed-shell systems the two-step; algorithm is usually preferred, while for the larger systems and the molecules with the; open-shell character it is recommended to use the simultaneous algorithm. The; efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the AO_BASIS option to; DISK. For more recommendations on the choice of the algorithm see; Recommendations section. Analytic GradientsÂ¶; Analytic gradients are available for the DC-06 method. Gradients are only; available if the ALGORITHM option is set to TWOSTEP or SIMULTANEOUS for; the energy computation. In addition, AO_BASIS option must be set to NONE; (default). Evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: two-step (default) and simultaneous. These algorithms are similar to those; described for the orbital and cumulant updates in the Iterative Algorithms; section and usually exhibit the similar efficiency. The choice of the algorithm can; be made using the RESPONSE_ALGORITHM option. For the DC-12 method the; analytic gradient",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:5176,Testability,test,test,5176,"the density cumulant; in an approximate way, the DC-12 method derives this contribution exactly, and; therefore takes full advantage of the N-representability conditions. Both DC-06; and DC-12 methods have similar computational cost. However, the DC-12 method; usually exhibits much better numerical stability and can be significantly; cheaper than the DC-06 in the problematic cases as the result of the improved; convergence. For the comparison of the quality of these methods we refer; user to the recent publications.; The DCFT functional can be specified by the DCFT_FUNCTIONAL option. The; default choice is the DC-06 functional. In addition to the two methods listed; above, DCFT_FUNCTIONAL option can be set to CEPA0 (coupled electron; pair approximation zero, equivalent to linearized coupled cluster doubles; method, LCCD). CEPA0 can be considered as a particular case of the DC-06 and DC-12; methods in the limit of zero non-idempotency of OPDM. This option has a limited; functionality and should only be used for the test purposes.; At the present moment DCFT computations can only be run with the unrestricted; orbitals. If the REFERENCE option is not specified in the input file,; the PSI4 Python driver will conveniently set it to UHF for the DCFT; computations. Iterative AlgorithmsÂ¶; As explained in the Theory section, in order to obtain the DCFT energy one; needs to solve the system of coupled equations for the orbitals and the density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; ALGORITHM option.; 1) Two-step algorithm (can be invoked by setting ALGORITHM option to; TWOSTEP and is currently the default). In two-step algorithm the DCFT equations; are solved in macroiterations. Each macroiteration consists of two sets of; microiterations. In the first set the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After th",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:1265,Usability,simpl,simple,1265," Sokolov; Module: Keywords, PSI Variables, DCFT. TheoryÂ¶; Density cumulant functional theory (DCFT) is a density-based ab initio theory; that can compute electronic energies without the use of the wavefunction. The; theory starts by writing the exact energy expression in terms of the one- and; two-particle density matrices (OPDM and TPDM):. Here we used Einstein convention for the summation over the repeated indices,; and are the standard one- and two-electron integrals,; and are the elements of the OPDM and TPDM,; respectively. Naively, one might expect that it is possible to minimize the; energy functional in the equation above and obtain the exact energy. This is,; however, not trivial, as the density matrix elements and; cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, i.e.; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCFT one takes a different route and; replaces the TPDM in favor of its two-particle density cumulant:. The one-particle density matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the den",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/dcft.html:2650,Usability,simpl,simplified,2650," matrix is separated into its idempotent part; and a correction :. The idempotent part of the OPDM corresponds to a Hartree-Fock-like density of; non-interacting electrons, while the non-idempotent correction ; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. Energy functional has several important properties. First,; the energy is now a function of two types of independent parameters, the; idempotent part of OPDM and the density cumulant; . As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCFT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of the OPDM is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; the TPDM.; In order to obtain the DCFT energy, two conditions must be satisfied:; 1) The energy must be stationary with respect to the variation of the; idempotent part of the one-particle density matrix . This is; achieved by the self-consistent diagonalization of the generalized Fock; operator matrix defined above, which introduces the relaxation of the orbitals.; 2) The energy must be stationary with respect to the variation of the density; cumulant , constrained to the N-representability conditions.; Making the energy stationary requires the solution of the two sets of coupled; equations for the orbital and cumulant updates, respectively (also known as; residual equations). At the present moment three different algorithms for the; solution of the system of coupled equations are available (see s",MatchSource.WIKI,psi4manual/4.0b4/dcft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dcft.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:3656,Availability,avail,available,3656," rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicate",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:5351,Availability,error,error,5351,"imize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 for energies and 1e-7 for gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. FROZEN_UOCCÂ¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. MAXITERÂ¶. Maximum number of iterations to diagonalize the Hamiltonian. Type: integer; Default: 12. NUM_ROOTSÂ¶. number of CI roots to find. Type: integer; Default: 1. ICOREÂ¶. Specifies how to handle buffering",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:7265,Availability,robust,robust,7265,"fering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. DIAG_METHODÂ¶. This specifies which method is to be used in diagonalizing the Hamiltonian. The valid options are: RSP, to form the entire H matrix and diagonalize using libciomr to obtain all eigenvalues (n.b. requires HUGE memory); OLSEN, to use Olsenâs preconditioned inverse subspace method (1990); MITRUSHENKOV, to use a 2x2 Olsen/Davidson method; and DAVIDSON (or SEM) to use Liuâs Simultaneous Expansion Method, which is identical to the Davidson method if only one root is to be found. There also exists a SEM debugging mode, SEMTEST. The SEM method is the most robust, but it also requires CI vectors on disk, where is the maximum number of iterations and is the number of roots. Type: string; Possible Values: RSP, OLSEN, MITRUSHENKOV, DAVIDSON, SEM, SEMTEST; Default: SEM. OPDMÂ¶. Do compute one-particle density matrix if not otherwise required?. Type: boolean; Default: false. TDMÂ¶. Do compute the transition density? Note: only transition densities between roots of the same symmetry will be evaluated. DETCI does not compute states of different irreps within the same computation; to do this, lower the symmetry of the computation. Type: boolean; Default: false. DIPMOMÂ¶. Do compute the dipole moment?. Type: boolean; Default: false. MPNÂ¶. Do compute the MPn series out to kth order where k is determined by MAX_NUM_VECS ? For open-shell systems REFERENCE is ROHF, WFN is ZAPTN), DETCI will compute the ZAPTn series. GUESS_VECTOR must be set to UNIT, HD_OTF must be set to TRUE, and HD_AVG must be set to orb_ener; these should happen by default for MPN = TRUE. Type: boolean; Default: false. For larg",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:10880,Availability,avail,available,10880,"onment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic; PSIMRCC Implementation of Mk-MRCC Theory; Next topic; SAPT: Symmetry-Adapted Perturbation Theory; This Page. Show Source. Quick search. Enter sea",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:605,Deployability,configurat,configuration,605,"ï»¿. CI: Configuration Interaction â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». CI: Configuration InteractionÂ¶; Code author: C. David Sherrill and Matthew L. Leininger; Section author: C. David Sherrill; Module: Keywords, PSI Variables, DETCI; Configuration interaction (CI) is one of the most general ways to; improve upon HartreeâFock theory by adding a description of the; correlated motions of electrons. Simply put, a CI wavefunction; is a linear combination of Slater determinants (or spin-adapted; configuration state functions), with the linear coefficients being; determined variationally via diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:2108,Deployability,configurat,configuration,2108,"s are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:2773,Deployability,configurat,configuration,2773,"program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:10011,Deployability,release,released,10011,"to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:12058,Deployability,update,updated,12058,"he DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic; PSIMRCC Implementation of Mk-MRCC Theory; Next topic; SAPT: Symmetry-Adapted Perturbation Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:596,Energy Efficiency,adapt,adapted,596,"ï»¿. CI: Configuration Interaction â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». CI: Configuration InteractionÂ¶; Code author: C. David Sherrill and Matthew L. Leininger; Section author: C. David Sherrill; Module: Keywords, PSI Variables, DETCI; Configuration interaction (CI) is one of the most general ways to; improve upon HartreeâFock theory by adding a description of the; correlated motions of electrons. Simply put, a CI wavefunction; is a linear combination of Slater determinants (or spin-adapted; configuration state functions), with the linear coefficients being; determined variationally via diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:1803,Energy Efficiency,efficient,efficient,1803,"pansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the comp",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:2745,Energy Efficiency,efficient,efficient,2745,"program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:4303,Energy Efficiency,energy,energy,4303,"re the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:4384,Energy Efficiency,energy,energy,4384,"dvised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 f",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:4424,Energy Efficiency,energy,energy,4424,"dvised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 f",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:4809,Energy Efficiency,energy,energy,4809,"ision of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 for energies and 1e-7 for gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavef",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:9038,Energy Efficiency,energy,energy,9038,"N), DETCI will compute the ZAPTn series. GUESS_VECTOR must be set to UNIT, HD_OTF must be set to TRUE, and HD_AVG must be set to orb_ener; these should happen by default for MPN = TRUE. Type: boolean; Default: false. For larger computations, additional keywords may be required, as; described in the DETCI section of the Appendix DETCI. Arbitrary Order Perturbation TheoryÂ¶; The DETCI module is capable of computing energies for arbitrary; order MÃ¸llerâPlesset perturbation theory (MPn, for closed-shell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with an ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interf",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:9086,Energy Efficiency,energy,energy,9086,"N), DETCI will compute the ZAPTn series. GUESS_VECTOR must be set to UNIT, HD_OTF must be set to TRUE, and HD_AVG must be set to orb_ener; these should happen by default for MPN = TRUE. Type: boolean; Default: false. For larger computations, additional keywords may be required, as; described in the DETCI section of the Appendix DETCI. Arbitrary Order Perturbation TheoryÂ¶; The DETCI module is capable of computing energies for arbitrary; order MÃ¸llerâPlesset perturbation theory (MPn, for closed-shell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with an ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interf",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:9466,Energy Efficiency,energy,energy,9466,"e is capable of computing energies for arbitrary; order MÃ¸llerâPlesset perturbation theory (MPn, for closed-shell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with an ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:9664,Energy Efficiency,energy,energy,9664,"hell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with an ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:9790,Energy Efficiency,energy,energy,9790,"full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); howe",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:9822,Energy Efficiency,energy,energy,9822,"full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); howe",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:10605,Energy Efficiency,efficient,efficient,10605,"ses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:10686,Energy Efficiency,efficient,efficient,10686,"_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic;",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:11232,Energy Efficiency,energy,energy,11232,"he DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic; PSIMRCC Implementation of Mk-MRCC Theory; Next topic; SAPT: Symmetry-Adapted Perturbation Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:10079,Integrability,interface,interface,10079,"P10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbit",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:10743,Integrability,interface,interface,10743,"_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic;",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:596,Modifiability,adapt,adapted,596,"ï»¿. CI: Configuration Interaction â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». CI: Configuration InteractionÂ¶; Code author: C. David Sherrill and Matthew L. Leininger; Section author: C. David Sherrill; Module: Keywords, PSI Variables, DETCI; Configuration interaction (CI) is one of the most general ways to; improve upon HartreeâFock theory by adding a description of the; correlated motions of electrons. Simply put, a CI wavefunction; is a linear combination of Slater determinants (or spin-adapted; configuration state functions), with the linear coefficients being; determined variationally via diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:605,Modifiability,config,configuration,605,"ï»¿. CI: Configuration Interaction â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». CI: Configuration InteractionÂ¶; Code author: C. David Sherrill and Matthew L. Leininger; Section author: C. David Sherrill; Module: Keywords, PSI Variables, DETCI; Configuration interaction (CI) is one of the most general ways to; improve upon HartreeâFock theory by adding a description of the; correlated motions of electrons. Simply put, a CI wavefunction; is a linear combination of Slater determinants (or spin-adapted; configuration state functions), with the linear coefficients being; determined variationally via diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:2108,Modifiability,config,configuration,2108,"s are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:2773,Modifiability,config,configuration,2773,"program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:1714,Performance,optimiz,optimized,1714,"a diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are include",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:4313,Performance,optimiz,optimize,4313,"re the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:4722,Performance,perform,performed,4722,"ision of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 for energies and 1e-7 for gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavef",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:5771,Performance,optimiz,optimized,5771," RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 for energies and 1e-7 for gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. FROZEN_UOCCÂ¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. MAXITERÂ¶. Maximum number of iterations to diagonalize the Hamiltonian. Type: integer; Default: 12. NUM_ROOTSÂ¶. number of CI roots to find. Type: integer; Default: 1. ICOREÂ¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. DIAG_METHOD",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:6026,Performance,optimiz,optimized,6026,"long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 for energies and 1e-7 for gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. FROZEN_UOCCÂ¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. MAXITERÂ¶. Maximum number of iterations to diagonalize the Hamiltonian. Type: integer; Default: 12. NUM_ROOTSÂ¶. number of CI roots to find. Type: integer; Default: 1. ICOREÂ¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. DIAG_METHODÂ¶. This specifies which method is to be used in diagonalizing the Hamiltonian. The valid options are: RSP, to form the entire H matrix and diagonalize using libciomr to obtain all eigenvalues (n.b. requires HUGE memory); OLSEN, to use Olsenâs preconditione",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:6363,Performance,perform,perform,6363,"r gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. FROZEN_UOCCÂ¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. MAXITERÂ¶. Maximum number of iterations to diagonalize the Hamiltonian. Type: integer; Default: 12. NUM_ROOTSÂ¶. number of CI roots to find. Type: integer; Default: 1. ICOREÂ¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. DIAG_METHODÂ¶. This specifies which method is to be used in diagonalizing the Hamiltonian. The valid options are: RSP, to form the entire H matrix and diagonalize using libciomr to obtain all eigenvalues (n.b. requires HUGE memory); OLSEN, to use Olsenâs preconditioned inverse subspace method (1990); MITRUSHENKOV, to use a 2x2 Olsen/Davidson method; and DAVIDSON (or SEM) to use Liuâs Simultaneous Expansion Method, which is identical to the Davidson method if only one root is to be found. There also exists a SEM debugging mode, SEMTEST. The SEM method is the most robust, but it also requires CI vectors on disk, where is the maximum number of iterations and is the number of roots. Type: string; Possib",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:10487,Performance,optimiz,optimized,10487,"ses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:11053,Performance,perform,perform,11053,"he DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic; PSIMRCC Implementation of Mk-MRCC Theory; Next topic; SAPT: Symmetry-Adapted Perturbation Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:10961,Testability,test,testing,10961,"rsion of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic; PSIMRCC Implementation of Mk-MRCC Theory; Next topic; SAPT: Symmetry-Adapted Perturbation Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â»",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:889,Usability,simpl,simplest,889,"ï»¿. CI: Configuration Interaction â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». CI: Configuration InteractionÂ¶; Code author: C. David Sherrill and Matthew L. Leininger; Section author: C. David Sherrill; Module: Keywords, PSI Variables, DETCI; Configuration interaction (CI) is one of the most general ways to; improve upon HartreeâFock theory by adding a description of the; correlated motions of electrons. Simply put, a CI wavefunction; is a linear combination of Slater determinants (or spin-adapted; configuration state functions), with the linear coefficients being; determined variationally via diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:3095,Usability,simpl,simple,3095,"0]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, F",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:3871,Usability,clear,clear,3871,"for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:4288,Usability,simpl,simply,4288,"re the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci-1.html:8955,Usability,simpl,simplest,8955," where k is determined by MAX_NUM_VECS ? For open-shell systems REFERENCE is ROHF, WFN is ZAPTN), DETCI will compute the ZAPTn series. GUESS_VECTOR must be set to UNIT, HD_OTF must be set to TRUE, and HD_AVG must be set to orb_ener; these should happen by default for MPN = TRUE. Type: boolean; Default: false. For larger computations, additional keywords may be required, as; described in the DETCI section of the Appendix DETCI. Arbitrary Order Perturbation TheoryÂ¶; The DETCI module is capable of computing energies for arbitrary; order MÃ¸llerâPlesset perturbation theory (MPn, for closed-shell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with an ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this ",MatchSource.WIKI,psi4manual/4.0b4/detci-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci-1.html
https://psicode.org/psi4manual/4.0b4/detci.html:3656,Availability,avail,available,3656," rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicate",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:5351,Availability,error,error,5351,"imize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 for energies and 1e-7 for gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. FROZEN_UOCCÂ¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. MAXITERÂ¶. Maximum number of iterations to diagonalize the Hamiltonian. Type: integer; Default: 12. NUM_ROOTSÂ¶. number of CI roots to find. Type: integer; Default: 1. ICOREÂ¶. Specifies how to handle buffering",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:7265,Availability,robust,robust,7265,"fering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. DIAG_METHODÂ¶. This specifies which method is to be used in diagonalizing the Hamiltonian. The valid options are: RSP, to form the entire H matrix and diagonalize using libciomr to obtain all eigenvalues (n.b. requires HUGE memory); OLSEN, to use Olsenâs preconditioned inverse subspace method (1990); MITRUSHENKOV, to use a 2x2 Olsen/Davidson method; and DAVIDSON (or SEM) to use Liuâs Simultaneous Expansion Method, which is identical to the Davidson method if only one root is to be found. There also exists a SEM debugging mode, SEMTEST. The SEM method is the most robust, but it also requires CI vectors on disk, where is the maximum number of iterations and is the number of roots. Type: string; Possible Values: RSP, OLSEN, MITRUSHENKOV, DAVIDSON, SEM, SEMTEST; Default: SEM. OPDMÂ¶. Do compute one-particle density matrix if not otherwise required?. Type: boolean; Default: false. TDMÂ¶. Do compute the transition density? Note: only transition densities between roots of the same symmetry will be evaluated. DETCI does not compute states of different irreps within the same computation; to do this, lower the symmetry of the computation. Type: boolean; Default: false. DIPMOMÂ¶. Do compute the dipole moment?. Type: boolean; Default: false. MPNÂ¶. Do compute the MPn series out to kth order where k is determined by MAX_NUM_VECS ? For open-shell systems REFERENCE is ROHF, WFN is ZAPTN), DETCI will compute the ZAPTn series. GUESS_VECTOR must be set to UNIT, HD_OTF must be set to TRUE, and HD_AVG must be set to orb_ener; these should happen by default for MPN = TRUE. Type: boolean; Default: false. For larg",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:10880,Availability,avail,available,10880,"onment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic; PSIMRCC Implementation of Mk-MRCC Theory; Next topic; SAPT: Symmetry-Adapted Perturbation Theory; This Page. Show Source. Quick search. Enter sea",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:605,Deployability,configurat,configuration,605,"ï»¿. CI: Configuration Interaction â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». CI: Configuration InteractionÂ¶; Code author: C. David Sherrill and Matthew L. Leininger; Section author: C. David Sherrill; Module: Keywords, PSI Variables, DETCI; Configuration interaction (CI) is one of the most general ways to; improve upon HartreeâFock theory by adding a description of the; correlated motions of electrons. Simply put, a CI wavefunction; is a linear combination of Slater determinants (or spin-adapted; configuration state functions), with the linear coefficients being; determined variationally via diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:2108,Deployability,configurat,configuration,2108,"s are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:2773,Deployability,configurat,configuration,2773,"program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:10011,Deployability,release,released,10011,"to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:12058,Deployability,update,updated,12058,"he DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic; PSIMRCC Implementation of Mk-MRCC Theory; Next topic; SAPT: Symmetry-Adapted Perturbation Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:596,Energy Efficiency,adapt,adapted,596,"ï»¿. CI: Configuration Interaction â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». CI: Configuration InteractionÂ¶; Code author: C. David Sherrill and Matthew L. Leininger; Section author: C. David Sherrill; Module: Keywords, PSI Variables, DETCI; Configuration interaction (CI) is one of the most general ways to; improve upon HartreeâFock theory by adding a description of the; correlated motions of electrons. Simply put, a CI wavefunction; is a linear combination of Slater determinants (or spin-adapted; configuration state functions), with the linear coefficients being; determined variationally via diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:1803,Energy Efficiency,efficient,efficient,1803,"pansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the comp",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:2745,Energy Efficiency,efficient,efficient,2745,"program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:4303,Energy Efficiency,energy,energy,4303,"re the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:4384,Energy Efficiency,energy,energy,4384,"dvised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 f",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:4424,Energy Efficiency,energy,energy,4424,"dvised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 f",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:4809,Energy Efficiency,energy,energy,4809,"ision of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 for energies and 1e-7 for gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavef",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:9038,Energy Efficiency,energy,energy,9038,"N), DETCI will compute the ZAPTn series. GUESS_VECTOR must be set to UNIT, HD_OTF must be set to TRUE, and HD_AVG must be set to orb_ener; these should happen by default for MPN = TRUE. Type: boolean; Default: false. For larger computations, additional keywords may be required, as; described in the DETCI section of the Appendix DETCI. Arbitrary Order Perturbation TheoryÂ¶; The DETCI module is capable of computing energies for arbitrary; order MÃ¸llerâPlesset perturbation theory (MPn, for closed-shell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with an ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interf",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:9086,Energy Efficiency,energy,energy,9086,"N), DETCI will compute the ZAPTn series. GUESS_VECTOR must be set to UNIT, HD_OTF must be set to TRUE, and HD_AVG must be set to orb_ener; these should happen by default for MPN = TRUE. Type: boolean; Default: false. For larger computations, additional keywords may be required, as; described in the DETCI section of the Appendix DETCI. Arbitrary Order Perturbation TheoryÂ¶; The DETCI module is capable of computing energies for arbitrary; order MÃ¸llerâPlesset perturbation theory (MPn, for closed-shell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with an ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interf",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:9466,Energy Efficiency,energy,energy,9466,"e is capable of computing energies for arbitrary; order MÃ¸llerâPlesset perturbation theory (MPn, for closed-shell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with an ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:9664,Energy Efficiency,energy,energy,9664,"hell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with an ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:9790,Energy Efficiency,energy,energy,9790,"full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); howe",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:9822,Energy Efficiency,energy,energy,9822,"full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); howe",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:10605,Energy Efficiency,efficient,efficient,10605,"ses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:10686,Energy Efficiency,efficient,efficient,10686,"_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic;",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:11232,Energy Efficiency,energy,energy,11232,"he DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic; PSIMRCC Implementation of Mk-MRCC Theory; Next topic; SAPT: Symmetry-Adapted Perturbation Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:10079,Integrability,interface,interface,10079,"P10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbit",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:10743,Integrability,interface,interface,10743,"_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic;",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:596,Modifiability,adapt,adapted,596,"ï»¿. CI: Configuration Interaction â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». CI: Configuration InteractionÂ¶; Code author: C. David Sherrill and Matthew L. Leininger; Section author: C. David Sherrill; Module: Keywords, PSI Variables, DETCI; Configuration interaction (CI) is one of the most general ways to; improve upon HartreeâFock theory by adding a description of the; correlated motions of electrons. Simply put, a CI wavefunction; is a linear combination of Slater determinants (or spin-adapted; configuration state functions), with the linear coefficients being; determined variationally via diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:605,Modifiability,config,configuration,605,"ï»¿. CI: Configuration Interaction â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». CI: Configuration InteractionÂ¶; Code author: C. David Sherrill and Matthew L. Leininger; Section author: C. David Sherrill; Module: Keywords, PSI Variables, DETCI; Configuration interaction (CI) is one of the most general ways to; improve upon HartreeâFock theory by adding a description of the; correlated motions of electrons. Simply put, a CI wavefunction; is a linear combination of Slater determinants (or spin-adapted; configuration state functions), with the linear coefficients being; determined variationally via diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:2108,Modifiability,config,configuration,2108,"s are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:2773,Modifiability,config,configuration,2773,"program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:1714,Performance,optimiz,optimized,1714,"a diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are include",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:4313,Performance,optimiz,optimize,4313,"re the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:4722,Performance,perform,performed,4722,"ision of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 for energies and 1e-7 for gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavef",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:5771,Performance,optimiz,optimized,5771," RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 for energies and 1e-7 for gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. FROZEN_UOCCÂ¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. MAXITERÂ¶. Maximum number of iterations to diagonalize the Hamiltonian. Type: integer; Default: 12. NUM_ROOTSÂ¶. number of CI roots to find. Type: integer; Default: 1. ICOREÂ¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. DIAG_METHOD",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:6026,Performance,optimiz,optimized,6026,"long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R_CONVERGENCEÂ¶. Convergence criterion for CI residual vector in the Davidson algorithm (RMS error). The default is 1e-4 for energies and 1e-7 for gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. FROZEN_UOCCÂ¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. MAXITERÂ¶. Maximum number of iterations to diagonalize the Hamiltonian. Type: integer; Default: 12. NUM_ROOTSÂ¶. number of CI roots to find. Type: integer; Default: 1. ICOREÂ¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. DIAG_METHODÂ¶. This specifies which method is to be used in diagonalizing the Hamiltonian. The valid options are: RSP, to form the entire H matrix and diagonalize using libciomr to obtain all eigenvalues (n.b. requires HUGE memory); OLSEN, to use Olsenâs preconditione",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:6363,Performance,perform,perform,6363,"r gradients. Type: conv double; Default: 1e-4. EX_LEVELÂ¶. The CI excitation level. Type: integer; Default: 2. FCIÂ¶. Do a full CI (FCI)? If TRUE, overrides the value of EX_LEVEL. Type: boolean; Default: false. FROZEN_DOCCÂ¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. FROZEN_UOCCÂ¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. MAXITERÂ¶. Maximum number of iterations to diagonalize the Hamiltonian. Type: integer; Default: 12. NUM_ROOTSÂ¶. number of CI roots to find. Type: integer; Default: 1. ICOREÂ¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. DIAG_METHODÂ¶. This specifies which method is to be used in diagonalizing the Hamiltonian. The valid options are: RSP, to form the entire H matrix and diagonalize using libciomr to obtain all eigenvalues (n.b. requires HUGE memory); OLSEN, to use Olsenâs preconditioned inverse subspace method (1990); MITRUSHENKOV, to use a 2x2 Olsen/Davidson method; and DAVIDSON (or SEM) to use Liuâs Simultaneous Expansion Method, which is identical to the Davidson method if only one root is to be found. There also exists a SEM debugging mode, SEMTEST. The SEM method is the most robust, but it also requires CI vectors on disk, where is the maximum number of iterations and is the number of roots. Type: string; Possib",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:10487,Performance,optimiz,optimized,10487,"ses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:11053,Performance,perform,perform,11053,"he DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic; PSIMRCC Implementation of Mk-MRCC Theory; Next topic; SAPT: Symmetry-Adapted Perturbation Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:10961,Testability,test,testing,10961,"rsion of this feature is not yet released. However,; the current version of the code does include an interface to; Kallayâs MRCC code.; The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216], or of Olsen [Olsen:2000:7140].; Notably, the approach in DETCI also allows arbitrary-order; active space coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by KÃ¡llay, to which PSI4 can interface (see Section; Interface to MRCC by M. KÃ¡llay); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103].; To perform arbitrary-order coupled-cluster, set the DETCI; option CC to TRUE, and set; CC_EX_LEVEL (note: not EX_LEVEL); to the desired coupled-cluster excitation level, and invoke; energy('detci'). Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix DETCI. Table Of Contents. CI: Configuration Interaction; Basic DETCI Keywords; REFERENCE; R_CONVERGENCE; EX_LEVEL; FCI; FROZEN_DOCC; FROZEN_UOCC; MAXITER; NUM_ROOTS; ICORE; DIAG_METHOD; OPDM; TDM; DIPMOM; MPN. Arbitrary Order Perturbation Theory; Arbitrary Order Coupled-Cluster Theory. Previous topic; PSIMRCC Implementation of Mk-MRCC Theory; Next topic; SAPT: Symmetry-Adapted Perturbation Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â»",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:889,Usability,simpl,simplest,889,"ï»¿. CI: Configuration Interaction â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». CI: Configuration InteractionÂ¶; Code author: C. David Sherrill and Matthew L. Leininger; Section author: C. David Sherrill; Module: Keywords, PSI Variables, DETCI; Configuration interaction (CI) is one of the most general ways to; improve upon HartreeâFock theory by adding a description of the; correlated motions of electrons. Simply put, a CI wavefunction; is a linear combination of Slater determinants (or spin-adapted; configuration state functions), with the linear coefficients being; determined variationally via diagonalization of the Hamiltonian in the; given subspace of determinants. For a âsingle-referenceâ CI based; on reference function , we can write the CI expansion as; follows:. (1); The simplest standard CI method that improves upon HartreeâFock is a CI; that adds all singly and doubly. substituted determinants (CISD) to the reference determinant; . The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results.; The CI code in PSI4 is described in detail in; [Sherrill:1999:CI]. For the reasons stated above, the CI code in; PSI4 is not optimized for CISD computations. Instead, emphasis; has been placed on developing a very efficient program to handle more; general CI wavefunctions which may be helpful in more challenging cases; such as highly strained molecules or bond breaking reactions. The CI; code is based on the ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:3095,Usability,simpl,simple,3095,"0]. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CIâs. A RAS CI selects determinants for the; model space as those which have no more than holes in the lowest set; of orbitals (called RAS I) and no more than electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the CI.; The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. Use of DETCI for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, F",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:3871,Usability,clear,clear,3871,"for CASSCF; wavefunctions is described in another section of this manual.; As just mentioned, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:4288,Usability,simpl,simply,4288,"re the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This userâs; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix DETCI.; The division of the molecular orbitals into various subspaces such as; RAS spaces, or frozen vs. active orbitals, etc., needs to be clear not; only to detci, but also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus, orbital; subspace keywords such as RAS1,; RAS2, RAS3, FROZEN_DOCC, FROZEN_UOCC,; ACTIVE, etc., should be set; in the global section of input so they may also be read by other modules.; For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call energy(), optimize(), etc.,; with the common name for that CI wavefunction, like energy('cisd'); for a CISD single-point energy. The Python driver; recognizes cisd, cisdt, and cisdtq. Higher order; single-refernce CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ci6. A full; CI can be specifed by fci. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like energy('detci'). The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially EX_LEVEL) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in psi4/samples. Basic DETCI KeywordsÂ¶. REFERENCEÂ¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF; Default: RHF. R",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/detci.html:8955,Usability,simpl,simplest,8955," where k is determined by MAX_NUM_VECS ? For open-shell systems REFERENCE is ROHF, WFN is ZAPTN), DETCI will compute the ZAPTn series. GUESS_VECTOR must be set to UNIT, HD_OTF must be set to TRUE, and HD_AVG must be set to orb_ener; these should happen by default for MPN = TRUE. Type: boolean; Default: false. For larger computations, additional keywords may be required, as; described in the DETCI section of the Appendix DETCI. Arbitrary Order Perturbation TheoryÂ¶; The DETCI module is capable of computing energies for arbitrary; order MÃ¸llerâPlesset perturbation theory (MPn, for closed-shell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with an ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less).; The simplest way to run high-order perturbation theory computations is to; call, e.g., energy('mp10') to invoke a MP10 computation or; energy('zapt25') to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions.; For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; energy('mp10') sets MPN to TRUE.; The program uses the Wigner (2n+1) rule by default; (MPN_WIGNER = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets MAX_NUM_VECS to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. Arbitrary Order Coupled-Cluster TheoryÂ¶; This DETCI-based version of this ",MatchSource.WIKI,psi4manual/4.0b4/detci.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/detci.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:1289,Availability,robust,robust,1289,"arrish; Module: Keywords, PSI Variables, DFMP2. IntroductionÂ¶; Second-order MÃ¸ller-Plesset Perturbation Theory (MP2) occupies a unique role; in quantum chemistry due to its small-prefactor treatment of; dynamic electron correlation. This unusually cheap; ab initio treatment of electron correlation may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic products in the; bra- and ket- of the -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; re",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:1637,Availability,avail,available,1637,"n may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic products in the; bra- and ket- of the -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <===========",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:1687,Availability,avail,available,1687,"n may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic products in the; bra- and ket- of the -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <===========",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:4917,Deployability,integrat,integration,4917,"s ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:8130,Deployability,update,updated,8130,"ired,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to a smaller number to prevent this; in this section (does not affect threaded efficiency in the rest of the; code).; DFMP2 likes disk. At a minimum, doubles are required for; RHF-MP2, and doubles are required for UHF-MP2.; DFMP2 likes threads. Some of the formation of the tensor; relies on threaded BLAS (such as MKL) for efficiency. The main; step is done via small/medium-sized DGEMMs inside of; OpenMP, so make sure to set the OMP_NESTED environment variable; to FALSE to prevent thread thrash (or just as well, do not define; OMP_NESTED at all).; Freezing core is good for both efficiency and correctness purposes.; Freezing virtuals is not recommended. The DFMP2 module will remind you how; many frozen/active orbitals it is using in a section just below the title.; ROHF-MBPT(2) may be preferred to UHF-MP2, as the latter can suffer from; severe spin contamination in some cases.; MP2 is not suitable for systems with multireference character. The; orbital energies will come together and an explosion will occur. Table Of Contents. DF-MP2: Density-Fitted Second-Order MÃ¸ller-Plesset Perturbation Theory; Introduction; Theory; Recommendations. Previous topic; DCFT: Density Cumulant Functional Theory; Next topic; OCC: Orbital-Optimized Coupled-Cluster and MÃ¸llerâPlesset Perturbation Theories; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:675,Energy Efficiency,efficient,efficient,675,"ï»¿. DF-MP2: Density-Fitted Second-Order MÃ¸ller-Plesset Perturbation Theory â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». DF-MP2: Density-Fitted Second-Order MÃ¸ller-Plesset Perturbation TheoryÂ¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, DFMP2. IntroductionÂ¶; Second-order MÃ¸ller-Plesset Perturbation Theory (MP2) occupies a unique role; in quantum chemistry due to its small-prefactor treatment of; dynamic electron correlation. This unusually cheap; ab initio treatment of electron correlation may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic products in the; bra- and ket- of the -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:1589,Energy Efficiency,efficient,efficient,1589,"n may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic products in the; bra- and ket- of the -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <===========",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:1868,Energy Efficiency,energy,energy,1868,"grals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <====================; ----------------------------------------------------------; Reference Energy = -76.0213974789664633 [H]; Singles Energy = -0.0000000000000001 [H]; Same-Spin Energy = -0.0512503261762665 [H]; Opposite-Spin Energy = -",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:1890,Energy Efficiency,energy,energy,1890," Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <====================; ----------------------------------------------------------; Reference Energy = -76.0213974789664633 [H]; Singles Energy = -0.0000000000000001 [H]; Same-Spin Energy = -0.0512503261762665 [H]; Opposite-Spin Energy = -0.1534098129352447 [H]; Correlation Energy = -0.2046601391115113 [H]; Total Energy = -76.226057618077973",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:1915,Energy Efficiency,energy,energy,1915," Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <====================; ----------------------------------------------------------; Reference Energy = -76.0213974789664633 [H]; Singles Energy = -0.0000000000000001 [H]; Same-Spin Energy = -0.0512503261762665 [H]; Opposite-Spin Energy = -0.1534098129352447 [H]; Correlation Energy = -0.2046601391115113 [H]; Total Energy = -76.226057618077973",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:2266,Energy Efficiency,energy,energy,2266,"plication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <====================; ----------------------------------------------------------; Reference Energy = -76.0213974789664633 [H]; Singles Energy = -0.0000000000000001 [H]; Same-Spin Energy = -0.0512503261762665 [H]; Opposite-Spin Energy = -0.1534098129352447 [H]; Correlation Energy = -0.2046601391115113 [H]; Total Energy = -76.2260576180779736 [H]; ----------------------------------------------------------; ==================> SCS-MP2 Energies <==================; ----------------------------------------------------------; SCS Same-Spin S",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:4165,Energy Efficiency,energy,energy,4165,"----------------; SCS Same-Spin Scale = 0.3333333333333333 [-]; SCS Opposite-Spin Scale = 1.2000000000000000 [-]; SCS Same-Spin Energy = -0.0170834420587555 [H]; SCS Opposite-Spin Energy = -0.1840917755222936 [H]; SCS Correlation Energy = -0.2011752175810492 [H]; SCS Total Energy = -76.2225726965475161 [H]; ----------------------------------------------------------. The theory, breakdown of results, and common keywords used in DF-MP2 are presented below. TheoryÂ¶; MÃ¸ller-Plesset Theory (MPn) or Many-Body Perturbation Theory; (MBPT) through second order has the spin-orbital formula:. (1); Here and are occupied spin orbitals, and; are virtual spin orbitals, are the ; Fock Matrix elements, are the orbital eigenvalues, and; are the antisymmetrized physicistâs ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the s",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:4261,Energy Efficiency,energy,energy,4261,"0000000000 [-]; SCS Same-Spin Energy = -0.0170834420587555 [H]; SCS Opposite-Spin Energy = -0.1840917755222936 [H]; SCS Correlation Energy = -0.2011752175810492 [H]; SCS Total Energy = -76.2225726965475161 [H]; ----------------------------------------------------------. The theory, breakdown of results, and common keywords used in DF-MP2 are presented below. TheoryÂ¶; MÃ¸ller-Plesset Theory (MPn) or Many-Body Perturbation Theory; (MBPT) through second order has the spin-orbital formula:. (1); Here and are occupied spin orbitals, and; are virtual spin orbitals, are the ; Fock Matrix elements, are the orbital eigenvalues, and; are the antisymmetrized physicistâs ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbital",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:4641,Energy Efficiency,energy,energy,4641," order has the spin-orbital formula:. (1); Here and are occupied spin orbitals, and; are virtual spin orbitals, are the ; Fock Matrix elements, are the orbital eigenvalues, and; are the antisymmetrized physicistâs ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:4893,Energy Efficiency,energy,energy,4893,"s ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:5561,Energy Efficiency,energy,energy,5561,"rbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The automatic basis selector; should work fine for all of the Dunning and Pople bases (provided the auxiliary; basis exists for the atom in question). If it does not, use the; DF_BASIS_MP2 keyword to manually specify the basis.; DFMP2 likes memory. At a minimum, doubles are required,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:5623,Energy Efficiency,energy,energy,5623,"rbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The automatic basis selector; should work fine for all of the Dunning and Pople bases (provided the auxiliary; basis exists for the atom in question). If it does not, use the; DF_BASIS_MP2 keyword to manually specify the basis.; DFMP2 likes memory. At a minimum, doubles are required,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:6374,Energy Efficiency,reduce,reduce,6374,"ibution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The automatic basis selector; should work fine for all of the Dunning and Pople bases (provided the auxiliary; basis exists for the atom in question). If it does not, use the; DF_BASIS_MP2 keyword to manually specify the basis.; DFMP2 likes memory. At a minimum, doubles are required,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to a smaller number to prevent this; in this section (does not affect threaded efficiency in the rest of the; code).; DFMP2 likes disk. At a minimum, doubles are required for; RHF-MP2, and doubles are required for UHF-MP2.; DFMP2 likes threads. Some of the formation of the tensor; relies on threaded BLAS (such as MKL) for efficiency. The main; step is done via small/medium-sized DGEMMs inside of; OpenMP, so make sure to set the OMP_NESTED environment variable; to FALSE to prevent thread thrash (or just as well, do not define; OMP_NESTED at all).; Freezing core is good for both efficiency and correctness purposes.; Freezing virtuals is not recommended. The DFMP2 module will remind you how; many frozen/active orbitals it is using in a se",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:4917,Integrability,integrat,integration,4917,"s ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:7026,Modifiability,variab,variable,7026,"ary; basis exists for the atom in question). If it does not, use the; DF_BASIS_MP2 keyword to manually specify the basis.; DFMP2 likes memory. At a minimum, doubles are required,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to a smaller number to prevent this; in this section (does not affect threaded efficiency in the rest of the; code).; DFMP2 likes disk. At a minimum, doubles are required for; RHF-MP2, and doubles are required for UHF-MP2.; DFMP2 likes threads. Some of the formation of the tensor; relies on threaded BLAS (such as MKL) for efficiency. The main; step is done via small/medium-sized DGEMMs inside of; OpenMP, so make sure to set the OMP_NESTED environment variable; to FALSE to prevent thread thrash (or just as well, do not define; OMP_NESTED at all).; Freezing core is good for both efficiency and correctness purposes.; Freezing virtuals is not recommended. The DFMP2 module will remind you how; many frozen/active orbitals it is using in a section just below the title.; ROHF-MBPT(2) may be preferred to UHF-MP2, as the latter can suffer from; severe spin contamination in some cases.; MP2 is not suitable for systems with multireference character. The; orbital energies will come together and an explosion will occur. Table Of Contents. DF-MP2: Density-Fitted Second-Order MÃ¸ller-Plesset Perturbation Theory; Introduction; Theory; Recommendations. Previous topic; DCFT: Density Cumulant Functional Theory; Next topic; OCC: Orbital-Optimized Coupled-Cluster and MÃ¸llerâPlesset Perturbation Theories; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . ne",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:4934,Usability,simpl,simplification,4934,"s ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2-1.html:5679,Usability,simpl,simple,5679,"ferences;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The automatic basis selector; should work fine for all of the Dunning and Pople bases (provided the auxiliary; basis exists for the atom in question). If it does not, use the; DF_BASIS_MP2 keyword to manually specify the basis.; DFMP2 likes memory. At a minimum, doubles are required,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to a smaller number to prevent this; in this section (does not affect threaded efficiency in the rest of the; code).; DFMP2 l",MatchSource.WIKI,psi4manual/4.0b4/dfmp2-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2-1.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:1289,Availability,robust,robust,1289,"arrish; Module: Keywords, PSI Variables, DFMP2. IntroductionÂ¶; Second-order MÃ¸ller-Plesset Perturbation Theory (MP2) occupies a unique role; in quantum chemistry due to its small-prefactor treatment of; dynamic electron correlation. This unusually cheap; ab initio treatment of electron correlation may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic products in the; bra- and ket- of the -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; re",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:1637,Availability,avail,available,1637,"n may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic products in the; bra- and ket- of the -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <===========",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:1687,Availability,avail,available,1687,"n may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic products in the; bra- and ket- of the -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <===========",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:4917,Deployability,integrat,integration,4917,"s ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:8130,Deployability,update,updated,8130,"ired,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to a smaller number to prevent this; in this section (does not affect threaded efficiency in the rest of the; code).; DFMP2 likes disk. At a minimum, doubles are required for; RHF-MP2, and doubles are required for UHF-MP2.; DFMP2 likes threads. Some of the formation of the tensor; relies on threaded BLAS (such as MKL) for efficiency. The main; step is done via small/medium-sized DGEMMs inside of; OpenMP, so make sure to set the OMP_NESTED environment variable; to FALSE to prevent thread thrash (or just as well, do not define; OMP_NESTED at all).; Freezing core is good for both efficiency and correctness purposes.; Freezing virtuals is not recommended. The DFMP2 module will remind you how; many frozen/active orbitals it is using in a section just below the title.; ROHF-MBPT(2) may be preferred to UHF-MP2, as the latter can suffer from; severe spin contamination in some cases.; MP2 is not suitable for systems with multireference character. The; orbital energies will come together and an explosion will occur. Table Of Contents. DF-MP2: Density-Fitted Second-Order MÃ¸ller-Plesset Perturbation Theory; Introduction; Theory; Recommendations. Previous topic; DCFT: Density Cumulant Functional Theory; Next topic; OCC: Orbital-Optimized Coupled-Cluster and MÃ¸llerâPlesset Perturbation Theories; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:675,Energy Efficiency,efficient,efficient,675,"ï»¿. DF-MP2: Density-Fitted Second-Order MÃ¸ller-Plesset Perturbation Theory â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». DF-MP2: Density-Fitted Second-Order MÃ¸ller-Plesset Perturbation TheoryÂ¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, DFMP2. IntroductionÂ¶; Second-order MÃ¸ller-Plesset Perturbation Theory (MP2) occupies a unique role; in quantum chemistry due to its small-prefactor treatment of; dynamic electron correlation. This unusually cheap; ab initio treatment of electron correlation may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic products in the; bra- and ket- of the -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:1589,Energy Efficiency,efficient,efficient,1589,"n may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic products in the; bra- and ket- of the -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <===========",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:1868,Energy Efficiency,energy,energy,1868,"grals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <====================; ----------------------------------------------------------; Reference Energy = -76.0213974789664633 [H]; Singles Energy = -0.0000000000000001 [H]; Same-Spin Energy = -0.0512503261762665 [H]; Opposite-Spin Energy = -",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:1890,Energy Efficiency,energy,energy,1890," Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <====================; ----------------------------------------------------------; Reference Energy = -76.0213974789664633 [H]; Singles Energy = -0.0000000000000001 [H]; Same-Spin Energy = -0.0512503261762665 [H]; Opposite-Spin Energy = -0.1534098129352447 [H]; Correlation Energy = -0.2046601391115113 [H]; Total Energy = -76.226057618077973",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:1915,Energy Efficiency,energy,energy,1915," Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <====================; ----------------------------------------------------------; Reference Energy = -76.0213974789664633 [H]; Singles Energy = -0.0000000000000001 [H]; Same-Spin Energy = -0.0512503261762665 [H]; Opposite-Spin Energy = -0.1534098129352447 [H]; Correlation Energy = -0.2046601391115113 [H]; Total Energy = -76.226057618077973",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:2266,Energy Efficiency,energy,energy,2266,"plication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in PSI4 for all single; reference types available in the SCF module.; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True. energy('df-mp2'). The energy('df-mp2') call to energy() executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted integrals and then builds the; full tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like:; ----------------------------------------------------------; ====================> MP2 Energies <====================; ----------------------------------------------------------; Reference Energy = -76.0213974789664633 [H]; Singles Energy = -0.0000000000000001 [H]; Same-Spin Energy = -0.0512503261762665 [H]; Opposite-Spin Energy = -0.1534098129352447 [H]; Correlation Energy = -0.2046601391115113 [H]; Total Energy = -76.2260576180779736 [H]; ----------------------------------------------------------; ==================> SCS-MP2 Energies <==================; ----------------------------------------------------------; SCS Same-Spin S",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:4165,Energy Efficiency,energy,energy,4165,"----------------; SCS Same-Spin Scale = 0.3333333333333333 [-]; SCS Opposite-Spin Scale = 1.2000000000000000 [-]; SCS Same-Spin Energy = -0.0170834420587555 [H]; SCS Opposite-Spin Energy = -0.1840917755222936 [H]; SCS Correlation Energy = -0.2011752175810492 [H]; SCS Total Energy = -76.2225726965475161 [H]; ----------------------------------------------------------. The theory, breakdown of results, and common keywords used in DF-MP2 are presented below. TheoryÂ¶; MÃ¸ller-Plesset Theory (MPn) or Many-Body Perturbation Theory; (MBPT) through second order has the spin-orbital formula:. (1); Here and are occupied spin orbitals, and; are virtual spin orbitals, are the ; Fock Matrix elements, are the orbital eigenvalues, and; are the antisymmetrized physicistâs ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the s",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:4261,Energy Efficiency,energy,energy,4261,"0000000000 [-]; SCS Same-Spin Energy = -0.0170834420587555 [H]; SCS Opposite-Spin Energy = -0.1840917755222936 [H]; SCS Correlation Energy = -0.2011752175810492 [H]; SCS Total Energy = -76.2225726965475161 [H]; ----------------------------------------------------------. The theory, breakdown of results, and common keywords used in DF-MP2 are presented below. TheoryÂ¶; MÃ¸ller-Plesset Theory (MPn) or Many-Body Perturbation Theory; (MBPT) through second order has the spin-orbital formula:. (1); Here and are occupied spin orbitals, and; are virtual spin orbitals, are the ; Fock Matrix elements, are the orbital eigenvalues, and; are the antisymmetrized physicistâs ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbital",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:4641,Energy Efficiency,energy,energy,4641," order has the spin-orbital formula:. (1); Here and are occupied spin orbitals, and; are virtual spin orbitals, are the ; Fock Matrix elements, are the orbital eigenvalues, and; are the antisymmetrized physicistâs ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:4893,Energy Efficiency,energy,energy,4893,"s ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:5561,Energy Efficiency,energy,energy,5561,"rbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The automatic basis selector; should work fine for all of the Dunning and Pople bases (provided the auxiliary; basis exists for the atom in question). If it does not, use the; DF_BASIS_MP2 keyword to manually specify the basis.; DFMP2 likes memory. At a minimum, doubles are required,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:5623,Energy Efficiency,energy,energy,5623,"rbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The automatic basis selector; should work fine for all of the Dunning and Pople bases (provided the auxiliary; basis exists for the atom in question). If it does not, use the; DF_BASIS_MP2 keyword to manually specify the basis.; DFMP2 likes memory. At a minimum, doubles are required,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:6374,Energy Efficiency,reduce,reduce,6374,"ibution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The automatic basis selector; should work fine for all of the Dunning and Pople bases (provided the auxiliary; basis exists for the atom in question). If it does not, use the; DF_BASIS_MP2 keyword to manually specify the basis.; DFMP2 likes memory. At a minimum, doubles are required,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to a smaller number to prevent this; in this section (does not affect threaded efficiency in the rest of the; code).; DFMP2 likes disk. At a minimum, doubles are required for; RHF-MP2, and doubles are required for UHF-MP2.; DFMP2 likes threads. Some of the formation of the tensor; relies on threaded BLAS (such as MKL) for efficiency. The main; step is done via small/medium-sized DGEMMs inside of; OpenMP, so make sure to set the OMP_NESTED environment variable; to FALSE to prevent thread thrash (or just as well, do not define; OMP_NESTED at all).; Freezing core is good for both efficiency and correctness purposes.; Freezing virtuals is not recommended. The DFMP2 module will remind you how; many frozen/active orbitals it is using in a se",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:4917,Integrability,integrat,integration,4917,"s ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:7026,Modifiability,variab,variable,7026,"ary; basis exists for the atom in question). If it does not, use the; DF_BASIS_MP2 keyword to manually specify the basis.; DFMP2 likes memory. At a minimum, doubles are required,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to a smaller number to prevent this; in this section (does not affect threaded efficiency in the rest of the; code).; DFMP2 likes disk. At a minimum, doubles are required for; RHF-MP2, and doubles are required for UHF-MP2.; DFMP2 likes threads. Some of the formation of the tensor; relies on threaded BLAS (such as MKL) for efficiency. The main; step is done via small/medium-sized DGEMMs inside of; OpenMP, so make sure to set the OMP_NESTED environment variable; to FALSE to prevent thread thrash (or just as well, do not define; OMP_NESTED at all).; Freezing core is good for both efficiency and correctness purposes.; Freezing virtuals is not recommended. The DFMP2 module will remind you how; many frozen/active orbitals it is using in a section just below the title.; ROHF-MBPT(2) may be preferred to UHF-MP2, as the latter can suffer from; severe spin contamination in some cases.; MP2 is not suitable for systems with multireference character. The; orbital energies will come together and an explosion will occur. Table Of Contents. DF-MP2: Density-Fitted Second-Order MÃ¸ller-Plesset Perturbation Theory; Introduction; Theory; Recommendations. Previous topic; DCFT: Density Cumulant Functional Theory; Next topic; OCC: Orbital-Optimized Coupled-Cluster and MÃ¸llerâPlesset Perturbation Theories; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . ne",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:4934,Usability,simpl,simplification,4934,"s ERIs.; For converged RHF and UHF references, the singles correction,. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. In the DFMP2 module, the first-order contribution, or âsingles energyâ is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dfmp2.html:5679,Usability,simpl,simple,5679,"ferences;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF E_CONVERGENCE and/or D_CONVERGENCE keywords; and try again.; To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimmeâs Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemistâs integrals over spatial orbitals). and. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. and. Note that the UHF-MP2 equations use three classes of integrals, while the; RHF-MP2 equations use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. RecommendationsÂ¶; All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix DFMP2). Some basic recommendations are included below:. DFMP2 should be run with the -type RI or MP2FIT auxiliary; basis sets, not the -JKFIT basis sets. The automatic basis selector; should work fine for all of the Dunning and Pople bases (provided the auxiliary; basis exists for the atom in question). If it does not, use the; DF_BASIS_MP2 keyword to manually specify the basis.; DFMP2 likes memory. At a minimum, doubles are required,; where is the size of the auxiliary basis set. However, there is; one disk transpose of the tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the DF_INTS_NUM_THREADS to a smaller number to prevent this; in this section (does not affect threaded efficiency in the rest of the; code).; DFMP2 l",MatchSource.WIKI,psi4manual/4.0b4/dfmp2.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dfmp2.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:4013,Availability,failure,failures,4013,"am matrix,. which is diagonalized to form the Kohn-Sham orbitals in the same manner as in; Hartree-Fock.; In practice the local functional kernel and its required; partial derivatives are exceedingly complex, and are not analytically; integrable. In this case, atom-centered numerical quadratures are used to; evaluate the Kohn-Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree-Fock; with potentially exact treatment of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn-Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:4862,Availability,failure,failures,4862,"nt of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn-Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that the term; âexact-exchangeâ refers to the Hartree-Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted ,; is often determined by adiabatic or heuristic arguments, and is typically around; 25%. The addition of exact exchange",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:13813,Availability,avail,available,13813," the PSI4 DFT team.; LRC functionals are all denoted by a lower-case âwâ in front of the standard DFA; functional, such as wPBE. We offer a stable implementation of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:13959,Availability,avail,available,13959,"ion of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-La",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:14225,Availability,reliab,reliable,14225,"ion of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the DFT_SPHERICAL_POINTS; option, which may take one of the following values:. DFT_SPHERICAL_POINTS; Order. 6; 3. 14; 5. 26;",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:14751,Availability,avail,available,14751,"lating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the DFT_SPHERICAL_POINTS; option, which may take one of the following values:. DFT_SPHERICAL_POINTS; Order. 6; 3. 14; 5. 26; 7. 38; 9. 50; 11. 74; 13. 86; 15. 110; 17. 146; 19. 170; 21. 194; 23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 974; 53. 1202; 59. 1454; 65. 1730; 71. 2030; 77. 2354; 83. 2702; 89. 3074; 95. 3470; 101. 3890; 107. 4334; 113. 4802; 119. 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set ",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:15777,Availability,avail,available,15777,"but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the DFT_SPHERICAL_POINTS; option, which may take one of the following values:. DFT_SPHERICAL_POINTS; Order. 6; 3. 14; 5. 26; 7. 38; 9. 50; 11. 74; 13. 86; 15. 110; 17. 146; 19. 170; 21. 194; 23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 974; 53. 1202; 59. 1454; 65. 1730; 71. 2030; 77. 2354; 83. 2702; 89. 3074; 95. 3470; 101. 3890; 107. 4334; 113. 4802; 119. 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controlled by the DFT_RADIAL_POINTS option, which is any positive; integer (typically 50-100). The radial grids are âcenteredâ on the Bragg-Slater; radius of each atom, as described in Beckeâs 1988 paper. If inaccurate; integration is suspected in systems with anions or very diffuse basis functions,; the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to; force the radial grid to span a larger extent in space. The MultiExp, Mura, and; EM radial grids will be available in RC1.; The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME; option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann; weighting scheme is under development, and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks o",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:16441,Availability,avail,available,16441," 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controlled by the DFT_RADIAL_POINTS option, which is any positive; integer (typically 50-100). The radial grids are âcenteredâ on the Bragg-Slater; radius of each atom, as described in Beckeâs 1988 paper. If inaccurate; integration is suspected in systems with anions or very diffuse basis functions,; the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to; force the radial grid to span a larger extent in space. The MultiExp, Mura, and; EM radial grids will be available in RC1.; The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME; option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann; weighting scheme is under development, and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the ",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:16657,Availability,avail,available,16657,"l systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controlled by the DFT_RADIAL_POINTS option, which is any positive; integer (typically 50-100). The radial grids are âcenteredâ on the Bragg-Slater; radius of each atom, as described in Beckeâs 1988 paper. If inaccurate; integration is suspected in systems with anions or very diffuse basis functions,; the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to; force the radial grid to span a larger extent in space. The MultiExp, Mura, and; EM radial grids will be available in RC1.; The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME; option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann; weighting scheme is under development, and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is li",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:17709,Availability,toler,tolerance,17709," and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; No",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:18111,Availability,error,error,18111,"eep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply c",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:18475,Availability,error,errors,18475,"2. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0)",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:21240,Availability,avail,available,21240,"or elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; # Many optional arguments are available, see the python file; frac_traverse(h2o). The other macro is frac_nuke(), which strips several electrons out of the; system to gather information on the MSIE over a range of orbitals. The input is; identical to the above, except that the frac_traverse() call is substituted; for something like:; # Argument is the molecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:21731,Availability,avail,available,21731,"is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; # Many optional arguments are available, see the python file; frac_traverse(h2o). The other macro is frac_nuke(), which strips several electrons out of the; system to gather information on the MSIE over a range of orbitals. The input is; identical to the above, except that the frac_traverse() call is substituted; for something like:; # Argument is the molecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm whe",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:13454,Deployability,integrat,integrated,13454,"t these functionals are not appropriate for modeling; dispersion interactions, as they lack dispersion physics. A -D functional (Such; as the much cheaper B97-D) should be used instead.; Hybrid Functionals; Many common hybrid functionals, including the ubiquitous B3LYP. PBE0 and the; B97 series are also quite good for many thermochemical problems.; LRC Functionals; LRC functionals are a particular area of interest of the PSI4 DFT team.; LRC functionals are all denoted by a lower-case âwâ in front of the standard DFA; functional, such as wPBE. We offer a stable implementation of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results,",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:13979,Deployability,install,installation,13979,"ion of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-La",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:16175,Deployability,integrat,integration,16175,"23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 974; 53. 1202; 59. 1454; 65. 1730; 71. 2030; 77. 2354; 83. 2702; 89. 3074; 95. 3470; 101. 3890; 107. 4334; 113. 4802; 119. 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controlled by the DFT_RADIAL_POINTS option, which is any positive; integer (typically 50-100). The radial grids are âcenteredâ on the Bragg-Slater; radius of each atom, as described in Beckeâs 1988 paper. If inaccurate; integration is suspected in systems with anions or very diffuse basis functions,; the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to; force the radial grid to span a larger extent in space. The MultiExp, Mura, and; EM radial grids will be available in RC1.; The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME; option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann; weighting scheme is under development, and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For ea",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:18754,Deployability,patch,patch,18754,"; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:22636,Deployability,release,releases,22636,"lecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Tre",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:24060,Deployability,update,updated,24060,"RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Treatment; Functional Selection; Grid Selection; ERI Algorithms; IP Fitting; Fractional Particle Curves; Dispersion Corrections; Recommendations. Previous topic; HF: HartreeâFock Theory; Next topic; DCFT: Density Cumulant Functional Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:758,Energy Efficiency,energy,energy,758,"ï»¿. DFT: Density Functional Theory â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». DFT: Density Functional TheoryÂ¶; Code author: Robert M. Parrish and Justin M. Turney; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, LIBFUNCTIONAL, LIBFOCK, LIBSCF_SOLVER; Both density functional theory and HartreeâFock theory are controlled; through the SCF module, and the SCF Introduction; section is also relevant here. TheoryÂ¶; Generalized Kohn-Sham Density Functional Theory (KS-DFT) is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio.; Pure Kohn-Sham DFT is based on the ideas that A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning ",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:1269,Energy Efficiency,energy,energy,1269,"TheoryÂ¶; Code author: Robert M. Parrish and Justin M. Turney; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, LIBFUNCTIONAL, LIBFOCK, LIBSCF_SOLVER; Both density functional theory and HartreeâFock theory are controlled; through the SCF module, and the SCF Introduction; section is also relevant here. TheoryÂ¶; Generalized Kohn-Sham Density Functional Theory (KS-DFT) is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio.; Pure Kohn-Sham DFT is based on the ideas that A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:1415,Energy Efficiency,energy,energy,1415,"ensity functional theory and HartreeâFock theory are controlled; through the SCF module, and the SCF Introduction; section is also relevant here. TheoryÂ¶; Generalized Kohn-Sham Density Functional Theory (KS-DFT) is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio.; Pure Kohn-Sham DFT is based on the ideas that A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); fu",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:1484,Energy Efficiency,energy,energy,1484,"nsity Functional Theory (KS-DFT) is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio.; Pure Kohn-Sham DFT is based on the ideas that A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and ar",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:1667,Energy Efficiency,energy,energy,1667,"nsity Functional Theory (KS-DFT) is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio.; Pure Kohn-Sham DFT is based on the ideas that A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and ar",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:1707,Energy Efficiency,energy,energy,1707," the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density i",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:2043,Energy Efficiency,energy,energy,2043,"ng the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is u",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:2885,Energy Efficiency,energy,energy,2885,"lation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is used to build the Kohn-Sham matrix,. which is diagonalized to form the Kohn-Sham orbitals in the same manner as in; Hartree-Fock.; In practice the local functional kernel and its required; partial derivatives are exceedingly complex, and are not analytically; integrable. In this case, atom-centered numerical quadratures are used to; evaluate the Kohn-Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree-Fock; with potentially exact treatment of electron correlation for âfreeâ was one of",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:3006,Energy Efficiency,energy,energy,3006,"ng that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is used to build the Kohn-Sham matrix,. which is diagonalized to form the Kohn-Sham orbitals in the same manner as in; Hartree-Fock.; In practice the local functional kernel and its required; partial derivatives are exceedingly complex, and are not analytically; integrable. In this case, atom-centered numerical quadratures are used to; evaluate the Kohn-Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree-Fock; with potentially exact treatment of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits severa",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:4331,Energy Efficiency,charge,charge,4331,"valuate the Kohn-Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree-Fock; with potentially exact treatment of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn-Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:5464,Energy Efficiency,energy,energy,5464,"mistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that the term; âexact-exchangeâ refers to the Hartree-Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted ,; is often determined by adiabatic or heuristic arguments, and is typically around; 25%. The addition of exact exchange borrows another piece from an existing; Hartree-Fock code, with the caveat that Hartree-Fock exchange is often much more; costly to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for tr",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:6389,Energy Efficiency,energy,energy,6389," the term; âexact-exchangeâ refers to the Hartree-Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted ,; is often determined by adiabatic or heuristic arguments, and is typically around; 25%. The addition of exact exchange borrows another piece from an existing; Hartree-Fock code, with the caveat that Hartree-Fock exchange is often much more; costly to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC func",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:7270,Energy Efficiency,energy,energy,7270," recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empiric",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:8703,Energy Efficiency,energy,energy,8703,"tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional name):; molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn-Sham (RKS) on neutral singlet Helium in; spatial symmetry with a minimal STO-3G basis, 1.0E-8 energy; and density convergence criteria, a PK ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more information on; any of these options, see the relevant section below, or in the Hartree-Fock; section above. Spin/Symmetry TreatmentÂ¶; PSI4 implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn-Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn-Sham (UKS); Appropriate for most open-shell systems, and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, whic",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:8791,Energy Efficiency,energy,energy,8791,"onization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional name):; molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn-Sham (RKS) on neutral singlet Helium in; spatial symmetry with a minimal STO-3G basis, 1.0E-8 energy; and density convergence criteria, a PK ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more information on; any of these options, see the relevant section below, or in the Hartree-Fock; section above. Spin/Symmetry TreatmentÂ¶; PSI4 implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn-Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn-Sham (UKS); Appropriate for most open-shell systems, and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, which allows a considerable amount of flexibility in the wavefunction.; However, this flexibility comes at the cost of s",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:8940,Energy Efficiency,energy,energy,8940,"volving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional name):; molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn-Sham (RKS) on neutral singlet Helium in; spatial symmetry with a minimal STO-3G basis, 1.0E-8 energy; and density convergence criteria, a PK ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more information on; any of these options, see the relevant section below, or in the Hartree-Fock; section above. Spin/Symmetry TreatmentÂ¶; PSI4 implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn-Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn-Sham (UKS); Appropriate for most open-shell systems, and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, which allows a considerable amount of flexibility in the wavefunction.; However, this flexibility comes at the cost of spin symmetry; the resultant; wavefunction may not be an eigenfunction of the operator.; However, spin contamination is usually less of a problem with UKS than with; UHF, as the spin contamination of the",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:9391,Energy Efficiency,efficient,efficient,9391,"th KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional name):; molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn-Sham (RKS) on neutral singlet Helium in; spatial symmetry with a minimal STO-3G basis, 1.0E-8 energy; and density convergence criteria, a PK ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more information on; any of these options, see the relevant section below, or in the Hartree-Fock; section above. Spin/Symmetry TreatmentÂ¶; PSI4 implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn-Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn-Sham (UKS); Appropriate for most open-shell systems, and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, which allows a considerable amount of flexibility in the wavefunction.; However, this flexibility comes at the cost of spin symmetry; the resultant; wavefunction may not be an eigenfunction of the operator.; However, spin contamination is usually less of a problem with UKS than with; UHF, as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definite",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:10848,Energy Efficiency,energy,energy,10848,"on may not be an eigenfunction of the operator.; However, spin contamination is usually less of a problem with UKS than with; UHF, as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-leve",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:10872,Energy Efficiency,energy,energy,10872,"on may not be an eigenfunction of the operator.; However, spin contamination is usually less of a problem with UKS than with; UHF, as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-leve",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:11003,Energy Efficiency,energy,energy,11003,", as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-level; computations. Examples include PBE_X and PBE_C, which contain the; separate definitions of the PBE exchange and correlation hol",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:11031,Energy Efficiency,energy,energy,11031,", as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-level; computations. Examples include PBE_X and PBE_C, which contain the; separate definitions of the PBE exchange and correlation hol",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:11152,Energy Efficiency,energy,energy,11152," the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-level; computations. Examples include PBE_X and PBE_C, which contain the; separate definitions of the PBE exchange and correlation holes. In most cases,; the united PBE functional should be used instead.; GGA Functionals; Many common GGA functionals. BLYP and PBE are proba",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:14969,Energy Efficiency,efficient,efficient,14969,"ilable; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the DFT_SPHERICAL_POINTS; option, which may take one of the following values:. DFT_SPHERICAL_POINTS; Order. 6; 3. 14; 5. 26; 7. 38; 9. 50; 11. 74; 13. 86; 15. 110; 17. 146; 19. 170; 21. 194; 23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 974; 53. 1202; 59. 1454; 65. 1730; 71. 2030; 77. 2354; 83. 2702; 89. 3074; 95. 3470; 101. 3890; 107. 4334; 113. 4802; 119. 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controll",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:18121,Energy Efficiency,energy,energy,18121," a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, a",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:20165,Energy Efficiency,energy,energy,20165,"ory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; #",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:20181,Energy Efficiency,energy,energy,20181,"ory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; #",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:20336,Energy Efficiency,efficient,efficient,20336,"to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; # Many optional arguments are available, see the python file; frac_traverse(h2o). The other macro is frac_nuke(), which strips several electrons out of the; s",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:21815,Energy Efficiency,power,powerful,21815,"An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; # Many optional arguments are available, see the python file; frac_traverse(h2o). The other macro is frac_nuke(), which strips several electrons out of the; system to gather information on the MSIE over a range of orbitals. The input is; identical to the above, except that the frac_traverse() call is substituted; for something like:; # Argument is the molecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grid",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:23458,Energy Efficiency,energy,energy,23458,"RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Treatment; Functional Selection; Grid Selection; ERI Algorithms; IP Fitting; Fractional Particle Curves; Dispersion Corrections; Recommendations. Previous topic; HF: HartreeâFock Theory; Next topic; DCFT: Density Cumulant Functional Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:2098,Integrability,depend,depending,2098,"ng the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is u",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:2268,Integrability,depend,depend,2268,"troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is used to build the Kohn-Sham matrix,. which is diagonalized to form the Kohn-Sham orbitals in the same manner as in; Hartree-Fock.; In practice the local functional kernel and its required; partial deriv",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:4805,Integrability,depend,dependent,4805,"nt of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn-Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that the term; âexact-exchangeâ refers to the Hartree-Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted ,; is often determined by adiabatic or heuristic arguments, and is typically around; 25%. The addition of exact exchange",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:7517,Integrability,depend,dependence,7517,"ge; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. ",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:7574,Integrability,depend,dependence,7574,"rid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may s",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:13454,Integrability,integrat,integrated,13454,"t these functionals are not appropriate for modeling; dispersion interactions, as they lack dispersion physics. A -D functional (Such; as the much cheaper B97-D) should be used instead.; Hybrid Functionals; Many common hybrid functionals, including the ubiquitous B3LYP. PBE0 and the; B97 series are also quite good for many thermochemical problems.; LRC Functionals; LRC functionals are a particular area of interest of the PSI4 DFT team.; LRC functionals are all denoted by a lower-case âwâ in front of the standard DFA; functional, such as wPBE. We offer a stable implementation of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results,",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:16175,Integrability,integrat,integration,16175,"23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 974; 53. 1202; 59. 1454; 65. 1730; 71. 2030; 77. 2354; 83. 2702; 89. 3074; 95. 3470; 101. 3890; 107. 4334; 113. 4802; 119. 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controlled by the DFT_RADIAL_POINTS option, which is any positive; integer (typically 50-100). The radial grids are âcenteredâ on the Bragg-Slater; radius of each atom, as described in Beckeâs 1988 paper. If inaccurate; integration is suspected in systems with anions or very diffuse basis functions,; the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to; force the radial grid to span a larger extent in space. The MultiExp, Mura, and; EM radial grids will be available in RC1.; The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME; option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann; weighting scheme is under development, and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For ea",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:4417,Modifiability,extend,extended,4417,"valuate the Kohn-Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree-Fock; with potentially exact treatment of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn-Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:13258,Modifiability,enhance,enhancement,13258,"problems with the stability of the correlation hole. Donât worry, it; will definitely NaN on you if you try to use it.; Meta Functionals; We have recently implemented the M05 classes of meta functionals in; PSI4. Note that these functionals are not appropriate for modeling; dispersion interactions, as they lack dispersion physics. A -D functional (Such; as the much cheaper B97-D) should be used instead.; Hybrid Functionals; Many common hybrid functionals, including the ubiquitous B3LYP. PBE0 and the; B97 series are also quite good for many thermochemical problems.; LRC Functionals; LRC functionals are a particular area of interest of the PSI4 DFT team.; LRC functionals are all denoted by a lower-case âwâ in front of the standard DFA; functional, such as wPBE. We offer a stable implementation of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:22530,Modifiability,extend,extending,22530,"lecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Tre",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:6954,Performance,optimiz,optimization,6954,"to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by f",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:7162,Performance,tune,tuned-LRC,7162," recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empiric",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:7682,Performance,tune,tuned,7682,"als, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional na",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:17555,Performance,optimiz,optimizations,17555," and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; No",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:19060,Performance,perform,perform,19060,"; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional ",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:19537,Performance,perform,performs,19537,"re orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractiona",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:19949,Performance,tune,tuned,19949,"have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:20072,Performance,optimiz,optimized,20072,"i method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of ",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:20551,Performance,perform,perform,20551,"rms IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; # Many optional arguments are available, see the python file; frac_traverse(h2o). The other macro is frac_nuke(), which strips several electrons out of the; system to gather information on the MSIE over a range of orbitals. The input is; identical to the above, except that the frac_traverse() call is substituted; for something lik",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:22514,Performance,optimiz,optimizing,22514,"lecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Tre",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:22560,Performance,perform,performance,22560,"lecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Tre",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:6974,Testability,test,test,6974,"to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by f",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:14285,Testability,test,test,14285,"8. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the DFT_SPHERICAL_POINTS; option, which may take one of the following values:. DFT_SPHERICAL_POINTS; Order. 6; 3. 14; 5. 26; 7. 38; 9. 50; 11. 74; 13. 86; 15. 110; 17. 146; 19. 170; 21. 194; 23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 9",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:18097,Testability,benchmark,benchmark,18097,"eep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply c",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:19933,Testability,test,test,19933,"have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:1797,Usability,simpl,simply,1797," the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density i",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:2197,Usability,simpl,simplest,2197,"troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is used to build the Kohn-Sham matrix,. which is diagonalized to form the Kohn-Sham orbitals in the same manner as in; Hartree-Fock.; In practice the local functional kernel and its required; partial deriv",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:5096,Usability,simpl,simplest,5096," the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that the term; âexact-exchangeâ refers to the Hartree-Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted ,; is often determined by adiabatic or heuristic arguments, and is typically around; 25%. The addition of exact exchange borrows another piece from an existing; Hartree-Fock code, with the caveat that Hartree-Fock exchange is often much more; costly to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the L",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:7128,Usability,simpl,simply,7128," B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-f",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:8248,Usability,simpl,simple,8248,"; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional name):; molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn-Sham (RKS) on neutral singlet Helium in; spatial symmetry with a minimal STO-3G basis, 1.0E-8 energy; and density convergence criteria, a PK ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more information on; any of these options, see the relevant section below, or in the Hartree-Fock; section above. Spin/Symmetry TreatmentÂ¶; PSI4 implements the most popular spin specializations of KS-DFT, including:. Restricted Koh",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:10801,Usability,simpl,simplest,10801,"on may not be an eigenfunction of the operator.; However, spin contamination is usually less of a problem with UKS than with; UHF, as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-leve",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:19084,Usability,simpl,simply,19084,"; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional ",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft-1.html:22658,Usability,guid,guidelines,22658,"ule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Treatment; Functional Selection; Grid Selection; ERI Algorithms; IP Fitting; Fractional Particle Curves; Dispersion",MatchSource.WIKI,psi4manual/4.0b4/dft-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft-1.html
https://psicode.org/psi4manual/4.0b4/dft.html:4013,Availability,failure,failures,4013,"am matrix,. which is diagonalized to form the Kohn-Sham orbitals in the same manner as in; Hartree-Fock.; In practice the local functional kernel and its required; partial derivatives are exceedingly complex, and are not analytically; integrable. In this case, atom-centered numerical quadratures are used to; evaluate the Kohn-Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree-Fock; with potentially exact treatment of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn-Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:4862,Availability,failure,failures,4862,"nt of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn-Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that the term; âexact-exchangeâ refers to the Hartree-Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted ,; is often determined by adiabatic or heuristic arguments, and is typically around; 25%. The addition of exact exchange",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:13813,Availability,avail,available,13813," the PSI4 DFT team.; LRC functionals are all denoted by a lower-case âwâ in front of the standard DFA; functional, such as wPBE. We offer a stable implementation of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:13959,Availability,avail,available,13959,"ion of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-La",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:14225,Availability,reliab,reliable,14225,"ion of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the DFT_SPHERICAL_POINTS; option, which may take one of the following values:. DFT_SPHERICAL_POINTS; Order. 6; 3. 14; 5. 26;",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:14751,Availability,avail,available,14751,"lating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the DFT_SPHERICAL_POINTS; option, which may take one of the following values:. DFT_SPHERICAL_POINTS; Order. 6; 3. 14; 5. 26; 7. 38; 9. 50; 11. 74; 13. 86; 15. 110; 17. 146; 19. 170; 21. 194; 23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 974; 53. 1202; 59. 1454; 65. 1730; 71. 2030; 77. 2354; 83. 2702; 89. 3074; 95. 3470; 101. 3890; 107. 4334; 113. 4802; 119. 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set ",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:15777,Availability,avail,available,15777,"but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the DFT_SPHERICAL_POINTS; option, which may take one of the following values:. DFT_SPHERICAL_POINTS; Order. 6; 3. 14; 5. 26; 7. 38; 9. 50; 11. 74; 13. 86; 15. 110; 17. 146; 19. 170; 21. 194; 23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 974; 53. 1202; 59. 1454; 65. 1730; 71. 2030; 77. 2354; 83. 2702; 89. 3074; 95. 3470; 101. 3890; 107. 4334; 113. 4802; 119. 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controlled by the DFT_RADIAL_POINTS option, which is any positive; integer (typically 50-100). The radial grids are âcenteredâ on the Bragg-Slater; radius of each atom, as described in Beckeâs 1988 paper. If inaccurate; integration is suspected in systems with anions or very diffuse basis functions,; the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to; force the radial grid to span a larger extent in space. The MultiExp, Mura, and; EM radial grids will be available in RC1.; The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME; option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann; weighting scheme is under development, and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks o",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:16441,Availability,avail,available,16441," 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controlled by the DFT_RADIAL_POINTS option, which is any positive; integer (typically 50-100). The radial grids are âcenteredâ on the Bragg-Slater; radius of each atom, as described in Beckeâs 1988 paper. If inaccurate; integration is suspected in systems with anions or very diffuse basis functions,; the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to; force the radial grid to span a larger extent in space. The MultiExp, Mura, and; EM radial grids will be available in RC1.; The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME; option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann; weighting scheme is under development, and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the ",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:16657,Availability,avail,available,16657,"l systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controlled by the DFT_RADIAL_POINTS option, which is any positive; integer (typically 50-100). The radial grids are âcenteredâ on the Bragg-Slater; radius of each atom, as described in Beckeâs 1988 paper. If inaccurate; integration is suspected in systems with anions or very diffuse basis functions,; the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to; force the radial grid to span a larger extent in space. The MultiExp, Mura, and; EM radial grids will be available in RC1.; The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME; option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann; weighting scheme is under development, and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is li",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:17709,Availability,toler,tolerance,17709," and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; No",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:18111,Availability,error,error,18111,"eep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply c",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:18475,Availability,error,errors,18475,"2. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0)",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:21240,Availability,avail,available,21240,"or elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; # Many optional arguments are available, see the python file; frac_traverse(h2o). The other macro is frac_nuke(), which strips several electrons out of the; system to gather information on the MSIE over a range of orbitals. The input is; identical to the above, except that the frac_traverse() call is substituted; for something like:; # Argument is the molecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:21731,Availability,avail,available,21731,"is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; # Many optional arguments are available, see the python file; frac_traverse(h2o). The other macro is frac_nuke(), which strips several electrons out of the; system to gather information on the MSIE over a range of orbitals. The input is; identical to the above, except that the frac_traverse() call is substituted; for something like:; # Argument is the molecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm whe",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:13454,Deployability,integrat,integrated,13454,"t these functionals are not appropriate for modeling; dispersion interactions, as they lack dispersion physics. A -D functional (Such; as the much cheaper B97-D) should be used instead.; Hybrid Functionals; Many common hybrid functionals, including the ubiquitous B3LYP. PBE0 and the; B97 series are also quite good for many thermochemical problems.; LRC Functionals; LRC functionals are a particular area of interest of the PSI4 DFT team.; LRC functionals are all denoted by a lower-case âwâ in front of the standard DFA; functional, such as wPBE. We offer a stable implementation of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results,",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:13979,Deployability,install,installation,13979,"ion of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-La",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:16175,Deployability,integrat,integration,16175,"23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 974; 53. 1202; 59. 1454; 65. 1730; 71. 2030; 77. 2354; 83. 2702; 89. 3074; 95. 3470; 101. 3890; 107. 4334; 113. 4802; 119. 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controlled by the DFT_RADIAL_POINTS option, which is any positive; integer (typically 50-100). The radial grids are âcenteredâ on the Bragg-Slater; radius of each atom, as described in Beckeâs 1988 paper. If inaccurate; integration is suspected in systems with anions or very diffuse basis functions,; the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to; force the radial grid to span a larger extent in space. The MultiExp, Mura, and; EM radial grids will be available in RC1.; The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME; option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann; weighting scheme is under development, and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For ea",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:18754,Deployability,patch,patch,18754,"; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:22636,Deployability,release,releases,22636,"lecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Tre",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:24060,Deployability,update,updated,24060,"RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Treatment; Functional Selection; Grid Selection; ERI Algorithms; IP Fitting; Fractional Particle Curves; Dispersion Corrections; Recommendations. Previous topic; HF: HartreeâFock Theory; Next topic; DCFT: Density Cumulant Functional Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:758,Energy Efficiency,energy,energy,758,"ï»¿. DFT: Density Functional Theory â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». DFT: Density Functional TheoryÂ¶; Code author: Robert M. Parrish and Justin M. Turney; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, LIBFUNCTIONAL, LIBFOCK, LIBSCF_SOLVER; Both density functional theory and HartreeâFock theory are controlled; through the SCF module, and the SCF Introduction; section is also relevant here. TheoryÂ¶; Generalized Kohn-Sham Density Functional Theory (KS-DFT) is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio.; Pure Kohn-Sham DFT is based on the ideas that A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning ",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:1269,Energy Efficiency,energy,energy,1269,"TheoryÂ¶; Code author: Robert M. Parrish and Justin M. Turney; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, LIBFUNCTIONAL, LIBFOCK, LIBSCF_SOLVER; Both density functional theory and HartreeâFock theory are controlled; through the SCF module, and the SCF Introduction; section is also relevant here. TheoryÂ¶; Generalized Kohn-Sham Density Functional Theory (KS-DFT) is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio.; Pure Kohn-Sham DFT is based on the ideas that A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:1415,Energy Efficiency,energy,energy,1415,"ensity functional theory and HartreeâFock theory are controlled; through the SCF module, and the SCF Introduction; section is also relevant here. TheoryÂ¶; Generalized Kohn-Sham Density Functional Theory (KS-DFT) is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio.; Pure Kohn-Sham DFT is based on the ideas that A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); fu",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:1484,Energy Efficiency,energy,energy,1484,"nsity Functional Theory (KS-DFT) is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio.; Pure Kohn-Sham DFT is based on the ideas that A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and ar",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:1667,Energy Efficiency,energy,energy,1667,"nsity Functional Theory (KS-DFT) is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio.; Pure Kohn-Sham DFT is based on the ideas that A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and ar",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:1707,Energy Efficiency,energy,energy,1707," the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density i",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:2043,Energy Efficiency,energy,energy,2043,"ng the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is u",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:2885,Energy Efficiency,energy,energy,2885,"lation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is used to build the Kohn-Sham matrix,. which is diagonalized to form the Kohn-Sham orbitals in the same manner as in; Hartree-Fock.; In practice the local functional kernel and its required; partial derivatives are exceedingly complex, and are not analytically; integrable. In this case, atom-centered numerical quadratures are used to; evaluate the Kohn-Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree-Fock; with potentially exact treatment of electron correlation for âfreeâ was one of",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:3006,Energy Efficiency,energy,energy,3006,"ng that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is used to build the Kohn-Sham matrix,. which is diagonalized to form the Kohn-Sham orbitals in the same manner as in; Hartree-Fock.; In practice the local functional kernel and its required; partial derivatives are exceedingly complex, and are not analytically; integrable. In this case, atom-centered numerical quadratures are used to; evaluate the Kohn-Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree-Fock; with potentially exact treatment of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits severa",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:4331,Energy Efficiency,charge,charge,4331,"valuate the Kohn-Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree-Fock; with potentially exact treatment of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn-Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:5464,Energy Efficiency,energy,energy,5464,"mistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that the term; âexact-exchangeâ refers to the Hartree-Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted ,; is often determined by adiabatic or heuristic arguments, and is typically around; 25%. The addition of exact exchange borrows another piece from an existing; Hartree-Fock code, with the caveat that Hartree-Fock exchange is often much more; costly to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for tr",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:6389,Energy Efficiency,energy,energy,6389," the term; âexact-exchangeâ refers to the Hartree-Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted ,; is often determined by adiabatic or heuristic arguments, and is typically around; 25%. The addition of exact exchange borrows another piece from an existing; Hartree-Fock code, with the caveat that Hartree-Fock exchange is often much more; costly to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC func",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:7270,Energy Efficiency,energy,energy,7270," recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empiric",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:8703,Energy Efficiency,energy,energy,8703,"tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional name):; molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn-Sham (RKS) on neutral singlet Helium in; spatial symmetry with a minimal STO-3G basis, 1.0E-8 energy; and density convergence criteria, a PK ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more information on; any of these options, see the relevant section below, or in the Hartree-Fock; section above. Spin/Symmetry TreatmentÂ¶; PSI4 implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn-Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn-Sham (UKS); Appropriate for most open-shell systems, and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, whic",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:8791,Energy Efficiency,energy,energy,8791,"onization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional name):; molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn-Sham (RKS) on neutral singlet Helium in; spatial symmetry with a minimal STO-3G basis, 1.0E-8 energy; and density convergence criteria, a PK ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more information on; any of these options, see the relevant section below, or in the Hartree-Fock; section above. Spin/Symmetry TreatmentÂ¶; PSI4 implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn-Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn-Sham (UKS); Appropriate for most open-shell systems, and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, which allows a considerable amount of flexibility in the wavefunction.; However, this flexibility comes at the cost of s",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:8940,Energy Efficiency,energy,energy,8940,"volving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional name):; molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn-Sham (RKS) on neutral singlet Helium in; spatial symmetry with a minimal STO-3G basis, 1.0E-8 energy; and density convergence criteria, a PK ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more information on; any of these options, see the relevant section below, or in the Hartree-Fock; section above. Spin/Symmetry TreatmentÂ¶; PSI4 implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn-Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn-Sham (UKS); Appropriate for most open-shell systems, and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, which allows a considerable amount of flexibility in the wavefunction.; However, this flexibility comes at the cost of spin symmetry; the resultant; wavefunction may not be an eigenfunction of the operator.; However, spin contamination is usually less of a problem with UKS than with; UHF, as the spin contamination of the",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:9391,Energy Efficiency,efficient,efficient,9391,"th KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional name):; molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn-Sham (RKS) on neutral singlet Helium in; spatial symmetry with a minimal STO-3G basis, 1.0E-8 energy; and density convergence criteria, a PK ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more information on; any of these options, see the relevant section below, or in the Hartree-Fock; section above. Spin/Symmetry TreatmentÂ¶; PSI4 implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn-Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn-Sham (UKS); Appropriate for most open-shell systems, and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; other, which allows a considerable amount of flexibility in the wavefunction.; However, this flexibility comes at the cost of spin symmetry; the resultant; wavefunction may not be an eigenfunction of the operator.; However, spin contamination is usually less of a problem with UKS than with; UHF, as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definite",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:10848,Energy Efficiency,energy,energy,10848,"on may not be an eigenfunction of the operator.; However, spin contamination is usually less of a problem with UKS than with; UHF, as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-leve",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:10872,Energy Efficiency,energy,energy,10872,"on may not be an eigenfunction of the operator.; However, spin contamination is usually less of a problem with UKS than with; UHF, as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-leve",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:11003,Energy Efficiency,energy,energy,11003,", as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-level; computations. Examples include PBE_X and PBE_C, which contain the; separate definitions of the PBE exchange and correlation hol",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:11031,Energy Efficiency,energy,energy,11031,", as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-level; computations. Examples include PBE_X and PBE_C, which contain the; separate definitions of the PBE exchange and correlation hol",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:11152,Energy Efficiency,energy,energy,11152," the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-level; computations. Examples include PBE_X and PBE_C, which contain the; separate definitions of the PBE exchange and correlation holes. In most cases,; the united PBE functional should be used instead.; GGA Functionals; Many common GGA functionals. BLYP and PBE are proba",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:14969,Energy Efficiency,efficient,efficient,14969,"ilable; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the DFT_SPHERICAL_POINTS; option, which may take one of the following values:. DFT_SPHERICAL_POINTS; Order. 6; 3. 14; 5. 26; 7. 38; 9. 50; 11. 74; 13. 86; 15. 110; 17. 146; 19. 170; 21. 194; 23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 974; 53. 1202; 59. 1454; 65. 1730; 71. 2030; 77. 2354; 83. 2702; 89. 3074; 95. 3470; 101. 3890; 107. 4334; 113. 4802; 119. 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controll",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:18121,Energy Efficiency,energy,energy,18121," a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, a",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:20165,Energy Efficiency,energy,energy,20165,"ory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; #",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:20181,Energy Efficiency,energy,energy,20181,"ory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; #",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:20336,Energy Efficiency,efficient,efficient,20336,"to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; # Many optional arguments are available, see the python file; frac_traverse(h2o). The other macro is frac_nuke(), which strips several electrons out of the; s",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:21815,Energy Efficiency,power,powerful,21815,"An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; # Many optional arguments are available, see the python file; frac_traverse(h2o). The other macro is frac_nuke(), which strips several electrons out of the; system to gather information on the MSIE over a range of orbitals. The input is; identical to the above, except that the frac_traverse() call is substituted; for something like:; # Argument is the molecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grid",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:23458,Energy Efficiency,energy,energy,23458,"RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Treatment; Functional Selection; Grid Selection; ERI Algorithms; IP Fitting; Fractional Particle Curves; Dispersion Corrections; Recommendations. Previous topic; HF: HartreeâFock Theory; Next topic; DCFT: Density Cumulant Functional Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:2098,Integrability,depend,depending,2098,"ng the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is u",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:2268,Integrability,depend,depend,2268,"troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is used to build the Kohn-Sham matrix,. which is diagonalized to form the Kohn-Sham orbitals in the same manner as in; Hartree-Fock.; In practice the local functional kernel and its required; partial deriv",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:4805,Integrability,depend,dependent,4805,"nt of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn-Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that the term; âexact-exchangeâ refers to the Hartree-Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted ,; is often determined by adiabatic or heuristic arguments, and is typically around; 25%. The addition of exact exchange",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:7517,Integrability,depend,dependence,7517,"ge; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. ",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:7574,Integrability,depend,dependence,7574,"rid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may s",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:13454,Integrability,integrat,integrated,13454,"t these functionals are not appropriate for modeling; dispersion interactions, as they lack dispersion physics. A -D functional (Such; as the much cheaper B97-D) should be used instead.; Hybrid Functionals; Many common hybrid functionals, including the ubiquitous B3LYP. PBE0 and the; B97 series are also quite good for many thermochemical problems.; LRC Functionals; LRC functionals are a particular area of interest of the PSI4 DFT team.; LRC functionals are all denoted by a lower-case âwâ in front of the standard DFA; functional, such as wPBE. We offer a stable implementation of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results,",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:16175,Integrability,integrat,integration,16175,"23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 974; 53. 1202; 59. 1454; 65. 1730; 71. 2030; 77. 2354; 83. 2702; 89. 3074; 95. 3470; 101. 3890; 107. 4334; 113. 4802; 119. 5294; 125. 5810; 131. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. A complete grid orientation; rule set will be available in RC1.; Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which; at the moment may be either TREUTLER or BECKE, while the number of radial points; are controlled by the DFT_RADIAL_POINTS option, which is any positive; integer (typically 50-100). The radial grids are âcenteredâ on the Bragg-Slater; radius of each atom, as described in Beckeâs 1988 paper. If inaccurate; integration is suspected in systems with anions or very diffuse basis functions,; the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to; force the radial grid to span a larger extent in space. The MultiExp, Mura, and; EM radial grids will be available in RC1.; The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME; option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann; weighting scheme is under development, and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For ea",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:4417,Modifiability,extend,extended,4417,"valuate the Kohn-Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree-Fock; with potentially exact treatment of electron correlation for âfreeâ was one of; the primary motivations for KS-DFTâs adoption by chemists in the late 1980s and; early 1990s.; Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn-Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:13258,Modifiability,enhance,enhancement,13258,"problems with the stability of the correlation hole. Donât worry, it; will definitely NaN on you if you try to use it.; Meta Functionals; We have recently implemented the M05 classes of meta functionals in; PSI4. Note that these functionals are not appropriate for modeling; dispersion interactions, as they lack dispersion physics. A -D functional (Such; as the much cheaper B97-D) should be used instead.; Hybrid Functionals; Many common hybrid functionals, including the ubiquitous B3LYP. PBE0 and the; B97 series are also quite good for many thermochemical problems.; LRC Functionals; LRC functionals are a particular area of interest of the PSI4 DFT team.; LRC functionals are all denoted by a lower-case âwâ in front of the standard DFA; functional, such as wPBE. We offer a stable implementation of the Gill; association function for wS and Head-Gordonâs wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:22530,Modifiability,extend,extending,22530,"lecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Tre",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:6954,Performance,optimiz,optimization,6954,"to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by f",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:7162,Performance,tune,tuned-LRC,7162," recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empiric",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:7682,Performance,tune,tuned,7682,"als, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional na",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:17555,Performance,optimiz,optimizations,17555," and will be available in RC1.; Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; No",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:19060,Performance,perform,perform,19060,"; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional ",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:19537,Performance,perform,performs,19537,"re orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractiona",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:19949,Performance,tune,tuned,19949,"have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:20072,Performance,optimiz,optimized,20072,"i method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of ",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:20551,Performance,perform,perform,20551,"rms IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # FRAC jobs must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; dft_functional wb97; }. # Argument is the molecule object.; # Many optional arguments are available, see the python file; frac_traverse(h2o). The other macro is frac_nuke(), which strips several electrons out of the; system to gather information on the MSIE over a range of orbitals. The input is; identical to the above, except that the frac_traverse() call is substituted; for something lik",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:22514,Performance,optimiz,optimizing,22514,"lecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Tre",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:22560,Performance,perform,performance,22560,"lecule object.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Tre",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:6974,Testability,test,test,6974,"to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by f",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:14285,Testability,test,test,14285,"8. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model.; Double-Hybrid Functionals; Double hybrids are percolating into PSI4. Note that these are; only available with density-fitted, not conventional, mp2 algorithms.; -D Functionals; We have several -D2 functionals implemented, -D3 functionls are available; with the installation of Grimmeâs DFTD3 program, and we; will shortly be adding many; more combinations of -D2 and -D3 functionals. For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in PSI4 for both numerical stability and correctness. If you; observe any unexpected results, please email Rob Parrish (robparrish@gmail.com); for immediate assistance. Additionally, if you have a request for a new; functional, please let us know. Grid SelectionÂ¶; PSI4 uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. Pruned grids are; not yet available, but will be implemented by RC1 (in final debugging). The; default grid in PSI4 is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights.; Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the DFT_SPHERICAL_POINTS; option, which may take one of the following values:. DFT_SPHERICAL_POINTS; Order. 6; 3. 14; 5. 26; 7. 38; 9. 50; 11. 74; 13. 86; 15. 110; 17. 146; 19. 170; 21. 194; 23. 230; 25. 266; 27. 302; 29. 350; 31. 434; 35. 590; 41. 770; 47. 9",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:18097,Testability,benchmark,benchmark,18097,"eep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the DFT_BASIS_TOLERANCE, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy.; An example of a fully specified grid is as follows:; molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply c",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:19933,Testability,test,test,19933,"have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional Particle CurvesÂ¶; The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. PSI4 features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number .; Two python macros exist for this code. The first is frac_traverse(), which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:1797,Usability,simpl,simply,1797," the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density i",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:2197,Usability,simpl,simplest,2197,"troublesome kinetic energy term via the implicit one-body; Kohn-Sham orbitals. KS-DFT borrows much of the machinery of Hartree-Fock, as is; evident by looking at the energy expression,. Here is the noninteracting quasiparticle kinetic energy operator,; is the nucleus-electron attraction potential, ; is the total electron density matrix, and is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence is often referred to; as simply the exchange-correlation functional (exchange and correlation, not; just exchange-type correlation).; In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; or ,. The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; , or; to build an inhomogeneity; parameter. where,. GGA functionals are essentially the same cost as LSDA functionals, and are often; considerably more accurate.; Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density ; and ,. A generic local meta-GGA functional may then be written as,. The potential corresponding to this energy functional is,. This potential is used to build the Kohn-Sham matrix,. which is diagonalized to form the Kohn-Sham orbitals in the same manner as in; Hartree-Fock.; In practice the local functional kernel and its required; partial deriv",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:5096,Usability,simpl,simplest,5096," the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions.; Generalized Kohn-Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as âimplicitâ density; functionals, as the orbitals are themselves functionals of the Kohn-Sham; potential.; The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree-Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that the term; âexact-exchangeâ refers to the Hartree-Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted ,; is often determined by adiabatic or heuristic arguments, and is typically around; 25%. The addition of exact exchange borrows another piece from an existing; Hartree-Fock code, with the caveat that Hartree-Fock exchange is often much more; costly to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the L",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:7128,Usability,simpl,simply,7128," B3LYP often; producing absurdly accurate results.; A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is also exact for true electrons at long range in the exchange; hole. Therefore LRC switches from DFA at short range to hybrid exchange at long; range, typically using the function as a; partition function.; Tying all these pieces together, a full LRC-hybrid GKS functional has the; generic form,. For LRC functionals, the choice of range-separtion parameter has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of âgap; fittingâ or âoptimal tuningâ or simply âtuning.â The most popular tuned-LRC; approach is IP-fitting, in which the is varied until the; Koopmanâs IP (the opposite of the HOMO energy) matches the true IP (the; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-f",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:8248,Usability,simpl,simple,8248,"; difference between -electron and -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. Note that LRC functionals with default only capture the; dependence,. hybrid functionals only capture part of the dependence,. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. IP-tuned LRC functionals effectively pin the chemical potential at ; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems.; For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose â-D2â approach is a de facto industry standard. The more modern â-D3â; approach is gaining popularity, and may supersede -D2 in the next few years. Minimal InputÂ¶; Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to energy('b3lyp') (or other valid functional name):; molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn-Sham (RKS) on neutral singlet Helium in; spatial symmetry with a minimal STO-3G basis, 1.0E-8 energy; and density convergence criteria, a PK ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more information on; any of these options, see the relevant section below, or in the Hartree-Fock; section above. Spin/Symmetry TreatmentÂ¶; PSI4 implements the most popular spin specializations of KS-DFT, including:. Restricted Koh",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:10801,Usability,simpl,simplest,10801,"on may not be an eigenfunction of the operator.; However, spin contamination is usually less of a problem with UKS than with; UHF, as the spin contamination of the noninteracting quasiparticles (the; metric printed in the output) is usually a severe overestimation; of the spin contamination of the true electrons. These are set in the REFERENCE option.; Note that there are not equivalents to ROHF or CUHF, e.g., no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in Szabo on methyl radical for an example. Functional SelectionÂ¶; PSI4 features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call:; energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; REFERENCE option before the call to energy:; set reference uks; energy('b3lyp'). The functional may also be manually specified by the DFT_FUNCTIONAL; option:; set dft_functional b3lyp; energy('scf'). For hybrid functionals, the fraction of exact exchange is controlled by the; DFT_ALPHA option. For the LRC functionals, the fraction of long-range; Hartree-Fock and short-range DFA is controlled by the DFT_OMEGA option.; Changing these will override the default behavior of the requested functional.; A brief summary of some of the more notable functionals in PSI4, and links; to the complete listing of all functionals of each class are presented below:. All Functionals; All functionals, including LSDA-only functionals. Note that here and; throughout, functionals which end in _X or _C are exchange or; correlation only, and should not be used for most production-leve",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:19084,Usability,simpl,simply,19084,"; }. energy('b3lyp'). ERI AlgorithmsÂ¶; The ERI algorithms for the Coulomb and hybrid exchange are identical to those; listed above for Hartree-Fock. However, for LRC functionals, the long-range; exchange contributions to the Kohn-Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional.; Note: gradients with LRC functionals and DF integrals technology are not; currently enabled. We hope to have a patch for this deficit soon. Please let us; know if you have a strong need for this capability, and we will move the; priority up. IP FittingÂ¶; In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the ip_fitting() Python macro, after; setting up a standard LRC UKS computation. A representative example is:; memory 512 MB. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1 # IP fitting must be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; dft_functional wb97; }. # Arguments are molecule object, minimum omega, maximum omega; ip_fitting(h2o, 0.4, 2.0). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of , though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; . The procedure can also be assisted by providing a tighter guess; for the bounds of . This small test case has a tuned; of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized ; between 0.1 and 0.5. Fractional ",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dft.html:22658,Usability,guid,guidelines,22658,"ule, in this case, 2.; # Many optional arguments are available, see the python file; frac_nuke(h2o, nmax = 2). Note: this feature is new/powerful enough that we have several papers pending on; it, and are interested in expanding this work. If you would like to publish; results using this code, please contact Rob Parrish to make arrangements for; collaboration. Dispersion CorrectionsÂ¶; Dispersion corrections are discussed at this link. RecommendationsÂ¶; The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (e.g., compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases.; Some rough guidelines for using the KS-DFT code are as follows,. Use DF for the ERI algorithm wherever possible.; PSI4 is a âtightâ code, meaning weâve set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; SCF Convergence for default convergence criteria.; Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The âbest-practiceâ input file for KS-DFT is:; memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). Table Of Contents. DFT: Density Functional Theory; Theory; Minimal Input; Spin/Symmetry Treatment; Functional Selection; Grid Selection; ERI Algorithms; IP Fitting; Fractional Particle Curves; Dispersion",MatchSource.WIKI,psi4manual/4.0b4/dft.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:367,Availability,down,downloadable,367,"ï»¿. Interface to DFTD3 by S. Grimme â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabula",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:847,Availability,error,error,847,"ï»¿. Interface to DFTD3 by S. Grimme â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabula",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:3438,Availability,avail,available,3438,"refined method, DFT-D3, [Grimme:2010:154104]; which incorporates an additional term in the dispersion; series and adjusts the combination formula and damping; function. The individual atomic are interpolated from; several reference values based upon coordination numbers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRE",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:3585,Availability,avail,available,3585,"mbination formula and damping; function. The individual atomic are interpolated from; several reference values based upon coordination numbers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variant",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:3967,Availability,redundant,redundant,3967,"nunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]No",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:4265,Availability,avail,available,4265,"characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. ",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:4346,Availability,avail,available,4346,"unning DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default param",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:643,Deployability,patch,patch,643,"ï»¿. Interface to DFTD3 by S. Grimme â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabula",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:1006,Deployability,patch,patch,1006,"â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabulated elemental; values, are summed ",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:1034,Deployability,patch,patching,1034,"â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabulated elemental; values, are summed ",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:1058,Deployability,patch,patching,1058,"â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabulated elemental; values, are summed ",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:3632,Deployability,install,installed,3632,"ers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:7555,Deployability,update,updated,7555,"eters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to supply; individual overrides in the presence of func. Returns energy if dertype is 0,; gradient if dertype is 1, else tuple of energy and gradient if dertype; unspecified. The dftd3 executable must be independently compiled and found in ; PATH. Table Of Contents. Interface to DFTD3 by S. Grimme; Installation; Theory; Running DFTD3. Previous topic; Interface to MRCC by M. KÃ¡llay; Next topic; Interface to Molden; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:1838,Energy Efficiency,energy,energy,1838,"ore building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabulated elemental; values, are summed over interatomic distances, , modulated; by a damping function, , that gradually activates; the dispersion correction (at a rate characterized by ); over a distance characterized by the sum of the two atomic vdW radii,; , while an overall scaling term, , is optimized; to be unique to each functional. ( is; sometimes allowed to vary as well.). (1). Grimme recently presented a refined method, DFT-D3, [Grimme:2010:154104]; which incorporates an additional term in the dispersion; series and adjusts the combination formula and damping; function. The individual atomic are interpolated from; several reference values based upon coordination numbers extracted from; the molecul",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:3867,Energy Efficiency,energy,energy,3867,"ome awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:3890,Energy Efficiency,energy,energy,3890,"ion. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5]",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:4045,Energy Efficiency,energy,energy,4045,"nunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]No",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:4127,Energy Efficiency,energy,energy,4127,"ced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:14",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:4144,Energy Efficiency,energy,energy,4144,"ced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:14",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:4163,Energy Efficiency,energy,energy,4163,"ced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:14",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:5313,Energy Efficiency,energy,energy,5313,"lt parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.18090",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:5643,Energy Efficiency,energy,energy,5643," alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.un",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:5969,Energy Efficiency,energy,energy,5969,"dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to supply; individual overrides in the presence of func. Returns energy if ",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:6938,Energy Efficiency,energy,energy,6938,"eters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to supply; individual overrides in the presence of func. Returns energy if dertype is 0,; gradient if dertype is 1, else tuple of energy and gradient if dertype; unspecified. The dftd3 executable must be independently compiled and found in ; PATH. Table Of Contents. Interface to DFTD3 by S. Grimme; Installation; Theory; Running DFTD3. Previous topic; Interface to MRCC by M. KÃ¡llay; Next topic; Interface to Molden; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:7003,Energy Efficiency,energy,energy,7003,"eters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to supply; individual overrides in the presence of func. Returns energy if dertype is 0,; gradient if dertype is 1, else tuple of energy and gradient if dertype; unspecified. The dftd3 executable must be independently compiled and found in ; PATH. Table Of Contents. Interface to DFTD3 by S. Grimme; Installation; Theory; Running DFTD3. Previous topic; Interface to MRCC by M. KÃ¡llay; Next topic; Interface to Molden; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:305,Integrability,interface,interface,305,"ï»¿. Interface to DFTD3 by S. Grimme â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabula",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:3659,Integrability,interface,interface,3659,"ers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:3710,Integrability,interface,interfaced,3710,"ers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:5876,Integrability,interface,interface,5876,", , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to su",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:5927,Integrability,rout,route,5927,"dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to supply; individual overrides in the presence of func. Returns energy if ",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:4388,Modifiability,variab,variable,4388,"unning DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default param",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:2293,Performance,optimiz,optimized,2293,"O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabulated elemental; values, are summed over interatomic distances, , modulated; by a damping function, , that gradually activates; the dispersion correction (at a rate characterized by ); over a distance characterized by the sum of the two atomic vdW radii,; , while an overall scaling term, , is optimized; to be unique to each functional. ( is; sometimes allowed to vary as well.). (1). Grimme recently presented a refined method, DFT-D3, [Grimme:2010:154104]; which incorporates an additional term in the dispersion; series and adjusts the combination formula and damping; function. The individual atomic are interpolated from; several reference values based upon coordination numbers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson wa",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:5340,Performance,optimiz,optimization,5340,"calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> ",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:5378,Performance,optimiz,optimize,5378,"calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> ",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:5407,Performance,optimiz,optimization,5407," the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:5484,Performance,optimiz,optimize,5484," see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:3967,Safety,redund,redundant,3967,"nunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]No",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3-1.html:3856,Usability,simpl,simple,3856,"ome awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO",MatchSource.WIKI,psi4manual/4.0b4/dftd3-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3-1.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:367,Availability,down,downloadable,367,"ï»¿. Interface to DFTD3 by S. Grimme â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabula",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:847,Availability,error,error,847,"ï»¿. Interface to DFTD3 by S. Grimme â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabula",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:3438,Availability,avail,available,3438,"refined method, DFT-D3, [Grimme:2010:154104]; which incorporates an additional term in the dispersion; series and adjusts the combination formula and damping; function. The individual atomic are interpolated from; several reference values based upon coordination numbers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRE",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:3585,Availability,avail,available,3585,"mbination formula and damping; function. The individual atomic are interpolated from; several reference values based upon coordination numbers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variant",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:3967,Availability,redundant,redundant,3967,"nunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]No",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:4265,Availability,avail,available,4265,"characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. ",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:4346,Availability,avail,available,4346,"unning DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default param",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:643,Deployability,patch,patch,643,"ï»¿. Interface to DFTD3 by S. Grimme â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabula",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:1006,Deployability,patch,patch,1006,"â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabulated elemental; values, are summed ",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:1034,Deployability,patch,patching,1034,"â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabulated elemental; values, are summed ",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:1058,Deployability,patch,patching,1058,"â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabulated elemental; values, are summed ",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:3632,Deployability,install,installed,3632,"ers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:7555,Deployability,update,updated,7555,"eters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to supply; individual overrides in the presence of func. Returns energy if dertype is 0,; gradient if dertype is 1, else tuple of energy and gradient if dertype; unspecified. The dftd3 executable must be independently compiled and found in ; PATH. Table Of Contents. Interface to DFTD3 by S. Grimme; Installation; Theory; Running DFTD3. Previous topic; Interface to MRCC by M. KÃ¡llay; Next topic; Interface to Molden; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:1838,Energy Efficiency,energy,energy,1838,"ore building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabulated elemental; values, are summed over interatomic distances, , modulated; by a damping function, , that gradually activates; the dispersion correction (at a rate characterized by ); over a distance characterized by the sum of the two atomic vdW radii,; , while an overall scaling term, , is optimized; to be unique to each functional. ( is; sometimes allowed to vary as well.). (1). Grimme recently presented a refined method, DFT-D3, [Grimme:2010:154104]; which incorporates an additional term in the dispersion; series and adjusts the combination formula and damping; function. The individual atomic are interpolated from; several reference values based upon coordination numbers extracted from; the molecul",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:3867,Energy Efficiency,energy,energy,3867,"ome awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:3890,Energy Efficiency,energy,energy,3890,"ion. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5]",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:4045,Energy Efficiency,energy,energy,4045,"nunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]No",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:4127,Energy Efficiency,energy,energy,4127,"ced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:14",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:4144,Energy Efficiency,energy,energy,4144,"ced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:14",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:4163,Energy Efficiency,energy,energy,4163,"ced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:14",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:5313,Energy Efficiency,energy,energy,5313,"lt parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.18090",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:5643,Energy Efficiency,energy,energy,5643," alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.un",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:5969,Energy Efficiency,energy,energy,5969,"dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to supply; individual overrides in the presence of func. Returns energy if ",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:6938,Energy Efficiency,energy,energy,6938,"eters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to supply; individual overrides in the presence of func. Returns energy if dertype is 0,; gradient if dertype is 1, else tuple of energy and gradient if dertype; unspecified. The dftd3 executable must be independently compiled and found in ; PATH. Table Of Contents. Interface to DFTD3 by S. Grimme; Installation; Theory; Running DFTD3. Previous topic; Interface to MRCC by M. KÃ¡llay; Next topic; Interface to Molden; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:7003,Energy Efficiency,energy,energy,7003,"eters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to supply; individual overrides in the presence of func. Returns energy if dertype is 0,; gradient if dertype is 1, else tuple of energy and gradient if dertype; unspecified. The dftd3 executable must be independently compiled and found in ; PATH. Table Of Contents. Interface to DFTD3 by S. Grimme; Installation; Theory; Running DFTD3. Previous topic; Interface to MRCC by M. KÃ¡llay; Next topic; Interface to Molden; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:305,Integrability,interface,interface,305,"ï»¿. Interface to DFTD3 by S. Grimme â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Interfaces: Enhancing PSI4 Capabilities Â». Interface to DFTD3 by S. GrimmeÂ¶; Code author: Lori A. Burns; Section author: Lori A. Burns; PSI4 contains code to interface to the DFTD3 program of S. Grimme, which is freely; downloadable from http://toc.uni-muenster.de/DFTD3/). InstallationÂ¶; Follow the instructions provided with the source to build the DFTD3; program (essentially, unpack the source, edit the Makefile to select a; Fortran compiler, and run make). For the moment, you must apply a patch,; psi4/lib/scripts/patch_grimme_dftd3, to the dftd3 source before building.; To be used by PSI4, the program binary (dftd3) must be found in; your PATH. If PSI4 is unable to execute the binary, an; error will be reported.; >>> cd dftd3; >>> ls; dftd3.tar; patch_grimme_dftd3; >>> tar -xvf dftd3.tar; copyc6.f; dftd3.f; Makefile; man.pdf; pars.f; param; >>> patch < patch_grimme_dftd3; patching file Makefile; patching file dftd3.f; >>> make; making dftd3.o from dftd3.f; gfortran -O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabula",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:3659,Integrability,interface,interface,3659,"ers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:3710,Integrability,interface,interfaced,3710,"ers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:5876,Integrability,interface,interface,5876,", , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to su",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:5927,Integrability,rout,route,5927,"dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. run_dftd3(self, func=None, dashlvl=None, dashparam=None, dertype=None)[source]Â¶; Function to call Grimmeâs dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to supply; individual overrides in the presence of func. Returns energy if ",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:4388,Modifiability,variab,variable,4388,"unning DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default param",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:2293,Performance,optimiz,optimized,2293,"O -c dftd3.f -o dftd3.o; making copyc6.o from copyc6.f; gfortran -O -c copyc6.f -o copyc6.o; gfortran dftd3.o copyc6.o -o ./dftd3; >>> ls; Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3; copyc6.f dftd3 dftd3.o man.pdf pars.f. TheoryÂ¶; The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515] and assiduously developed by Grimme, [Grimme:2004:1463]; [Grimme:2006:1787] [Grimme:2010:154104] the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, . The DFT-D2 [Grimme:2006:1787] variant; takes the explicit form below. Here, dispersion coefficients,; , obtained from the geometric mean of tabulated elemental; values, are summed over interatomic distances, , modulated; by a damping function, , that gradually activates; the dispersion correction (at a rate characterized by ); over a distance characterized by the sum of the two atomic vdW radii,; , while an overall scaling term, , is optimized; to be unique to each functional. ( is; sometimes allowed to vary as well.). (1). Grimme recently presented a refined method, DFT-D3, [Grimme:2010:154104]; which incorporates an additional term in the dispersion; series and adjusts the combination formula and damping; function. The individual atomic are interpolated from; several reference values based upon coordination numbers extracted from; the molecular structure, rather than assigned solely by atomic identity as; in DFT-D2, and thereby incorporate some awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson wa",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:5340,Performance,optimiz,optimization,5340,"calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> ",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:5378,Performance,optimiz,optimize,5378,"calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> ",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:5407,Performance,optimiz,optimization,5407," the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:5484,Performance,optimiz,optimize,5484," see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); energy('bp86-d'). DFT-D3BJ optimization with default parameters; optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:3967,Safety,redund,redundant,3967,"nunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO; Â . -D3ZERO; -D3 [4] w/ original zero-damping through dftd3; [, , , ]. -D3BJ; -D3 [5] w/ newer Becke-Johnson rational damping through dftd3; [, , , ]. Footnotes. [1]No",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dftd3.html:3856,Usability,simpl,simple,3856,"ome awareness of the chemical; environment into an otherwise largely heuristic correction. The -D3; dispersion has the following form, where and ; are the customary nonunity parameters fitted for individual functionals. (2). A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]. The parameters; fit for individual functionals are now , ,; , and . All parameters characterizing the dispersion correction are taken from; http://toc.uni-muenster.de/DFTD3/; or else from the literature. Running DFTD3Â¶; A number of a posteriori dispersion corrections are available in; PSI4. While most are computed within PSI4âs codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of S. Grimmeâs -D correction. Extension [1]; Variant and Computing Program; DFT_DISPERSION_PARAMETERS. -D; alias to -D2P4; Â . -D1; -D1 [2] within PSI4; Â . -D2; alias to -D2P4; Â . -D2P4; -D2 [3] within PSI4; []. -D2GR; -D2 [3] through dftd3; [, ]. -D3; alias to -D3ZERO",MatchSource.WIKI,psi4manual/4.0b4/dftd3.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dftd3.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html:195,Availability,avail,available,195,ï»¿. DFT Functionals â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». DFT FunctionalsÂ¶. All AvailableÂ¶. DFT functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. B2PLYP; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; â; â. B2PLYP-D; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D2; Grimmeâs -D2 Dispersion Correction. B2PLYP-D3; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B2PLYP-D3BJ; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. B3LYP; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; â; â. B3LYP-CHG; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. B3LYP-D; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -D2; Grimmeâs -D2 Dispersion Correction. B3LYP-D1; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -D1; Grimmeâs -D1 Dispersion Correction. B3LYP-D3; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B3LYP-D3BJ; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. B3_X; Becke88 GGA Exchange (B3LYP weighting); Y; â; â; â; â; â; â; â; â. B88_X; Becke88 GGA Exchange; Y; â; â; â; â; â; â; â; â. B97-0; B97-0 Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.194300; â; â; â; â; â. B97-1; B97-1 Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.210000; â; â; â; â; â. B97-2; B97-2 ,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html:9769,Availability,avail,available,9769,GA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; Y; â; 0.200000; 0.222036; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. wBLYP; BLYP SR-XC Functional (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBE; PBE SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBE0; PBE0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBE_X; PBE Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBEsol; PBEsol SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBEsol0; PBEsol0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBEsol_X; PBEsol Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wSVWN; LSDA SR-XC Functional; â; â; 0.300000; â; â; â; â; â; â. wS_X; Slater Short-Range LSDA Exchange; â; â; 0.300000; â; â; â; â; â; â. GGAÂ¶. GGA functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. B2PLYP; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; â; â. B2PLYP-D; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D2; Grimmeâs -D2 Dispersion Correction. B2PLYP-D3; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B2PLYP-D3BJ; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. B3LYP; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; â; â. B3LYP-CHG; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. B3LYP-D; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html:18657,Availability,avail,available,18657,l (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; Y; â; 0.200000; 0.222036; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. wBLYP; BLYP SR-XC Functional (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBE; PBE SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBE0; PBE0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBE_X; PBE Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBEsol; PBEsol SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBEsol0; PBEsol0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBEsol_X; PBEsol Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. MetaÂ¶. Meta functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. M05; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.280000; â; â; â; â; â. M05-2X; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.560000; â; â; â; â; â. M05-2X-D3; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.560000; â; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. M05-D3; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.280000; â; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. dlDF; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; â; â. dlDF+D; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2010; Podeszwa and Szalewicz Dispersion Correction. dlDF+D09; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2009; Podeszwa and Szalewicz Dispersion Correction. Long-Ran,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html:19705,Availability,avail,available,19705,A?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. M05; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.280000; â; â; â; â; â. M05-2X; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.560000; â; â; â; â; â. M05-2X-D3; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.560000; â; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. M05-D3; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.280000; â; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. dlDF; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; â; â. dlDF+D; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2010; Podeszwa and Szalewicz Dispersion Correction. dlDF+D09; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2009; Podeszwa and Szalewicz Dispersion Correction. Long-Range CorrectedÂ¶. Long-Range-Corrected functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. wB88_X; B88 Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wB97; Parameterized LRC B97 GGA XC Functional; Y; â; 0.400000; â; â; â; â; â; â. wB97X; Parameterized Hybrid LRC B97 GGA XC Functional; Y; â; 0.400000; 0.157706; â; â; â; â; â. wB97X-2(LP); Double Hybrid LRC B97 GGA XC Functional (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; Y; â; 0.200000; 0.222036; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. wBLYP; BLYP SR-XC Functional (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBE; PBE SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â;,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html:21299,Availability,avail,available,21299, Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; Y; â; 0.200000; 0.222036; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. wBLYP; BLYP SR-XC Functional (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBE; PBE SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBE0; PBE0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBE_X; PBE Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBEsol; PBEsol SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBEsol0; PBEsol0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBEsol_X; PBEsol Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wSVWN; LSDA SR-XC Functional; â; â; 0.300000; â; â; â; â; â; â. wS_X; Slater Short-Range LSDA Exchange; â; â; 0.300000; â; â; â; â; â; â. HybridÂ¶. Hybrid functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. B2PLYP; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; â; â. B2PLYP-D; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D2; Grimmeâs -D2 Dispersion Correction. B2PLYP-D3; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B2PLYP-D3BJ; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. B3LYP; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; â; â. B3LYP-CHG; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. B3LYP-D; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; ,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html:26148,Availability,avail,available,26148,-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2010; Podeszwa and Szalewicz Dispersion Correction. dlDF+D09; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2009; Podeszwa and Szalewicz Dispersion Correction. wB97X; Parameterized Hybrid LRC B97 GGA XC Functional; Y; â; 0.400000; 0.157706; â; â; â; â; â. wB97X-2(LP); Double Hybrid LRC B97 GGA XC Functional (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; Y; â; 0.200000; 0.222036; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. wPBE0; PBE0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBEsol0; PBEsol0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. Double-HybridÂ¶. Double-Hybrid functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. B2PLYP; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; â; â. B2PLYP-D; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D2; Grimmeâs -D2 Dispersion Correction. B2PLYP-D3; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B2PLYP-D3BJ; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. DSD-BLYP; DSD-BLYP Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.710000; â; 1.000000; 0.430000 / 0.460000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEP86; DSD-PBEP86 Dispersion-corrected SCS Double Hybrid XC Functional (opt. for -D2); Y; â; â; 0.680000; â; 1.000000; 0.23,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html:27837,Availability,avail,available,27837,ing) Dispersion Correction. DSD-BLYP; DSD-BLYP Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.710000; â; 1.000000; 0.430000 / 0.460000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEP86; DSD-PBEP86 Dispersion-corrected SCS Double Hybrid XC Functional (opt. for -D2); Y; â; â; 0.680000; â; 1.000000; 0.230000 / 0.510000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEPBE; DSD-PBEPBE Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.660000; â; 1.000000; 0.120000 / 0.530000; -D2; Grimmeâs -D2 Dispersion Correction. PBE0-2; PBE0-2 Double Hydrid Exchange-Correlation Functional; Y; â; â; 0.793701; â; 0.500000; â; â; â. wB97X-2(LP); Double Hybrid LRC B97 GGA XC Functional (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. SCS Double-HybridÂ¶. Spin-Component-Scaled Double-Hybrid functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. DSD-BLYP; DSD-BLYP Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.710000; â; 1.000000; 0.430000 / 0.460000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEP86; DSD-PBEP86 Dispersion-corrected SCS Double Hybrid XC Functional (opt. for -D2); Y; â; â; 0.680000; â; 1.000000; 0.230000 / 0.510000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEPBE; DSD-PBEPBE Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.660000; â; 1.000000; 0.120000 / 0.530000; -D2; Grimmeâs -D2 Dispersion Correction. wB97X-2(LP); Double Hybrid LRC B97 GGA XC Functional (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. Dispersion-CorrectedÂ¶. Dispe,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html:28850,Availability,avail,available,28850,able in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. DSD-BLYP; DSD-BLYP Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.710000; â; 1.000000; 0.430000 / 0.460000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEP86; DSD-PBEP86 Dispersion-corrected SCS Double Hybrid XC Functional (opt. for -D2); Y; â; â; 0.680000; â; 1.000000; 0.230000 / 0.510000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEPBE; DSD-PBEPBE Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.660000; â; 1.000000; 0.120000 / 0.530000; -D2; Grimmeâs -D2 Dispersion Correction. wB97X-2(LP); Double Hybrid LRC B97 GGA XC Functional (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. Dispersion-CorrectedÂ¶. Dispersion-Corrected functionals available in PSI4. Name; Description; S6; S8; SR6; ALPHA6; A1; A2; Dispersion?; Dispersion Description. B2PLYP-D; B2PLYP Double Hybrid Exchange-Correlation Functional; 0.55000; â; â; 20.00000; â; â; -D2; Grimmeâs -D2 Dispersion Correction. B2PLYP-D3; B2PLYP Double Hybrid Exchange-Correlation Functional; 0.64000; 1.02200; 1.42700; 14.00000; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B2PLYP-D3BJ; B2PLYP Double Hybrid Exchange-Correlation Functional; 0.64000; 0.91470; â; â; 0.30650; 5.05700; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. B3LYP-CHG; B3LYP Hybrid-GGA Exchange-Correlation Functional; 1.00000; â; â; 6.00000; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. B3LYP-D; B3LYP Hybrid-GGA Exchange-Correlation Functional; 1.05000; â; â; 20.00000; â; â; -D2; Grimmeâs -D2 Dispersion Correction. B3LYP-D1; B3LYP Hybrid-GGA Exchange-Correlation Functional; 1.05000; â; â; 23.00000; â; â; -D1; Grimmeâs -D1 Dispersion Correction. B3LYP-D3; B3LYP,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html:34768,Deployability,update,updated,34768,"00; 1.37300; 14.00000; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. PBE-D; PBE GGA Exchange-Correlation Functional; 0.75000; â; â; 20.00000; â; â; -D2; Grimmeâs -D2 Dispersion Correction. PBE-D1; PBE GGA Exchange-Correlation Functional; 0.75000; â; â; 23.00000; â; â; -D1; Grimmeâs -D1 Dispersion Correction. PBE-D3; PBE GGA Exchange-Correlation Functional; 1.00000; 0.72200; 1.21700; 14.00000; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. PBE-D3BJ; PBE GGA Exchange-Correlation Functional; 1.00000; 0.78750; â; â; 0.42890; 4.44070; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. PBE0-D; PBE0 Hybrid GGA Exchange-Correlation Functional; 0.60000; â; â; 20.00000; â; â; -D2; Grimmeâs -D2 Dispersion Correction. PBE0-D3; PBE0 Hybrid GGA Exchange-Correlation Functional; 1.00000; 0.92800; 1.28700; 14.00000; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. PBE0-D3BJ; PBE0 Hybrid GGA Exchange-Correlation Functional; 1.00000; 1.21770; â; â; 0.41450; 4.85930; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. dlDF+D; Dispersionless Hybrid Meta-GGA XC Functional; 1.00000; â; â; â; â; â; -DAS2010; Podeszwa and Szalewicz Dispersion Correction. dlDF+D09; Dispersionless Hybrid Meta-GGA XC Functional; 1.00000; â; â; â; â; â; -DAS2009; Podeszwa and Szalewicz Dispersion Correction. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; 1.00000; â; 0.25330; 6.00000; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. Table Of Contents. DFT Functionals; All Available; GGA; Meta; Long-Range Corrected; Hybrid; Double-Hybrid; SCS Double-Hybrid; Dispersion-Corrected. Previous topic; <no title>; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 06, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional-1.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html:195,Availability,avail,available,195,ï»¿. DFT Functionals â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». DFT FunctionalsÂ¶. All AvailableÂ¶. DFT functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. B2PLYP; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; â; â. B2PLYP-D; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D2; Grimmeâs -D2 Dispersion Correction. B2PLYP-D3; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B2PLYP-D3BJ; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. B3LYP; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; â; â. B3LYP-CHG; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. B3LYP-D; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -D2; Grimmeâs -D2 Dispersion Correction. B3LYP-D1; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -D1; Grimmeâs -D1 Dispersion Correction. B3LYP-D3; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B3LYP-D3BJ; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. B3_X; Becke88 GGA Exchange (B3LYP weighting); Y; â; â; â; â; â; â; â; â. B88_X; Becke88 GGA Exchange; Y; â; â; â; â; â; â; â; â. B97-0; B97-0 Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.194300; â; â; â; â; â. B97-1; B97-1 Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.210000; â; â; â; â; â. B97-2; B97-2 ,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html:9769,Availability,avail,available,9769,GA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; Y; â; 0.200000; 0.222036; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. wBLYP; BLYP SR-XC Functional (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBE; PBE SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBE0; PBE0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBE_X; PBE Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBEsol; PBEsol SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBEsol0; PBEsol0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBEsol_X; PBEsol Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wSVWN; LSDA SR-XC Functional; â; â; 0.300000; â; â; â; â; â; â. wS_X; Slater Short-Range LSDA Exchange; â; â; 0.300000; â; â; â; â; â; â. GGAÂ¶. GGA functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. B2PLYP; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; â; â. B2PLYP-D; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D2; Grimmeâs -D2 Dispersion Correction. B2PLYP-D3; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B2PLYP-D3BJ; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. B3LYP; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; â; â. B3LYP-CHG; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. B3LYP-D; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html:18657,Availability,avail,available,18657,l (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; Y; â; 0.200000; 0.222036; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. wBLYP; BLYP SR-XC Functional (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBE; PBE SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBE0; PBE0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBE_X; PBE Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBEsol; PBEsol SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBEsol0; PBEsol0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBEsol_X; PBEsol Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. MetaÂ¶. Meta functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. M05; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.280000; â; â; â; â; â. M05-2X; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.560000; â; â; â; â; â. M05-2X-D3; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.560000; â; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. M05-D3; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.280000; â; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. dlDF; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; â; â. dlDF+D; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2010; Podeszwa and Szalewicz Dispersion Correction. dlDF+D09; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2009; Podeszwa and Szalewicz Dispersion Correction. Long-Ran,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html:19705,Availability,avail,available,19705,A?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. M05; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.280000; â; â; â; â; â. M05-2X; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.560000; â; â; â; â; â. M05-2X-D3; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.560000; â; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. M05-D3; Heavily Parameterized Hybrid Meta-GGA XC Functional; Y; Y; â; 0.280000; â; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. dlDF; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; â; â. dlDF+D; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2010; Podeszwa and Szalewicz Dispersion Correction. dlDF+D09; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2009; Podeszwa and Szalewicz Dispersion Correction. Long-Range CorrectedÂ¶. Long-Range-Corrected functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. wB88_X; B88 Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wB97; Parameterized LRC B97 GGA XC Functional; Y; â; 0.400000; â; â; â; â; â; â. wB97X; Parameterized Hybrid LRC B97 GGA XC Functional; Y; â; 0.400000; 0.157706; â; â; â; â; â. wB97X-2(LP); Double Hybrid LRC B97 GGA XC Functional (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; Y; â; 0.200000; 0.222036; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. wBLYP; BLYP SR-XC Functional (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBE; PBE SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â;,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html:21299,Availability,avail,available,21299, Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; Y; â; 0.200000; 0.222036; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. wBLYP; BLYP SR-XC Functional (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBE; PBE SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBE0; PBE0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBE_X; PBE Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wPBEsol; PBEsol SR-XC Functional (HJS Model); Y; â; 0.400000; â; â; â; â; â; â. wPBEsol0; PBEsol0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBEsol_X; PBEsol Short-Range GGA Exchange (HJS Model); Y; â; 0.300000; â; â; â; â; â; â. wSVWN; LSDA SR-XC Functional; â; â; 0.300000; â; â; â; â; â; â. wS_X; Slater Short-Range LSDA Exchange; â; â; 0.300000; â; â; â; â; â; â. HybridÂ¶. Hybrid functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. B2PLYP; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; â; â. B2PLYP-D; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D2; Grimmeâs -D2 Dispersion Correction. B2PLYP-D3; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B2PLYP-D3BJ; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. B3LYP; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; â; â. B3LYP-CHG; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; 0.200000; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. B3LYP-D; B3LYP Hybrid-GGA Exchange-Correlation Functional; Y; â; â; ,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html:26148,Availability,avail,available,26148,-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2010; Podeszwa and Szalewicz Dispersion Correction. dlDF+D09; Dispersionless Hybrid Meta-GGA XC Functional; Y; Y; â; 0.614413; â; â; â; -DAS2009; Podeszwa and Szalewicz Dispersion Correction. wB97X; Parameterized Hybrid LRC B97 GGA XC Functional; Y; â; 0.400000; 0.157706; â; â; â; â; â. wB97X-2(LP); Double Hybrid LRC B97 GGA XC Functional (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; Y; â; 0.200000; 0.222036; â; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. wPBE0; PBE0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. wPBEsol0; PBEsol0 SR-XC Functional (HJS Model); Y; â; 0.300000; 0.250000; â; â; â; â; â. Double-HybridÂ¶. Double-Hybrid functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. B2PLYP; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; â; â. B2PLYP-D; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D2; Grimmeâs -D2 Dispersion Correction. B2PLYP-D3; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B2PLYP-D3BJ; B2PLYP Double Hybrid Exchange-Correlation Functional; Y; â; â; 0.530000; â; 0.270000; â; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. DSD-BLYP; DSD-BLYP Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.710000; â; 1.000000; 0.430000 / 0.460000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEP86; DSD-PBEP86 Dispersion-corrected SCS Double Hybrid XC Functional (opt. for -D2); Y; â; â; 0.680000; â; 1.000000; 0.23,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html:27837,Availability,avail,available,27837,ing) Dispersion Correction. DSD-BLYP; DSD-BLYP Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.710000; â; 1.000000; 0.430000 / 0.460000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEP86; DSD-PBEP86 Dispersion-corrected SCS Double Hybrid XC Functional (opt. for -D2); Y; â; â; 0.680000; â; 1.000000; 0.230000 / 0.510000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEPBE; DSD-PBEPBE Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.660000; â; 1.000000; 0.120000 / 0.530000; -D2; Grimmeâs -D2 Dispersion Correction. PBE0-2; PBE0-2 Double Hydrid Exchange-Correlation Functional; Y; â; â; 0.793701; â; 0.500000; â; â; â. wB97X-2(LP); Double Hybrid LRC B97 GGA XC Functional (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. SCS Double-HybridÂ¶. Spin-Component-Scaled Double-Hybrid functionals available in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. DSD-BLYP; DSD-BLYP Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.710000; â; 1.000000; 0.430000 / 0.460000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEP86; DSD-PBEP86 Dispersion-corrected SCS Double Hybrid XC Functional (opt. for -D2); Y; â; â; 0.680000; â; 1.000000; 0.230000 / 0.510000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEPBE; DSD-PBEPBE Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.660000; â; 1.000000; 0.120000 / 0.530000; -D2; Grimmeâs -D2 Dispersion Correction. wB97X-2(LP); Double Hybrid LRC B97 GGA XC Functional (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. Dispersion-CorrectedÂ¶. Dispe,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html:28850,Availability,avail,available,28850,able in PSI4. Name; Description; GGA?; Meta?; X_LRC?; X_Hybrid?; C_LRC?; C_Hybrid?; C_SCS? SS/OS; Dispersion?; Dispersion Description. DSD-BLYP; DSD-BLYP Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.710000; â; 1.000000; 0.430000 / 0.460000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEP86; DSD-PBEP86 Dispersion-corrected SCS Double Hybrid XC Functional (opt. for -D2); Y; â; â; 0.680000; â; 1.000000; 0.230000 / 0.510000; -D2; Grimmeâs -D2 Dispersion Correction. DSD-PBEPBE; DSD-PBEPBE Dispersion-corrected SCS Double Hybrid XC Functional; Y; â; â; 0.660000; â; 1.000000; 0.120000 / 0.530000; -D2; Grimmeâs -D2 Dispersion Correction. wB97X-2(LP); Double Hybrid LRC B97 GGA XC Functional (Large Pople parametrization); Y; â; 0.300000; 0.678792; â; 1.000000; 0.581569 / 0.477992; â; â. wB97X-2(TQZ); Double Hybrid LRC B97 GGA XC Functional (TQZ parametrization); Y; â; 0.300000; 0.636158; â; 1.000000; 0.529319 / 0.447105; â; â. Dispersion-CorrectedÂ¶. Dispersion-Corrected functionals available in PSI4. Name; Description; S6; S8; SR6; ALPHA6; A1; A2; Dispersion?; Dispersion Description. B2PLYP-D; B2PLYP Double Hybrid Exchange-Correlation Functional; 0.55000; â; â; 20.00000; â; â; -D2; Grimmeâs -D2 Dispersion Correction. B2PLYP-D3; B2PLYP Double Hybrid Exchange-Correlation Functional; 0.64000; 1.02200; 1.42700; 14.00000; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. B2PLYP-D3BJ; B2PLYP Double Hybrid Exchange-Correlation Functional; 0.64000; 0.91470; â; â; 0.30650; 5.05700; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. B3LYP-CHG; B3LYP Hybrid-GGA Exchange-Correlation Functional; 1.00000; â; â; 6.00000; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. B3LYP-D; B3LYP Hybrid-GGA Exchange-Correlation Functional; 1.05000; â; â; 20.00000; â; â; -D2; Grimmeâs -D2 Dispersion Correction. B3LYP-D1; B3LYP Hybrid-GGA Exchange-Correlation Functional; 1.05000; â; â; 23.00000; â; â; -D1; Grimmeâs -D1 Dispersion Correction. B3LYP-D3; B3LYP,MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html
https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html:34768,Deployability,update,updated,34768,"00; 1.37300; 14.00000; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. PBE-D; PBE GGA Exchange-Correlation Functional; 0.75000; â; â; 20.00000; â; â; -D2; Grimmeâs -D2 Dispersion Correction. PBE-D1; PBE GGA Exchange-Correlation Functional; 0.75000; â; â; 23.00000; â; â; -D1; Grimmeâs -D1 Dispersion Correction. PBE-D3; PBE GGA Exchange-Correlation Functional; 1.00000; 0.72200; 1.21700; 14.00000; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. PBE-D3BJ; PBE GGA Exchange-Correlation Functional; 1.00000; 0.78750; â; â; 0.42890; 4.44070; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. PBE0-D; PBE0 Hybrid GGA Exchange-Correlation Functional; 0.60000; â; â; 20.00000; â; â; -D2; Grimmeâs -D2 Dispersion Correction. PBE0-D3; PBE0 Hybrid GGA Exchange-Correlation Functional; 1.00000; 0.92800; 1.28700; 14.00000; â; â; -D3ZERO; Grimmeâs -D3 (zero-damping) Dispersion Correction. PBE0-D3BJ; PBE0 Hybrid GGA Exchange-Correlation Functional; 1.00000; 1.21770; â; â; 0.41450; 4.85930; -D3BJ; Grimmeâs -D3 (BJ-damping) Dispersion Correction. dlDF+D; Dispersionless Hybrid Meta-GGA XC Functional; 1.00000; â; â; â; â; â; -DAS2010; Podeszwa and Szalewicz Dispersion Correction. dlDF+D09; Dispersionless Hybrid Meta-GGA XC Functional; 1.00000; â; â; â; â; â; -DAS2009; Podeszwa and Szalewicz Dispersion Correction. wB97X-D; Parameterized Hybrid LRC B97 GGA XC Functional with Dispersion; 1.00000; â; 0.25330; 6.00000; â; â; -CHG; Chai and Head-Gordon Dispersion Correction. Table Of Contents. DFT Functionals; All Available; GGA; Meta; Long-Range Corrected; Hybrid; Double-Hybrid; SCS Double-Hybrid; Dispersion-Corrected. Previous topic; <no title>; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 06, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/dft_byfunctional.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/dft_byfunctional.html
https://psicode.org/psi4manual/4.0b4/diatomic-1.html:665,Availability,error,error,665,"ï»¿. Spectroscopic Constants for Diatomics â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Spectroscopic Constants for DiatomicsÂ¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]Â¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) â The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) â The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: âreâ, âr0â, âweâ, âwexeâ, ânuâ, âZPVE(harmonic)â, âZPVE(anharmonic)â, âBeâ, âB0â, âaeâ, âDeâ; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/diatomic-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/diatomic-1.html
https://psicode.org/psi4manual/4.0b4/diatomic-1.html:1532,Deployability,update,updated,1532,"ï»¿. Spectroscopic Constants for Diatomics â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Spectroscopic Constants for DiatomicsÂ¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]Â¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) â The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) â The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: âreâ, âr0â, âweâ, âwexeâ, ânuâ, âZPVE(harmonic)â, âZPVE(anharmonic)â, âBeâ, âB0â, âaeâ, âDeâ; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/diatomic-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/diatomic-1.html
https://psicode.org/psi4manual/4.0b4/diatomic-1.html:409,Energy Efficiency,energy,energy,409,"ï»¿. Spectroscopic Constants for Diatomics â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Spectroscopic Constants for DiatomicsÂ¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]Â¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) â The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) â The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: âreâ, âr0â, âweâ, âwexeâ, ânuâ, âZPVE(harmonic)â, âZPVE(anharmonic)â, âBeâ, âB0â, âaeâ, âDeâ; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/diatomic-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/diatomic-1.html
https://psicode.org/psi4manual/4.0b4/diatomic-1.html:485,Energy Efficiency,energy,energy,485,"ï»¿. Spectroscopic Constants for Diatomics â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Spectroscopic Constants for DiatomicsÂ¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]Â¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) â The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) â The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: âreâ, âr0â, âweâ, âwexeâ, ânuâ, âZPVE(harmonic)â, âZPVE(anharmonic)â, âBeâ, âB0â, âaeâ, âDeâ; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/diatomic-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/diatomic-1.html
https://psicode.org/psi4manual/4.0b4/diatomic-1.html:645,Energy Efficiency,energy,energy,645,"ï»¿. Spectroscopic Constants for Diatomics â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Spectroscopic Constants for DiatomicsÂ¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]Â¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) â The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) â The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: âreâ, âr0â, âweâ, âwexeâ, ânuâ, âZPVE(harmonic)â, âZPVE(anharmonic)â, âBeâ, âB0â, âaeâ, âDeâ; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/diatomic-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/diatomic-1.html
https://psicode.org/psi4manual/4.0b4/diatomic.html:665,Availability,error,error,665,"ï»¿. Spectroscopic Constants for Diatomics â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Spectroscopic Constants for DiatomicsÂ¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]Â¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) â The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) â The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: âreâ, âr0â, âweâ, âwexeâ, ânuâ, âZPVE(harmonic)â, âZPVE(anharmonic)â, âBeâ, âB0â, âaeâ, âDeâ; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/diatomic.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/diatomic.html
https://psicode.org/psi4manual/4.0b4/diatomic.html:1532,Deployability,update,updated,1532,"ï»¿. Spectroscopic Constants for Diatomics â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Spectroscopic Constants for DiatomicsÂ¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]Â¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) â The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) â The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: âreâ, âr0â, âweâ, âwexeâ, ânuâ, âZPVE(harmonic)â, âZPVE(anharmonic)â, âBeâ, âB0â, âaeâ, âDeâ; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/diatomic.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/diatomic.html
https://psicode.org/psi4manual/4.0b4/diatomic.html:409,Energy Efficiency,energy,energy,409,"ï»¿. Spectroscopic Constants for Diatomics â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Spectroscopic Constants for DiatomicsÂ¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]Â¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) â The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) â The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: âreâ, âr0â, âweâ, âwexeâ, ânuâ, âZPVE(harmonic)â, âZPVE(anharmonic)â, âBeâ, âB0â, âaeâ, âDeâ; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/diatomic.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/diatomic.html
https://psicode.org/psi4manual/4.0b4/diatomic.html:485,Energy Efficiency,energy,energy,485,"ï»¿. Spectroscopic Constants for Diatomics â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Spectroscopic Constants for DiatomicsÂ¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]Â¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) â The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) â The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: âreâ, âr0â, âweâ, âwexeâ, ânuâ, âZPVE(harmonic)â, âZPVE(anharmonic)â, âBeâ, âB0â, âaeâ, âDeâ; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/diatomic.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/diatomic.html
https://psicode.org/psi4manual/4.0b4/diatomic.html:645,Energy Efficiency,energy,energy,645,"ï»¿. Spectroscopic Constants for Diatomics â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Spectroscopic Constants for DiatomicsÂ¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]Â¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) â The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) â The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: âreâ, âr0â, âweâ, âwexeâ, ânuâ, âZPVE(harmonic)â, âZPVE(anharmonic)â, âBeâ, âB0â, âaeâ, âDeâ; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/diatomic.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/diatomic.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:276,Availability,avail,available,276,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:2964,Availability,avail,availibility,2964,"lowing files, respectively.; build/html/index.html; build/html-user/index.html; build/html-prog/index.html; build/latex-prog/psi4_userman.pdf; build/latex-prog/psi4_progman.pdf. Much of the documentation is auto-generated from the source. At present,; this covers:. Physical Constants: psi4/include/physconst.h; Python Driver: docstrings from *.py files in psi4/lib/python; Databases: docstrings from *.py files in psi4/lib/databases; Basis Sets: *.gbs files in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments in the C++ code; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStru",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:3870,Availability,avail,available,3870,"e. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the two former, math has traditionally; been written in LaTeX (with the special substitution @@ for; subscripting underscore). The autodoc script has been trained to convert; inline LaTeX math to reST math, provided the expression within dollar; signs is offset fr",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:375,Deployability,release,release,375,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:724,Deployability,install,installed,724,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:749,Deployability,install,installation,749,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:992,Deployability,install,install,992,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:1185,Deployability,install,install,1185,"tionÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html; build/html-user/index.html; build/html-prog/index.html; build/latex-prog/psi4_userman.pdf; build/latex-prog/psi4_progman.pdf. Much of the documentation is auto-generated from the sour",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:6978,Deployability,update,updated,6978," are absorbed as-is, so; please use reST math formatting (essentially $latex math$ ; :math:`latex math`). The Map of the SphinxÂ¶. Adding a new Appendix or First-TOC-Level page; Create your reST file and fill it with information. Add the name of your; file to psi4/doc/sphinxman/source/template_appendices.rst for an; appendix or to psi4/doc/sphinxman/source/template_index.rst for a; first-TOC-level. Consider the ##### lines to be like preprocessor; directives that separate user and programmer manuals. Finally, add your; file to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; page. Adding a new module to âTheoretical Methodsâ; Copy the file of a well-established module, like; psi4/doc/sphinxman/source/sapt.rst. Change the title, author, sec; label, ref, and source labels at the top of the file to point instead to; your code. Edit psi4/doc/sphinxman/source/methods.rst to add the; name of your file so that it will appear in the TOC tree. Add your file; to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; file. Follow the models in existing methods pages to write your; documentation. If you donât get all the keyword links, bibliography; links, sample inputs, math, tables, etc. working in Sphinx, donât worry; about it. A genie will probably come through and tidy up all your; source. Table Of Contents. Documentation; Installing Sphinx; Documentation Structure; reStructuredText; Math in the Codebase; The Map of the Sphinx. Previous topic; Best Practices for Python Functions; Next topic; PsiPEP: Plans and Practices to Organize PSI4; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:1638,Integrability,depend,depending,1638,"uild the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html; build/html-user/index.html; build/html-prog/index.html; build/latex-prog/psi4_userman.pdf; build/latex-prog/psi4_progman.pdf. Much of the documentation is auto-generated from the source. At present,; this covers:. Physical Constants: psi4/include/physconst.h; Python Driver: docstrings from *.py files in psi4/lib/python; Databases: docstrings from *.py files in psi4/lib/databases; Basis Sets: *.gbs files in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments i",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:3387,Integrability,depend,dependency,3387,"in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments in the C++ code; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/ps",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:3576,Integrability,depend,dependencies,3576,"e; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the t",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:3632,Integrability,depend,depend,3632,"e; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the t",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:2682,Modifiability,plugin,plugin,2682,"IR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html; build/html-user/index.html; build/html-prog/index.html; build/latex-prog/psi4_userman.pdf; build/latex-prog/psi4_progman.pdf. Much of the documentation is auto-generated from the source. At present,; this covers:. Physical Constants: psi4/include/physconst.h; Python Driver: docstrings from *.py files in psi4/lib/python; Databases: docstrings from *.py files in psi4/lib/databases; Basis Sets: *.gbs files in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments in the C++ code; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, ru",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:3607,Modifiability,variab,variables,3607,"e; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the t",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:5581,Modifiability,variab,variable,5581,"rs.); For the two former, math has traditionally; been written in LaTeX (with the special substitution @@ for; subscripting underscore). The autodoc script has been trained to convert; inline LaTeX math to reST math, provided the expression within dollar; signs is offset from other text. That is, expressions of the form; ^ $latex math$[., ]$ (pseudo-regex) are good, while H$_2$O and LaTeX tables; are not translated correctly. Python docstrings are absorbed as-is, so; please use reST math formatting (essentially $latex math$ ; :math:`latex math`). The Map of the SphinxÂ¶. Adding a new Appendix or First-TOC-Level page; Create your reST file and fill it with information. Add the name of your; file to psi4/doc/sphinxman/source/template_appendices.rst for an; appendix or to psi4/doc/sphinxman/source/template_index.rst for a; first-TOC-level. Consider the ##### lines to be like preprocessor; directives that separate user and programmer manuals. Finally, add your; file to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; page. Adding a new module to âTheoretical Methodsâ; Copy the file of a well-established module, like; psi4/doc/sphinxman/source/sapt.rst. Change the title, author, sec; label, ref, and source labels at the top of the file to point instead to; your code. Edit psi4/doc/sphinxman/source/methods.rst to add the; name of your file so that it will appear in the TOC tree. Add your file; to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; file. Follow the models in existing methods pages to write your; documentation. If you donât get all the keyword links, bibliography; links, sample inputs, math, tables, etc. working in Sphinx, donât worry; about it. A genie will probably come through and tidy up all your; source. Table Of Contents. Documentation; Installing Sphinx; Documentation Structure; reStructuredText; Math in the Codebase; The Map of th",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:6078,Modifiability,variab,variable,6078," are absorbed as-is, so; please use reST math formatting (essentially $latex math$ ; :math:`latex math`). The Map of the SphinxÂ¶. Adding a new Appendix or First-TOC-Level page; Create your reST file and fill it with information. Add the name of your; file to psi4/doc/sphinxman/source/template_appendices.rst for an; appendix or to psi4/doc/sphinxman/source/template_index.rst for a; first-TOC-level. Consider the ##### lines to be like preprocessor; directives that separate user and programmer manuals. Finally, add your; file to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; page. Adding a new module to âTheoretical Methodsâ; Copy the file of a well-established module, like; psi4/doc/sphinxman/source/sapt.rst. Change the title, author, sec; label, ref, and source labels at the top of the file to point instead to; your code. Edit psi4/doc/sphinxman/source/methods.rst to add the; name of your file so that it will appear in the TOC tree. Add your file; to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; file. Follow the models in existing methods pages to write your; documentation. If you donât get all the keyword links, bibliography; links, sample inputs, math, tables, etc. working in Sphinx, donât worry; about it. A genie will probably come through and tidy up all your; source. Table Of Contents. Documentation; Installing Sphinx; Documentation Structure; reStructuredText; Math in the Codebase; The Map of the Sphinx. Previous topic; Best Practices for Python Functions; Next topic; PsiPEP: Plans and Practices to Organize PSI4; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:515,Security,access,accessible,515,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:2667,Testability,test,tests,2667,"IR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html; build/html-user/index.html; build/html-prog/index.html; build/latex-prog/psi4_userman.pdf; build/latex-prog/psi4_progman.pdf. Much of the documentation is auto-generated from the source. At present,; this covers:. Physical Constants: psi4/include/physconst.h; Python Driver: docstrings from *.py files in psi4/lib/python; Databases: docstrings from *.py files in psi4/lib/databases; Basis Sets: *.gbs files in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments in the C++ code; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, ru",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:3972,Testability,test,test,3972,"ilibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the two former, math has traditionally; been written in LaTeX (with the special substitution @@ for; subscripting underscore). The autodoc script has been trained to convert; inline LaTeX math to reST math, provided the expression within dollar; signs is offset from other text. That is, expressions of the form; ^ $latex math$[., ]$ (pseudo-regex) are good, while H$_2",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:3998,Testability,test,test,3998," fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the two former, math has traditionally; been written in LaTeX (with the special substitution @@ for; subscripting underscore). The autodoc script has been trained to convert; inline LaTeX math to reST math, provided the expression within dollar; signs is offset from other text. That is, expressions of the form; ^ $latex math$[., ]$ (pseudo-regex) are good, while H$_2$O and LaTeX tables; are not translated correctly. Python docstrings are absorbed as-is",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:4337,Testability,test,test,4337,"takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the two former, math has traditionally; been written in LaTeX (with the special substitution @@ for; subscripting underscore). The autodoc script has been trained to convert; inline LaTeX math to reST math, provided the expression within dollar; signs is offset from other text. That is, expressions of the form; ^ $latex math$[., ]$ (pseudo-regex) are good, while H$_2$O and LaTeX tables; are not translated correctly. Python docstrings are absorbed as-is, so; please use reST math formatting (essentially $latex math$ ; :math:`latex math`). The Map of the SphinxÂ¶. Adding a new Appendix or First-TOC-Level page; Create your reST file and fill it with information. Add the name of your; file to psi4/doc/sphinxman/source/template_appendices.rst for an",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation-1.html:3281,Usability,clear,clears,3281,"s from *.py files in psi4/lib/python; Databases: docstrings from *.py files in psi4/lib/databases; Basis Sets: *.gbs files in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments in the C++ code; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locat",MatchSource.WIKI,psi4manual/4.0b4/documentation-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation-1.html
https://psicode.org/psi4manual/4.0b4/documentation.html:276,Availability,avail,available,276,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:2964,Availability,avail,availibility,2964,"lowing files, respectively.; build/html/index.html; build/html-user/index.html; build/html-prog/index.html; build/latex-prog/psi4_userman.pdf; build/latex-prog/psi4_progman.pdf. Much of the documentation is auto-generated from the source. At present,; this covers:. Physical Constants: psi4/include/physconst.h; Python Driver: docstrings from *.py files in psi4/lib/python; Databases: docstrings from *.py files in psi4/lib/databases; Basis Sets: *.gbs files in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments in the C++ code; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStru",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:3870,Availability,avail,available,3870,"e. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the two former, math has traditionally; been written in LaTeX (with the special substitution @@ for; subscripting underscore). The autodoc script has been trained to convert; inline LaTeX math to reST math, provided the expression within dollar; signs is offset fr",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:375,Deployability,release,release,375,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:724,Deployability,install,installed,724,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:749,Deployability,install,installation,749,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:992,Deployability,install,install,992,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:1185,Deployability,install,install,1185,"tionÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html; build/html-user/index.html; build/html-prog/index.html; build/latex-prog/psi4_userman.pdf; build/latex-prog/psi4_progman.pdf. Much of the documentation is auto-generated from the sour",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:6978,Deployability,update,updated,6978," are absorbed as-is, so; please use reST math formatting (essentially $latex math$ ; :math:`latex math`). The Map of the SphinxÂ¶. Adding a new Appendix or First-TOC-Level page; Create your reST file and fill it with information. Add the name of your; file to psi4/doc/sphinxman/source/template_appendices.rst for an; appendix or to psi4/doc/sphinxman/source/template_index.rst for a; first-TOC-level. Consider the ##### lines to be like preprocessor; directives that separate user and programmer manuals. Finally, add your; file to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; page. Adding a new module to âTheoretical Methodsâ; Copy the file of a well-established module, like; psi4/doc/sphinxman/source/sapt.rst. Change the title, author, sec; label, ref, and source labels at the top of the file to point instead to; your code. Edit psi4/doc/sphinxman/source/methods.rst to add the; name of your file so that it will appear in the TOC tree. Add your file; to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; file. Follow the models in existing methods pages to write your; documentation. If you donât get all the keyword links, bibliography; links, sample inputs, math, tables, etc. working in Sphinx, donât worry; about it. A genie will probably come through and tidy up all your; source. Table Of Contents. Documentation; Installing Sphinx; Documentation Structure; reStructuredText; Math in the Codebase; The Map of the Sphinx. Previous topic; Best Practices for Python Functions; Next topic; PsiPEP: Plans and Practices to Organize PSI4; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:1638,Integrability,depend,depending,1638,"uild the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html; build/html-user/index.html; build/html-prog/index.html; build/latex-prog/psi4_userman.pdf; build/latex-prog/psi4_progman.pdf. Much of the documentation is auto-generated from the source. At present,; this covers:. Physical Constants: psi4/include/physconst.h; Python Driver: docstrings from *.py files in psi4/lib/python; Databases: docstrings from *.py files in psi4/lib/databases; Basis Sets: *.gbs files in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments i",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:3387,Integrability,depend,dependency,3387,"in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments in the C++ code; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/ps",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:3576,Integrability,depend,dependencies,3576,"e; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the t",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:3632,Integrability,depend,depend,3632,"e; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the t",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:2682,Modifiability,plugin,plugin,2682,"IR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html; build/html-user/index.html; build/html-prog/index.html; build/latex-prog/psi4_userman.pdf; build/latex-prog/psi4_progman.pdf. Much of the documentation is auto-generated from the source. At present,; this covers:. Physical Constants: psi4/include/physconst.h; Python Driver: docstrings from *.py files in psi4/lib/python; Databases: docstrings from *.py files in psi4/lib/databases; Basis Sets: *.gbs files in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments in the C++ code; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, ru",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:3607,Modifiability,variab,variables,3607,"e; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the t",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:5581,Modifiability,variab,variable,5581,"rs.); For the two former, math has traditionally; been written in LaTeX (with the special substitution @@ for; subscripting underscore). The autodoc script has been trained to convert; inline LaTeX math to reST math, provided the expression within dollar; signs is offset from other text. That is, expressions of the form; ^ $latex math$[., ]$ (pseudo-regex) are good, while H$_2$O and LaTeX tables; are not translated correctly. Python docstrings are absorbed as-is, so; please use reST math formatting (essentially $latex math$ ; :math:`latex math`). The Map of the SphinxÂ¶. Adding a new Appendix or First-TOC-Level page; Create your reST file and fill it with information. Add the name of your; file to psi4/doc/sphinxman/source/template_appendices.rst for an; appendix or to psi4/doc/sphinxman/source/template_index.rst for a; first-TOC-level. Consider the ##### lines to be like preprocessor; directives that separate user and programmer manuals. Finally, add your; file to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; page. Adding a new module to âTheoretical Methodsâ; Copy the file of a well-established module, like; psi4/doc/sphinxman/source/sapt.rst. Change the title, author, sec; label, ref, and source labels at the top of the file to point instead to; your code. Edit psi4/doc/sphinxman/source/methods.rst to add the; name of your file so that it will appear in the TOC tree. Add your file; to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; file. Follow the models in existing methods pages to write your; documentation. If you donât get all the keyword links, bibliography; links, sample inputs, math, tables, etc. working in Sphinx, donât worry; about it. A genie will probably come through and tidy up all your; source. Table Of Contents. Documentation; Installing Sphinx; Documentation Structure; reStructuredText; Math in the Codebase; The Map of th",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:6078,Modifiability,variab,variable,6078," are absorbed as-is, so; please use reST math formatting (essentially $latex math$ ; :math:`latex math`). The Map of the SphinxÂ¶. Adding a new Appendix or First-TOC-Level page; Create your reST file and fill it with information. Add the name of your; file to psi4/doc/sphinxman/source/template_appendices.rst for an; appendix or to psi4/doc/sphinxman/source/template_index.rst for a; first-TOC-level. Consider the ##### lines to be like preprocessor; directives that separate user and programmer manuals. Finally, add your; file to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; page. Adding a new module to âTheoretical Methodsâ; Copy the file of a well-established module, like; psi4/doc/sphinxman/source/sapt.rst. Change the title, author, sec; label, ref, and source labels at the top of the file to point instead to; your code. Edit psi4/doc/sphinxman/source/methods.rst to add the; name of your file so that it will appear in the TOC tree. Add your file; to the STATICDOC variable in the Makefile at; psi4/doc/sphinxman/Makefile.in. Sphinx will now build with your new; file. Follow the models in existing methods pages to write your; documentation. If you donât get all the keyword links, bibliography; links, sample inputs, math, tables, etc. working in Sphinx, donât worry; about it. A genie will probably come through and tidy up all your; source. Table Of Contents. Documentation; Installing Sphinx; Documentation Structure; reStructuredText; Math in the Codebase; The Map of the Sphinx. Previous topic; Best Practices for Python Functions; Next topic; PsiPEP: Plans and Practices to Organize PSI4; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:515,Security,access,accessible,515,"ï»¿. Documentation â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Contributions: Intro to Programming in PSI4 Â». DocumentationÂ¶; PSI4âs documentation is generated by Sphinx; and lives in psi4/doc/sphinxman. It is available online at; http://sirius.chem.vt.edu/psi4manual/latest/index.html; for the latest public release and at; http://sirius.chem.vt.edu/psi4manual/master/index.html; for the latest development branch (not all links may be publically; accessible). Installing SphinxÂ¶; Installing Sphinx is only necessary to build the documentation; yourself, locally. The docs are served from; from trac and psicode, so most users/developers wonât need Sphinx; installed. Nevertheless, installation is easy.; On Mac:; >>> easy_install sphinx. On Linux:. Download; >>> curl -O http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz. Unpack, etc. Build and Install; >>> python setup.py build; >>> sudo python setup.py install. Check the path; >>> which sphinx-build; >>> which latex; >>> which dvipng. LaTeX and dvipng are needed to render math. If the latter is missing,; the following may work.; >>> sudo yum install dvipng. Documentation StructureÂ¶; Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in; the same format, hyperlinking within and to trac/external websites, and; generating documentation in different formats from the same source.; PSI4âs documentation is a unified document covering information for; both users and programmers, with different portions served up depending on; the target audience. To this end, one can navigate to $(OBJDIR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html;",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:2667,Testability,test,tests,2667,"IR)/doc/sphinxman; and build the following targets.:; >>> make help # to see options; >>> make # to build html. >>> make html; >>> make html-user; >>> make html-prog; >>> make latexpdf-user; >>> make latexpdf-prog. This will build the following files, respectively.; build/html/index.html; build/html-user/index.html; build/html-prog/index.html; build/latex-prog/psi4_userman.pdf; build/latex-prog/psi4_progman.pdf. Much of the documentation is auto-generated from the source. At present,; this covers:. Physical Constants: psi4/include/physconst.h; Python Driver: docstrings from *.py files in psi4/lib/python; Databases: docstrings from *.py files in psi4/lib/databases; Basis Sets: *.gbs files in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments in the C++ code; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, ru",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:3972,Testability,test,test,3972,"ilibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the two former, math has traditionally; been written in LaTeX (with the special substitution @@ for; subscripting underscore). The autodoc script has been trained to convert; inline LaTeX math to reST math, provided the expression within dollar; signs is offset from other text. That is, expressions of the form; ^ $latex math$[., ]$ (pseudo-regex) are good, while H$_2",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:3998,Testability,test,test,3998," fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the two former, math has traditionally; been written in LaTeX (with the special substitution @@ for; subscripting underscore). The autodoc script has been trained to convert; inline LaTeX math to reST math, provided the expression within dollar; signs is offset from other text. That is, expressions of the form; ^ $latex math$[., ]$ (pseudo-regex) are good, while H$_2$O and LaTeX tables; are not translated correctly. Python docstrings are absorbed as-is",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:4337,Testability,test,test,4337,"takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the #! comment comments at the top of test case; input files, the /*- comment -*/ comments in; psi4/src/bin/psi4/read_options.cc, and the r"""""" comment """"""; docstrings in python modules. (That r"""""" makes the string read; literally, so your LaTeX symbols arenât confused with escape characters.); For the two former, math has traditionally; been written in LaTeX (with the special substitution @@ for; subscripting underscore). The autodoc script has been trained to convert; inline LaTeX math to reST math, provided the expression within dollar; signs is offset from other text. That is, expressions of the form; ^ $latex math$[., ]$ (pseudo-regex) are good, while H$_2$O and LaTeX tables; are not translated correctly. Python docstrings are absorbed as-is, so; please use reST math formatting (essentially $latex math$ ; :math:`latex math`). The Map of the SphinxÂ¶. Adding a new Appendix or First-TOC-Level page; Create your reST file and fill it with information. Add the name of your; file to psi4/doc/sphinxman/source/template_appendices.rst for an",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/documentation.html:3281,Usability,clear,clears,3281,"s from *.py files in psi4/lib/python; Databases: docstrings from *.py files in psi4/lib/databases; Basis Sets: *.gbs files in psi4/lib/basis; C++ Keywords: psi4/src/bin/psi4/read_options.cc; Sample Inputs: input.dat files in psi4/samples; PSI Variables: Process::environment.globals lines and comments in the C++ code; Plugins: doc.rst text, *.py modules, and C++ keywords in psi4/tests/plugin_* plugin directories (disabled at the moment); PSI Files: scratch file names and numbers in psi4/include/psifiles.h. Some documentation is even extracted from Psi4 objects at runtime. PsiMod: docstrings for the PsiMod built-in module constructed in psi4/src/bin/psi4; DFT: functional availibility and characteristics as encoded in psi4/lib/python/functional.py; BasisFamily: fitting basis sets for each orbital basis as encoded in psi4/lib/python/basislistdunning.py and psi4/lib/python/basislistother.py. Run make help to see choices for cleaning various stages of the build.; Running make realclean clears out the built documentation. Building; all the documentation takes ~10 minutes. There is now good; dependency structure built into the psi4/doc/sphinxman/Makefile.in ,; so very long builds should be infrequent (unless youâre touching psi4/src/bin/psi4/read_options.cc.; Note that not all dependencies; are encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, run make realclean and; start from scratch. reStructuredTextÂ¶; Sphinx files are written in reStructuredText (*.rst). In the html; documentation, source code is available from the sidebar. Hereâre a; few resources on Sphinx formatting. reStructuredText; rendered test document; vs. source test document; Another reStructuredText; A third reStructuredText and Sphinx; LaTeX that Sphinx can handle; Sphinx Docs. Math in the CodebaseÂ¶; It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locat",MatchSource.WIKI,psi4manual/4.0b4/documentation.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/documentation.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:2375,Deployability,configurat,configuration,2375," coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sa",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:2611,Deployability,configurat,configuration,2611,"n pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sapt2+3-ct; SAPT2+3 plus CT [manual]. sapt2+(ccd)-ct; SAPT2+(CCD) plus CT [manual]. sapt2+(3)(ccd)-ct; SAPT2+(3)(CCD) plus CT [manual]. sapt2+3(ccd)-ct; SAPT2+3(CCD) plus CT [manual]. adc; 2nd-order algebraic diagrammatic c",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:13705,Deployability,update,updated,13705,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:176,Energy Efficiency,energy,energy,176,"ï»¿. Energy â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». EnergyÂ¶. energy(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:271,Energy Efficiency,energy,energy,271,"ï»¿. Energy â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». EnergyÂ¶. energy(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:312,Energy Efficiency,energy,energy,312,"ï»¿. Energy â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». EnergyÂ¶. energy(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:357,Energy Efficiency,energy,energy,357,"ï»¿. Energy â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». EnergyÂ¶. energy(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:2780,Energy Efficiency,adapt,adapted,2780,"ingles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sapt2+3-ct; SAPT2+3 plus CT [manual]. sapt2+(ccd)-ct; SAPT2+(CCD) plus CT [manual]. sapt2+(3)(ccd)-ct; SAPT2+(3)(CCD) plus CT [manual]. sapt2+3(ccd)-ct; SAPT2+3(CCD) plus CT [manual]. adc; 2nd-order algebraic diagrammatic construction (ADC) [manual]. eom-cc2; EOM-CC2 [manual]. eom-ccsd; equation of motion (EOM) CCSD [manual]. eom-cc3; EOM-CC3 [manual]. name; calls method (aliases to ",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:3248,Energy Efficiency,charge,charge,3248,"3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sapt2+3-ct; SAPT2+3 plus CT [manual]. sapt2+(ccd)-ct; SAPT2+(CCD) plus CT [manual]. sapt2+(3)(ccd)-ct; SAPT2+(3)(CCD) plus CT [manual]. sapt2+3(ccd)-ct; SAPT2+3(CCD) plus CT [manual]. adc; 2nd-order algebraic diagrammatic construction (ADC) [manual]. eom-cc2; EOM-CC2 [manual]. eom-ccsd; equation of motion (EOM) CCSD [manual]. eom-cc3; EOM-CC3 [manual]. name; calls method (aliases to name = âscfâ). hf; HF. rhf; HF with restricted reference. uhf; HF with unrestricted reference. rohf; HF with restricted open-shell reference. rscf; HF or DFT with restricted reference. uscf; HF or DFT with unrestricted reference. roscf; HF or DFT with restricted open-shell reference. name; calls method DFT [manual]. b2plyp; B2PLYP Double Hybrid Exchange-Correlation Functional. b2plyp-d; B2PLYP Double Hybrid Exchange-Correlation Functional w/ Grimmeâs -D2 Disper",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:12855,Energy Efficiency,energy,energy,12855,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:13087,Energy Efficiency,energy,energy,13087,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:13154,Energy Efficiency,energy,energy,13154,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:13302,Energy Efficiency,energy,energy,13302,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:13349,Energy Efficiency,energy,energy,13349,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:369,Modifiability,variab,variables,369,"ï»¿. Energy â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». EnergyÂ¶. energy(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:2375,Modifiability,config,configuration,2375," coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sa",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:2611,Modifiability,config,configuration,2611,"n pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sapt2+3-ct; SAPT2+3 plus CT [manual]. sapt2+(ccd)-ct; SAPT2+(CCD) plus CT [manual]. sapt2+(3)(ccd)-ct; SAPT2+(3)(CCD) plus CT [manual]. sapt2+3(ccd)-ct; SAPT2+3(CCD) plus CT [manual]. adc; 2nd-order algebraic diagrammatic c",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:2780,Modifiability,adapt,adapted,2780,"ingles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sapt2+3-ct; SAPT2+3 plus CT [manual]. sapt2+(ccd)-ct; SAPT2+(CCD) plus CT [manual]. sapt2+(3)(ccd)-ct; SAPT2+(3)(CCD) plus CT [manual]. sapt2+3(ccd)-ct; SAPT2+3(CCD) plus CT [manual]. adc; 2nd-order algebraic diagrammatic construction (ADC) [manual]. eom-cc2; EOM-CC2 [manual]. eom-ccsd; equation of motion (EOM) CCSD [manual]. eom-cc3; EOM-CC3 [manual]. name; calls method (aliases to ",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:1161,Performance,optimiz,optimized,1161,"y(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:1231,Performance,optimiz,optimized,1231,"gle-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. ",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:1302,Performance,optimiz,optimized,1302,"ectronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy-1.html:1343,Performance,optimiz,optimized,1343,"y. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy mo",MatchSource.WIKI,psi4manual/4.0b4/energy-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html
https://psicode.org/psi4manual/4.0b4/energy.html:2375,Deployability,configurat,configuration,2375," coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sa",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:2611,Deployability,configurat,configuration,2611,"n pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sapt2+3-ct; SAPT2+3 plus CT [manual]. sapt2+(ccd)-ct; SAPT2+(CCD) plus CT [manual]. sapt2+(3)(ccd)-ct; SAPT2+(3)(CCD) plus CT [manual]. sapt2+3(ccd)-ct; SAPT2+3(CCD) plus CT [manual]. adc; 2nd-order algebraic diagrammatic c",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:13705,Deployability,update,updated,13705,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:176,Energy Efficiency,energy,energy,176,"ï»¿. Energy â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». EnergyÂ¶. energy(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:271,Energy Efficiency,energy,energy,271,"ï»¿. Energy â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». EnergyÂ¶. energy(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:312,Energy Efficiency,energy,energy,312,"ï»¿. Energy â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». EnergyÂ¶. energy(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:357,Energy Efficiency,energy,energy,357,"ï»¿. Energy â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». EnergyÂ¶. energy(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:2780,Energy Efficiency,adapt,adapted,2780,"ingles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sapt2+3-ct; SAPT2+3 plus CT [manual]. sapt2+(ccd)-ct; SAPT2+(CCD) plus CT [manual]. sapt2+(3)(ccd)-ct; SAPT2+(3)(CCD) plus CT [manual]. sapt2+3(ccd)-ct; SAPT2+3(CCD) plus CT [manual]. adc; 2nd-order algebraic diagrammatic construction (ADC) [manual]. eom-cc2; EOM-CC2 [manual]. eom-ccsd; equation of motion (EOM) CCSD [manual]. eom-cc3; EOM-CC3 [manual]. name; calls method (aliases to ",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:3248,Energy Efficiency,charge,charge,3248,"3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sapt2+3-ct; SAPT2+3 plus CT [manual]. sapt2+(ccd)-ct; SAPT2+(CCD) plus CT [manual]. sapt2+(3)(ccd)-ct; SAPT2+(3)(CCD) plus CT [manual]. sapt2+3(ccd)-ct; SAPT2+3(CCD) plus CT [manual]. adc; 2nd-order algebraic diagrammatic construction (ADC) [manual]. eom-cc2; EOM-CC2 [manual]. eom-ccsd; equation of motion (EOM) CCSD [manual]. eom-cc3; EOM-CC3 [manual]. name; calls method (aliases to name = âscfâ). hf; HF. rhf; HF with restricted reference. uhf; HF with unrestricted reference. rohf; HF with restricted open-shell reference. rscf; HF or DFT with restricted reference. uscf; HF or DFT with unrestricted reference. roscf; HF or DFT with restricted open-shell reference. name; calls method DFT [manual]. b2plyp; B2PLYP Double Hybrid Exchange-Correlation Functional. b2plyp-d; B2PLYP Double Hybrid Exchange-Correlation Functional w/ Grimmeâs -D2 Disper",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:12855,Energy Efficiency,energy,energy,12855,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:13087,Energy Efficiency,energy,energy,13087,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:13154,Energy Efficiency,energy,energy,13154,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:13302,Energy Efficiency,energy,energy,13302,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:13349,Energy Efficiency,energy,energy,13349,"s. mrcc4; approximate CC through quadruples. mrcc5; approximate CC through quintuples. mrcc6; approximate CC through sextuples. mrccsdt-3; CC through doubles with iterative triples (all but the most expensive terms). mrccsdtq-3; CC through triples with iterative quadruples (all but the most expensive terms). mrccsdtqp-3; CC through quadruples with iterative quintuples (all but the most expensive terms). mrccsdtqph-3; CC through quintuples with iterative sextuples (all but the most expensive terms). Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Parameters:bypass_scf (boolean) â 'on' || 'off' ; Indicates whether, for name values built atop of scf calculations,; the scf step is skipped. Suitable when special steps are taken to get; the scf to converge in an explicit preceeding scf step. Examples :. >>> # [1] Coupled-cluster singles and doubles calculation with psi code; >>> energy('ccsd'). >>> # [2] Charge-transfer SAPT calculation with scf projection from small into; >>> # requested basis, with specified projection fitting basis; >>> set basis_guess true; >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). Previous topic; Notes on Options; Next topic; Property; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:369,Modifiability,variab,variables,369,"ï»¿. Energy â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». EnergyÂ¶. energy(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:2375,Modifiability,config,configuration,2375," coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sa",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:2611,Modifiability,config,configuration,2611,"n pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sapt2+3-ct; SAPT2+3 plus CT [manual]. sapt2+(ccd)-ct; SAPT2+(CCD) plus CT [manual]. sapt2+(3)(ccd)-ct; SAPT2+(3)(CCD) plus CT [manual]. sapt2+3(ccd)-ct; SAPT2+3(CCD) plus CT [manual]. adc; 2nd-order algebraic diagrammatic c",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:2780,Modifiability,adapt,adapted,2780,"ingles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy module. cisd; configuration interaction (CI) singles and doubles (CISD) [manual]. cisdt; CI singles, doubles, and triples (CISDT) [manual]. cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ) [manual]. cin; nth-order CI [manual]. fci; full configuration interaction (FCI) [manual]. detci; expert full control over detci module. gaussian-2 (g2); gaussian-2 composite method [manual]. sapt0; 0th-order symmetry adapted perturbation theory (SAPT) [manual]. sapt2; 2nd-order SAPT, traditional definition [manual]. sapt2+; SAPT including all 2nd-order terms [manual]. sapt2+(3); SAPT including perturbative triples [manual]. sapt2+3; SAPT including all 3rd-order terms [manual]. sapt2+(ccd); SAPT2+ with CC-based dispersion [manual]. sapt2+(3)(ccd); SAPT2+(3) with CC-based dispersion [manual]. sapt2+3(ccd); SAPT2+3 with CC-based dispersion [manual]. sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation [manual]. sapt2-ct; SAPT2 plus CT [manual]. sapt2+-ct; SAPT2+ plus CT [manual]. sapt2+(3)-ct; SAPT2+(3) plus CT [manual]. sapt2+3-ct; SAPT2+3 plus CT [manual]. sapt2+(ccd)-ct; SAPT2+(CCD) plus CT [manual]. sapt2+(3)(ccd)-ct; SAPT2+(3)(CCD) plus CT [manual]. sapt2+3(ccd)-ct; SAPT2+3(CCD) plus CT [manual]. adc; 2nd-order algebraic diagrammatic construction (ADC) [manual]. eom-cc2; EOM-CC2 [manual]. eom-ccsd; equation of motion (EOM) CCSD [manual]. eom-cc3; EOM-CC3 [manual]. name; calls method (aliases to ",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:1161,Performance,optimiz,optimized,1161,"y(name[, bypass_scf, molecule])[source]Â¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:1231,Performance,optimiz,optimized,1231,"gle-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. ",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:1302,Performance,optimiz,optimized,1302,"ectronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/energy.html:1343,Performance,optimiz,optimized,1343,"y. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; HartreeâFock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order MollerâPlesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manual]. qcisd(t); QCISD with perturbative triples [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. fno-df-ccsd(t); CCSD(T) with density fitting and frozen natural orbitals [manual]. bccd(t); BCCD with perturbative triples [manual]. cc3; approximate CC singles, doubles, and triples (CC3) [manual]. ccenergy; expert full control over ccenergy mo",MatchSource.WIKI,psi4manual/4.0b4/energy.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy.html
https://psicode.org/psi4manual/4.0b4/external-1.html:316,Availability,avail,available,316,"ï»¿. Installation and Runtime Configuration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, ",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:408,Availability,avail,available,408,"ï»¿. Installation and Runtime Configuration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, ",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:1405,Availability,down,down,1405," may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integr",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:2573,Availability,checkpoint,checkpoint,2573,"this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:2896,Availability,avail,available,2896,"ble or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:3503,Availability,checkpoint,checkpoint,3503,"etails of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with th",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:9639,Availability,avail,available,9639,"t. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see ",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:11256,Availability,avail,available,11256,"ment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place the path in the ~/.psi4rc file so that it is available for; every PSI4 instance.; sys.path.insert(0, '/home/user/psiadditions'). Place the path in the input file, either absolute or relative.; sys.path.insert(0, '../../psiadditions'); sys.path.insert(0, '/home/user/psiadditions'). Table Of Contents. Installation and Runtime Configuration; Obtaining PSI4; Compiling and Installing; Scratch Files and the ~/.psi4rc File; Threading; Command Line Options; Environment Variables. Previous topic; Introduction; Next topic; A PSI4 Tutorial; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:459,Deployability,install,installation,459,"ï»¿. Installation and Runtime Configuration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, ",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:990,Deployability,configurat,configuration,990,"uration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execu",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:1023,Deployability,install,installation,1023,"uration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execu",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:11968,Deployability,update,updated,11968,"ment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place the path in the ~/.psi4rc file so that it is available for; every PSI4 instance.; sys.path.insert(0, '/home/user/psiadditions'). Place the path in the input file, either absolute or relative.; sys.path.insert(0, '../../psiadditions'); sys.path.insert(0, '/home/user/psiadditions'). Table Of Contents. Installation and Runtime Configuration; Obtaining PSI4; Compiling and Installing; Scratch Files and the ~/.psi4rc File; Threading; Command Line Options; Environment Variables. Previous topic; Introduction; Next topic; A PSI4 Tutorial; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:5098,Energy Efficiency,efficient,efficiently,5098,"rated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to e",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:7518,Energy Efficiency,energy,energy,7518,"I4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstances. For instance, the; threaded generation of AO density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specify:; set MODULE_NAME df_ints_num_threads n. to explicitly control the number of threads used for integral formation. Setting; this variable to 0 (the default) uses the number of threads specified by the; set_num_threads() Psithon method or the default environmental variables. Command Line OptionsÂ¶; PSI4 can be invoked with no command line arguments, as it takes as input; by default the file âinput.datâ and directs output by default to âoutput.datâ.; The set of three commands below are completely equivalent, while the fourth",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:1697,Integrability,depend,depending,1697," Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated sc",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:2884,Integrability,rout,routines,2884,"ble or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:5715,Integrability,rout,routines,5715,"e set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.;",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:6507,Integrability,rout,routines,6507,"ort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; se",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:990,Modifiability,config,configuration,990,"uration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execu",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:1875,Modifiability,variab,variable,1875,"ific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the P",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:3206,Modifiability,variab,variable,3206,"handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running sim",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:4693,Modifiability,variab,variable,4693,"ds below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handl",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:6011,Modifiability,variab,variables,6011,"ted; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by enviro",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:6341,Modifiability,variab,variables,6341,"ensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you ge",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:6605,Modifiability,variab,variables,6605,"% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstanc",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:7016,Modifiability,variab,variables,7016,"e accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstances. For instance, the; threaded generation of AO density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specif",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:8070,Modifiability,variab,variable,8070,"nMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstances. For instance, the; threaded generation of AO density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specify:; set MODULE_NAME df_ints_num_threads n. to explicitly control the number of threads used for integral formation. Setting; this variable to 0 (the default) uses the number of threads specified by the; set_num_threads() Psithon method or the default environmental variables. Command Line OptionsÂ¶; PSI4 can be invoked with no command line arguments, as it takes as input; by default the file âinput.datâ and directs output by default to âoutput.datâ.; The set of three commands below are completely equivalent, while the fourth is,; perhaps, the most common usage.; psi4; psi4 -i input.dat -o output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; o",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:8205,Modifiability,variab,variables,8205,"nMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstances. For instance, the; threaded generation of AO density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specify:; set MODULE_NAME df_ints_num_threads n. to explicitly control the number of threads used for integral formation. Setting; this variable to 0 (the default) uses the number of threads specified by the; set_num_threads() Psithon method or the default environmental variables. Command Line OptionsÂ¶; PSI4 can be invoked with no command line arguments, as it takes as input; by default the file âinput.datâ and directs output by default to âoutput.datâ.; The set of three commands below are completely equivalent, while the fourth is,; perhaps, the most common usage.; psi4; psi4 -i input.dat -o output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; o",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:9400,Modifiability,plugin,plugin,9400,"y equivalent, while the fourth is,; perhaps, the most common usage.; psi4; psi4 -i input.dat -o output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use b",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:9477,Modifiability,plugin,plugin,9477,"y equivalent, while the fourth is,; perhaps, the most common usage.; psi4; psi4 -i input.dat -o output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use b",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:9557,Modifiability,plugin,plugin,9557," output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (s",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:10030,Modifiability,variab,variables,10030,"n the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shel",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:10362,Modifiability,variab,variable,10362,"(overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place the path in the ~/.psi4rc file so that it is available for; every PSI4 instance.; sys.path.insert(0, '/home/user/psiadditions'). Place the path in the inpu",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:10873,Modifiability,plugin,plugins,10873,"ff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place the path in the ~/.psi4rc file so that it is available for; every PSI4 instance.; sys.path.insert(0, '/home/user/psiadditions'). Place the path in the input file, either absolute or relative.; sys.path.insert(0, '../../psiadditions'); sys.path.insert(0, '/home/user/psiadditions'). Table Of Contents. Installation and Runtime Configuration; Obtaining PSI4; Compiling and Installing; Scratch Files and the ~/.psi4rc File; Threading; Command Line Options; Environment Variables. Previous topic; Introduction; Next topic; A PSI4 Tutorial; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  ",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:2125,Performance,perform,performing,2125,"châ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). ",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:3146,Performance,queue,queue,3146,"handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running sim",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:4430,Performance,load,loaded,4430,"pecific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:4155,Safety,safe,safe,4155,"user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficien",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:6475,Safety,detect,detects,6475,"ort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; se",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:4929,Security,access,accessible,4929,"H Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:7050,Security,access,accessed,7050,"ves specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstances. For instance, the; threaded generation of AO density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specify:; set MODULE_NAME df_ints_num_threads n. to explicitly control the number of threads used for integral formation. Setting; this variable to 0 (the d",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:8666,Security,access,accessed,8666,"O density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specify:; set MODULE_NAME df_ints_num_threads n. to explicitly control the number of threads used for integral formation. Setting; this variable to 0 (the default) uses the number of threads specified by the; set_num_threads() Psithon method or the default environmental variables. Command Line OptionsÂ¶; PSI4 can be invoked with no command line arguments, as it takes as input; by default the file âinput.datâ and directs output by default to âoutput.datâ.; The set of three commands below are completely equivalent, while the fourth is,; perhaps, the most common usage.; psi4; psi4 -i input.dat -o output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:10181,Security,access,access,10181,"r â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place ",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:10281,Security,access,access,10281,"leted. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place the path in the ~/.psi4rc file so that it is available for; every PSI4 instance.; sys.",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:476,Testability,test,testing,476,"ï»¿. Installation and Runtime Configuration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, ",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:3885,Usability,guid,guide,3885,". To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are ",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external-1.html:4290,Usability,simpl,simply,4290,"import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-lik",MatchSource.WIKI,psi4manual/4.0b4/external-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external-1.html
https://psicode.org/psi4manual/4.0b4/external.html:316,Availability,avail,available,316,"ï»¿. Installation and Runtime Configuration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, ",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:408,Availability,avail,available,408,"ï»¿. Installation and Runtime Configuration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, ",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:1405,Availability,down,down,1405," may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integr",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:2573,Availability,checkpoint,checkpoint,2573,"this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:2896,Availability,avail,available,2896,"ble or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:3503,Availability,checkpoint,checkpoint,3503,"etails of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with th",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:9639,Availability,avail,available,9639,"t. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see ",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:11256,Availability,avail,available,11256,"ment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place the path in the ~/.psi4rc file so that it is available for; every PSI4 instance.; sys.path.insert(0, '/home/user/psiadditions'). Place the path in the input file, either absolute or relative.; sys.path.insert(0, '../../psiadditions'); sys.path.insert(0, '/home/user/psiadditions'). Table Of Contents. Installation and Runtime Configuration; Obtaining PSI4; Compiling and Installing; Scratch Files and the ~/.psi4rc File; Threading; Command Line Options; Environment Variables. Previous topic; Introduction; Next topic; A PSI4 Tutorial; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:459,Deployability,install,installation,459,"ï»¿. Installation and Runtime Configuration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, ",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:990,Deployability,configurat,configuration,990,"uration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execu",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:1023,Deployability,install,installation,1023,"uration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execu",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:11968,Deployability,update,updated,11968,"ment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place the path in the ~/.psi4rc file so that it is available for; every PSI4 instance.; sys.path.insert(0, '/home/user/psiadditions'). Place the path in the input file, either absolute or relative.; sys.path.insert(0, '../../psiadditions'); sys.path.insert(0, '/home/user/psiadditions'). Table Of Contents. Installation and Runtime Configuration; Obtaining PSI4; Compiling and Installing; Scratch Files and the ~/.psi4rc File; Threading; Command Line Options; Environment Variables. Previous topic; Introduction; Next topic; A PSI4 Tutorial; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:5098,Energy Efficiency,efficient,efficiently,5098,"rated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to e",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:7518,Energy Efficiency,energy,energy,7518,"I4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstances. For instance, the; threaded generation of AO density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specify:; set MODULE_NAME df_ints_num_threads n. to explicitly control the number of threads used for integral formation. Setting; this variable to 0 (the default) uses the number of threads specified by the; set_num_threads() Psithon method or the default environmental variables. Command Line OptionsÂ¶; PSI4 can be invoked with no command line arguments, as it takes as input; by default the file âinput.datâ and directs output by default to âoutput.datâ.; The set of three commands below are completely equivalent, while the fourth",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:1697,Integrability,depend,depending,1697," Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated sc",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:2884,Integrability,rout,routines,2884,"ble or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:5715,Integrability,rout,routines,5715,"e set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.;",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:6507,Integrability,rout,routines,6507,"ort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; se",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:990,Modifiability,config,configuration,990,"uration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execu",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:1875,Modifiability,variab,variable,1875,"ific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the P",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:3206,Modifiability,variab,variable,3206,"handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running sim",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:4693,Modifiability,variab,variable,4693,"ds below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handl",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:6011,Modifiability,variab,variables,6011,"ted; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by enviro",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:6341,Modifiability,variab,variables,6341,"ensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you ge",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:6605,Modifiability,variab,variables,6605,"% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstanc",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:7016,Modifiability,variab,variables,7016,"e accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstances. For instance, the; threaded generation of AO density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specif",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:8070,Modifiability,variab,variable,8070,"nMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstances. For instance, the; threaded generation of AO density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specify:; set MODULE_NAME df_ints_num_threads n. to explicitly control the number of threads used for integral formation. Setting; this variable to 0 (the default) uses the number of threads specified by the; set_num_threads() Psithon method or the default environmental variables. Command Line OptionsÂ¶; PSI4 can be invoked with no command line arguments, as it takes as input; by default the file âinput.datâ and directs output by default to âoutput.datâ.; The set of three commands below are completely equivalent, while the fourth is,; perhaps, the most common usage.; psi4; psi4 -i input.dat -o output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; o",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:8205,Modifiability,variab,variables,8205,"nMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstances. For instance, the; threaded generation of AO density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specify:; set MODULE_NAME df_ints_num_threads n. to explicitly control the number of threads used for integral formation. Setting; this variable to 0 (the default) uses the number of threads specified by the; set_num_threads() Psithon method or the default environmental variables. Command Line OptionsÂ¶; PSI4 can be invoked with no command line arguments, as it takes as input; by default the file âinput.datâ and directs output by default to âoutput.datâ.; The set of three commands below are completely equivalent, while the fourth is,; perhaps, the most common usage.; psi4; psi4 -i input.dat -o output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; o",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:9400,Modifiability,plugin,plugin,9400,"y equivalent, while the fourth is,; perhaps, the most common usage.; psi4; psi4 -i input.dat -o output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use b",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:9477,Modifiability,plugin,plugin,9477,"y equivalent, while the fourth is,; perhaps, the most common usage.; psi4; psi4 -i input.dat -o output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use b",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:9557,Modifiability,plugin,plugin,9557," output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (s",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:10030,Modifiability,variab,variables,10030,"n the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shel",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:10362,Modifiability,variab,variable,10362,"(overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place the path in the ~/.psi4rc file so that it is available for; every PSI4 instance.; sys.path.insert(0, '/home/user/psiadditions'). Place the path in the inpu",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:10873,Modifiability,plugin,plugins,10873,"ff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place the path in the ~/.psi4rc file so that it is available for; every PSI4 instance.; sys.path.insert(0, '/home/user/psiadditions'). Place the path in the input file, either absolute or relative.; sys.path.insert(0, '../../psiadditions'); sys.path.insert(0, '/home/user/psiadditions'). Table Of Contents. Installation and Runtime Configuration; Obtaining PSI4; Compiling and Installing; Scratch Files and the ~/.psi4rc File; Threading; Command Line Options; Environment Variables. Previous topic; Introduction; Next topic; A PSI4 Tutorial; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  ",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:2125,Performance,perform,performing,2125,"châ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current userâs home area (if present) before performing any; tasks in the input file. The primary use of the ~/.psi4rc file is to control the; handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). ",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:3146,Performance,queue,queue,3146,"handling of scratch files. PSI4 has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch numbered by content and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user.; A Python callable handle to the PSI4 I/O management routines is available,; and is called psi4_io. To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running sim",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:4430,Performance,load,loaded,4430,"pecific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:4155,Safety,safe,safe,4155,"user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficien",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:6475,Safety,detect,detects,6475,"ort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at a variety of levels,; ranging from global environment variables to direct control of thread count in; the input file, to even directives specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; se",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:4929,Security,access,accessible,4929,"H Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-like operations, OpenMP for more general operations, and Boost; Threads for some special-case operations. Note: Using OpenMP alone is a really; bad idea. The developers make little to no effort to explicitly parallelize; operations which are already easily threaded by MKL or other threaded BLAS. Less; than 20% of the threaded code in PSI4 uses OpenMP, the rest is handled by; parallel DGEMM and other library routines. From this point forward, it is; assumed that you have compiled PSI4 with OpenMP and MKL (Note that it is; possible to use g++ or another compiler and yet still link against MKL).; Control of threading in PSI4 can be accomplished at",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:7050,Security,access,accessed,7050,"ves specific to each model. This hierarchy is; explained below. Note that each deeper level trumps all previous levels.; (1) OpenMP/MKL Environment Variables; The easiest/least visible way to thread PSI4 is to set the standard OpenMP/MKL; environment variables OMP_NUM_THREADS and MKL_NUM_THREADS.; For instance, in tcsh:; setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4. PSI4 then detects these value via the API routines in <omp.h> and; <mkl.h>, and runs all applicable code with 4 threads. These environment; variables are typically defined in a .tcshrc or .bashrc.; (2) The -n Command Line Flag; To change the number of threads at runtime, the psi4 -n flag may be used. An; example is:; psi4 -i input.dat -o output.dat -n 4. which will run on four threads.; (3) Setting Thread Numbers in an Input; For more explicit control, the Process::environment class in PSI4 can; override the number of threads set by environment variables. This functionality; is accessed via the set_num_threads() Psithon function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a PSI4 input file. An example input for this feature is:; # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. set scf {; basis cc-pvdz; scf_type df; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1,5):; set_num_threads(nthread); energy('scf'). (4) Method-Specific Control; Even more control is possible in certain circumstances. For instance, the; threaded generation of AO density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specify:; set MODULE_NAME df_ints_num_threads n. to explicitly control the number of threads used for integral formation. Setting; this variable to 0 (the d",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:8666,Security,access,accessed,8666,"O density-fitted integrals involves a memory requirement; proportional to the number of threads. This requirement may exceed the total; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specify:; set MODULE_NAME df_ints_num_threads n. to explicitly control the number of threads used for integral formation. Setting; this variable to 0 (the default) uses the number of threads specified by the; set_num_threads() Psithon method or the default environmental variables. Command Line OptionsÂ¶; PSI4 can be invoked with no command line arguments, as it takes as input; by default the file âinput.datâ and directs output by default to âoutput.datâ.; The set of three commands below are completely equivalent, while the fourth is,; perhaps, the most common usage.; psi4; psi4 -i input.dat -o output.dat; psi4 input.dat output.dat. psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to PSI4 can be accessed through psi4 --help. -a, --appendÂ¶; Append results to output file. Default: Truncate first. -h, --helpÂ¶; Display the command-line options and usage information. -i <filename>, --input <filename>Â¶; Input file name. Default: input.dat. -o <filename>, --output <filename>Â¶; Output file name. Use stdout as <filename> to redirect; to the screen. Default: when the input filename is âinput.datâ,; then the output filename defaults to âoutput.datâ. Otherwise, the; output filename defaults to the the input filename (subtracting; any â.inâ or â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:10181,Security,access,access,10181,"r â.datâ suffix) plus â.outâ. -m, --messyÂ¶; Leave temporary files after the run is completed. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place ",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:10281,Security,access,access,10281,"leted. -n <threads>, --nthread <threads>Â¶; Number of threads to use (overrides OMP_NUM_THREADS). --new-plugin <name>Â¶; Creates a new directory <name> with files for writing a; new plugin. An additional argument specifies a template; to use, for example: --new-plugin name +mointegrals.; See Sec. Plugins: Adding New Functionality to PSI4 for available templates. -p <prefix>, --prefix <prefix>Â¶; Prefix for psi files. Default: psi. -v, --verboseÂ¶; Print a lot of information, including the Psithon translation of the input file. -d, --debugÂ¶; Flush the outfile at every fprintf. Default: true iff --with-debug. -V, --versionÂ¶; Print version information. -w, --wipeÂ¶; Clean out scratch area. Environment VariablesÂ¶; These environment variables will influence PSI4âs behavior. MKL_NUM_THREADSÂ¶; Number of threads to use by operations with Intel threaded BLAS libraries. OMP_NESTEDÂ¶; Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to False. OMP_NUM_THREADSÂ¶; Number of threads to use by modules with OpenMP threading. PATHÂ¶; Path for executables. To run KÃ¡llayâs MRCC program; (see MRCC), the dmrcc executable must be in PATH.; Likewise to run Grimmeâs dftd3 program (see dftd3), the; dftd3 executable must be in PATH. PSI_SCRATCHÂ¶; Directory where scratch files are written. Overrides settings in ~/.psi4rc. PYTHONPATHÂ¶; Path in which the Python interpreter looks for modules to import. For; PSI4, these are generally plugins (see Plugins: Adding New Functionality to PSI4) or databases.; Modification of PYTHONPATH can be done in three ways, equivalently. Normal Linux shell commands. First line for C shell; second for bash.; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH; PYTHONPATH=/home/user/psiadditions:$PYTHONPATH; export PYTHONPATH. Place the path in the ~/.psi4rc file so that it is available for; every PSI4 instance.; sys.",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:476,Testability,test,testing,476,"ï»¿. Installation and Runtime Configuration â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» . Installation and Runtime ConfigurationÂ¶. Obtaining PSI4Â¶; The latest version of the PSI4 program package may be obtained at; www.psicode.org. The; source code is available as a gzipped tar archive (named, for example,; psi4.X.tar.gz, and binaries may be available for certain architectures.; For detailed installation and testing instructions, please refer to; Compiling and Installing (same information as; the file psi4/INSTALL distributed with the package). Compiling and InstallingÂ¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. Scratch Files and the ~/.psi4rc FileÂ¶; One very important part of user configuration at the end of the; installation process (details here); is to tell PSI4 where to write its temporary; (âscratchâ) files. Electronic structure packages like PSI4 can; create rather large temporary disk files. It is very important to; ensure that PSI4 is writing its temporary files to a disk drive; phsyically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, PSI4 will write temporary files to /tmp, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GBâ1TB or more, depending on the size of; the molecules to be studied) and (b) tell PSI4 the path to this; directory. Scratch file location can be specified through the; PSI_SCRATCH environment variable or, more flexibly, through; a resource file, ~/.psi4rc (example psi4/samples/example_psi4rc_file).; For convenience, ",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:3885,Usability,guid,guide,3885,". To instruct the I/O manager to send all files to; another location, say /scratch/user, add the following command to the ~/.psi4rc; file.:; psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case $MYSCRATCH) to set the scratch directory;; the following code will do that:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are ",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/external.html:4290,Usability,simpl,simply,4290,"import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 32 is; the checkpoint file that the user might want to retain in the working directory; (i.e., where PSI4 was launched from) for restart purposes. This is; accomplished by the commands below:; psi4_io.set_specific_path(32, './'); psi4_io.set_specific_retention(32, True). which is equivalent to; psi4_io.set_specific_path(PSIF_CHKPT, './'); psi4_io.set_specific_retention(PSIF_CHKPT, True). A guide to the contents of individual scratch files may be found at PSIOH Intermediate Files.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the PSI4 instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously.; To override any of these defaults for selected jobs, simply place the; appropriate commands from the snippets above in the input file itself. During; excecution, the ~/.psi4rc defaults will be loaded in first, but then the commands; in the input file will be executed. Executing PSI4 with the psi4 -m (for; messy) flag will prevent files being deleted at the end of the run:; psi4 -m. Alternately, the scratch directory can be set through the environment; variable PSI_SCRATCH (overrides ~/.psi4rc settings). (First line; for C shell; second line for bash.); setenv PSI_SCRATCH /scratch/user; export PSI_SCRATCH=/scratch/user. The ~/.psi4rc file can also be used to define constants that are accessible; in input files or to place any Python statements that should be executed; with every PSI4 instance. ThreadingÂ¶; Most new modules in PSI4 are designed to run efficiently on SMP architectures; via application of several thread models. The de facto standard for PSI4; involves using threaded BLAS/LAPACK (particularly Intelâs excellent MKL package); for most tensor-lik",MatchSource.WIKI,psi4manual/4.0b4/external.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/external.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:5417,Availability,avail,available,5417,"MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the c",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:7942,Availability,avail,available,7942,"cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decompo",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:13264,Availability,avail,available,13264,"lues: FALSE, TRUE; Default: FALSE. R_CONVERGENCEÂ¶. Convergence for the CC amplitudes. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-7. E_CONVERGENCEÂ¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-8. MAXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-C",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:13520,Availability,toler,tolerance,13520,"te that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-8. MAXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. d",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:13810,Availability,avail,available,13810,"_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the proc",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:2390,Deployability,configurat,configuration,2390,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:2452,Deployability,configurat,configuration,2452,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:2628,Deployability,configurat,configuration,2628,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:9869,Deployability,configurat,configuration,9869,"pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:10433,Deployability,configurat,configuration,10433,"wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural orbitals. fno-mp4; mp4 with frozen natural orbitals. fno-cepa(0); cepa(0) with frozen natural orbitals. fno-cepa(1); cepa(1) with frozen natural orbitals. fno-cepa(3); cepa(3) with frozen natural orbitals. fno-acpf; acpf with frozen natural orbitals. fno-aqcc; aqcc with frozen natural orbitals. fno-sdci; sdci with frozen natural orbitals. fno-dci; dci with frozen natural orbitals. df-ccsd; ccsd with density fitting. df-ccsd(t); ccsd(t) with density fitting. fno-df-ccsd; ccsd with density fitting and frozen natural orbitals. fno-df-ccsd(t); ccsd(t) with density fitting and",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:10500,Deployability,configurat,configuration,10500,"s methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural orbitals. fno-mp4; mp4 with frozen natural orbitals. fno-cepa(0); cepa(0) with frozen natural orbitals. fno-cepa(1); cepa(1) with frozen natural orbitals. fno-cepa(3); cepa(3) with frozen natural orbitals. fno-acpf; acpf with frozen natural orbitals. fno-aqcc; aqcc with frozen natural orbitals. fno-sdci; sdci with frozen natural orbitals. fno-dci; dci with frozen natural orbitals. df-ccsd; ccsd with density fitting. df-ccsd(t); ccsd(t) with density fitting. fno-df-ccsd; ccsd with density fitting and frozen natural orbitals. fno-df-ccsd(t); ccsd(t) with density fitting and frozen natural orbitals. Basic FNOCC KeywordsÂ¶. BASISÂ¶. Prima",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:13661,Deployability,configurat,configurations,13661,"AXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default:",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:15562,Deployability,configurat,configuration,15562,"mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; Frozen natural orbitals (FNO); QCISD(T), CCSD(T), MP4, and CEPA; Quadratic configuration interaction and coupled cluster; Many-body perturbation theory; Coupled electron pair approximation; Density-fitted coupled cluster; Gn theory; Supported methods; Basic FNOCC Keywords; BASIS; FREEZE_CORE; R_CONVERGENCE; E_CONVERGENCE; MAXITER; DIIS_MAX_VECS; NAT_ORBS; OCC_TOLERANCE; TRIPLES_LOW_MEMORY; CC_TIMINGS; DF_BASIS_CC; CHOLESKY_TOLERANCE; CEPA_NO_SINGLES; DIPMOM. Advanced FNOCC Keywords; SCS_MP2; MP2_SCALE_OS; MP2_SCALE_SS; SCS_CCSD; CC_SCALE_OS; CC_SCALE_SS; RUN_MP2; RUN_MP3; RUN_MP4; RUN_CCSD; RUN_CEPA; COMPUTE_TRIPLES; COMPUTE_MP4_TRIPLES; DFCC; CEPA_LEVEL. Previous topic; CC: Coupled Cluster Methods; Next topic; PSIMRCC Implementation of Mk-MRCC Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:16506,Deployability,update,updated,16506,"mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; Frozen natural orbitals (FNO); QCISD(T), CCSD(T), MP4, and CEPA; Quadratic configuration interaction and coupled cluster; Many-body perturbation theory; Coupled electron pair approximation; Density-fitted coupled cluster; Gn theory; Supported methods; Basic FNOCC Keywords; BASIS; FREEZE_CORE; R_CONVERGENCE; E_CONVERGENCE; MAXITER; DIIS_MAX_VECS; NAT_ORBS; OCC_TOLERANCE; TRIPLES_LOW_MEMORY; CC_TIMINGS; DF_BASIS_CC; CHOLESKY_TOLERANCE; CEPA_NO_SINGLES; DIPMOM. Advanced FNOCC Keywords; SCS_MP2; MP2_SCALE_OS; MP2_SCALE_SS; SCS_CCSD; CC_SCALE_OS; CC_SCALE_SS; RUN_MP2; RUN_MP3; RUN_MP4; RUN_CCSD; RUN_CEPA; COMPUTE_TRIPLES; COMPUTE_MP4_TRIPLES; DFCC; CEPA_LEVEL. Previous topic; CC: Coupled Cluster Methods; Next topic; PSIMRCC Implementation of Mk-MRCC Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:508,Energy Efficiency,reduce,reduced,508,"ï»¿. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4 â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4Â¶; Code author: A. Eugene DePrince; Section author: A. Eugene DePrince; Module: Keywords, PSI Variables, FNOCC. Frozen natural orbitals (FNO)Â¶; The computational cost of the QCISD(T), CCSD(T), CEPA, and MP4 methods can; be reduced by constructing a compact representation of the virtual space; based on the natural orbitals of second-order perturbation theory. The; most demanding steps in the CCSD and (T) algorithms scale as; and , where ; and represent the number of oribitals that are occupied and; unoccupied (virtual) in the reference function, respectively. By reducing; the the size of the virtual space, the cost of evaluating these terms; reduces by a factor of , where ; represents the number of virtual orbitals retained after the FNO; truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:934,Energy Efficiency,reduce,reduces,934,"ï»¿. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4 â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4Â¶; Code author: A. Eugene DePrince; Section author: A. Eugene DePrince; Module: Keywords, PSI Variables, FNOCC. Frozen natural orbitals (FNO)Â¶; The computational cost of the QCISD(T), CCSD(T), CEPA, and MP4 methods can; be reduced by constructing a compact representation of the virtual space; based on the natural orbitals of second-order perturbation theory. The; most demanding steps in the CCSD and (T) algorithms scale as; and , where ; and represent the number of oribitals that are occupied and; unoccupied (virtual) in the reference function, respectively. By reducing; the the size of the virtual space, the cost of evaluating these terms; reduces by a factor of , where ; represents the number of virtual orbitals retained after the FNO; truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:1608,Energy Efficiency,reduce,reduced,1608,"Keywords, PSI Variables, FNOCC. Frozen natural orbitals (FNO)Â¶; The computational cost of the QCISD(T), CCSD(T), CEPA, and MP4 methods can; be reduced by constructing a compact representation of the virtual space; based on the natural orbitals of second-order perturbation theory. The; most demanding steps in the CCSD and (T) algorithms scale as; and , where ; and represent the number of oribitals that are occupied and; unoccupied (virtual) in the reference function, respectively. By reducing; the the size of the virtual space, the cost of evaluating these terms; reduces by a factor of , where ; represents the number of virtual orbitals retained after the FNO; truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approxi",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:2033,Energy Efficiency,energy,energy,2033,"number of virtual orbitals retained after the FNO; truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:2049,Energy Efficiency,energy,energy,2049,"number of virtual orbitals retained after the FNO; truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:3748,Energy Efficiency,energy,energy,3748," the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation ener",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:3771,Energy Efficiency,energy,energy,3771," the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation ener",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:3947,Energy Efficiency,energy,energy,3947,"t single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theo",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:3991,Energy Efficiency,energy,energy,3991,"rs. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are t",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4032,Energy Efficiency,energy,energy,4032,"y omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indica",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4069,Energy Efficiency,energy,energy,4069,"onlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contribut",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4116,Energy Efficiency,energy,energy,4116,"at CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order,",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4162,Energy Efficiency,energy,energy,4162,"omplexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected tr",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4205,Energy Efficiency,energy,energy,4205,"s in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4244,Energy Efficiency,energy,energy,4244,"cts of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these;",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4289,Energy Efficiency,energy,energy,4289,"ay be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywo",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4333,Energy Efficiency,energy,energy,4333," the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4374,Energy Efficiency,energy,energy,4374,"nd CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNO",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4411,Energy Efficiency,energy,energy,4411,"losed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4461,Energy Efficiency,energy,energy,4461,"body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair appr",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4510,Energy Efficiency,energy,energy,4510,"ods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be vie",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4556,Energy Efficiency,energy,energy,4556,"and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-exten",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4598,Energy Efficiency,energy,energy,4598,"energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4645,Energy Efficiency,energy,energy,4645," CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4691,Energy Efficiency,energy,energy,4691,"g is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires few",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4734,Energy Efficiency,energy,energy,4734,"ation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:4773,Energy Efficiency,energy,energy,4773,"') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:5087,Energy Efficiency,energy,energy,5087,"36941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:5824,Energy Efficiency,power,power,5824,"ed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Ta",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:6316,Energy Efficiency,energy,energy,6316,"; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with res",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:6598,Energy Efficiency,energy,energy,6598,"solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:7032,Energy Efficiency,energy,energy,7032,"ows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:7086,Energy Efficiency,energy,energy,7086,"ows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:7129,Energy Efficiency,energy,energy,7129,"quations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inpre",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:7289,Energy Efficiency,energy,energy,7289,"have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:7864,Energy Efficiency,reduce,reduce,7864,"es for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-i",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:8908,Energy Efficiency,energy,energy,8908,"tional scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration i",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:9451,Energy Efficiency,energy,energy,9451,"d predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration in",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:9470,Energy Efficiency,energy,energy,9470,"d predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration in",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:9721,Energy Efficiency,energy,energy,9721,"egrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen nat",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:9738,Energy Efficiency,energy,energy,9738,"r.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natu",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:9757,Energy Efficiency,energy,energy,9757,"r.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natu",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:12057,Energy Efficiency,energy,energy,12057,"n natural orbitals. fno-cepa(3); cepa(3) with frozen natural orbitals. fno-acpf; acpf with frozen natural orbitals. fno-aqcc; aqcc with frozen natural orbitals. fno-sdci; sdci with frozen natural orbitals. fno-dci; dci with frozen natural orbitals. df-ccsd; ccsd with density fitting. df-ccsd(t); ccsd(t) with density fitting. fno-df-ccsd; ccsd with density fitting and frozen natural orbitals. fno-df-ccsd(t); ccsd(t) with density fitting and frozen natural orbitals. Basic FNOCC KeywordsÂ¶. BASISÂ¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. FREEZE_COREÂ¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For PSI, the standard number of core orbitals is the number of orbitals in the nearest previous noble gas atom. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE; Default: FALSE. R_CONVERGENCEÂ¶. Convergence for the CC amplitudes. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-7. E_CONVERGENCEÂ¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-8. MAXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NA",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:12440,Energy Efficiency,energy,energy,12440,"ccsd(t) with density fitting and frozen natural orbitals. Basic FNOCC KeywordsÂ¶. BASISÂ¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. FREEZE_COREÂ¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For PSI, the standard number of core orbitals is the number of orbitals in the nearest previous noble gas atom. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE; Default: FALSE. R_CONVERGENCEÂ¶. Convergence for the CC amplitudes. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-7. E_CONVERGENCEÂ¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-8. MAXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:14425,Energy Efficiency,energy,energy,14425,"or df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:14496,Energy Efficiency,energy,energy,14496," Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; Fr",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:14567,Energy Efficiency,energy,energy,14567,"the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; Frozen natural orbitals (FNO); QCISD(T), CCSD(T), MP4, and CEPA; Quadrati",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:7203,Integrability,depend,depend,7203,"have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:9460,Integrability,wrap,wrapper,9460,"d predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration in",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:2390,Modifiability,config,configuration,2390,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:2452,Modifiability,config,configuration,2452,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:2628,Modifiability,config,configuration,2628,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:7549,Modifiability,coupling,coupling,7549," amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by th",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:9869,Modifiability,config,configuration,9869,"pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:10433,Modifiability,config,configuration,10433,"wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural orbitals. fno-mp4; mp4 with frozen natural orbitals. fno-cepa(0); cepa(0) with frozen natural orbitals. fno-cepa(1); cepa(1) with frozen natural orbitals. fno-cepa(3); cepa(3) with frozen natural orbitals. fno-acpf; acpf with frozen natural orbitals. fno-aqcc; aqcc with frozen natural orbitals. fno-sdci; sdci with frozen natural orbitals. fno-dci; dci with frozen natural orbitals. df-ccsd; ccsd with density fitting. df-ccsd(t); ccsd(t) with density fitting. fno-df-ccsd; ccsd with density fitting and frozen natural orbitals. fno-df-ccsd(t); ccsd(t) with density fitting and",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:10500,Modifiability,config,configuration,10500,"s methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural orbitals. fno-mp4; mp4 with frozen natural orbitals. fno-cepa(0); cepa(0) with frozen natural orbitals. fno-cepa(1); cepa(1) with frozen natural orbitals. fno-cepa(3); cepa(3) with frozen natural orbitals. fno-acpf; acpf with frozen natural orbitals. fno-aqcc; aqcc with frozen natural orbitals. fno-sdci; sdci with frozen natural orbitals. fno-dci; dci with frozen natural orbitals. df-ccsd; ccsd with density fitting. df-ccsd(t); ccsd(t) with density fitting. fno-df-ccsd; ccsd with density fitting and frozen natural orbitals. fno-df-ccsd(t); ccsd(t) with density fitting and frozen natural orbitals. Basic FNOCC KeywordsÂ¶. BASISÂ¶. Prima",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:13661,Modifiability,config,configurations,13661,"AXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default:",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:15562,Modifiability,config,configuration,15562,"mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; Frozen natural orbitals (FNO); QCISD(T), CCSD(T), MP4, and CEPA; Quadratic configuration interaction and coupled cluster; Many-body perturbation theory; Coupled electron pair approximation; Density-fitted coupled cluster; Gn theory; Supported methods; Basic FNOCC Keywords; BASIS; FREEZE_CORE; R_CONVERGENCE; E_CONVERGENCE; MAXITER; DIIS_MAX_VECS; NAT_ORBS; OCC_TOLERANCE; TRIPLES_LOW_MEMORY; CC_TIMINGS; DF_BASIS_CC; CHOLESKY_TOLERANCE; CEPA_NO_SINGLES; DIPMOM. Advanced FNOCC Keywords; SCS_MP2; MP2_SCALE_OS; MP2_SCALE_SS; SCS_CCSD; CC_SCALE_OS; CC_SCALE_SS; RUN_MP2; RUN_MP3; RUN_MP4; RUN_CCSD; RUN_CEPA; COMPUTE_TRIPLES; COMPUTE_MP4_TRIPLES; DFCC; CEPA_LEVEL. Previous topic; CC: Coupled Cluster Methods; Next topic; PSIMRCC Implementation of Mk-MRCC Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:8213,Performance,optimiz,optimized,8213,"itly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override ",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:7761,Safety,avoid,avoid,7761,"es for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-i",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:2717,Usability,simpl,simplified,2717,"issing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:6521,Usability,simpl,simple,6521,"ed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-e",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc-1.html:7045,Usability,simpl,simply,7045,"ows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy",MatchSource.WIKI,psi4manual/4.0b4/fnocc-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:5417,Availability,avail,available,5417,"MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the c",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:7942,Availability,avail,available,7942,"cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decompo",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:13264,Availability,avail,available,13264,"lues: FALSE, TRUE; Default: FALSE. R_CONVERGENCEÂ¶. Convergence for the CC amplitudes. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-7. E_CONVERGENCEÂ¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-8. MAXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-C",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:13520,Availability,toler,tolerance,13520,"te that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-8. MAXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. d",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:13810,Availability,avail,available,13810,"_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the proc",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:2390,Deployability,configurat,configuration,2390,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:2452,Deployability,configurat,configuration,2452,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:2628,Deployability,configurat,configuration,2628,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:9869,Deployability,configurat,configuration,9869,"pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:10433,Deployability,configurat,configuration,10433,"wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural orbitals. fno-mp4; mp4 with frozen natural orbitals. fno-cepa(0); cepa(0) with frozen natural orbitals. fno-cepa(1); cepa(1) with frozen natural orbitals. fno-cepa(3); cepa(3) with frozen natural orbitals. fno-acpf; acpf with frozen natural orbitals. fno-aqcc; aqcc with frozen natural orbitals. fno-sdci; sdci with frozen natural orbitals. fno-dci; dci with frozen natural orbitals. df-ccsd; ccsd with density fitting. df-ccsd(t); ccsd(t) with density fitting. fno-df-ccsd; ccsd with density fitting and frozen natural orbitals. fno-df-ccsd(t); ccsd(t) with density fitting and",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:10500,Deployability,configurat,configuration,10500,"s methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural orbitals. fno-mp4; mp4 with frozen natural orbitals. fno-cepa(0); cepa(0) with frozen natural orbitals. fno-cepa(1); cepa(1) with frozen natural orbitals. fno-cepa(3); cepa(3) with frozen natural orbitals. fno-acpf; acpf with frozen natural orbitals. fno-aqcc; aqcc with frozen natural orbitals. fno-sdci; sdci with frozen natural orbitals. fno-dci; dci with frozen natural orbitals. df-ccsd; ccsd with density fitting. df-ccsd(t); ccsd(t) with density fitting. fno-df-ccsd; ccsd with density fitting and frozen natural orbitals. fno-df-ccsd(t); ccsd(t) with density fitting and frozen natural orbitals. Basic FNOCC KeywordsÂ¶. BASISÂ¶. Prima",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:13661,Deployability,configurat,configurations,13661,"AXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default:",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:15562,Deployability,configurat,configuration,15562,"mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; Frozen natural orbitals (FNO); QCISD(T), CCSD(T), MP4, and CEPA; Quadratic configuration interaction and coupled cluster; Many-body perturbation theory; Coupled electron pair approximation; Density-fitted coupled cluster; Gn theory; Supported methods; Basic FNOCC Keywords; BASIS; FREEZE_CORE; R_CONVERGENCE; E_CONVERGENCE; MAXITER; DIIS_MAX_VECS; NAT_ORBS; OCC_TOLERANCE; TRIPLES_LOW_MEMORY; CC_TIMINGS; DF_BASIS_CC; CHOLESKY_TOLERANCE; CEPA_NO_SINGLES; DIPMOM. Advanced FNOCC Keywords; SCS_MP2; MP2_SCALE_OS; MP2_SCALE_SS; SCS_CCSD; CC_SCALE_OS; CC_SCALE_SS; RUN_MP2; RUN_MP3; RUN_MP4; RUN_CCSD; RUN_CEPA; COMPUTE_TRIPLES; COMPUTE_MP4_TRIPLES; DFCC; CEPA_LEVEL. Previous topic; CC: Coupled Cluster Methods; Next topic; PSIMRCC Implementation of Mk-MRCC Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:16506,Deployability,update,updated,16506,"mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; Frozen natural orbitals (FNO); QCISD(T), CCSD(T), MP4, and CEPA; Quadratic configuration interaction and coupled cluster; Many-body perturbation theory; Coupled electron pair approximation; Density-fitted coupled cluster; Gn theory; Supported methods; Basic FNOCC Keywords; BASIS; FREEZE_CORE; R_CONVERGENCE; E_CONVERGENCE; MAXITER; DIIS_MAX_VECS; NAT_ORBS; OCC_TOLERANCE; TRIPLES_LOW_MEMORY; CC_TIMINGS; DF_BASIS_CC; CHOLESKY_TOLERANCE; CEPA_NO_SINGLES; DIPMOM. Advanced FNOCC Keywords; SCS_MP2; MP2_SCALE_OS; MP2_SCALE_SS; SCS_CCSD; CC_SCALE_OS; CC_SCALE_SS; RUN_MP2; RUN_MP3; RUN_MP4; RUN_CCSD; RUN_CEPA; COMPUTE_TRIPLES; COMPUTE_MP4_TRIPLES; DFCC; CEPA_LEVEL. Previous topic; CC: Coupled Cluster Methods; Next topic; PSIMRCC Implementation of Mk-MRCC Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:508,Energy Efficiency,reduce,reduced,508,"ï»¿. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4 â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4Â¶; Code author: A. Eugene DePrince; Section author: A. Eugene DePrince; Module: Keywords, PSI Variables, FNOCC. Frozen natural orbitals (FNO)Â¶; The computational cost of the QCISD(T), CCSD(T), CEPA, and MP4 methods can; be reduced by constructing a compact representation of the virtual space; based on the natural orbitals of second-order perturbation theory. The; most demanding steps in the CCSD and (T) algorithms scale as; and , where ; and represent the number of oribitals that are occupied and; unoccupied (virtual) in the reference function, respectively. By reducing; the the size of the virtual space, the cost of evaluating these terms; reduces by a factor of , where ; represents the number of virtual orbitals retained after the FNO; truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:934,Energy Efficiency,reduce,reduces,934,"ï»¿. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4 â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4Â¶; Code author: A. Eugene DePrince; Section author: A. Eugene DePrince; Module: Keywords, PSI Variables, FNOCC. Frozen natural orbitals (FNO)Â¶; The computational cost of the QCISD(T), CCSD(T), CEPA, and MP4 methods can; be reduced by constructing a compact representation of the virtual space; based on the natural orbitals of second-order perturbation theory. The; most demanding steps in the CCSD and (T) algorithms scale as; and , where ; and represent the number of oribitals that are occupied and; unoccupied (virtual) in the reference function, respectively. By reducing; the the size of the virtual space, the cost of evaluating these terms; reduces by a factor of , where ; represents the number of virtual orbitals retained after the FNO; truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:1608,Energy Efficiency,reduce,reduced,1608,"Keywords, PSI Variables, FNOCC. Frozen natural orbitals (FNO)Â¶; The computational cost of the QCISD(T), CCSD(T), CEPA, and MP4 methods can; be reduced by constructing a compact representation of the virtual space; based on the natural orbitals of second-order perturbation theory. The; most demanding steps in the CCSD and (T) algorithms scale as; and , where ; and represent the number of oribitals that are occupied and; unoccupied (virtual) in the reference function, respectively. By reducing; the the size of the virtual space, the cost of evaluating these terms; reduces by a factor of , where ; represents the number of virtual orbitals retained after the FNO; truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approxi",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:2033,Energy Efficiency,energy,energy,2033,"number of virtual orbitals retained after the FNO; truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:2049,Energy Efficiency,energy,energy,2049,"number of virtual orbitals retained after the FNO; truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:3748,Energy Efficiency,energy,energy,3748," the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation ener",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:3771,Energy Efficiency,energy,energy,3771," the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation ener",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:3947,Energy Efficiency,energy,energy,3947,"t single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theo",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:3991,Energy Efficiency,energy,energy,3991,"rs. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are t",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4032,Energy Efficiency,energy,energy,4032,"y omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indica",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4069,Energy Efficiency,energy,energy,4069,"onlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contribut",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4116,Energy Efficiency,energy,energy,4116,"at CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order,",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4162,Energy Efficiency,energy,energy,4162,"omplexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected tr",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4205,Energy Efficiency,energy,energy,4205,"s in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4244,Energy Efficiency,energy,energy,4244,"cts of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these;",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4289,Energy Efficiency,energy,energy,4289,"ay be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywo",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4333,Energy Efficiency,energy,energy,4333," the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4374,Energy Efficiency,energy,energy,4374,"nd CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNO",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4411,Energy Efficiency,energy,energy,4411,"losed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4461,Energy Efficiency,energy,energy,4461,"body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair appr",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4510,Energy Efficiency,energy,energy,4510,"ods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be vie",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4556,Energy Efficiency,energy,energy,4556,"and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-exten",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4598,Energy Efficiency,energy,energy,4598,"energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4645,Energy Efficiency,energy,energy,4645," CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4691,Energy Efficiency,energy,energy,4691,"g is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires few",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4734,Energy Efficiency,energy,energy,4734,"ation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:4773,Energy Efficiency,energy,energy,4773,"') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:5087,Energy Efficiency,energy,energy,5087,"36941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:5824,Energy Efficiency,power,power,5824,"ed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Ta",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:6316,Energy Efficiency,energy,energy,6316,"; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximationÂ¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with res",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:6598,Energy Efficiency,energy,energy,6598,"solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:7032,Energy Efficiency,energy,energy,7032,"ows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:7086,Energy Efficiency,energy,energy,7086,"ows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:7129,Energy Efficiency,energy,energy,7129,"quations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inpre",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:7289,Energy Efficiency,energy,energy,7289,"have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:7864,Energy Efficiency,reduce,reduce,7864,"es for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-i",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:8908,Energy Efficiency,energy,energy,8908,"tional scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration i",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:9451,Energy Efficiency,energy,energy,9451,"d predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration in",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:9470,Energy Efficiency,energy,energy,9470,"d predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration in",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:9721,Energy Efficiency,energy,energy,9721,"egrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen nat",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:9738,Energy Efficiency,energy,energy,9738,"r.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natu",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:9757,Energy Efficiency,energy,energy,9757,"r.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natu",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:12057,Energy Efficiency,energy,energy,12057,"n natural orbitals. fno-cepa(3); cepa(3) with frozen natural orbitals. fno-acpf; acpf with frozen natural orbitals. fno-aqcc; aqcc with frozen natural orbitals. fno-sdci; sdci with frozen natural orbitals. fno-dci; dci with frozen natural orbitals. df-ccsd; ccsd with density fitting. df-ccsd(t); ccsd(t) with density fitting. fno-df-ccsd; ccsd with density fitting and frozen natural orbitals. fno-df-ccsd(t); ccsd(t) with density fitting and frozen natural orbitals. Basic FNOCC KeywordsÂ¶. BASISÂ¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. FREEZE_COREÂ¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For PSI, the standard number of core orbitals is the number of orbitals in the nearest previous noble gas atom. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE; Default: FALSE. R_CONVERGENCEÂ¶. Convergence for the CC amplitudes. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-7. E_CONVERGENCEÂ¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-8. MAXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NA",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:12440,Energy Efficiency,energy,energy,12440,"ccsd(t) with density fitting and frozen natural orbitals. Basic FNOCC KeywordsÂ¶. BASISÂ¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. FREEZE_COREÂ¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For PSI, the standard number of core orbitals is the number of orbitals in the nearest previous noble gas atom. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE; Default: FALSE. R_CONVERGENCEÂ¶. Convergence for the CC amplitudes. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-7. E_CONVERGENCEÂ¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-8. MAXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:14425,Energy Efficiency,energy,energy,14425,"or df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:14496,Energy Efficiency,energy,energy,14496," Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; Fr",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:14567,Energy Efficiency,energy,energy,14567,"the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; Frozen natural orbitals (FNO); QCISD(T), CCSD(T), MP4, and CEPA; Quadrati",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:7203,Integrability,depend,depend,7203,"have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:9460,Integrability,wrap,wrapper,9460,"d predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration in",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:2390,Modifiability,config,configuration,2390,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:2452,Modifiability,config,configuration,2452,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:2628,Modifiability,config,configuration,2628,"f the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to pertur",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:7549,Modifiability,coupling,coupling,7549," amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by th",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:9869,Modifiability,config,configuration,9869,"pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override this behavior through this keyword. Gn theoryÂ¶; The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]. The G2 procedure may be called through the; energy() wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:10433,Modifiability,config,configuration,10433,"wrapper:; energy('gaussian-2'). Supported methodsÂ¶; The various methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural orbitals. fno-mp4; mp4 with frozen natural orbitals. fno-cepa(0); cepa(0) with frozen natural orbitals. fno-cepa(1); cepa(1) with frozen natural orbitals. fno-cepa(3); cepa(3) with frozen natural orbitals. fno-acpf; acpf with frozen natural orbitals. fno-aqcc; aqcc with frozen natural orbitals. fno-sdci; sdci with frozen natural orbitals. fno-dci; dci with frozen natural orbitals. df-ccsd; ccsd with density fitting. df-ccsd(t); ccsd(t) with density fitting. fno-df-ccsd; ccsd with density fitting and frozen natural orbitals. fno-df-ccsd(t); ccsd(t) with density fitting and",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:10500,Modifiability,config,configuration,10500,"s methods supported by the FNOCC module in PSI4 are detailed; in Table FNOCC Methods. Note that these methods; are implemented for closed-shell references only. For open-shell references,; the calls energy('mp2.5'), energy('mp3'), and energy('mp4') will; default to the DETCI implementations of these methods. name; calls method. qcisd; quadratic configuration interaction singles doubles. qcisd(t); qcisd with perturbative triples. mp2.5; average of second- and third-order perturbation theories. mp3; third-order perturbation theory. mp4(sdq); fourth-order perturbation theory, minus triples contribution. mp4; full fourth-order perturbation theory. cepa(0); coupled electron pair approximation, variant 0. cepa(1); coupled electron pair approximation, variant 1. cepa(3); coupled electron pair approximation, variant 3. acpf; averaged coupled-pair functional. aqcc; averaged quadratic coupled-cluster. sdci; configuration interaction with single and double excitations. dci; configuration interaction with double excitations. fno-qcisd; qcisd with frozen natural orbitals. fno-qcisd(t); qcisd(t) with frozen natural orbitals. fno-ccsd; coupled cluster singles doubles with frozen natural orbitals. fno-ccsd(t); ccsd with perturbative triples and frozen natural orbitals. fno-mp3; mp3 with frozen natural orbitals. fno-mp4(sdq); mp4(sdq) with frozen natural orbitals. fno-mp4; mp4 with frozen natural orbitals. fno-cepa(0); cepa(0) with frozen natural orbitals. fno-cepa(1); cepa(1) with frozen natural orbitals. fno-cepa(3); cepa(3) with frozen natural orbitals. fno-acpf; acpf with frozen natural orbitals. fno-aqcc; aqcc with frozen natural orbitals. fno-sdci; sdci with frozen natural orbitals. fno-dci; dci with frozen natural orbitals. df-ccsd; ccsd with density fitting. df-ccsd(t); ccsd(t) with density fitting. fno-df-ccsd; ccsd with density fitting and frozen natural orbitals. fno-df-ccsd(t); ccsd(t) with density fitting and frozen natural orbitals. Basic FNOCC KeywordsÂ¶. BASISÂ¶. Prima",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:13661,Modifiability,config,configurations,13661,"AXITERÂ¶. Maximum number of CC iterations. Type: integer; Default: 100. DIIS_MAX_VECSÂ¶. Desired number of DIIS vectors. Type: integer; Default: 8. NAT_ORBSÂ¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCEÂ¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD/CCSD(T) ( only valid if NAT_ORBS = true ). Type: conv double; Default: 1.0e-6. TRIPLES_LOW_MEMORYÂ¶. Do use low memory option for triples contribution? Note that this option is enabled automatically if the memory requirements of the conventional algorithm would exceed the available resources. Type: boolean; Default: false. CC_TIMINGSÂ¶. Do time each cc diagram?. Type: boolean; Default: false. DF_BASIS_CCÂ¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCEÂ¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLESÂ¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOMÂ¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC KeywordsÂ¶. SCS_MP2Â¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OSÂ¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SSÂ¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSDÂ¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OSÂ¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SSÂ¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2Â¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3Â¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4Â¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default:",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:15562,Modifiability,config,configuration,15562,"mp4 energy?. Type: boolean; Default: false. RUN_CCSDÂ¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPAÂ¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value wonât have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLESÂ¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLESÂ¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCCÂ¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVELÂ¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value wonât have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; Frozen natural orbitals (FNO); QCISD(T), CCSD(T), MP4, and CEPA; Quadratic configuration interaction and coupled cluster; Many-body perturbation theory; Coupled electron pair approximation; Density-fitted coupled cluster; Gn theory; Supported methods; Basic FNOCC Keywords; BASIS; FREEZE_CORE; R_CONVERGENCE; E_CONVERGENCE; MAXITER; DIIS_MAX_VECS; NAT_ORBS; OCC_TOLERANCE; TRIPLES_LOW_MEMORY; CC_TIMINGS; DF_BASIS_CC; CHOLESKY_TOLERANCE; CEPA_NO_SINGLES; DIPMOM. Advanced FNOCC Keywords; SCS_MP2; MP2_SCALE_OS; MP2_SCALE_SS; SCS_CCSD; CC_SCALE_OS; CC_SCALE_SS; RUN_MP2; RUN_MP3; RUN_MP4; RUN_CCSD; RUN_CEPA; COMPUTE_TRIPLES; COMPUTE_MP4_TRIPLES; DFCC; CEPA_LEVEL. Previous topic; CC: Coupled Cluster Methods; Next topic; PSIMRCC Implementation of Mk-MRCC Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Theoretical Methods: SCF to FCI Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:8213,Performance,optimiz,optimized,8213,"itly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-index ERI tensor.; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; df_basis_cc cholesky; basis aug-cc-pvdz; freeze_core true; }; energy('df-ccsd(t)'). The accuracy of the Cholesky decomposition may be controlled through the; keyword CHOLESKY_TOLERANCE. Note that the keyword; SCF_TYPE has not been specified here. By default, a DF-CCSD(T); computation exploits DF technology in the SCF procedure, but one can; override ",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:7761,Safety,avoid,avoid,7761,"es for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy of the DF-CCSD(T) method are; described in Ref. [DePrince:2013:inprep].; The default auxiliary basis set for a DF-CCSD computation is chosen to be; the RI set (optimized for DFMP2) most similar to the primary basis set.; For example, if the primary basis set is aug-cc-pVDZ, the default; auxiliary basis set will be the aug-cc-pVDZ-RI set. PSI4 of course; allows the user to specify any supported predefined basis set as the; auxiliary set. Alternatively, the user can request a set defined by the; partial Cholesky decomposition of the 4-index ERI tensor.; The following is a minimal input file that describes a DF-CCSD(T); computation using 3-index integrals obtained by partial Cholesky; decomposition of the 4-i",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:2717,Usability,simpl,simplified,2717,"issing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid method name with âfnoâ in; the energy call as; energy('fno-ccsd(t)'). QCISD(T), CCSD(T), MP4, and CEPAÂ¶; The FNOCC module in PSI4 supports several related many-body quantum; chemistry methods, including the CCSD(T) and QCISD(T) methods, several; orders of many-body perturbation theory (MP2-MP4), and a family methods; related to the coupled electron pair approximation (CEPA). Quadratic configuration interaction and coupled clusterÂ¶; The quadratic configuration interaction singles doubles (QCISD) method of; Pople, Head-Gordon, and Raghavachari [Pople:1987:5968] was originally; presented as a size-consistent extension of configuration interaction; singles doubles (CISD). The method can also be obtained as a; simplified version of the coupled cluster singles doubles (CCSD); method [Purvis:1982]. Consider the set of equations defining CCSD:. (1); where we have chosen the intermediate normalization,; , and the symbols ; and represent single and double excitation operators. The; QCISD equations can be obtained by omitting all but two terms that; are nonlinear in and :. (2); QCISD is slightly cheaper that CCSD computationally, but it retains the; complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. Many-body perturbation theoryÂ¶; QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an; example of the results for a computation run with the",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:6521,Usability,simpl,simple,6521,"ed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see Ref. [Wennmohs:2008:217].; What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-e",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/fnocc.html:7045,Usability,simpl,simply,7045,"ows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; PSI4. We begin with the CISD wave function. (3); where we have chosen the intermediate normalization, . The CISD correlation energy is given by. (4); and the amplitudes can be determined by the solution to the coupled set of; eqations:. (5); The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, , with generalized shifts for the; doubles and singles equations, and :. (6); These shifts approximate the effects of triple and quadruple excitations.; The values for and used in several; coupled-pair methods are given in Table CEPA Shifts. Note that these shifts are defined in a spin-free; formalism for closed-shell references only. method. sdci. dci. NA. cepa(0); 0; 0. cepa(1). cepa(3). acpf. aqcc. The pair correlation energy, , is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. (7); Methods whose shifts ( and ) do not; explicitly depend on orbitals or (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled clusterÂ¶; Density fitting (DF) or resolution of the identity (RI) techniques are; popular in quantum chemistry to avoid the computation and storage of the; 4-index electron repulsion integral (ERI) tensor and even to reduce the; computational scaling of some terms. DF-CCSD(T) computations are; available in PSI4, with or without the use of FNOs, through the FNOCC; module. The implementation and accuracy",MatchSource.WIKI,psi4manual/4.0b4/fnocc.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc.html
https://psicode.org/psi4manual/4.0b4/freq-1.html:413,Availability,avail,available,413,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq-1.html
https://psicode.org/psi4manual/4.0b4/freq-1.html:490,Availability,avail,availability,490,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq-1.html
https://psicode.org/psi4manual/4.0b4/freq-1.html:979,Availability,avail,available,979,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq-1.html
https://psicode.org/psi4manual/4.0b4/freq-1.html:1040,Availability,avail,available,1040,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq-1.html
https://psicode.org/psi4manual/4.0b4/freq-1.html:1983,Deployability,update,updated,1983,"n. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/freq-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq-1.html
https://psicode.org/psi4manual/4.0b4/freq-1.html:361,Energy Efficiency,energy,energy,361,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq-1.html
https://psicode.org/psi4manual/4.0b4/freq-1.html:939,Energy Efficiency,energy,energy,939,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq-1.html
https://psicode.org/psi4manual/4.0b4/freq-1.html:1094,Performance,perform,performed,1094,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq-1.html
https://psicode.org/psi4manual/4.0b4/freq.html:413,Availability,avail,available,413,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq.html
https://psicode.org/psi4manual/4.0b4/freq.html:490,Availability,avail,availability,490,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq.html
https://psicode.org/psi4manual/4.0b4/freq.html:979,Availability,avail,available,979,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq.html
https://psicode.org/psi4manual/4.0b4/freq.html:1040,Availability,avail,available,1040,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq.html
https://psicode.org/psi4manual/4.0b4/freq.html:1983,Deployability,update,updated,1983,"n. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/freq.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq.html
https://psicode.org/psi4manual/4.0b4/freq.html:361,Energy Efficiency,energy,energy,361,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq.html
https://psicode.org/psi4manual/4.0b4/freq.html:939,Energy Efficiency,energy,energy,939,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq.html
https://psicode.org/psi4manual/4.0b4/freq.html:1094,Performance,perform,performed,1094,"ï»¿. Frequency â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». FrequencyÂ¶. frequency(name[, func, dertype, irrep, molecule])[source]Â¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) â 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) â 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- theyâre not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) â -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) â h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Psithon Functions: Invoking a Calculation Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4manual/4.0b4/freq.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq.html
https://psicode.org/psi4manual/4.0b4/genindex.html:2854,Availability,avail,available,2854,"T). ALGORITHM (DCFT). aliases module. all_casings() in module procutil. ANALYZE (CCENERGY). (CCRESPONSE). AO_BASIS (CCDENSITY). (CCENERGY). (CCLAMBDA). (CCSORT). (DCFT). (TRANSQT). (TRANSQT2). AQCCCORRELATIONENERGY. AQCCDIPOLEX. AQCCDIPOLEY. AQCCDIPOLEZ. AQCCQUADRUPOLEXX. AQCCQUADRUPOLEXY. AQCCQUADRUPOLEXZ. AQCCQUADRUPOLEYY. AQCCQUADRUPOLEYZ. AQCCQUADRUPOLEZZ. AQCCTOTALENERGY. arbitrary-order coupled-cluster theory; . CI. arbitrary-order perturbation theory; . CI. architectures. atom_at_position() LibmintsMolecule method. atom_entry() LibmintsMolecule method. atom_to_unique() LibmintsMolecule method. atom_to_unique_offset() LibmintsMolecule method. auto_fragments() in module wrappers. Molecule method. AVG_STATES (DETCI). AVG_WEIGHTS (DETCI). B. B_RAS3_MAX (DETCI). bad_option_syntax() in module input. BAKERJCC93 module, [1]. BAKERJCC96 module, [1]. banner() in module text. BASIC module, [1]. BASIS (DFMP2). (DFTSAPT). (MINTS). (SAPT). (SCF). basis set; . adding new. auxiliary. available by element. available by family. default auxiliary. extrapolation. multiple within molecule. specification. BASIS_GUESS (SCF). BasisFamily class in basislist. basislist module. basislistdunning module. basislistother module. BB_M_FILE (TRANSQT). BBB(T)CORRECTIONENERGY. BENCH (DFTSAPT). (GLOBALS). BENCH12 module, [1]. BENDAZZOLI (DETCI). BFS() in module molutil. Molecule method. BRUECKNER_MAXITER (FNOCC). BRUECKNER_ORBS_R_CONVERGENCE (CCENERGY). BRUECKNERCONVERGED. bugs. build_b2plyp_superfunctional() in module functional. build_b2plypd2gr_superfunctional() in module functional. build_b2plypd2p4_superfunctional() in module functional. build_b2plypd3bj_superfunctional() in module functional. build_b2plypd3zero_superfunctional() in module functional. build_b3_x_functional() in module functional. build_b3lyp5_superfunctional() in module functional. build_b3lyp5d2gr_superfunctional() in module functional. build_b3lyp5d2p4_superfunctional() in module functional. build_b3lyp5d3bj_superfunctio",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:2876,Availability,avail,available,2876," aliases module. all_casings() in module procutil. ANALYZE (CCENERGY). (CCRESPONSE). AO_BASIS (CCDENSITY). (CCENERGY). (CCLAMBDA). (CCSORT). (DCFT). (TRANSQT). (TRANSQT2). AQCCCORRELATIONENERGY. AQCCDIPOLEX. AQCCDIPOLEY. AQCCDIPOLEZ. AQCCQUADRUPOLEXX. AQCCQUADRUPOLEXY. AQCCQUADRUPOLEXZ. AQCCQUADRUPOLEYY. AQCCQUADRUPOLEYZ. AQCCQUADRUPOLEZZ. AQCCTOTALENERGY. arbitrary-order coupled-cluster theory; . CI. arbitrary-order perturbation theory; . CI. architectures. atom_at_position() LibmintsMolecule method. atom_entry() LibmintsMolecule method. atom_to_unique() LibmintsMolecule method. atom_to_unique_offset() LibmintsMolecule method. auto_fragments() in module wrappers. Molecule method. AVG_STATES (DETCI). AVG_WEIGHTS (DETCI). B. B_RAS3_MAX (DETCI). bad_option_syntax() in module input. BAKERJCC93 module, [1]. BAKERJCC96 module, [1]. banner() in module text. BASIC module, [1]. BASIS (DFMP2). (DFTSAPT). (MINTS). (SAPT). (SCF). basis set; . adding new. auxiliary. available by element. available by family. default auxiliary. extrapolation. multiple within molecule. specification. BASIS_GUESS (SCF). BasisFamily class in basislist. basislist module. basislistdunning module. basislistother module. BB_M_FILE (TRANSQT). BBB(T)CORRECTIONENERGY. BENCH (DFTSAPT). (GLOBALS). BENCH12 module, [1]. BENDAZZOLI (DETCI). BFS() in module molutil. Molecule method. BRUECKNER_MAXITER (FNOCC). BRUECKNER_ORBS_R_CONVERGENCE (CCENERGY). BRUECKNERCONVERGED. bugs. build_b2plyp_superfunctional() in module functional. build_b2plypd2gr_superfunctional() in module functional. build_b2plypd2p4_superfunctional() in module functional. build_b2plypd3bj_superfunctional() in module functional. build_b2plypd3zero_superfunctional() in module functional. build_b3_x_functional() in module functional. build_b3lyp5_superfunctional() in module functional. build_b3lyp5d2gr_superfunctional() in module functional. build_b3lyp5d2p4_superfunctional() in module functional. build_b3lyp5d3bj_superfunctional() in module functi",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:15519,Availability,avail,available,15519,"to_scratch() in module util. CORE module, [1]. corl_xtpl_helgaker_2() in module wrappers. CORR_ANSATZ (PSIMRCC). CORR_CCSD_T (PSIMRCC). CORR_CHARGE (PSIMRCC). CORR_MULTP (PSIMRCC). CORR_WFN (PSIMRCC). corresponding_dualfit() in module basislist. corresponding_jkfit() in module basislist. corresponding_rifit() in module basislist. Cotton-ordering. counterpoise_correct(); . see cp(); . COUPLING (PSIMRCC). COUPLING_TERMS (PSIMRCC). COVALENT_CONNECT (OPTKING). cp(); . setting keywords. cp() in module wrappers. CP-CORRECTED2-BODYINTERACTIONENERGY. CPHF_MEM_SAFETY_FACTOR (CPHF). CPHF_TASKS (CPHF). create_molecule_from_string() LibmintsMolecule method. cross() in module qcdb.vecutil. CURRENTCORRELATIONENERGY. CURRENTENERGY. CURRENTREFERENCEENERGY. CUTOFF (OCC). D. d() CoordEntry static method. D_CONVERGENCE (DFTSAPT). (MCSCF). (SAPT). (SCF). DAMPING_CONVERGENCE (SCF). DAMPING_PERCENTAGE (DCFT). (PSIMRCC). (SCF). dash_server() in module dashparam. dashparam module. database(). adding new. available. output. setting keywords. database() in module wrappers. db(); . see database(); . db_nameDATABASEMEANABSOLUTEDEVIATION. db_nameDATABASEMEANSIGNEDDEVIATION. db_nameDATABASEROOT-MEAN-SQUARESIGNEDDEVIATION. DCFT. theory. DCFT_FUNCTIONAL (DCFT). DCFT_GUESS (DCFT). deactivate_all_fragments() LibmintsMolecule method. DEBUG (CPHF). (DFTSAPT). (GLOBALS). DELETE_AO (TRANSQT). DELETE_RESTR_DOCC (TRANSQT). DELETE_TEI (TRANSQT2). DELETE_TPDM (TRANSQT). DENOMINATOR_ALGORITHM (SAPT). DENOMINATOR_DELTA (SAPT). density-fitting; . CCSD(T). MP2. DERTYPE (GLOBALS). DETCI_FREEZE_CORE (DETCI). determinant() in module qcdb.vecutil. DF-CCSD(T). DF-MP2. theory. DF_BASIS_CC (FNOCC). DF_BASIS_ELST (DFTSAPT). (SAPT). DF_BASIS_GUESS (SCF). DF_BASIS_MP2 (DFMP2). (LMP2). DF_BASIS_SAPT (DFTSAPT). (SAPT). DF_BASIS_SCF (CPHF). (SCF). DF_FITTING_CONDITION (SCF). DF_INTS_IO (DFMP2). (SCF). DF_INTS_NUM_THREADS (DFMP2). (SCF). DF_LMP2 (LMP2). DF_SCF_GUESS (SCF). DFCC (FNOCC). DFMP2_MEM_FACTOR (DFMP2). DFMP2_P2_TOLE",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:16571,Availability,avail,available,16571,pers. db(); . see database(); . db_nameDATABASEMEANABSOLUTEDEVIATION. db_nameDATABASEMEANSIGNEDDEVIATION. db_nameDATABASEROOT-MEAN-SQUARESIGNEDDEVIATION. DCFT. theory. DCFT_FUNCTIONAL (DCFT). DCFT_GUESS (DCFT). deactivate_all_fragments() LibmintsMolecule method. DEBUG (CPHF). (DFTSAPT). (GLOBALS). DELETE_AO (TRANSQT). DELETE_RESTR_DOCC (TRANSQT). DELETE_TEI (TRANSQT2). DELETE_TPDM (TRANSQT). DENOMINATOR_ALGORITHM (SAPT). DENOMINATOR_DELTA (SAPT). density-fitting; . CCSD(T). MP2. DERTYPE (GLOBALS). DETCI_FREEZE_CORE (DETCI). determinant() in module qcdb.vecutil. DF-CCSD(T). DF-MP2. theory. DF_BASIS_CC (FNOCC). DF_BASIS_ELST (DFTSAPT). (SAPT). DF_BASIS_GUESS (SCF). DF_BASIS_MP2 (DFMP2). (LMP2). DF_BASIS_SAPT (DFTSAPT). (SAPT). DF_BASIS_SCF (CPHF). (SCF). DF_FITTING_CONDITION (SCF). DF_INTS_IO (DFMP2). (SCF). DF_INTS_NUM_THREADS (DFMP2). (SCF). DF_LMP2 (LMP2). DF_SCF_GUESS (SCF). DFCC (FNOCC). DFMP2_MEM_FACTOR (DFMP2). DFMP2_P2_TOLERANCE (DFMP2). DFMP2_P_TOLERANCE (DFMP2). DFT. available functionals. theory. DFT_ALPHA (SCF). DFT_BASIS_TOLERANCE (SCF). DFT_BLOCK_MAX_POINTS (SCF). DFT_BLOCK_MAX_RADIUS (SCF). DFT_BLOCK_MIN_POINTS (SCF). DFT_BLOCK_SCHEME (SCF). DFT_BS_RADIUS_ALPHA (SCF). DFT_CUSTOM_FUNCTIONAL (SCF). DFT_DISPERSION_PARAMETERS (SCF). DFT_FUNCTIONAL (SCF). DFT_GRID_NAME (SCF). DFT_NUCLEAR_SCHEME (SCF). DFT_OMEGA (SCF). DFT_PRUNING_ALPHA (SCF). DFT_PRUNING_SCHEME (SCF). DFT_RADIAL_POINTS (SCF). DFT_RADIAL_SCHEME (SCF). DFT_SPHERICAL_POINTS (SCF). DFT_SPHERICAL_SCHEME (SCF). DFTD3. DFTFUNCTIONALTOTALENERGY. DFTTOTALENERGY. DFTXCENERGY. DIAG_METHOD (CIS). (DETCI). DIAGONAL_CCSD_T (PSIMRCC). diagonalize3x3symmat() in module qcdb.vecutil. DIAGONALIZE_HEFF (PSIMRCC). diatomic module. diatomic_anharmonicity(); . setting keywords. diatomic_anharmonicity() in module diatomic. dictify_database_docstrings() in module qcdb.dbproc. DIE_IF_NOT_CONVERGED (GLOBALS). Diffuse class in qmmm. DIIS (CCENERGY). (CCLAMBDA). (CCRESPONSE). (DETCI). (LMP2). (MCSCF). (SCF). DIIS_FREQ (D,MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:23703,Deployability,install,installing,23703,"SS (SCF). GUESS_VECTOR (DETCI). H. H0_BLOCK_COUPLING (DETCI). H0_BLOCK_COUPLING_SIZE (DETCI). H0_BLOCKSIZE (DETCI). H0_GUESS_SIZE (DETCI). H_BOND_CONNECT (OPTKING). Hartree-Fock. has_inversion() LibmintsMolecule method. has_symmetry_element() LibmintsMolecule method. HBC6 module, [1]. HD_AVG (DETCI). HD_OTF (DETCI). HEFF4 (PSIMRCC). HEFF_PRINT (PSIMRCC). HESS_UPDATE (OPTKING). HESS_UPDATE_LIMIT (OPTKING). HESS_UPDATE_LIMIT_MAX (OPTKING). HESS_UPDATE_LIMIT_SCALE (OPTKING). HESS_UPDATE_USE_LAST (OPTKING). hessian() in module driver. HESSIAN_WRITE (FINDIF). HF. HFTOTALENERGY. highest_1() in module wrappers. HSG module, [1]. HTBH module, [1]. I. ICORE (DETCI). IGNORE_TAU (DCFT). import_ignorecase() in module procutil. IncompleteAtomError. inertia_tensor() LibmintsMolecule method. init_with_checkpoint() LibmintsMolecule method. init_with_io() LibmintsMolecule method. init_with_xyz() qcdb.libmintsmolecule.LibmintsMolecule class method. qcdb.molecule.Molecule class method. input module. installing. INTCO_FIXED_EQ_FORCE_CONSTANT (OPTKING). INTCOS_GENERATE_EXIT (OPTKING). INTERFRAG_DIST_INV (OPTKING). INTERFRAG_HESS (OPTKING). INTERFRAG_MODE (OPTKING). INTERFRAG_STEP_LIMIT (OPTKING). INTERFRAGMENT_CONNECT (OPTKING). INTERNAL_ROTATIONS (MCSCF). INTRAFRAG_HESS (OPTKING). INTRAFRAG_STEP_LIMIT (OPTKING). INTRAFRAG_STEP_LIMIT_MAX (OPTKING). INTRAFRAG_STEP_LIMIT_MIN (OPTKING). INTS_TOLERANCE (CCDENSITY). (CCSORT). (DCFT). (DFMP2). (LMP2). (MRCC). (SAPT). (SCF). (TRANSQT). (TRANSQT2). invalidate() CartesianEntry method. CoordValue method. ZMatrixEntry method. ip_fitting() in module frac. IP_POLES (OCC). IRC; . geometry optimization. IRC_DIRECTION (OPTKING). IRC_STEP_SIZE (OPTKING). IRC_STOP (OPTKING). irrep_labels() LibmintsMolecule method. is_axis() LibmintsMolecule method. is_computed() CoordEntry method. is_equivalent_to() CoordEntry method. is_ghosted() CoordEntry method. is_linear_planar() LibmintsMolecule method. is_plane() LibmintsMolecule method. is_variable() LibmintsMolec",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:46454,Deployability,update,updated,46454,"BCD_TYPE (OCC). TPDM_ADD_REF (TRANSQT). TPDM_FILE (TRANSQT). TPDM_PRINT (DETCI). transition state; . geometry optimization. translate() LibmintsMolecule method. transpose() in module qcdb.vecutil. TRIPLES_ALGORITHM (PSIMRCC). TRIPLES_DIIS (PSIMRCC). TRIPLES_LOW_MEMORY (FNOCC). TURN_ON_ACTV (MCSCF). TWO-ELECTRONENERGY. type() CartesianEntry method. NumberValue method. VariableValue method. ZMatrixEntry method. U. UNCP-CORRECTED2-BODYINTERACTIONENERGY. unique() LibmintsMolecule method. units; . molecule. UNITS (GLOBALS). units() LibmintsMolecule method. UPDATE (DETCI). update_geometry() LibmintsMolecule method. USE_SPIN_SYM (PSIMRCC). USE_SPIN_SYMMETRY (PSIMRCC). useful() in module qcdb.dbproc. util module. V. VAL_EX_LEVEL (DETCI). valid_atom_map() LibmintsMolecule method. validate_bracketed_basis() in module wrappers. validate_scheme_args() in module wrappers. ValidationError, [1]. variable_to_string() NumberValue method. VariableValue method. VariableValue class in qcdb.libmintscoordentry. VECS_CC3 (CCEOM). VECS_PER_ROOT (CCEOM). VECS_WRITE (DETCI). visualization. W. WABEI_LOWDISK (CCHBAR). WebMO. WFN (CCDENSITY). (CCENERGY). (CCEOM). (CCHBAR). (CCLAMBDA). (CCRESPONSE). (CCSORT). (CCTRIPLES). (CIS). (CLAG). (DETCI). (GLOBALS). (LMP2). (SCF). (TRANSQT). (TRANSQT2). WFN_SYM (MCSCF). (PSIMRCC). WFN_TYPE (OCC). wrappers module. WRITER_FILE_LABEL (GLOBALS). X. x() LibmintsMolecule method. XI (CCDENSITY). XI_CONNECT (CCDENSITY). xyz() LibmintsMolecule method. Y. y() LibmintsMolecule method. Z. Z() CoordEntry method. LibmintsMolecule method. z() LibmintsMolecule method. ZAPTnCORRELATIONENERGY. ZAPTnTOTALENERGY. zero() in module qcdb.vecutil. ZERO_INTERNAL_AMPS (PSIMRCC). ZETA (CCDENSITY). (CCLAMBDA). ZMatrixEntry class in qcdb.libmintscoordentry. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â ; PSI4 [beta4] Â» . Â© Copyright 2013, The Psi4 Project.; Last updated on Mar 20, 2014.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:12024,Energy Efficiency,charge,charge,12024,ENERGY. CCSDT(Q)CORRELATIONENERGY. CCSDT(Q)TOTALENERGY. CCSDT-1aCORRELATIONENERGY. CCSDT-1aTOTALENERGY. CCSDT-1bCORRELATIONENERGY. CCSDT-1bTOTALENERGY. CCSDT-3CORRELATIONENERGY. CCSDT-3TOTALENERGY. CCSDTCORRELATIONENERGY. CCSDTOTALENERGY. CCSDTQ-1aCORRELATIONENERGY. CCSDTQ-1aTOTALENERGY. CCSDTQ-1bCORRELATIONENERGY. CCSDTQ-1bTOTALENERGY. CCSDTQ-3CORRELATIONENERGY. CCSDTQ-3TOTALENERGY. CCSDTQCORRELATIONENERGY. CCSDTQTOTALENERGY. CCSDTTOTALENERGY. CCTOTALENERGY. center_of_mass() LibmintsMolecule method. CEPA. CEPA(0)CORRELATIONENERGY. CEPA(0)DIPOLEX. CEPA(0)DIPOLEY. CEPA(0)DIPOLEZ. CEPA(0)QUADRUPOLEXX. CEPA(0)QUADRUPOLEXY. CEPA(0)QUADRUPOLEXZ. CEPA(0)QUADRUPOLEYY. CEPA(0)QUADRUPOLEYZ. CEPA(0)QUADRUPOLEZZ. CEPA(0)TOTALENERGY. CEPA(1)CORRELATIONENERGY. CEPA(1)TOTALENERGY. CEPA(2)CORRELATIONENERGY. CEPA(2)TOTALENERGY. CEPA(3)CORRELATIONENERGY. CEPA(3)TOTALENERGY. CEPA_LEVEL (FNOCC). CEPA_NO_SINGLES (FNOCC). CEPA_OS_SCALE (OCC). CEPA_SOS_SCALE (OCC). CEPA_SS_SCALE (OCC). CEPA_TYPE (OCC). charge; . molecule. charge() CoordEntry method. LibmintsMolecule method. charge_specified() LibmintsMolecule method. CHECK_C_ORTHONORM (TRANSQT). check_parentheses_and_brackets() in module input. CHOLESKY_TOLERANCE (FNOCC). CI. arbitrary-order coupled-cluster theory. arbitrary-order perturbation theory. basic-keywords. theory. CI_DIIS (MCSCF). CI_NUM_THREADS (DETCI). CIBLKS_PRINT (DETCI). CICORRELATIONENERGY. CIDIPOLEX. CIDIPOLEY. CIDIPOLEZ. CInCORRELATIONENERGY. CInTOTALENERGY. CIQUADRUPOLEXX. CIQUADRUPOLEXY. CIQUADRUPOLEXZ. CIQUADRUPOLEYY. CIQUADRUPOLEYZ. CIQUADRUPOLEZZ. CIROOTn->ROOTmDIPOLEX. CIROOTn->ROOTmDIPOLEY. CIROOTn->ROOTmDIPOLEZ. CIROOTn->ROOTmQUADRUPOLEXX. CIROOTn->ROOTmQUADRUPOLEXY. CIROOTn->ROOTmQUADRUPOLEXZ. CIROOTn->ROOTmQUADRUPOLEYY. CIROOTn->ROOTmQUADRUPOLEYZ. CIROOTn->ROOTmQUADRUPOLEZZ. CIROOTnCORRELATIONENERGY. CIROOTnDIPOLEX. CIROOTnDIPOLEY. CIROOTnDIPOLEZ. CIROOTnQUADRUPOLEXX. CIROOTnQUADRUPOLEXY. CIROOTnQUADRUPOLEXZ. CIROOTnQUADRUPOLEYY. CIROOTnQUADRUPOLEYZ. CIROOTnQ,MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:12044,Energy Efficiency,charge,charge,12044,ERGY. CCSDT(Q)TOTALENERGY. CCSDT-1aCORRELATIONENERGY. CCSDT-1aTOTALENERGY. CCSDT-1bCORRELATIONENERGY. CCSDT-1bTOTALENERGY. CCSDT-3CORRELATIONENERGY. CCSDT-3TOTALENERGY. CCSDTCORRELATIONENERGY. CCSDTOTALENERGY. CCSDTQ-1aCORRELATIONENERGY. CCSDTQ-1aTOTALENERGY. CCSDTQ-1bCORRELATIONENERGY. CCSDTQ-1bTOTALENERGY. CCSDTQ-3CORRELATIONENERGY. CCSDTQ-3TOTALENERGY. CCSDTQCORRELATIONENERGY. CCSDTQTOTALENERGY. CCSDTTOTALENERGY. CCTOTALENERGY. center_of_mass() LibmintsMolecule method. CEPA. CEPA(0)CORRELATIONENERGY. CEPA(0)DIPOLEX. CEPA(0)DIPOLEY. CEPA(0)DIPOLEZ. CEPA(0)QUADRUPOLEXX. CEPA(0)QUADRUPOLEXY. CEPA(0)QUADRUPOLEXZ. CEPA(0)QUADRUPOLEYY. CEPA(0)QUADRUPOLEYZ. CEPA(0)QUADRUPOLEZZ. CEPA(0)TOTALENERGY. CEPA(1)CORRELATIONENERGY. CEPA(1)TOTALENERGY. CEPA(2)CORRELATIONENERGY. CEPA(2)TOTALENERGY. CEPA(3)CORRELATIONENERGY. CEPA(3)TOTALENERGY. CEPA_LEVEL (FNOCC). CEPA_NO_SINGLES (FNOCC). CEPA_OS_SCALE (OCC). CEPA_SOS_SCALE (OCC). CEPA_SS_SCALE (OCC). CEPA_TYPE (OCC). charge; . molecule. charge() CoordEntry method. LibmintsMolecule method. charge_specified() LibmintsMolecule method. CHECK_C_ORTHONORM (TRANSQT). check_parentheses_and_brackets() in module input. CHOLESKY_TOLERANCE (FNOCC). CI. arbitrary-order coupled-cluster theory. arbitrary-order perturbation theory. basic-keywords. theory. CI_DIIS (MCSCF). CI_NUM_THREADS (DETCI). CIBLKS_PRINT (DETCI). CICORRELATIONENERGY. CIDIPOLEX. CIDIPOLEY. CIDIPOLEZ. CInCORRELATIONENERGY. CInTOTALENERGY. CIQUADRUPOLEXX. CIQUADRUPOLEXY. CIQUADRUPOLEXZ. CIQUADRUPOLEYY. CIQUADRUPOLEYZ. CIQUADRUPOLEZZ. CIROOTn->ROOTmDIPOLEX. CIROOTn->ROOTmDIPOLEY. CIROOTn->ROOTmDIPOLEZ. CIROOTn->ROOTmQUADRUPOLEXX. CIROOTn->ROOTmQUADRUPOLEXY. CIROOTn->ROOTmQUADRUPOLEXZ. CIROOTn->ROOTmQUADRUPOLEYY. CIROOTn->ROOTmQUADRUPOLEYZ. CIROOTn->ROOTmQUADRUPOLEZZ. CIROOTnCORRELATIONENERGY. CIROOTnDIPOLEX. CIROOTnDIPOLEY. CIROOTnDIPOLEZ. CIROOTnQUADRUPOLEXX. CIROOTnQUADRUPOLEXY. CIROOTnQUADRUPOLEXZ. CIROOTnQUADRUPOLEYY. CIROOTnQUADRUPOLEYZ. CIROOTnQUADRUPOLEZZ. CIROOTnTOTALENER,MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:18587,Energy Efficiency,energy,energy,18587,"IS_MAX_VECS (DCFT). (DETCI). (FNOCC). (LMP2). (MCSCF). (PSIMRCC). (SCF). DIIS_MIN_VECS (DCFT). (DETCI). (SCF). DIIS_START (PSIMRCC). (SCF). DIIS_START_CONVERGENCE (DCFT). DIIS_START_ITER (DETCI). (LMP2). DIPMOM (DETCI). (FNOCC). DISP_SIZE (FINDIF). DISPERSIONCORRECTIONENERGY. distance() in module qcdb.vecutil. distance_matrix() LibmintsMolecule method. DISTANT_PAIR_CUTOFF (LMP2). DISTRIBUTED_MATRIX (SCF). DO_ALL_TEI (TRANSQT). DO_CCD_DISP (SAPT). DO_DIIS (OCC). DO_LEVEL_SHIFT (OCC). DO_SCS (OCC). DO_SINGLETS (CPHF). DO_SOS (OCC). DO_THIRD_ORDER (SAPT). DO_TRIPLETS (CPHF). DOCC (GLOBALS). (MCSCF). DOMAIN_PRINT (CIS). DOMAIN_PRINT_EXIT (LMP2). DOMAINS (CIS). dot() in module qcdb.vecutil. DOUBLE-HYBRIDCORRECTIONENERGY. driver module. drop_duplicates() in module procutil. dynamic_variable_bind() in module molutil. E. E3_SCALE (OCC). E_CONVERGENCE (CCENERGY). (CCEOM). (DETCI). (FNOCC). (LMP2). (MCSCF). (MRCC). (OCC). (PSIMRCC). (SAPT). (SCF). EA_POLES (OCC). EKT_EA (OCC). EKT_IP (OCC). energy(). setting keywords. energy() in module driver. entry_number() CoordEntry method. environment variable; . MKL_NUM_THREADS, [1]. OMP_NESTED, [1], [2]. OMP_NUM_THREADS, [1], [2], [3], [4], [5]. PATH, [1], [2], [3], [4], [5]. PSI_SCRATCH, [1], [2], [3]. PYTHONPATH, [1], [2], [3], [4]. EOM_GUESS (CCEOM). EOM_REFERENCE (CCEOM). (CCHBAR). (CCSORT). EP_EA_POLES (OCC). EP_IP_POLES (OCC). EP_MAXITER (OCC). equivalent() LibmintsMolecule method. everything() CartesianEntry method. CoordEntry method. CoordValue method. LibmintsMolecule method. NumberValue method. VariableValue method. ZMatrixEntry method. EX_ALLOW (DETCI). EX_LEVEL (DETCI). EXCITATION_RANGE (CCEOM). EXPLICIT_HAMILTONIAN (CPHF). EXTERN (SCF). extract_cluster_indexing() in module molutil. extract_clusters() in module molutil. extract_fragments() LibmintsMolecule method. extract_subsets() LibmintsMolecule method. extrapolation schemes. F. FAIL_ON_MAXITER (SCF). FAVG (MCSCF). FAVG_CCSD_T (PSIMRCC). FAVG_START (MCSCF). fcharge() Lib",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:18615,Energy Efficiency,energy,energy,18615,". (LMP2). (MCSCF). (PSIMRCC). (SCF). DIIS_MIN_VECS (DCFT). (DETCI). (SCF). DIIS_START (PSIMRCC). (SCF). DIIS_START_CONVERGENCE (DCFT). DIIS_START_ITER (DETCI). (LMP2). DIPMOM (DETCI). (FNOCC). DISP_SIZE (FINDIF). DISPERSIONCORRECTIONENERGY. distance() in module qcdb.vecutil. distance_matrix() LibmintsMolecule method. DISTANT_PAIR_CUTOFF (LMP2). DISTRIBUTED_MATRIX (SCF). DO_ALL_TEI (TRANSQT). DO_CCD_DISP (SAPT). DO_DIIS (OCC). DO_LEVEL_SHIFT (OCC). DO_SCS (OCC). DO_SINGLETS (CPHF). DO_SOS (OCC). DO_THIRD_ORDER (SAPT). DO_TRIPLETS (CPHF). DOCC (GLOBALS). (MCSCF). DOMAIN_PRINT (CIS). DOMAIN_PRINT_EXIT (LMP2). DOMAINS (CIS). dot() in module qcdb.vecutil. DOUBLE-HYBRIDCORRECTIONENERGY. driver module. drop_duplicates() in module procutil. dynamic_variable_bind() in module molutil. E. E3_SCALE (OCC). E_CONVERGENCE (CCENERGY). (CCEOM). (DETCI). (FNOCC). (LMP2). (MCSCF). (MRCC). (OCC). (PSIMRCC). (SAPT). (SCF). EA_POLES (OCC). EKT_EA (OCC). EKT_IP (OCC). energy(). setting keywords. energy() in module driver. entry_number() CoordEntry method. environment variable; . MKL_NUM_THREADS, [1]. OMP_NESTED, [1], [2]. OMP_NUM_THREADS, [1], [2], [3], [4], [5]. PATH, [1], [2], [3], [4], [5]. PSI_SCRATCH, [1], [2], [3]. PYTHONPATH, [1], [2], [3], [4]. EOM_GUESS (CCEOM). EOM_REFERENCE (CCEOM). (CCHBAR). (CCSORT). EP_EA_POLES (OCC). EP_IP_POLES (OCC). EP_MAXITER (OCC). equivalent() LibmintsMolecule method. everything() CartesianEntry method. CoordEntry method. CoordValue method. LibmintsMolecule method. NumberValue method. VariableValue method. ZMatrixEntry method. EX_ALLOW (DETCI). EX_LEVEL (DETCI). EXCITATION_RANGE (CCEOM). EXPLICIT_HAMILTONIAN (CPHF). EXTERN (SCF). extract_cluster_indexing() in module molutil. extract_clusters() in module molutil. extract_fragments() LibmintsMolecule method. extract_subsets() LibmintsMolecule method. extrapolation schemes. F. FAIL_ON_MAXITER (SCF). FAVG (MCSCF). FAVG_CCSD_T (PSIMRCC). FAVG_START (MCSCF). fcharge() LibmintsMolecule method. FCI (DETCI). FC",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:25039,Energy Efficiency,energy,energy,25039,"OPTKING). INTRAFRAG_STEP_LIMIT_MIN (OPTKING). INTS_TOLERANCE (CCDENSITY). (CCSORT). (DCFT). (DFMP2). (LMP2). (MRCC). (SAPT). (SCF). (TRANSQT). (TRANSQT2). invalidate() CartesianEntry method. CoordValue method. ZMatrixEntry method. ip_fitting() in module frac. IP_POLES (OCC). IRC; . geometry optimization. IRC_DIRECTION (OPTKING). IRC_STEP_SIZE (OPTKING). IRC_STOP (OPTKING). irrep_labels() LibmintsMolecule method. is_axis() LibmintsMolecule method. is_computed() CoordEntry method. is_equivalent_to() CoordEntry method. is_ghosted() CoordEntry method. is_linear_planar() LibmintsMolecule method. is_plane() LibmintsMolecule method. is_variable() LibmintsMolecule method. ISTOP (DETCI). IVO (TRANSQT). J. J_FILE (TRANSQT). JOBTYPE (CCLAMBDA). JSCH module, [1]. K. KEEP_INTCOS (OPTKING). KEEP_J (TRANSQT). KEEP_OEIFILE (CCSORT). KEEP_PRESORT (TRANSQT). KEEP_TEIFILE (CCSORT). keywords; . C-side, setting. cbs(), setting. cp(), setting. database(), setting. diatomic_anharmonicity(), setting. energy(), setting. molecule, setting. optimize(), setting. property(), setting. kwargs_lower() in module procutil. L. label() CoordEntry method. LibmintsMolecule method. LAG_IN_FILE (TRANSQT). LAGRAN_DOUBLE (TRANSQT). LAGRAN_HALVE (TRANSQT). LAMBDA_MAXITER (DCFT). LCC2(+LMP2)TOTALENERGY. LCCSD(+LMP2)TOTALENERGY. LEVEL_SHIFT (MCSCF). (OCC). LibmintsMolecule class in qcdb.libmintsmolecule. like_world_axis() LibmintsMolecule static method. LINEAR (CCRESPONSE). LINEQ_SOLVER (OCC). LINESEARCH_STATIC_MAX (OPTKING). LINESEARCH_STATIC_MIN (OPTKING). LINESEARCH_STATIC_N (OPTKING). load_basfam_dunning() in module basislistdunning. load_basfam_other() in module basislistother. load_basis_families() in module basislist. LOCAL (CCENERGY). (CCEOM). (CCLAMBDA). (CCRESPONSE). (CCSORT). (CIS). LOCAL_AMPS_PRINT_CUTOFF (CIS). LOCAL_CORE_CUTOFF (CCSORT). LOCAL_CPHF_CUTOFF (CCENERGY). (CCLAMBDA). (CCRESPONSE). (CCSORT). LOCAL_CUTOFF (CCENERGY). (CCEOM). (CCLAMBDA). (CCRESPONSE). (CCSORT). (CIS). (LMP2). LOCAL_DO_SI",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:27531,Energy Efficiency,charge,charge,27531,CI). LSE_COLLAPSE (DETCI). LSE_TOLERANCE (DETCI). M. M_FILE (TRANSQT). MADMP2_SLEEP (DFMP2). mass() CoordEntry method. LibmintsMolecule method. MAT_NUM_COLUMN_PRINT (GLOBALS). MAX_BUCKETS (TRANSQT). MAX_CCD_DIISVECS (SAPT). MAX_DISP_G_CONVERGENCE (OPTKING). MAX_ENERGY_G_CONVERGENCE (OPTKING). MAX_FORCE_G_CONVERGENCE (OPTKING). MAX_MOGRAD_CONVERGENCE (OCC). max_nequivalent() LibmintsMolecule method. MAX_NUM_VECS (DETCI). MAXITER (CCENERGY). (CCEOM). (CCLAMBDA). (CCRESPONSE). (CIS). (DCFT). (DETCI). (DFTSAPT). (FNOCC). (LMP2). (MCSCF). (PSIMRCC). (SAPT). (SCF). memory. MEMORY (ADC). (LMP2). method alias; . adding new. MIN_CCD_DIISVECS (SAPT). MIXED (DETCI). MIXED4 (DETCI). Mk-MRCC. MKL_NUM_THREADS. MO_DIIS_NUM_VECS (OCC). MO_MAXITER (OCC). MO_READ (MCSCF). (OCC). MO_RELAX (DCFT). MO_STEP_MAX (OCC). MO_WRITE (OCC). MODE (TRANSQT). MODULE (CPHF). MOGRAD_DAMPING (OCC). Molden. molden() in module driver. MOLDEN_WRITE (SCF). molecular_charge() LibmintsMolecule method. molecule; . PubChem. charge. ghost. multiple fragments. multiple in input file. multiplicity. no_reorient. setting keywords. specification. symmetry. units. Molecule class in qcdb.molecule. molutil module. MOM_OCC (SCF). MOM_START (SCF). MOM_VIR (SCF). MOORDER (TRANSQT). move_to_com() LibmintsMolecule method. MP2; . density-fitting. MP2.5CORRELATIONENERGY. MP2.5TOTALENERGY. MP2_AMPS_PRINT (CCENERGY). MP2_CCSD_METHOD (PSIMRCC). MP2_GUESS (PSIMRCC). MP2_OS_SCALE (CCENERGY). (DFMP2). (LMP2). (OCC). MP2_SCALE_OS (FNOCC). MP2_SCALE_SS (FNOCC). MP2_SOS_SCALE (OCC). MP2_SOS_SCALE2 (OCC). MP2_SS_SCALE (CCENERGY). (DFMP2). (LMP2). (OCC). MP2_TYPE (DFMP2). (OCC). MP2CORRELATIONENERGY. MP2R12A (TRANSQT). MP2TOTALENERGY. MP3CORRELATIONENERGY. MP3TOTALENERGY. MP4. MP4(SDQ)CORRELATIONENERGY. MP4(SDQ)TOTALENERGY. MP4(SDTQ)CORRELATIONENERGY. MP4(SDTQ)TOTALENERGY. MP4(T)CORRECTIONENERGY. MP4CORRELATIONENERGY. MP4TOTALENERGY. MPN (DETCI). MPN_ORDER_SAVE (DETCI). MPN_SCHMIDT (DETCI). MPN_WIGNER (DETCI). MPnCORRELATIONENERGY. MP,MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:39795,Energy Efficiency,charge,charge-transfer,39795,"gradient() in module proc. RUN_MP4 (FNOCC). run_mrcc() in module proc. run_ocepa() in module proc. run_ocepa_gradient() in module proc. run_omp2() in module proc. run_omp2_5() in module proc. run_omp2_5_gradient() in module proc. run_omp2_gradient() in module proc. run_omp3() in module proc. run_omp3_gradient() in module proc. run_psimrcc() in module proc. run_psimrcc_scf() in module proc. run_sapt() in module proc. run_sapt_ct() in module proc. run_scf() in module proc. run_scf_gradient() in module proc. run_scf_property() in module proc. run_scs_omp2() in module proc. run_scs_omp3() in module proc. run_sos_omp2() in module proc. run_sos_omp3() in module proc. S. S (DETCI). S22 module, [1]. S22by5 module, [1]. S66 module, [1]. S_ORTHOGONALIZATION (SCF). S_SQUARED (DETCI). S_TOLERANCE (SCF). SAD_CHOL_TOLERANCE (SCF). SAD_D_CONVERGENCE (SCF). SAD_E_CONVERGENCE (SCF). SAD_F_MIX_START (SCF). SAD_MAXITER (SCF). SAD_PRINT (SCF). sanitize_basisname() in module basislist. SAPT. SAPT0. charge-transfer. higher-order. output. theory. SAPT (SCF). SAPT_LEVEL (SAPT). SAPT_MEM_CHECK (SAPT). SAPT_MEM_FACTOR (DFTSAPT). SAPT_MEM_SAFETY (SAPT). SAPT_OS_SCALE (SAPT). SAPT_SS_SCALE (SAPT). SAPTDISPENERGY. SAPTELSTENERGY. SAPTENERGY. SAPTEXCHENERGY. SAPTINDENERGY. SAPTSAPT0ENERGY. SAPTSAPT2+(3)(CCD)ENERGY. SAPTSAPT2+(3)ENERGY. SAPTSAPT2+(CCD)ENERGY. SAPTSAPT2+3(CCD)ENERGY. SAPTSAPT2+3ENERGY. SAPTSAPT2+ENERGY. SAPTSAPT2ENERGY. save() Table method. SAVE_JK (SCF). save_string_for_psi4() Molecule method. save_string_xyz() LibmintsMolecule method. save_to_checkpoint() LibmintsMolecule method. save_xyz() LibmintsMolecule method. SCALE (STABILITY). scale() in module qcdb.vecutil. Table method. SCF. theory. scf_helper() in module proc. SCF_MAXITER (DCFT). SCF_MEM_SAFETY_FACTOR (SCF). SCF_TYPE (CPHF). (SCF). scf_xtpl_helgaker_2() in module wrappers. scf_xtpl_helgaker_3() in module wrappers. SCFDIPOLEX. SCFDIPOLEY. SCFDIPOLEZ. SCFQUADRUPOLEXX. SCFQUADRUPOLEXY. SCFQUADRUPOLEXZ. SCFQUADRUPOLEYY. SCF",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:42366,Energy Efficiency,energy,energy,42366,atoms() LibmintsMolecule method. set_basis_by_label() LibmintsMolecule method. set_basis_by_number() LibmintsMolecule method. set_basis_by_symbol() LibmintsMolecule method. set_com_fixed() LibmintsMolecule method. set_coordinates() CartesianEntry method. ZMatrixEntry method. set_fixed() CoordValue method. set_full_geometry() LibmintsMolecule method. set_full_point_group() LibmintsMolecule method. set_geometry() LibmintsMolecule method. set_ghost_fragment() LibmintsMolecule method. set_ghost_fragments() LibmintsMolecule method. set_ghosted() CoordEntry method. set_memory() in module util. set_molecular_charge() LibmintsMolecule method. set_multiplicity() LibmintsMolecule method. set_name() LibmintsMolecule method. set_num_threads() in module util. set_point_group() LibmintsMolecule method. set_units() LibmintsMolecule method. set_variable() LibmintsMolecule method. setting; . keywords C-side. keywords cbs(). keywords cp(). keywords database(). keywords diatomic_anharmonicity(). keywords energy(). keywords molecule. keywords optimize(). keywords property(). SF_RESTRICT (DETCI). sherrillgroup_gold_standard() in module aliases. show() in module qcdb.vecutil. SIGMA_OVERLAP (DETCI). single-point. SINGLES_PRINT (CCEOM). SMALL_CUTOFF (PSIMRCC). SO_S_FILE (TRANSQT). SO_T_FILE (TRANSQT). SO_TEI_FILE (TRANSQT). SO_V_FILE (TRANSQT). SOCC (GLOBALS). (MCSCF). SOLVER_CONVERGENCE (CPHF). SOLVER_EXACT_DIAGONAL (CPHF). SOLVER_MAX_SUBSPACE (CPHF). SOLVER_MAXITER (CPHF). SOLVER_MIN_SUBSPACE (CPHF). SOLVER_N_GUESS (CPHF). SOLVER_N_ROOT (CPHF). SOLVER_NORM (CPHF). SOLVER_PRECONDITION (CPHF). SOLVER_PRECONDITION_MAXITER (CPHF). SOLVER_PRECONDITION_STEPS (CPHF). SOLVER_QUANTITY (CPHF). SOLVER_TYPE (CPHF). SORTED_TEI_FILE (TRANSQT). SOS_TYPE (OCC). SPINADAPT_ENERGIES (CCENERGY). split_menial() in module wrappers. SS_E_CONVERGENCE (CCEOM). SS_R_CONVERGENCE (CCEOM). SS_SKIP_DIAG (CCEOM). SS_VECS_PER_ROOT (CCEOM). STABILITY_ADD_VECTORS (DCFT). STABILITY_ANALYSIS (SCF). STABILITY_AUGMENT_SPACE_T,MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:2548,Integrability,wrap,wrappers,2548,"method. ADD_AUXILIARY_BONDS (OPTKING). add_dualfit() BasisFamily method. add_jkfit() BasisFamily method. add_rifit() BasisFamily method. addChargeAngstrom() QMMM method. addChargeBohr() QMMM method. addDiffuse() QMMM method. adding new; . basis set. database(). method alias. AEL (CCDENSITY). AIO_CPHF (SAPT). AIO_DF_INTS (SAPT). ALGORITHM (DCFT). aliases module. all_casings() in module procutil. ANALYZE (CCENERGY). (CCRESPONSE). AO_BASIS (CCDENSITY). (CCENERGY). (CCLAMBDA). (CCSORT). (DCFT). (TRANSQT). (TRANSQT2). AQCCCORRELATIONENERGY. AQCCDIPOLEX. AQCCDIPOLEY. AQCCDIPOLEZ. AQCCQUADRUPOLEXX. AQCCQUADRUPOLEXY. AQCCQUADRUPOLEXZ. AQCCQUADRUPOLEYY. AQCCQUADRUPOLEYZ. AQCCQUADRUPOLEZZ. AQCCTOTALENERGY. arbitrary-order coupled-cluster theory; . CI. arbitrary-order perturbation theory; . CI. architectures. atom_at_position() LibmintsMolecule method. atom_entry() LibmintsMolecule method. atom_to_unique() LibmintsMolecule method. atom_to_unique_offset() LibmintsMolecule method. auto_fragments() in module wrappers. Molecule method. AVG_STATES (DETCI). AVG_WEIGHTS (DETCI). B. B_RAS3_MAX (DETCI). bad_option_syntax() in module input. BAKERJCC93 module, [1]. BAKERJCC96 module, [1]. banner() in module text. BASIC module, [1]. BASIS (DFMP2). (DFTSAPT). (MINTS). (SAPT). (SCF). basis set; . adding new. auxiliary. available by element. available by family. default auxiliary. extrapolation. multiple within molecule. specification. BASIS_GUESS (SCF). BasisFamily class in basislist. basislist module. basislistdunning module. basislistother module. BB_M_FILE (TRANSQT). BBB(T)CORRECTIONENERGY. BENCH (DFTSAPT). (GLOBALS). BENCH12 module, [1]. BENDAZZOLI (DETCI). BFS() in module molutil. Molecule method. BRUECKNER_MAXITER (FNOCC). BRUECKNER_ORBS_R_CONVERGENCE (CCENERGY). BRUECKNERCONVERGED. bugs. build_b2plyp_superfunctional() in module functional. build_b2plypd2gr_superfunctional() in module functional. build_b2plypd2p4_superfunctional() in module functional. build_b2plypd3bj_superfunctional(",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:9193,Integrability,wrap,wrappers,9193,"97x_2tqz_superfunctional() in module functional. build_wb97x_superfunctional() in module functional. build_wb97xd_superfunctional() in module functional. build_wblyp_superfunctional() in module functional. build_wpbe0_superfunctional() in module functional. build_wpbe_superfunctional() in module functional. build_wpbe_x_functional() in module functional. build_wpbe_x_superfunctional() in module functional. build_wpbesol0_superfunctional() in module functional. build_wpbesol_superfunctional() in module functional. build_wpbesol_x_functional() in module functional. build_wpbesol_x_superfunctional() in module functional. build_ws_x_functional() in module functional. build_ws_x_superfunctional() in module functional. build_wsvwn_superfunctional() in module functional. C. C-side; . setting keywords. CACHELEVEL (ADC). (CCDENSITY). (CCENERGY). (CCEOM). (CCHBAR). (CCLAMBDA). (CCRESPONSE). (CCSORT). (DCFT). (OCC). (STABILITY). (TRANSQT2). CACHETYPE (CCENERGY). (CCEOM). call_function_in_1st_argument() in module wrappers. CANONICALIZE_ACTIVE_FAVG (MCSCF). CANONICALIZE_INACTIVE_FAVG (MCSCF). CART_HESS_READ (OPTKING). CartesianEntry class in qcdb.libmintscoordentry. CAS_FILES_WRITE (CLAG). cbs(); . extrapolation schemes. output. setting keywords. theory, [1]. CBSCORRELATIONENERGY. CBSREFERENCEENERGY. CBSTOTALENERGY. CC; . theory. CC (DETCI). CC(n-1)(n)_LCORRELATIONENERGY. CC(n-1)(n)_LTOTALENERGY. CC(n-1)(n)CORRELATIONENERGY. CC(n-1)(n)TOTALENERGY. CC, coupled cluster. CC2CORRELATIONENERGY. CC2TOTALENERGY. CC3_FOLLOW_ROOT (CCEOM). CC3CORRELATIONENERGY. CC3TOTALENERGY. CC4CORRELATIONENERGY. CC4TOTALENERGY. CC_A_RAS3_MAX (DETCI). CC_B_RAS3_MAX (DETCI). CC_DIIS_MAX_VECS (OCC). CC_DIIS_MIN_VECS (OCC). CC_EX_LEVEL (DETCI). CC_FIX_EXTERNAL (DETCI). CC_FIX_EXTERNAL_MIN (DETCI). CC_MACRO (DETCI). CC_MAXITER (OCC). CC_MIXED (DETCI). CC_NUM_THREADS (CCENERGY). (CCEOM). (CCTRIPLES). (PSIMRCC). CC_OS_SCALE (CCENERGY). CC_RAS34_MAX (DETCI). CC_RAS3_MAX (DETCI). CC_RAS4_MAX (DETCI). CC_SCALE_O",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:14102,Integrability,wrap,wrappers,14102,"LITUDE_CUTOFF (CPHF). CIS_DOPDM_STATES (CPHF). CIS_MEM_SAFETY_FACTOR (CPHF). CIS_NO_STATES (CPHF). CIS_OPDM_STATES (CPHF). CIS_TOPDM_STATES (CPHF). CISDCORRELATIONENERGY. CISDDIPOLEX. CISDDIPOLEY. CISDDIPOLEZ. CISDQUADRUPOLEXX. CISDQUADRUPOLEXY. CISDQUADRUPOLEXZ. CISDQUADRUPOLEYY. CISDQUADRUPOLEYZ. CISDQUADRUPOLEZZ. CISDTCORRELATIONENERGY. CISDTOTALENERGY. CISDTQCORRELATIONENERGY. CISDTQTOTALENERGY. CISDTTOTALENERGY. CISTATE-AVERAGEDCORRELATIONENERGY. CISTATE-AVERAGEDTOTALENERGY. CITOTALENERGY. clear() LibmintsMolecule method. clone() CartesianEntry method. LibmintsMolecule method. NumberValue method. VariableValue method. ZMatrixEntry method. COLLAPSE_SIZE (DETCI). COLLAPSE_WITH_LAST (CCEOM). compare_integers() in module util. compare_matrices() in module qcdb.psiutil. in module util. compare_strings() in module util. compare_values() in module qcdb.psiutil. in module util. compare_vectors() in module util. compilers. compiling. complete_basis_set(); . see cbs(); . complete_basis_set() in module wrappers. COMPLEX_TOLERANCE (CCEOM). compute() CartesianEntry method. NumberValue method. VariableValue method. ZMatrixEntry method. COMPUTE_MP4_TRIPLES (FNOCC). COMPUTE_TRIPLES (FNOCC). CONSECUTIVE_BACKSTEPS (OPTKING). contact. convert() in module wrappers. CoordEntry class in qcdb.libmintscoordentry. CoordValue class in qcdb.libmintscoordentry. copy() Table method. copy_file_from_scratch() in module util. copy_file_to_scratch() in module util. CORE module, [1]. corl_xtpl_helgaker_2() in module wrappers. CORR_ANSATZ (PSIMRCC). CORR_CCSD_T (PSIMRCC). CORR_CHARGE (PSIMRCC). CORR_MULTP (PSIMRCC). CORR_WFN (PSIMRCC). corresponding_dualfit() in module basislist. corresponding_jkfit() in module basislist. corresponding_rifit() in module basislist. Cotton-ordering. counterpoise_correct(); . see cp(); . COUPLING (PSIMRCC). COUPLING_TERMS (PSIMRCC). COVALENT_CONNECT (OPTKING). cp(); . setting keywords. cp() in module wrappers. CP-CORRECTED2-BODYINTERACTIONENERGY. CPHF_MEM_SAFETY_FAC",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:14351,Integrability,wrap,wrappers,14351,"UPOLEXZ. CISDQUADRUPOLEYY. CISDQUADRUPOLEYZ. CISDQUADRUPOLEZZ. CISDTCORRELATIONENERGY. CISDTOTALENERGY. CISDTQCORRELATIONENERGY. CISDTQTOTALENERGY. CISDTTOTALENERGY. CISTATE-AVERAGEDCORRELATIONENERGY. CISTATE-AVERAGEDTOTALENERGY. CITOTALENERGY. clear() LibmintsMolecule method. clone() CartesianEntry method. LibmintsMolecule method. NumberValue method. VariableValue method. ZMatrixEntry method. COLLAPSE_SIZE (DETCI). COLLAPSE_WITH_LAST (CCEOM). compare_integers() in module util. compare_matrices() in module qcdb.psiutil. in module util. compare_strings() in module util. compare_values() in module qcdb.psiutil. in module util. compare_vectors() in module util. compilers. compiling. complete_basis_set(); . see cbs(); . complete_basis_set() in module wrappers. COMPLEX_TOLERANCE (CCEOM). compute() CartesianEntry method. NumberValue method. VariableValue method. ZMatrixEntry method. COMPUTE_MP4_TRIPLES (FNOCC). COMPUTE_TRIPLES (FNOCC). CONSECUTIVE_BACKSTEPS (OPTKING). contact. convert() in module wrappers. CoordEntry class in qcdb.libmintscoordentry. CoordValue class in qcdb.libmintscoordentry. copy() Table method. copy_file_from_scratch() in module util. copy_file_to_scratch() in module util. CORE module, [1]. corl_xtpl_helgaker_2() in module wrappers. CORR_ANSATZ (PSIMRCC). CORR_CCSD_T (PSIMRCC). CORR_CHARGE (PSIMRCC). CORR_MULTP (PSIMRCC). CORR_WFN (PSIMRCC). corresponding_dualfit() in module basislist. corresponding_jkfit() in module basislist. corresponding_rifit() in module basislist. Cotton-ordering. counterpoise_correct(); . see cp(); . COUPLING (PSIMRCC). COUPLING_TERMS (PSIMRCC). COVALENT_CONNECT (OPTKING). cp(); . setting keywords. cp() in module wrappers. CP-CORRECTED2-BODYINTERACTIONENERGY. CPHF_MEM_SAFETY_FACTOR (CPHF). CPHF_TASKS (CPHF). create_molecule_from_string() LibmintsMolecule method. cross() in module qcdb.vecutil. CURRENTCORRELATIONENERGY. CURRENTENERGY. CURRENTREFERENCEENERGY. CUTOFF (OCC). D. d() CoordEntry static method. D_CONVERGENCE (DFTSAPT).",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:14603,Integrability,wrap,wrappers,14603,"clear() LibmintsMolecule method. clone() CartesianEntry method. LibmintsMolecule method. NumberValue method. VariableValue method. ZMatrixEntry method. COLLAPSE_SIZE (DETCI). COLLAPSE_WITH_LAST (CCEOM). compare_integers() in module util. compare_matrices() in module qcdb.psiutil. in module util. compare_strings() in module util. compare_values() in module qcdb.psiutil. in module util. compare_vectors() in module util. compilers. compiling. complete_basis_set(); . see cbs(); . complete_basis_set() in module wrappers. COMPLEX_TOLERANCE (CCEOM). compute() CartesianEntry method. NumberValue method. VariableValue method. ZMatrixEntry method. COMPUTE_MP4_TRIPLES (FNOCC). COMPUTE_TRIPLES (FNOCC). CONSECUTIVE_BACKSTEPS (OPTKING). contact. convert() in module wrappers. CoordEntry class in qcdb.libmintscoordentry. CoordValue class in qcdb.libmintscoordentry. copy() Table method. copy_file_from_scratch() in module util. copy_file_to_scratch() in module util. CORE module, [1]. corl_xtpl_helgaker_2() in module wrappers. CORR_ANSATZ (PSIMRCC). CORR_CCSD_T (PSIMRCC). CORR_CHARGE (PSIMRCC). CORR_MULTP (PSIMRCC). CORR_WFN (PSIMRCC). corresponding_dualfit() in module basislist. corresponding_jkfit() in module basislist. corresponding_rifit() in module basislist. Cotton-ordering. counterpoise_correct(); . see cp(); . COUPLING (PSIMRCC). COUPLING_TERMS (PSIMRCC). COVALENT_CONNECT (OPTKING). cp(); . setting keywords. cp() in module wrappers. CP-CORRECTED2-BODYINTERACTIONENERGY. CPHF_MEM_SAFETY_FACTOR (CPHF). CPHF_TASKS (CPHF). create_molecule_from_string() LibmintsMolecule method. cross() in module qcdb.vecutil. CURRENTCORRELATIONENERGY. CURRENTENERGY. CURRENTREFERENCEENERGY. CUTOFF (OCC). D. d() CoordEntry static method. D_CONVERGENCE (DFTSAPT). (MCSCF). (SAPT). (SCF). DAMPING_CONVERGENCE (SCF). DAMPING_PERCENTAGE (DCFT). (PSIMRCC). (SCF). dash_server() in module dashparam. dashparam module. database(). adding new. available. output. setting keywords. database() in module wrappers. db()",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:15025,Integrability,wrap,wrappers,15025,". compiling. complete_basis_set(); . see cbs(); . complete_basis_set() in module wrappers. COMPLEX_TOLERANCE (CCEOM). compute() CartesianEntry method. NumberValue method. VariableValue method. ZMatrixEntry method. COMPUTE_MP4_TRIPLES (FNOCC). COMPUTE_TRIPLES (FNOCC). CONSECUTIVE_BACKSTEPS (OPTKING). contact. convert() in module wrappers. CoordEntry class in qcdb.libmintscoordentry. CoordValue class in qcdb.libmintscoordentry. copy() Table method. copy_file_from_scratch() in module util. copy_file_to_scratch() in module util. CORE module, [1]. corl_xtpl_helgaker_2() in module wrappers. CORR_ANSATZ (PSIMRCC). CORR_CCSD_T (PSIMRCC). CORR_CHARGE (PSIMRCC). CORR_MULTP (PSIMRCC). CORR_WFN (PSIMRCC). corresponding_dualfit() in module basislist. corresponding_jkfit() in module basislist. corresponding_rifit() in module basislist. Cotton-ordering. counterpoise_correct(); . see cp(); . COUPLING (PSIMRCC). COUPLING_TERMS (PSIMRCC). COVALENT_CONNECT (OPTKING). cp(); . setting keywords. cp() in module wrappers. CP-CORRECTED2-BODYINTERACTIONENERGY. CPHF_MEM_SAFETY_FACTOR (CPHF). CPHF_TASKS (CPHF). create_molecule_from_string() LibmintsMolecule method. cross() in module qcdb.vecutil. CURRENTCORRELATIONENERGY. CURRENTENERGY. CURRENTREFERENCEENERGY. CUTOFF (OCC). D. d() CoordEntry static method. D_CONVERGENCE (DFTSAPT). (MCSCF). (SAPT). (SCF). DAMPING_CONVERGENCE (SCF). DAMPING_PERCENTAGE (DCFT). (PSIMRCC). (SCF). dash_server() in module dashparam. dashparam module. database(). adding new. available. output. setting keywords. database() in module wrappers. db(); . see database(); . db_nameDATABASEMEANABSOLUTEDEVIATION. db_nameDATABASEMEANSIGNEDDEVIATION. db_nameDATABASEROOT-MEAN-SQUARESIGNEDDEVIATION. DCFT. theory. DCFT_FUNCTIONAL (DCFT). DCFT_GUESS (DCFT). deactivate_all_fragments() LibmintsMolecule method. DEBUG (CPHF). (DFTSAPT). (GLOBALS). DELETE_AO (TRANSQT). DELETE_RESTR_DOCC (TRANSQT). DELETE_TEI (TRANSQT2). DELETE_TPDM (TRANSQT). DENOMINATOR_ALGORITHM (SAPT). DENOMINATOR_DELT",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:15577,Integrability,wrap,wrappers,15577,corl_xtpl_helgaker_2() in module wrappers. CORR_ANSATZ (PSIMRCC). CORR_CCSD_T (PSIMRCC). CORR_CHARGE (PSIMRCC). CORR_MULTP (PSIMRCC). CORR_WFN (PSIMRCC). corresponding_dualfit() in module basislist. corresponding_jkfit() in module basislist. corresponding_rifit() in module basislist. Cotton-ordering. counterpoise_correct(); . see cp(); . COUPLING (PSIMRCC). COUPLING_TERMS (PSIMRCC). COVALENT_CONNECT (OPTKING). cp(); . setting keywords. cp() in module wrappers. CP-CORRECTED2-BODYINTERACTIONENERGY. CPHF_MEM_SAFETY_FACTOR (CPHF). CPHF_TASKS (CPHF). create_molecule_from_string() LibmintsMolecule method. cross() in module qcdb.vecutil. CURRENTCORRELATIONENERGY. CURRENTENERGY. CURRENTREFERENCEENERGY. CUTOFF (OCC). D. d() CoordEntry static method. D_CONVERGENCE (DFTSAPT). (MCSCF). (SAPT). (SCF). DAMPING_CONVERGENCE (SCF). DAMPING_PERCENTAGE (DCFT). (PSIMRCC). (SCF). dash_server() in module dashparam. dashparam module. database(). adding new. available. output. setting keywords. database() in module wrappers. db(); . see database(); . db_nameDATABASEMEANABSOLUTEDEVIATION. db_nameDATABASEMEANSIGNEDDEVIATION. db_nameDATABASEROOT-MEAN-SQUARESIGNEDDEVIATION. DCFT. theory. DCFT_FUNCTIONAL (DCFT). DCFT_GUESS (DCFT). deactivate_all_fragments() LibmintsMolecule method. DEBUG (CPHF). (DFTSAPT). (GLOBALS). DELETE_AO (TRANSQT). DELETE_RESTR_DOCC (TRANSQT). DELETE_TEI (TRANSQT2). DELETE_TPDM (TRANSQT). DENOMINATOR_ALGORITHM (SAPT). DENOMINATOR_DELTA (SAPT). density-fitting; . CCSD(T). MP2. DERTYPE (GLOBALS). DETCI_FREEZE_CORE (DETCI). determinant() in module qcdb.vecutil. DF-CCSD(T). DF-MP2. theory. DF_BASIS_CC (FNOCC). DF_BASIS_ELST (DFTSAPT). (SAPT). DF_BASIS_GUESS (SCF). DF_BASIS_MP2 (DFMP2). (LMP2). DF_BASIS_SAPT (DFTSAPT). (SAPT). DF_BASIS_SCF (CPHF). (SCF). DF_FITTING_CONDITION (SCF). DF_INTS_IO (DFMP2). (SCF). DF_INTS_NUM_THREADS (DFMP2). (SCF). DF_LMP2 (LMP2). DF_SCF_GUESS (SCF). DFCC (FNOCC). DFMP2_MEM_FACTOR (DFMP2). DFMP2_P2_TOLERANCE (DFMP2). DFMP2_P_TOLERANCE (DFMP2). DFT. ,MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:23310,Integrability,wrap,wrappers,23310," module util. get_num_threads() in module util. get_psifile() in module procutil. get_variable() LibmintsMolecule method. getattr_ignorecase() in module procutil. getCartesian() PubChemObj method. getMoleculeString() PubChemObj method. getPubChemResults() in module pubchem. getSDF() PubChemObj method. getXYZFile() PubChemObj method. Ghost Atoms. gradient() in module driver. GRADIENT_WRITE (FINDIF). GUESS (SCF). GUESS_VECTOR (DETCI). H. H0_BLOCK_COUPLING (DETCI). H0_BLOCK_COUPLING_SIZE (DETCI). H0_BLOCKSIZE (DETCI). H0_GUESS_SIZE (DETCI). H_BOND_CONNECT (OPTKING). Hartree-Fock. has_inversion() LibmintsMolecule method. has_symmetry_element() LibmintsMolecule method. HBC6 module, [1]. HD_AVG (DETCI). HD_OTF (DETCI). HEFF4 (PSIMRCC). HEFF_PRINT (PSIMRCC). HESS_UPDATE (OPTKING). HESS_UPDATE_LIMIT (OPTKING). HESS_UPDATE_LIMIT_MAX (OPTKING). HESS_UPDATE_LIMIT_SCALE (OPTKING). HESS_UPDATE_USE_LAST (OPTKING). hessian() in module driver. HESSIAN_WRITE (FINDIF). HF. HFTOTALENERGY. highest_1() in module wrappers. HSG module, [1]. HTBH module, [1]. I. ICORE (DETCI). IGNORE_TAU (DCFT). import_ignorecase() in module procutil. IncompleteAtomError. inertia_tensor() LibmintsMolecule method. init_with_checkpoint() LibmintsMolecule method. init_with_io() LibmintsMolecule method. init_with_xyz() qcdb.libmintsmolecule.LibmintsMolecule class method. qcdb.molecule.Molecule class method. input module. installing. INTCO_FIXED_EQ_FORCE_CONSTANT (OPTKING). INTCOS_GENERATE_EXIT (OPTKING). INTERFRAG_DIST_INV (OPTKING). INTERFRAG_HESS (OPTKING). INTERFRAG_MODE (OPTKING). INTERFRAG_STEP_LIMIT (OPTKING). INTERFRAGMENT_CONNECT (OPTKING). INTERNAL_ROTATIONS (MCSCF). INTRAFRAG_HESS (OPTKING). INTRAFRAG_STEP_LIMIT (OPTKING). INTRAFRAG_STEP_LIMIT_MAX (OPTKING). INTRAFRAG_STEP_LIMIT_MIN (OPTKING). INTS_TOLERANCE (CCDENSITY). (CCSORT). (DCFT). (DFMP2). (LMP2). (MRCC). (SAPT). (SCF). (TRANSQT). (TRANSQT2). invalidate() CartesianEntry method. CoordValue method. ZMatrixEntry method. ip_fitting() in module fr",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:28936,Integrability,wrap,wrappers,28936,"(PSIMRCC). MP2_GUESS (PSIMRCC). MP2_OS_SCALE (CCENERGY). (DFMP2). (LMP2). (OCC). MP2_SCALE_OS (FNOCC). MP2_SCALE_SS (FNOCC). MP2_SOS_SCALE (OCC). MP2_SOS_SCALE2 (OCC). MP2_SS_SCALE (CCENERGY). (DFMP2). (LMP2). (OCC). MP2_TYPE (DFMP2). (OCC). MP2CORRELATIONENERGY. MP2R12A (TRANSQT). MP2TOTALENERGY. MP3CORRELATIONENERGY. MP3TOTALENERGY. MP4. MP4(SDQ)CORRELATIONENERGY. MP4(SDQ)TOTALENERGY. MP4(SDTQ)CORRELATIONENERGY. MP4(SDTQ)TOTALENERGY. MP4(T)CORRECTIONENERGY. MP4CORRELATIONENERGY. MP4TOTALENERGY. MPN (DETCI). MPN_ORDER_SAVE (DETCI). MPN_SCHMIDT (DETCI). MPN_WIGNER (DETCI). MPnCORRELATIONENERGY. MPnTOTALENERGY. MRCC. MRCC_LEVEL (MRCC). MRCC_METHOD (MRCC). MRCC_NUM_SINGLET_ROOTS (MRCC). MRCC_NUM_TRIPLET_ROOTS (MRCC). MRCC_OMP_NUM_THREADS (MRCC). MRCC_RESTART (MRCC). MS0 (DETCI). mscale() in module qcdb.vecutil. mult() in module qcdb.vecutil. multiplicity; . molecule. multiplicity() LibmintsMolecule method. multiplicity_specified() LibmintsMolecule method. multireference. N. n_body() in module wrappers. nactive_fragments() LibmintsMolecule method. nallatom() LibmintsMolecule method. name() BasisFamily method. LibmintsMolecule method. PubChemObj method. VariableValue method. NAT_ORBS (FNOCC). (OCC). (SAPT). NAT_ORBS_T2 (SAPT). NAT_ORBS_WRITE (DETCI). NAT_ORBS_WRITE_ROOT (DETCI). natom() LibmintsMolecule method. NBC10 module, [1]. NCB31 module, [1]. negated() VariableValue method. NEGLECT_DISTANT_PAIR (LMP2). nequivalent() LibmintsMolecule method. new_get_attr() in module molutil. new_set_attr() in module molutil. NEW_TRIPLES (CCENERGY). (CCEOM). NEWTON_CONVERGENCE (ADC). nfragments() LibmintsMolecule method. nfrozen_core() LibmintsMolecule method. NHTBH module, [1]. NO_DFILE (DETCI). no_reorient; . molecule. NO_RESPONSE (SAPT). NO_SINGLES (PSIMRCC). norm() in module qcdb.vecutil. NORM_TOLERANCE (ADC). normalize() in module qcdb.vecutil. nuclear_repulsion_energy() LibmintsMolecule method. nuclear_repulsion_energy_deriv1() LibmintsMolecule method. nuclear_repulsion_energy_",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:36262,Integrability,wrap,wrappers,36262,"ENERGY (PSIMRCC). PubChem. pubchem module. PubChemObj class in pubchem. PUREAM (GLOBALS). PYTHONPATH, [1], [2], [3]. Q. QC_COUPLING (DCFT). qcdb module. qcdb.__init__ module. qcdb.dbproc module. qcdb.exceptions module. qcdb.libmintscoordentry module. qcdb.libmintsmolecule module. qcdb.molecule module. qcdb.periodictable module. qcdb.physconst module. qcdb.psiutil module. qcdb.vecutil module. QcdbException. QCISD(T). QCISD(T)CORRELATIONENERGY. QCISD(T)TOTALENERGY. QCISDCORRELATIONENERGY. QCISDTOTALENERGY. QMMM class in qmmm. qmmm module. QRHF (TRANSQT). query_yes_no() in module qcdb.psiutil. quotify() in module input. R. r() CoordEntry static method. R4S (DETCI). R_CONVERGENCE (CCENERGY). (CCEOM). (CCLAMBDA). (CCRESPONSE). (CIS). (DCFT). (DETCI). (FNOCC). (LMP2). (OCC). (PSIMRCC). R_POINTS (SCF). RADIUS (SCF). RAS1 (DETCI). (TRANSQT). RAS2 (DETCI). (TRANSQT). RAS3 (DETCI). (TRANSQT). RAS34_MAX (DETCI). RAS3_MAX (DETCI). RAS4 (DETCI). (TRANSQT). RAS4_MAX (DETCI). reconstitute_bracketed_basis() in module wrappers. REFERENCE (ADC). (CCDENSITY). (CCENERGY). (CCEOM). (CCRESPONSE). (CCSORT). (CCTRIPLES). (CIS). (DCFT). (DETCI). (LMP2). (MCSCF). (RESPONSE). (SCF). (STABILITY). (TRANSQT). (TRANSQT2). REFERENCE_SYM (DETCI). reinterpret_coordentries() LibmintsMolecule method. reinterpret_coordentry() LibmintsMolecule method. RELAX_GUESS_ORBITALS (DCFT). RELAX_TAU (DCFT). release_symmetry_information() LibmintsMolecule method. REORDER (TRANSQT). REPL_OTF (DETCI). reset_point_group() LibmintsMolecule method. RESPONSE_ALGORITHM (DCFT). RESTART (CCENERGY). (CCLAMBDA). (CCRESPONSE). (DETCI). RESTART_EOM_CC3 (CCEOM). restore() OptionsState method. OptionState method. RESTRICTED_DOCC (DETCI). (PSIMRCC). (TRANSQT). RESTRICTED_UOCC (DETCI). (TRANSQT). RFO_FOLLOW_ROOT (OPTKING). RFO_ROOT (OPTKING). RGC10 module, [1]. RHF_TRIPLETS (CCEOM). RMS_DISP_G_CONVERGENCE (OPTKING). RMS_FORCE_G_CONVERGENCE (OPTKING). RMS_MOGRAD_CONVERGENCE (OCC). ROOTS_PER_IRREP (ADC). (CCDENSITY). (CCEOM). (CCLAMB",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:40644,Integrability,wrap,wrappers,40644,AD_D_CONVERGENCE (SCF). SAD_E_CONVERGENCE (SCF). SAD_F_MIX_START (SCF). SAD_MAXITER (SCF). SAD_PRINT (SCF). sanitize_basisname() in module basislist. SAPT. SAPT0. charge-transfer. higher-order. output. theory. SAPT (SCF). SAPT_LEVEL (SAPT). SAPT_MEM_CHECK (SAPT). SAPT_MEM_FACTOR (DFTSAPT). SAPT_MEM_SAFETY (SAPT). SAPT_OS_SCALE (SAPT). SAPT_SS_SCALE (SAPT). SAPTDISPENERGY. SAPTELSTENERGY. SAPTENERGY. SAPTEXCHENERGY. SAPTINDENERGY. SAPTSAPT0ENERGY. SAPTSAPT2+(3)(CCD)ENERGY. SAPTSAPT2+(3)ENERGY. SAPTSAPT2+(CCD)ENERGY. SAPTSAPT2+3(CCD)ENERGY. SAPTSAPT2+3ENERGY. SAPTSAPT2+ENERGY. SAPTSAPT2ENERGY. save() Table method. SAVE_JK (SCF). save_string_for_psi4() Molecule method. save_string_xyz() LibmintsMolecule method. save_to_checkpoint() LibmintsMolecule method. save_xyz() LibmintsMolecule method. SCALE (STABILITY). scale() in module qcdb.vecutil. Table method. SCF. theory. scf_helper() in module proc. SCF_MAXITER (DCFT). SCF_MEM_SAFETY_FACTOR (SCF). SCF_TYPE (CPHF). (SCF). scf_xtpl_helgaker_2() in module wrappers. scf_xtpl_helgaker_3() in module wrappers. SCFDIPOLEX. SCFDIPOLEY. SCFDIPOLEZ. SCFQUADRUPOLEXX. SCFQUADRUPOLEXY. SCFQUADRUPOLEXZ. SCFQUADRUPOLEYY. SCFQUADRUPOLEYZ. SCFQUADRUPOLEZZ. SCFTOTALENERGY. SCHMIDT_ADD_RESIDUAL_TOLERANCE (CCEOM). schoenflies_symbol() LibmintsMolecule method. SCHWARZ_CUTOFF (CPHF). scratch files. SCREEN_INTS (LMP2). SCS (LMP2). SCS_CCSD (CCENERGY). (FNOCC). SCS_CEPA (FNOCC). SCS_MP2 (CCENERGY). (FNOCC). SCS_N (LMP2). SCS_TYPE (OCC). SCSN_MP2 (CCENERGY). SEKINO (CCLAMBDA). (CCRESPONSE). SEM_MAXITER (ADC). SEMICANONICAL (CCENERGY). (CCEOM). (CCSORT). (CCTRIPLES). (TRANSQT2). set_active_fragment() LibmintsMolecule method. set_active_fragments() LibmintsMolecule method. set_basis_all_atoms() LibmintsMolecule method. set_basis_by_label() LibmintsMolecule method. set_basis_by_number() LibmintsMolecule method. set_basis_by_symbol() LibmintsMolecule method. set_com_fixed() LibmintsMolecule method. set_coordinates() CartesianEntry method. ZMatrixEntry,MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:40686,Integrability,wrap,wrappers,40686,(SCF). SAD_F_MIX_START (SCF). SAD_MAXITER (SCF). SAD_PRINT (SCF). sanitize_basisname() in module basislist. SAPT. SAPT0. charge-transfer. higher-order. output. theory. SAPT (SCF). SAPT_LEVEL (SAPT). SAPT_MEM_CHECK (SAPT). SAPT_MEM_FACTOR (DFTSAPT). SAPT_MEM_SAFETY (SAPT). SAPT_OS_SCALE (SAPT). SAPT_SS_SCALE (SAPT). SAPTDISPENERGY. SAPTELSTENERGY. SAPTENERGY. SAPTEXCHENERGY. SAPTINDENERGY. SAPTSAPT0ENERGY. SAPTSAPT2+(3)(CCD)ENERGY. SAPTSAPT2+(3)ENERGY. SAPTSAPT2+(CCD)ENERGY. SAPTSAPT2+3(CCD)ENERGY. SAPTSAPT2+3ENERGY. SAPTSAPT2+ENERGY. SAPTSAPT2ENERGY. save() Table method. SAVE_JK (SCF). save_string_for_psi4() Molecule method. save_string_xyz() LibmintsMolecule method. save_to_checkpoint() LibmintsMolecule method. save_xyz() LibmintsMolecule method. SCALE (STABILITY). scale() in module qcdb.vecutil. Table method. SCF. theory. scf_helper() in module proc. SCF_MAXITER (DCFT). SCF_MEM_SAFETY_FACTOR (SCF). SCF_TYPE (CPHF). (SCF). scf_xtpl_helgaker_2() in module wrappers. scf_xtpl_helgaker_3() in module wrappers. SCFDIPOLEX. SCFDIPOLEY. SCFDIPOLEZ. SCFQUADRUPOLEXX. SCFQUADRUPOLEXY. SCFQUADRUPOLEXZ. SCFQUADRUPOLEYY. SCFQUADRUPOLEYZ. SCFQUADRUPOLEZZ. SCFTOTALENERGY. SCHMIDT_ADD_RESIDUAL_TOLERANCE (CCEOM). schoenflies_symbol() LibmintsMolecule method. SCHWARZ_CUTOFF (CPHF). scratch files. SCREEN_INTS (LMP2). SCS (LMP2). SCS_CCSD (CCENERGY). (FNOCC). SCS_CEPA (FNOCC). SCS_MP2 (CCENERGY). (FNOCC). SCS_N (LMP2). SCS_TYPE (OCC). SCSN_MP2 (CCENERGY). SEKINO (CCLAMBDA). (CCRESPONSE). SEM_MAXITER (ADC). SEMICANONICAL (CCENERGY). (CCEOM). (CCSORT). (CCTRIPLES). (TRANSQT2). set_active_fragment() LibmintsMolecule method. set_active_fragments() LibmintsMolecule method. set_basis_all_atoms() LibmintsMolecule method. set_basis_by_label() LibmintsMolecule method. set_basis_by_number() LibmintsMolecule method. set_basis_by_symbol() LibmintsMolecule method. set_com_fixed() LibmintsMolecule method. set_coordinates() CartesianEntry method. ZMatrixEntry method. set_fixed() CoordValue method. se,MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:43175,Integrability,wrap,wrappers,43175,et_units() LibmintsMolecule method. set_variable() LibmintsMolecule method. setting; . keywords C-side. keywords cbs(). keywords cp(). keywords database(). keywords diatomic_anharmonicity(). keywords energy(). keywords molecule. keywords optimize(). keywords property(). SF_RESTRICT (DETCI). sherrillgroup_gold_standard() in module aliases. show() in module qcdb.vecutil. SIGMA_OVERLAP (DETCI). single-point. SINGLES_PRINT (CCEOM). SMALL_CUTOFF (PSIMRCC). SO_S_FILE (TRANSQT). SO_T_FILE (TRANSQT). SO_TEI_FILE (TRANSQT). SO_V_FILE (TRANSQT). SOCC (GLOBALS). (MCSCF). SOLVER_CONVERGENCE (CPHF). SOLVER_EXACT_DIAGONAL (CPHF). SOLVER_MAX_SUBSPACE (CPHF). SOLVER_MAXITER (CPHF). SOLVER_MIN_SUBSPACE (CPHF). SOLVER_N_GUESS (CPHF). SOLVER_N_ROOT (CPHF). SOLVER_NORM (CPHF). SOLVER_PRECONDITION (CPHF). SOLVER_PRECONDITION_MAXITER (CPHF). SOLVER_PRECONDITION_STEPS (CPHF). SOLVER_QUANTITY (CPHF). SOLVER_TYPE (CPHF). SORTED_TEI_FILE (TRANSQT). SOS_TYPE (OCC). SPINADAPT_ENERGIES (CCENERGY). split_menial() in module wrappers. SS_E_CONVERGENCE (CCEOM). SS_R_CONVERGENCE (CCEOM). SS_SKIP_DIAG (CCEOM). SS_VECS_PER_ROOT (CCEOM). STABILITY_ADD_VECTORS (DCFT). STABILITY_ANALYSIS (SCF). STABILITY_AUGMENT_SPACE_TOL (DCFT). STABILITY_CHECK (DCFT). STABILITY_CONVERGENCE (DCFT). STABILITY_MAX_SPACE_SIZE (DCFT). STABILITY_N_EIGENVALUES (DCFT). STABILITY_N_GUESS_VECTORS (DCFT). STEP_TYPE (OPTKING). sub() in module qcdb.vecutil. success() in module util. superfunctional_list() in module functional. sym_label() LibmintsMolecule method. symbol() CoordEntry method. LibmintsMolecule method. symmetrize() LibmintsMolecule method. symmetry. molecule. symmetry_frame() LibmintsMolecule method. symmetry_from_input() LibmintsMolecule method. T. T (THERMO). T2_COUPLED (CCENERGY). T3_WS_INCORE (CCENERGY). (CCEOM). T_AMPS (CCHBAR). Table class in text. tblhead() in module wrappers. TDHF_MEM_SAFETY_FACTOR (CPHF). TDM (DETCI). TDM_PRINT (DETCI). TDM_WRITE (DETCI). TEST_B (OPTKING). test_ccl_functional() in module functi,MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:44019,Integrability,wrap,wrappers,44019,"TION_STEPS (CPHF). SOLVER_QUANTITY (CPHF). SOLVER_TYPE (CPHF). SORTED_TEI_FILE (TRANSQT). SOS_TYPE (OCC). SPINADAPT_ENERGIES (CCENERGY). split_menial() in module wrappers. SS_E_CONVERGENCE (CCEOM). SS_R_CONVERGENCE (CCEOM). SS_SKIP_DIAG (CCEOM). SS_VECS_PER_ROOT (CCEOM). STABILITY_ADD_VECTORS (DCFT). STABILITY_ANALYSIS (SCF). STABILITY_AUGMENT_SPACE_TOL (DCFT). STABILITY_CHECK (DCFT). STABILITY_CONVERGENCE (DCFT). STABILITY_MAX_SPACE_SIZE (DCFT). STABILITY_N_EIGENVALUES (DCFT). STABILITY_N_GUESS_VECTORS (DCFT). STEP_TYPE (OPTKING). sub() in module qcdb.vecutil. success() in module util. superfunctional_list() in module functional. sym_label() LibmintsMolecule method. symbol() CoordEntry method. LibmintsMolecule method. symmetrize() LibmintsMolecule method. symmetry. molecule. symmetry_frame() LibmintsMolecule method. symmetry_from_input() LibmintsMolecule method. T. T (THERMO). T2_COUPLED (CCENERGY). T3_WS_INCORE (CCENERGY). (CCEOM). T_AMPS (CCHBAR). Table class in text. tblhead() in module wrappers. TDHF_MEM_SAFETY_FACTOR (CPHF). TDM (DETCI). TDM_PRINT (DETCI). TDM_WRITE (DETCI). TEST_B (OPTKING). test_ccl_functional() in module functional. TEST_DERIVATIVE_B (OPTKING). text module. theory; . ADC. CC. CI. DCFT. DF-MP2. DFT. OCEPA. OEProp. OMP2. OMP3. Orbital-Optimized Methods. SAPT. SCF. cbs(), [1]. THETA_POINTS (SCF). THICKNESS (SCF). threading. TIKHONOW_MAX (PSIMRCC). TIKHONOW_OMEGA (DCFT). (PSIMRCC). TIKHONOW_TRIPLES (PSIMRCC). TILE_SZ (SCF). TPDM (DCFT). (DETCI). TPDM_ABCD_TYPE (OCC). TPDM_ADD_REF (TRANSQT). TPDM_FILE (TRANSQT). TPDM_PRINT (DETCI). transition state; . geometry optimization. translate() LibmintsMolecule method. transpose() in module qcdb.vecutil. TRIPLES_ALGORITHM (PSIMRCC). TRIPLES_DIIS (PSIMRCC). TRIPLES_LOW_MEMORY (FNOCC). TURN_ON_ACTV (MCSCF). TWO-ELECTRONENERGY. type() CartesianEntry method. NumberValue method. VariableValue method. ZMatrixEntry method. U. UNCP-CORRECTED2-BODYINTERACTIONENERGY. unique() LibmintsMolecule method. units; . mole",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:45330,Integrability,wrap,wrappers,45330,". SCF. cbs(), [1]. THETA_POINTS (SCF). THICKNESS (SCF). threading. TIKHONOW_MAX (PSIMRCC). TIKHONOW_OMEGA (DCFT). (PSIMRCC). TIKHONOW_TRIPLES (PSIMRCC). TILE_SZ (SCF). TPDM (DCFT). (DETCI). TPDM_ABCD_TYPE (OCC). TPDM_ADD_REF (TRANSQT). TPDM_FILE (TRANSQT). TPDM_PRINT (DETCI). transition state; . geometry optimization. translate() LibmintsMolecule method. transpose() in module qcdb.vecutil. TRIPLES_ALGORITHM (PSIMRCC). TRIPLES_DIIS (PSIMRCC). TRIPLES_LOW_MEMORY (FNOCC). TURN_ON_ACTV (MCSCF). TWO-ELECTRONENERGY. type() CartesianEntry method. NumberValue method. VariableValue method. ZMatrixEntry method. U. UNCP-CORRECTED2-BODYINTERACTIONENERGY. unique() LibmintsMolecule method. units; . molecule. UNITS (GLOBALS). units() LibmintsMolecule method. UPDATE (DETCI). update_geometry() LibmintsMolecule method. USE_SPIN_SYM (PSIMRCC). USE_SPIN_SYMMETRY (PSIMRCC). useful() in module qcdb.dbproc. util module. V. VAL_EX_LEVEL (DETCI). valid_atom_map() LibmintsMolecule method. validate_bracketed_basis() in module wrappers. validate_scheme_args() in module wrappers. ValidationError, [1]. variable_to_string() NumberValue method. VariableValue method. VariableValue class in qcdb.libmintscoordentry. VECS_CC3 (CCEOM). VECS_PER_ROOT (CCEOM). VECS_WRITE (DETCI). visualization. W. WABEI_LOWDISK (CCHBAR). WebMO. WFN (CCDENSITY). (CCENERGY). (CCEOM). (CCHBAR). (CCLAMBDA). (CCRESPONSE). (CCSORT). (CCTRIPLES). (CIS). (CLAG). (DETCI). (GLOBALS). (LMP2). (SCF). (TRANSQT). (TRANSQT2). WFN_SYM (MCSCF). (PSIMRCC). WFN_TYPE (OCC). wrappers module. WRITER_FILE_LABEL (GLOBALS). X. x() LibmintsMolecule method. XI (CCDENSITY). XI_CONNECT (CCDENSITY). xyz() LibmintsMolecule method. Y. y() LibmintsMolecule method. Z. Z() CoordEntry method. LibmintsMolecule method. z() LibmintsMolecule method. ZAPTnCORRELATIONENERGY. ZAPTnTOTALENERGY. zero() in module qcdb.vecutil. ZERO_INTERNAL_AMPS (PSIMRCC). ZETA (CCDENSITY). (CCLAMBDA). ZMatrixEntry class in qcdb.libmintscoordentry. Quick search. Enter search terms or",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:45373,Integrability,wrap,wrappers,45373,"ESS (SCF). threading. TIKHONOW_MAX (PSIMRCC). TIKHONOW_OMEGA (DCFT). (PSIMRCC). TIKHONOW_TRIPLES (PSIMRCC). TILE_SZ (SCF). TPDM (DCFT). (DETCI). TPDM_ABCD_TYPE (OCC). TPDM_ADD_REF (TRANSQT). TPDM_FILE (TRANSQT). TPDM_PRINT (DETCI). transition state; . geometry optimization. translate() LibmintsMolecule method. transpose() in module qcdb.vecutil. TRIPLES_ALGORITHM (PSIMRCC). TRIPLES_DIIS (PSIMRCC). TRIPLES_LOW_MEMORY (FNOCC). TURN_ON_ACTV (MCSCF). TWO-ELECTRONENERGY. type() CartesianEntry method. NumberValue method. VariableValue method. ZMatrixEntry method. U. UNCP-CORRECTED2-BODYINTERACTIONENERGY. unique() LibmintsMolecule method. units; . molecule. UNITS (GLOBALS). units() LibmintsMolecule method. UPDATE (DETCI). update_geometry() LibmintsMolecule method. USE_SPIN_SYM (PSIMRCC). USE_SPIN_SYMMETRY (PSIMRCC). useful() in module qcdb.dbproc. util module. V. VAL_EX_LEVEL (DETCI). valid_atom_map() LibmintsMolecule method. validate_bracketed_basis() in module wrappers. validate_scheme_args() in module wrappers. ValidationError, [1]. variable_to_string() NumberValue method. VariableValue method. VariableValue class in qcdb.libmintscoordentry. VECS_CC3 (CCEOM). VECS_PER_ROOT (CCEOM). VECS_WRITE (DETCI). visualization. W. WABEI_LOWDISK (CCHBAR). WebMO. WFN (CCDENSITY). (CCENERGY). (CCEOM). (CCHBAR). (CCLAMBDA). (CCRESPONSE). (CCSORT). (CCTRIPLES). (CIS). (CLAG). (DETCI). (GLOBALS). (LMP2). (SCF). (TRANSQT). (TRANSQT2). WFN_SYM (MCSCF). (PSIMRCC). WFN_TYPE (OCC). wrappers module. WRITER_FILE_LABEL (GLOBALS). X. x() LibmintsMolecule method. XI (CCDENSITY). XI_CONNECT (CCDENSITY). xyz() LibmintsMolecule method. Y. y() LibmintsMolecule method. Z. Z() CoordEntry method. LibmintsMolecule method. z() LibmintsMolecule method. ZAPTnCORRELATIONENERGY. ZAPTnTOTALENERGY. zero() in module qcdb.vecutil. ZERO_INTERNAL_AMPS (PSIMRCC). ZETA (CCDENSITY). (CCLAMBDA). ZMatrixEntry class in qcdb.libmintscoordentry. Quick search. Enter search terms or a module, class or function name.; . Navigat",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:45840,Integrability,wrap,wrappers,45840,"BCD_TYPE (OCC). TPDM_ADD_REF (TRANSQT). TPDM_FILE (TRANSQT). TPDM_PRINT (DETCI). transition state; . geometry optimization. translate() LibmintsMolecule method. transpose() in module qcdb.vecutil. TRIPLES_ALGORITHM (PSIMRCC). TRIPLES_DIIS (PSIMRCC). TRIPLES_LOW_MEMORY (FNOCC). TURN_ON_ACTV (MCSCF). TWO-ELECTRONENERGY. type() CartesianEntry method. NumberValue method. VariableValue method. ZMatrixEntry method. U. UNCP-CORRECTED2-BODYINTERACTIONENERGY. unique() LibmintsMolecule method. units; . molecule. UNITS (GLOBALS). units() LibmintsMolecule method. UPDATE (DETCI). update_geometry() LibmintsMolecule method. USE_SPIN_SYM (PSIMRCC). USE_SPIN_SYMMETRY (PSIMRCC). useful() in module qcdb.dbproc. util module. V. VAL_EX_LEVEL (DETCI). valid_atom_map() LibmintsMolecule method. validate_bracketed_basis() in module wrappers. validate_scheme_args() in module wrappers. ValidationError, [1]. variable_to_string() NumberValue method. VariableValue method. VariableValue class in qcdb.libmintscoordentry. VECS_CC3 (CCEOM). VECS_PER_ROOT (CCEOM). VECS_WRITE (DETCI). visualization. W. WABEI_LOWDISK (CCHBAR). WebMO. WFN (CCDENSITY). (CCENERGY). (CCEOM). (CCHBAR). (CCLAMBDA). (CCRESPONSE). (CCSORT). (CCTRIPLES). (CIS). (CLAG). (DETCI). (GLOBALS). (LMP2). (SCF). (TRANSQT). (TRANSQT2). WFN_SYM (MCSCF). (PSIMRCC). WFN_TYPE (OCC). wrappers module. WRITER_FILE_LABEL (GLOBALS). X. x() LibmintsMolecule method. XI (CCDENSITY). XI_CONNECT (CCDENSITY). xyz() LibmintsMolecule method. Y. y() LibmintsMolecule method. Z. Z() CoordEntry method. LibmintsMolecule method. z() LibmintsMolecule method. ZAPTnCORRELATIONENERGY. ZAPTnTOTALENERGY. zero() in module qcdb.vecutil. ZERO_INTERNAL_AMPS (PSIMRCC). ZETA (CCDENSITY). (CCLAMBDA). ZMatrixEntry class in qcdb.libmintscoordentry. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â ; PSI4 [beta4] Â» . Â© Copyright 2013, The Psi4 Project.; Last updated on Mar 20, 2014.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:279,Modifiability,plugin,plugin,279,"ï»¿. Index â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â ; PSI4 [beta4] Â» . Index. Symbols; | A; | B; | C; | D; | E; | F; | G; | H; | I; | J; | K; | L; | M; | N; | O; | P; | Q; | R; | S; | T; | U; | V; | W; | X; | Y; | Z. Symbols. (T)CORRECTIONENERGY. --new-plugin <name>; . psi4 command line option. -a, --append; . psi4 command line option. -d, --debug; . psi4 command line option. -h, --help; . psi4 command line option. -i <filename>, --input <filename>; . psi4 command line option. -m, --messy; . psi4 command line option. -n <threads>, --nthread <threads>; . psi4 command line option. -o <filename>, --output <filename>; . psi4 command line option. -p <prefix>, --prefix <prefix>; . psi4 command line option. -v, --verbose; . psi4 command line option. -V, --version; . psi4 command line option. -w, --wipe; . psi4 command line option. A. a() CoordEntry static method. A_RAS3_MAX (DETCI). AA_M_FILE (TRANSQT). AAA(T)CORRECTIONENERGY. AAB(T)CORRECTIONENERGY. Ab initio Polarization Propagator. AB_M_FILE (TRANSQT). ABB(T)CORRECTIONENERGY. ABCD (CCENERGY). (CCEOM). (CCLAMBDA). (CCRESPONSE). absolute_to_relative() Table method. ACENES module, [1]. ACPFCORRELATIONENERGY. ACPFDIPOLEX. ACPFDIPOLEY. ACPFDIPOLEZ. ACPFQUADRUPOLEXX. ACPFQUADRUPOLEXY. ACPFQUADRUPOLEXZ. ACPFQUADRUPOLEYY. ACPFQUADRUPOLEYZ. ACPFQUADRUPOLEZZ. ACPFTOTALENERGY. activate() in module molutil. activate_all_fragments() LibmintsMolecule method. ACTIVE (DETCI). (PSIMRCC). ADC. theory. add() in module qcdb.vecutil. add_atom() LibmintsMolecule method. ADD_AUXILIARY_BONDS (OPTKING). add_dualfit() BasisFamily method. add_jkfit() BasisFamily method. add_rifit() BasisFamily method. addChargeAngstrom() QMMM method. addChargeBohr() QMMM method. addDiffuse() QMMM method. adding new; . basis set. database(). method alias. AEL (CCDENSITY). AIO_CPHF (SAPT). AIO_DF_INTS (SAPT). ALGORITHM (DCFT). aliases module. all_casings() in module procutil. ANALYZE (CCENERGY). (CCRESPONSE). AO_BASIS (CCDENSITY). (CCENERGY",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:18688,Modifiability,variab,variable,18688,"DETCI). (SCF). DIIS_START (PSIMRCC). (SCF). DIIS_START_CONVERGENCE (DCFT). DIIS_START_ITER (DETCI). (LMP2). DIPMOM (DETCI). (FNOCC). DISP_SIZE (FINDIF). DISPERSIONCORRECTIONENERGY. distance() in module qcdb.vecutil. distance_matrix() LibmintsMolecule method. DISTANT_PAIR_CUTOFF (LMP2). DISTRIBUTED_MATRIX (SCF). DO_ALL_TEI (TRANSQT). DO_CCD_DISP (SAPT). DO_DIIS (OCC). DO_LEVEL_SHIFT (OCC). DO_SCS (OCC). DO_SINGLETS (CPHF). DO_SOS (OCC). DO_THIRD_ORDER (SAPT). DO_TRIPLETS (CPHF). DOCC (GLOBALS). (MCSCF). DOMAIN_PRINT (CIS). DOMAIN_PRINT_EXIT (LMP2). DOMAINS (CIS). dot() in module qcdb.vecutil. DOUBLE-HYBRIDCORRECTIONENERGY. driver module. drop_duplicates() in module procutil. dynamic_variable_bind() in module molutil. E. E3_SCALE (OCC). E_CONVERGENCE (CCENERGY). (CCEOM). (DETCI). (FNOCC). (LMP2). (MCSCF). (MRCC). (OCC). (PSIMRCC). (SAPT). (SCF). EA_POLES (OCC). EKT_EA (OCC). EKT_IP (OCC). energy(). setting keywords. energy() in module driver. entry_number() CoordEntry method. environment variable; . MKL_NUM_THREADS, [1]. OMP_NESTED, [1], [2]. OMP_NUM_THREADS, [1], [2], [3], [4], [5]. PATH, [1], [2], [3], [4], [5]. PSI_SCRATCH, [1], [2], [3]. PYTHONPATH, [1], [2], [3], [4]. EOM_GUESS (CCEOM). EOM_REFERENCE (CCEOM). (CCHBAR). (CCSORT). EP_EA_POLES (OCC). EP_IP_POLES (OCC). EP_MAXITER (OCC). equivalent() LibmintsMolecule method. everything() CartesianEntry method. CoordEntry method. CoordValue method. LibmintsMolecule method. NumberValue method. VariableValue method. ZMatrixEntry method. EX_ALLOW (DETCI). EX_LEVEL (DETCI). EXCITATION_RANGE (CCEOM). EXPLICIT_HAMILTONIAN (CPHF). EXTERN (SCF). extract_cluster_indexing() in module molutil. extract_clusters() in module molutil. extract_fragments() LibmintsMolecule method. extract_subsets() LibmintsMolecule method. extrapolation schemes. F. FAIL_ON_MAXITER (SCF). FAVG (MCSCF). FAVG_CCSD_T (PSIMRCC). FAVG_START (MCSCF). fcharge() LibmintsMolecule method. FCI (DETCI). FCI_STRINGS (DETCI). FCICORRELATIONENERGY. FCITOTALENERGY. Fe",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:34387,Modifiability,plugin,plugin,34387," module. process_basis_block() in module input. process_basis_file() in module input. process_external_command() in module input. process_extract_command() in module input. process_filename() in module input. PROCESS_GRID (SCF). process_input() in module input. process_memory_command() in module input. process_molecule_command() in module input. process_multiline_arrays() in module input. process_option() in module input. process_print_command() in module input. process_pubchem_command() in module input. process_set_command() in module input. process_set_commands() in module input. process_word_quotes() in module input. procutil module. prop(); . see property(); . PROP_ALL (CCDENSITY). (CCLAMBDA). PROP_ROOT (CCDENSITY). (CCEOM). (CCLAMBDA). PROP_SYM (CCDENSITY). (CCEOM). (CCLAMBDA). PROPERTIES (GLOBALS). PROPERTIES_ORIGIN (GLOBALS). PROPERTY (CCENERGY). (CCRESPONSE). (CCSORT). (RESPONSE). property(); . setting keywords. property() in module driver. psi4 command line option; . --new-plugin <name>. -V, --version. -a, --append. -d, --debug. -h, --help. -i <filename>, --input <filename>. -m, --messy. -n <threads>, --nthread <threads>. -o <filename>, --output <filename>. -p <prefix>, --prefix <prefix>. -v, --verbose. -w, --wipe. psi4rc. PSI_SCRATCH, [1], [2]. PsiException. psiexceptions module. PsiMod.get_global_option() (built-in function). PsiMod.get_local_option() (built-in function). PsiMod.get_option() (built-in function). PsiMod.has_global_option_changed() (built-in function). PsiMod.has_local_option_changed() (built-in function). PsiMod.has_option_changed() (built-in function). PsiMod.revoke_global_option_changed() (built-in function). PsiMod.revoke_local_option_changed() (built-in function). PsiMod.set_global_option() (built-in function). PsiMod.set_local_option() (built-in function). PSIMRCC (TRANSQT). psioh. psirc. PT_ENERGY (PSIMRCC). PubChem. pubchem module. PubChemObj class in pubchem. PUREAM (GLOBALS). PYTHONPATH, [1], [2], [3]. Q. QC_COUPLING (DCFT). qcdb m",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:22011,Performance,optimiz,optimization,22011,"F). FRAG_MODE (OPTKING). FREEZE_CORE (GLOBALS). (SAPT). FREEZE_INTERFRAG (OPTKING). FREEZE_INTRAFRAG (OPTKING). frequency() in module driver. Frozen natural orbital coupled cluster. Frozen Natural Orbitals. FROZEN_BEND (OPTKING). FROZEN_DIHEDRAL (OPTKING). FROZEN_DISTANCE (OPTKING). FROZEN_DOCC (GLOBALS). (PSIMRCC). FROZEN_UOCC (GLOBALS). (PSIMRCC). fsymbol() LibmintsMolecule method. full_geometry() LibmintsMolecule method. FULL_HESS_EVERY (OPTKING). FULL_MATRIX (CCEOM). full_pg_n() LibmintsMolecule method. full_point_group_with_n() LibmintsMolecule method. FullPointGroupList LibmintsMolecule attribute. functional module. functional_list() in module functional. fx() LibmintsMolecule method. fxyz() LibmintsMolecule method. fy() LibmintsMolecule method. fz() LibmintsMolecule method. fZ() LibmintsMolecule method. FZC_A_FILE (TRANSQT). FZC_B_FILE (TRANSQT). FZC_FILE (TRANSQT). G. G_CONVERGENCE (OPTKING). GAUGE (CCDENSITY). (CCRESPONSE). gaussian_n module. GEOM_MAXITER (OPTKING). geometry optimization. IRC. constrained. convergence criteria. minima. output. transition state. geometry() in module molutil. LibmintsMolecule method. get_anchor_atom() LibmintsMolecule method. get_coord_value() LibmintsMolecule method. get_full_point_group() LibmintsMolecule method. get_memory() in module util. get_num_threads() in module util. get_psifile() in module procutil. get_variable() LibmintsMolecule method. getattr_ignorecase() in module procutil. getCartesian() PubChemObj method. getMoleculeString() PubChemObj method. getPubChemResults() in module pubchem. getSDF() PubChemObj method. getXYZFile() PubChemObj method. Ghost Atoms. gradient() in module driver. GRADIENT_WRITE (FINDIF). GUESS (SCF). GUESS_VECTOR (DETCI). H. H0_BLOCK_COUPLING (DETCI). H0_BLOCK_COUPLING_SIZE (DETCI). H0_BLOCKSIZE (DETCI). H0_GUESS_SIZE (DETCI). H_BOND_CONNECT (OPTKING). Hartree-Fock. has_inversion() LibmintsMolecule method. has_symmetry_element() LibmintsMolecule method. HBC6 module, [1]. HD_AVG (DETCI). HD_",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:24339,Performance,optimiz,optimization,24339,"H module, [1]. I. ICORE (DETCI). IGNORE_TAU (DCFT). import_ignorecase() in module procutil. IncompleteAtomError. inertia_tensor() LibmintsMolecule method. init_with_checkpoint() LibmintsMolecule method. init_with_io() LibmintsMolecule method. init_with_xyz() qcdb.libmintsmolecule.LibmintsMolecule class method. qcdb.molecule.Molecule class method. input module. installing. INTCO_FIXED_EQ_FORCE_CONSTANT (OPTKING). INTCOS_GENERATE_EXIT (OPTKING). INTERFRAG_DIST_INV (OPTKING). INTERFRAG_HESS (OPTKING). INTERFRAG_MODE (OPTKING). INTERFRAG_STEP_LIMIT (OPTKING). INTERFRAGMENT_CONNECT (OPTKING). INTERNAL_ROTATIONS (MCSCF). INTRAFRAG_HESS (OPTKING). INTRAFRAG_STEP_LIMIT (OPTKING). INTRAFRAG_STEP_LIMIT_MAX (OPTKING). INTRAFRAG_STEP_LIMIT_MIN (OPTKING). INTS_TOLERANCE (CCDENSITY). (CCSORT). (DCFT). (DFMP2). (LMP2). (MRCC). (SAPT). (SCF). (TRANSQT). (TRANSQT2). invalidate() CartesianEntry method. CoordValue method. ZMatrixEntry method. ip_fitting() in module frac. IP_POLES (OCC). IRC; . geometry optimization. IRC_DIRECTION (OPTKING). IRC_STEP_SIZE (OPTKING). IRC_STOP (OPTKING). irrep_labels() LibmintsMolecule method. is_axis() LibmintsMolecule method. is_computed() CoordEntry method. is_equivalent_to() CoordEntry method. is_ghosted() CoordEntry method. is_linear_planar() LibmintsMolecule method. is_plane() LibmintsMolecule method. is_variable() LibmintsMolecule method. ISTOP (DETCI). IVO (TRANSQT). J. J_FILE (TRANSQT). JOBTYPE (CCLAMBDA). JSCH module, [1]. K. KEEP_INTCOS (OPTKING). KEEP_J (TRANSQT). KEEP_OEIFILE (CCSORT). KEEP_PRESORT (TRANSQT). KEEP_TEIFILE (CCSORT). keywords; . C-side, setting. cbs(), setting. cp(), setting. database(), setting. diatomic_anharmonicity(), setting. energy(), setting. molecule, setting. optimize(), setting. property(), setting. kwargs_lower() in module procutil. L. label() CoordEntry method. LibmintsMolecule method. LAG_IN_FILE (TRANSQT). LAGRAN_DOUBLE (TRANSQT). LAGRAN_HALVE (TRANSQT). LAMBDA_MAXITER (DCFT). LCC2(+LMP2)TOTALENERGY. LCCSD(+LMP2)T",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:25077,Performance,optimiz,optimize,25077,"KING). INTS_TOLERANCE (CCDENSITY). (CCSORT). (DCFT). (DFMP2). (LMP2). (MRCC). (SAPT). (SCF). (TRANSQT). (TRANSQT2). invalidate() CartesianEntry method. CoordValue method. ZMatrixEntry method. ip_fitting() in module frac. IP_POLES (OCC). IRC; . geometry optimization. IRC_DIRECTION (OPTKING). IRC_STEP_SIZE (OPTKING). IRC_STOP (OPTKING). irrep_labels() LibmintsMolecule method. is_axis() LibmintsMolecule method. is_computed() CoordEntry method. is_equivalent_to() CoordEntry method. is_ghosted() CoordEntry method. is_linear_planar() LibmintsMolecule method. is_plane() LibmintsMolecule method. is_variable() LibmintsMolecule method. ISTOP (DETCI). IVO (TRANSQT). J. J_FILE (TRANSQT). JOBTYPE (CCLAMBDA). JSCH module, [1]. K. KEEP_INTCOS (OPTKING). KEEP_J (TRANSQT). KEEP_OEIFILE (CCSORT). KEEP_PRESORT (TRANSQT). KEEP_TEIFILE (CCSORT). keywords; . C-side, setting. cbs(), setting. cp(), setting. database(), setting. diatomic_anharmonicity(), setting. energy(), setting. molecule, setting. optimize(), setting. property(), setting. kwargs_lower() in module procutil. L. label() CoordEntry method. LibmintsMolecule method. LAG_IN_FILE (TRANSQT). LAGRAN_DOUBLE (TRANSQT). LAGRAN_HALVE (TRANSQT). LAMBDA_MAXITER (DCFT). LCC2(+LMP2)TOTALENERGY. LCCSD(+LMP2)TOTALENERGY. LEVEL_SHIFT (MCSCF). (OCC). LibmintsMolecule class in qcdb.libmintsmolecule. like_world_axis() LibmintsMolecule static method. LINEAR (CCRESPONSE). LINEQ_SOLVER (OCC). LINESEARCH_STATIC_MAX (OPTKING). LINESEARCH_STATIC_MIN (OPTKING). LINESEARCH_STATIC_N (OPTKING). load_basfam_dunning() in module basislistdunning. load_basfam_other() in module basislistother. load_basis_families() in module basislist. LOCAL (CCENERGY). (CCEOM). (CCLAMBDA). (CCRESPONSE). (CCSORT). (CIS). LOCAL_AMPS_PRINT_CUTOFF (CIS). LOCAL_CORE_CUTOFF (CCSORT). LOCAL_CPHF_CUTOFF (CCENERGY). (CCLAMBDA). (CCRESPONSE). (CCSORT). LOCAL_CUTOFF (CCENERGY). (CCEOM). (CCLAMBDA). (CCRESPONSE). (CCSORT). (CIS). (LMP2). LOCAL_DO_SINGLES (CCEOM). LOCAL_DOMAIN_MAG (CCSORT",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:31239,Performance,optimiz,optimize,31239,"erValue class in qcdb.libmintscoordentry. nunique() LibmintsMolecule method. O. OCC_ORBS_PRINT (OCC). OCC_TOLERANCE (FNOCC). (SAPT). OCEPA; . setting keywords. theory. OCEPA(0)CORRELATIONENERGY. OCEPA(0)TOTALENERGY. OEI_A_FILE (TRANSQT). OEI_B_FILE (TRANSQT). OEI_FILE (TRANSQT). OEProp. theory. oeprop() in module util. OFFDIAGONAL_CCSD_T (PSIMRCC). OMEGA (CCRESPONSE). (CCSORT). (RESPONSE). OMEGA_ERF (MINTS). OMP2; . setting keywords. theory. OMP2.5; . setting keywords. OMP2CORRELATIONENERGY. OMP2TOTALENERGY. OMP3; . setting keywords. theory. OMP3CORRELATIONENERGY. OMP3TOTALENERGY. OMP_N_THREAD (CPHF). OMP_NESTED, [1]. OMP_NUM_THREADS, [1], [2], [3], [4]. ONE-ELECTRONENERGY. ONEPDM (CCDENSITY). (DFMP2). ONEPDM_GRID_CUTOFF (CCDENSITY). ONEPDM_GRID_DUMP (CCDENSITY). ONEPDM_GRID_STEPSIZE (CCDENSITY). ONEPOT_GRID_READ (SCF). OPDM (DETCI). OPDM_AVG (DETCI). OPDM_IN_FILE (TRANSQT). OPDM_KE (DETCI). OPDM_OUT_FILE (TRANSQT). OPDM_PRINT (DETCI). OPDM_RELAX (CCDENSITY). (DFMP2). opt(); . see optimize(); . OPT_METHOD (OCC). OPT_TYPE (OPTKING). optimization; . see geometry optimization; . optimize(); . setting keywords. optimize() in module driver. OptionsState class in optproc. OptionState class in optproc. optproc module. ORB_OPT (OCC). ORB_RESP_SOLVER (OCC). Orbital-Optimized Methods; . theory. Orbital-Optimized Methods, OCEPA. Orbital-Optimized Methods, OMP2. Orbital-Optimized Methods, OMP2.5. Orbital-Optimized Methods, OMP3. orientation_fixed() LibmintsMolecule method. ORTH_TYPE (OCC). output; . SAPT. cbs(). database(). geometry optimization. P. P (THERMO). PAIR_ENERGIES_PRINT (CCENERGY). PARALLEL (SCF). parallel operation. parse_arbitrary_order() in module driver. parse_cotton_irreps() in module driver. parse_multiline_array() in module input. PATH, [1], [2], [3], [4]. PB_LAMBDA (DFTSAPT). PCG_BETA_TYPE (OCC). PCG_CONVERGENCE (OCC). PCG_MAXITER (OCC). PEP1. perp_unit() in module qcdb.vecutil. PERTURB_CBS (PSIMRCC). PERTURB_CBS_COUPLING (PSIMRCC). PERTURB_H (SCF). PERTURB_M",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:31291,Performance,optimiz,optimization,31291,"mintsMolecule method. O. OCC_ORBS_PRINT (OCC). OCC_TOLERANCE (FNOCC). (SAPT). OCEPA; . setting keywords. theory. OCEPA(0)CORRELATIONENERGY. OCEPA(0)TOTALENERGY. OEI_A_FILE (TRANSQT). OEI_B_FILE (TRANSQT). OEI_FILE (TRANSQT). OEProp. theory. oeprop() in module util. OFFDIAGONAL_CCSD_T (PSIMRCC). OMEGA (CCRESPONSE). (CCSORT). (RESPONSE). OMEGA_ERF (MINTS). OMP2; . setting keywords. theory. OMP2.5; . setting keywords. OMP2CORRELATIONENERGY. OMP2TOTALENERGY. OMP3; . setting keywords. theory. OMP3CORRELATIONENERGY. OMP3TOTALENERGY. OMP_N_THREAD (CPHF). OMP_NESTED, [1]. OMP_NUM_THREADS, [1], [2], [3], [4]. ONE-ELECTRONENERGY. ONEPDM (CCDENSITY). (DFMP2). ONEPDM_GRID_CUTOFF (CCDENSITY). ONEPDM_GRID_DUMP (CCDENSITY). ONEPDM_GRID_STEPSIZE (CCDENSITY). ONEPOT_GRID_READ (SCF). OPDM (DETCI). OPDM_AVG (DETCI). OPDM_IN_FILE (TRANSQT). OPDM_KE (DETCI). OPDM_OUT_FILE (TRANSQT). OPDM_PRINT (DETCI). OPDM_RELAX (CCDENSITY). (DFMP2). opt(); . see optimize(); . OPT_METHOD (OCC). OPT_TYPE (OPTKING). optimization; . see geometry optimization; . optimize(); . setting keywords. optimize() in module driver. OptionsState class in optproc. OptionState class in optproc. optproc module. ORB_OPT (OCC). ORB_RESP_SOLVER (OCC). Orbital-Optimized Methods; . theory. Orbital-Optimized Methods, OCEPA. Orbital-Optimized Methods, OMP2. Orbital-Optimized Methods, OMP2.5. Orbital-Optimized Methods, OMP3. orientation_fixed() LibmintsMolecule method. ORTH_TYPE (OCC). output; . SAPT. cbs(). database(). geometry optimization. P. P (THERMO). PAIR_ENERGIES_PRINT (CCENERGY). PARALLEL (SCF). parallel operation. parse_arbitrary_order() in module driver. parse_cotton_irreps() in module driver. parse_multiline_array() in module input. PATH, [1], [2], [3], [4]. PB_LAMBDA (DFTSAPT). PCG_BETA_TYPE (OCC). PCG_CONVERGENCE (OCC). PCG_MAXITER (OCC). PEP1. perp_unit() in module qcdb.vecutil. PERTURB_CBS (PSIMRCC). PERTURB_CBS_COUPLING (PSIMRCC). PERTURB_H (SCF). PERTURB_MAGNITUDE (DETCI). (SCF). PERTURB_WITH (SCF). PHI_POINTS",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:31320,Performance,optimiz,optimization,31320,"O. OCC_ORBS_PRINT (OCC). OCC_TOLERANCE (FNOCC). (SAPT). OCEPA; . setting keywords. theory. OCEPA(0)CORRELATIONENERGY. OCEPA(0)TOTALENERGY. OEI_A_FILE (TRANSQT). OEI_B_FILE (TRANSQT). OEI_FILE (TRANSQT). OEProp. theory. oeprop() in module util. OFFDIAGONAL_CCSD_T (PSIMRCC). OMEGA (CCRESPONSE). (CCSORT). (RESPONSE). OMEGA_ERF (MINTS). OMP2; . setting keywords. theory. OMP2.5; . setting keywords. OMP2CORRELATIONENERGY. OMP2TOTALENERGY. OMP3; . setting keywords. theory. OMP3CORRELATIONENERGY. OMP3TOTALENERGY. OMP_N_THREAD (CPHF). OMP_NESTED, [1]. OMP_NUM_THREADS, [1], [2], [3], [4]. ONE-ELECTRONENERGY. ONEPDM (CCDENSITY). (DFMP2). ONEPDM_GRID_CUTOFF (CCDENSITY). ONEPDM_GRID_DUMP (CCDENSITY). ONEPDM_GRID_STEPSIZE (CCDENSITY). ONEPOT_GRID_READ (SCF). OPDM (DETCI). OPDM_AVG (DETCI). OPDM_IN_FILE (TRANSQT). OPDM_KE (DETCI). OPDM_OUT_FILE (TRANSQT). OPDM_PRINT (DETCI). OPDM_RELAX (CCDENSITY). (DFMP2). opt(); . see optimize(); . OPT_METHOD (OCC). OPT_TYPE (OPTKING). optimization; . see geometry optimization; . optimize(); . setting keywords. optimize() in module driver. OptionsState class in optproc. OptionState class in optproc. optproc module. ORB_OPT (OCC). ORB_RESP_SOLVER (OCC). Orbital-Optimized Methods; . theory. Orbital-Optimized Methods, OCEPA. Orbital-Optimized Methods, OMP2. Orbital-Optimized Methods, OMP2.5. Orbital-Optimized Methods, OMP3. orientation_fixed() LibmintsMolecule method. ORTH_TYPE (OCC). output; . SAPT. cbs(). database(). geometry optimization. P. P (THERMO). PAIR_ENERGIES_PRINT (CCENERGY). PARALLEL (SCF). parallel operation. parse_arbitrary_order() in module driver. parse_cotton_irreps() in module driver. parse_multiline_array() in module input. PATH, [1], [2], [3], [4]. PB_LAMBDA (DFTSAPT). PCG_BETA_TYPE (OCC). PCG_CONVERGENCE (OCC). PCG_MAXITER (OCC). PEP1. perp_unit() in module qcdb.vecutil. PERTURB_CBS (PSIMRCC). PERTURB_CBS_COUPLING (PSIMRCC). PERTURB_H (SCF). PERTURB_MAGNITUDE (DETCI). (SCF). PERTURB_WITH (SCF). PHI_POINTS (SCF). physconst modul",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:31336,Performance,optimiz,optimize,31336,"). OCC_TOLERANCE (FNOCC). (SAPT). OCEPA; . setting keywords. theory. OCEPA(0)CORRELATIONENERGY. OCEPA(0)TOTALENERGY. OEI_A_FILE (TRANSQT). OEI_B_FILE (TRANSQT). OEI_FILE (TRANSQT). OEProp. theory. oeprop() in module util. OFFDIAGONAL_CCSD_T (PSIMRCC). OMEGA (CCRESPONSE). (CCSORT). (RESPONSE). OMEGA_ERF (MINTS). OMP2; . setting keywords. theory. OMP2.5; . setting keywords. OMP2CORRELATIONENERGY. OMP2TOTALENERGY. OMP3; . setting keywords. theory. OMP3CORRELATIONENERGY. OMP3TOTALENERGY. OMP_N_THREAD (CPHF). OMP_NESTED, [1]. OMP_NUM_THREADS, [1], [2], [3], [4]. ONE-ELECTRONENERGY. ONEPDM (CCDENSITY). (DFMP2). ONEPDM_GRID_CUTOFF (CCDENSITY). ONEPDM_GRID_DUMP (CCDENSITY). ONEPDM_GRID_STEPSIZE (CCDENSITY). ONEPOT_GRID_READ (SCF). OPDM (DETCI). OPDM_AVG (DETCI). OPDM_IN_FILE (TRANSQT). OPDM_KE (DETCI). OPDM_OUT_FILE (TRANSQT). OPDM_PRINT (DETCI). OPDM_RELAX (CCDENSITY). (DFMP2). opt(); . see optimize(); . OPT_METHOD (OCC). OPT_TYPE (OPTKING). optimization; . see geometry optimization; . optimize(); . setting keywords. optimize() in module driver. OptionsState class in optproc. OptionState class in optproc. optproc module. ORB_OPT (OCC). ORB_RESP_SOLVER (OCC). Orbital-Optimized Methods; . theory. Orbital-Optimized Methods, OCEPA. Orbital-Optimized Methods, OMP2. Orbital-Optimized Methods, OMP2.5. Orbital-Optimized Methods, OMP3. orientation_fixed() LibmintsMolecule method. ORTH_TYPE (OCC). output; . SAPT. cbs(). database(). geometry optimization. P. P (THERMO). PAIR_ENERGIES_PRINT (CCENERGY). PARALLEL (SCF). parallel operation. parse_arbitrary_order() in module driver. parse_cotton_irreps() in module driver. parse_multiline_array() in module input. PATH, [1], [2], [3], [4]. PB_LAMBDA (DFTSAPT). PCG_BETA_TYPE (OCC). PCG_CONVERGENCE (OCC). PCG_MAXITER (OCC). PEP1. perp_unit() in module qcdb.vecutil. PERTURB_CBS (PSIMRCC). PERTURB_CBS_COUPLING (PSIMRCC). PERTURB_H (SCF). PERTURB_MAGNITUDE (DETCI). (SCF). PERTURB_WITH (SCF). PHI_POINTS (SCF). physconst module. physical constants",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:31368,Performance,optimiz,optimize,31368,"; . setting keywords. theory. OCEPA(0)CORRELATIONENERGY. OCEPA(0)TOTALENERGY. OEI_A_FILE (TRANSQT). OEI_B_FILE (TRANSQT). OEI_FILE (TRANSQT). OEProp. theory. oeprop() in module util. OFFDIAGONAL_CCSD_T (PSIMRCC). OMEGA (CCRESPONSE). (CCSORT). (RESPONSE). OMEGA_ERF (MINTS). OMP2; . setting keywords. theory. OMP2.5; . setting keywords. OMP2CORRELATIONENERGY. OMP2TOTALENERGY. OMP3; . setting keywords. theory. OMP3CORRELATIONENERGY. OMP3TOTALENERGY. OMP_N_THREAD (CPHF). OMP_NESTED, [1]. OMP_NUM_THREADS, [1], [2], [3], [4]. ONE-ELECTRONENERGY. ONEPDM (CCDENSITY). (DFMP2). ONEPDM_GRID_CUTOFF (CCDENSITY). ONEPDM_GRID_DUMP (CCDENSITY). ONEPDM_GRID_STEPSIZE (CCDENSITY). ONEPOT_GRID_READ (SCF). OPDM (DETCI). OPDM_AVG (DETCI). OPDM_IN_FILE (TRANSQT). OPDM_KE (DETCI). OPDM_OUT_FILE (TRANSQT). OPDM_PRINT (DETCI). OPDM_RELAX (CCDENSITY). (DFMP2). opt(); . see optimize(); . OPT_METHOD (OCC). OPT_TYPE (OPTKING). optimization; . see geometry optimization; . optimize(); . setting keywords. optimize() in module driver. OptionsState class in optproc. OptionState class in optproc. optproc module. ORB_OPT (OCC). ORB_RESP_SOLVER (OCC). Orbital-Optimized Methods; . theory. Orbital-Optimized Methods, OCEPA. Orbital-Optimized Methods, OMP2. Orbital-Optimized Methods, OMP2.5. Orbital-Optimized Methods, OMP3. orientation_fixed() LibmintsMolecule method. ORTH_TYPE (OCC). output; . SAPT. cbs(). database(). geometry optimization. P. P (THERMO). PAIR_ENERGIES_PRINT (CCENERGY). PARALLEL (SCF). parallel operation. parse_arbitrary_order() in module driver. parse_cotton_irreps() in module driver. parse_multiline_array() in module input. PATH, [1], [2], [3], [4]. PB_LAMBDA (DFTSAPT). PCG_BETA_TYPE (OCC). PCG_CONVERGENCE (OCC). PCG_MAXITER (OCC). PEP1. perp_unit() in module qcdb.vecutil. PERTURB_CBS (PSIMRCC). PERTURB_CBS_COUPLING (PSIMRCC). PERTURB_H (SCF). PERTURB_MAGNITUDE (DETCI). (SCF). PERTURB_WITH (SCF). PHI_POINTS (SCF). physconst module. physical constants. PITZER (TRANSQT). point_group() Libmin",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:31790,Performance,optimiz,optimization,31790,"OMP3CORRELATIONENERGY. OMP3TOTALENERGY. OMP_N_THREAD (CPHF). OMP_NESTED, [1]. OMP_NUM_THREADS, [1], [2], [3], [4]. ONE-ELECTRONENERGY. ONEPDM (CCDENSITY). (DFMP2). ONEPDM_GRID_CUTOFF (CCDENSITY). ONEPDM_GRID_DUMP (CCDENSITY). ONEPDM_GRID_STEPSIZE (CCDENSITY). ONEPOT_GRID_READ (SCF). OPDM (DETCI). OPDM_AVG (DETCI). OPDM_IN_FILE (TRANSQT). OPDM_KE (DETCI). OPDM_OUT_FILE (TRANSQT). OPDM_PRINT (DETCI). OPDM_RELAX (CCDENSITY). (DFMP2). opt(); . see optimize(); . OPT_METHOD (OCC). OPT_TYPE (OPTKING). optimization; . see geometry optimization; . optimize(); . setting keywords. optimize() in module driver. OptionsState class in optproc. OptionState class in optproc. optproc module. ORB_OPT (OCC). ORB_RESP_SOLVER (OCC). Orbital-Optimized Methods; . theory. Orbital-Optimized Methods, OCEPA. Orbital-Optimized Methods, OMP2. Orbital-Optimized Methods, OMP2.5. Orbital-Optimized Methods, OMP3. orientation_fixed() LibmintsMolecule method. ORTH_TYPE (OCC). output; . SAPT. cbs(). database(). geometry optimization. P. P (THERMO). PAIR_ENERGIES_PRINT (CCENERGY). PARALLEL (SCF). parallel operation. parse_arbitrary_order() in module driver. parse_cotton_irreps() in module driver. parse_multiline_array() in module input. PATH, [1], [2], [3], [4]. PB_LAMBDA (DFTSAPT). PCG_BETA_TYPE (OCC). PCG_CONVERGENCE (OCC). PCG_MAXITER (OCC). PEP1. perp_unit() in module qcdb.vecutil. PERTURB_CBS (PSIMRCC). PERTURB_CBS_COUPLING (PSIMRCC). PERTURB_H (SCF). PERTURB_MAGNITUDE (DETCI). (SCF). PERTURB_WITH (SCF). PHI_POINTS (SCF). physconst module. physical constants. PITZER (TRANSQT). point_group() LibmintsMolecule method. POINTS (FINDIF). POLE_MAXITER (ADC). populateExtern() Diffuse method. QMMM method. PR (ADC). PRECONDITIONER (DETCI). prerequisites. PRESORT_FILE (TRANSQT). PRINT (CPHF). (DFTSAPT). (GLOBALS). (SAPT). PRINT_BASIS (SCF). print_basis_families() in module basislist. print_bond_angles() LibmintsMolecule method. print_dihedrals() LibmintsMolecule method. print_distances() LibmintsMolecule metho",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:42404,Performance,optimiz,optimize,42404,sis_by_label() LibmintsMolecule method. set_basis_by_number() LibmintsMolecule method. set_basis_by_symbol() LibmintsMolecule method. set_com_fixed() LibmintsMolecule method. set_coordinates() CartesianEntry method. ZMatrixEntry method. set_fixed() CoordValue method. set_full_geometry() LibmintsMolecule method. set_full_point_group() LibmintsMolecule method. set_geometry() LibmintsMolecule method. set_ghost_fragment() LibmintsMolecule method. set_ghost_fragments() LibmintsMolecule method. set_ghosted() CoordEntry method. set_memory() in module util. set_molecular_charge() LibmintsMolecule method. set_multiplicity() LibmintsMolecule method. set_name() LibmintsMolecule method. set_num_threads() in module util. set_point_group() LibmintsMolecule method. set_units() LibmintsMolecule method. set_variable() LibmintsMolecule method. setting; . keywords C-side. keywords cbs(). keywords cp(). keywords database(). keywords diatomic_anharmonicity(). keywords energy(). keywords molecule. keywords optimize(). keywords property(). SF_RESTRICT (DETCI). sherrillgroup_gold_standard() in module aliases. show() in module qcdb.vecutil. SIGMA_OVERLAP (DETCI). single-point. SINGLES_PRINT (CCEOM). SMALL_CUTOFF (PSIMRCC). SO_S_FILE (TRANSQT). SO_T_FILE (TRANSQT). SO_TEI_FILE (TRANSQT). SO_V_FILE (TRANSQT). SOCC (GLOBALS). (MCSCF). SOLVER_CONVERGENCE (CPHF). SOLVER_EXACT_DIAGONAL (CPHF). SOLVER_MAX_SUBSPACE (CPHF). SOLVER_MAXITER (CPHF). SOLVER_MIN_SUBSPACE (CPHF). SOLVER_N_GUESS (CPHF). SOLVER_N_ROOT (CPHF). SOLVER_NORM (CPHF). SOLVER_PRECONDITION (CPHF). SOLVER_PRECONDITION_MAXITER (CPHF). SOLVER_PRECONDITION_STEPS (CPHF). SOLVER_QUANTITY (CPHF). SOLVER_TYPE (CPHF). SORTED_TEI_FILE (TRANSQT). SOS_TYPE (OCC). SPINADAPT_ENERGIES (CCENERGY). split_menial() in module wrappers. SS_E_CONVERGENCE (CCEOM). SS_R_CONVERGENCE (CCEOM). SS_SKIP_DIAG (CCEOM). SS_VECS_PER_ROOT (CCEOM). STABILITY_ADD_VECTORS (DCFT). STABILITY_ANALYSIS (SCF). STABILITY_AUGMENT_SPACE_TOL (DCFT). STABILITY_CHECK (DCFT). STAB,MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:44621,Performance,optimiz,optimization,44621,"_list() in module functional. sym_label() LibmintsMolecule method. symbol() CoordEntry method. LibmintsMolecule method. symmetrize() LibmintsMolecule method. symmetry. molecule. symmetry_frame() LibmintsMolecule method. symmetry_from_input() LibmintsMolecule method. T. T (THERMO). T2_COUPLED (CCENERGY). T3_WS_INCORE (CCENERGY). (CCEOM). T_AMPS (CCHBAR). Table class in text. tblhead() in module wrappers. TDHF_MEM_SAFETY_FACTOR (CPHF). TDM (DETCI). TDM_PRINT (DETCI). TDM_WRITE (DETCI). TEST_B (OPTKING). test_ccl_functional() in module functional. TEST_DERIVATIVE_B (OPTKING). text module. theory; . ADC. CC. CI. DCFT. DF-MP2. DFT. OCEPA. OEProp. OMP2. OMP3. Orbital-Optimized Methods. SAPT. SCF. cbs(), [1]. THETA_POINTS (SCF). THICKNESS (SCF). threading. TIKHONOW_MAX (PSIMRCC). TIKHONOW_OMEGA (DCFT). (PSIMRCC). TIKHONOW_TRIPLES (PSIMRCC). TILE_SZ (SCF). TPDM (DCFT). (DETCI). TPDM_ABCD_TYPE (OCC). TPDM_ADD_REF (TRANSQT). TPDM_FILE (TRANSQT). TPDM_PRINT (DETCI). transition state; . geometry optimization. translate() LibmintsMolecule method. transpose() in module qcdb.vecutil. TRIPLES_ALGORITHM (PSIMRCC). TRIPLES_DIIS (PSIMRCC). TRIPLES_LOW_MEMORY (FNOCC). TURN_ON_ACTV (MCSCF). TWO-ELECTRONENERGY. type() CartesianEntry method. NumberValue method. VariableValue method. ZMatrixEntry method. U. UNCP-CORRECTED2-BODYINTERACTIONENERGY. unique() LibmintsMolecule method. units; . molecule. UNITS (GLOBALS). units() LibmintsMolecule method. UPDATE (DETCI). update_geometry() LibmintsMolecule method. USE_SPIN_SYM (PSIMRCC). USE_SPIN_SYMMETRY (PSIMRCC). useful() in module qcdb.dbproc. util module. V. VAL_EX_LEVEL (DETCI). valid_atom_map() LibmintsMolecule method. validate_bracketed_basis() in module wrappers. validate_scheme_args() in module wrappers. ValidationError, [1]. variable_to_string() NumberValue method. VariableValue method. VariableValue class in qcdb.libmintscoordentry. VECS_CC3 (CCEOM). VECS_PER_ROOT (CCEOM). VECS_WRITE (DETCI). visualization. W. WABEI_LOWDISK (CCHBAR). WebM",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/genindex.html:13590,Usability,clear,clear,13590,"IROOTn->ROOTmDIPOLEX. CIROOTn->ROOTmDIPOLEY. CIROOTn->ROOTmDIPOLEZ. CIROOTn->ROOTmQUADRUPOLEXX. CIROOTn->ROOTmQUADRUPOLEXY. CIROOTn->ROOTmQUADRUPOLEXZ. CIROOTn->ROOTmQUADRUPOLEYY. CIROOTn->ROOTmQUADRUPOLEYZ. CIROOTn->ROOTmQUADRUPOLEZZ. CIROOTnCORRELATIONENERGY. CIROOTnDIPOLEX. CIROOTnDIPOLEY. CIROOTnDIPOLEZ. CIROOTnQUADRUPOLEXX. CIROOTnQUADRUPOLEXY. CIROOTnQUADRUPOLEXZ. CIROOTnQUADRUPOLEYY. CIROOTnQUADRUPOLEYZ. CIROOTnQUADRUPOLEZZ. CIROOTnTOTALENERGY. CIS_AD_STATES (CPHF). CIS_AMPLITUDE_CUTOFF (CPHF). CIS_DOPDM_STATES (CPHF). CIS_MEM_SAFETY_FACTOR (CPHF). CIS_NO_STATES (CPHF). CIS_OPDM_STATES (CPHF). CIS_TOPDM_STATES (CPHF). CISDCORRELATIONENERGY. CISDDIPOLEX. CISDDIPOLEY. CISDDIPOLEZ. CISDQUADRUPOLEXX. CISDQUADRUPOLEXY. CISDQUADRUPOLEXZ. CISDQUADRUPOLEYY. CISDQUADRUPOLEYZ. CISDQUADRUPOLEZZ. CISDTCORRELATIONENERGY. CISDTOTALENERGY. CISDTQCORRELATIONENERGY. CISDTQTOTALENERGY. CISDTTOTALENERGY. CISTATE-AVERAGEDCORRELATIONENERGY. CISTATE-AVERAGEDTOTALENERGY. CITOTALENERGY. clear() LibmintsMolecule method. clone() CartesianEntry method. LibmintsMolecule method. NumberValue method. VariableValue method. ZMatrixEntry method. COLLAPSE_SIZE (DETCI). COLLAPSE_WITH_LAST (CCEOM). compare_integers() in module util. compare_matrices() in module qcdb.psiutil. in module util. compare_strings() in module util. compare_values() in module qcdb.psiutil. in module util. compare_vectors() in module util. compilers. compiling. complete_basis_set(); . see cbs(); . complete_basis_set() in module wrappers. COMPLEX_TOLERANCE (CCEOM). compute() CartesianEntry method. NumberValue method. VariableValue method. ZMatrixEntry method. COMPUTE_MP4_TRIPLES (FNOCC). COMPUTE_TRIPLES (FNOCC). CONSECUTIVE_BACKSTEPS (OPTKING). contact. convert() in module wrappers. CoordEntry class in qcdb.libmintscoordentry. CoordValue class in qcdb.libmintscoordentry. copy() Table method. copy_file_from_scratch() in module util. copy_file_to_scratch() in module util. CORE module, [1]. corl_xtpl_helgaker_2() in module wra",MatchSource.WIKI,psi4manual/4.0b4/genindex.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/genindex.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:9493,Availability,avail,available,9493,"lectronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unl",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:9754,Availability,avail,available,9754," computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:10026,Availability,avail,available,10026,"age of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:5952,Deployability,configurat,configuration,5952," component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] f",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:6186,Deployability,configurat,configuration,6186, electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; T,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:6426,Deployability,configurat,configuration,6426,ts of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and cor,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:6788,Deployability,configurat,configuration,6788,tion energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGY,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:6957,Deployability,configurat,configuration,6957,requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three c,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7235,Deployability,configurat,configuration,7235,vel of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrup,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7433,Deployability,configurat,configuration,7433,the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ ,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7831,Deployability,configurat,configuration,7831,"n interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise c",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7983,Deployability,configurat,configuration,7983,"evel of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:8239,Deployability,configurat,configuration,8239," configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corre",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:8585,Deployability,configurat,configuration,8585,"RAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name D",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11312,Deployability,configurat,configuration,11312,". Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation ener",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13807,Deployability,configurat,configuration,13807,"e total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) EN",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:14013,Deployability,configurat,configuration,14013," [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Deb",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:16527,Deployability,update,updated,16527,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:1169,Energy Efficiency,energy,energy,1169,"rs in PSI variable names represent portions of; the variable name that vary by root number, calculation order, etc.; See text for fuller description. (T) CORRECTION ENERGYÂ¶; The coupled-cluster perturbative triples correction [H]. MP4(T) CORRECTION ENERGYÂ¶; The MP4 triples component [H]. Quantity is second right-hand term in; Eq. (2). AAA (T) CORRECTION ENERGYÂ¶. AAB (T) CORRECTION ENERGYÂ¶. ABB (T) CORRECTION ENERGYÂ¶. BBB (T) CORRECTION ENERGYÂ¶; Components of the coupled-cluster perturbative triples correction [H]. ACPF DIPOLE XÂ¶. ACPF DIPOLE YÂ¶. ACPF DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; Th",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:1196,Energy Efficiency,energy,energy,1196,"rs in PSI variable names represent portions of; the variable name that vary by root number, calculation order, etc.; See text for fuller description. (T) CORRECTION ENERGYÂ¶; The coupled-cluster perturbative triples correction [H]. MP4(T) CORRECTION ENERGYÂ¶; The MP4 triples component [H]. Quantity is second right-hand term in; Eq. (2). AAA (T) CORRECTION ENERGYÂ¶. AAB (T) CORRECTION ENERGYÂ¶. ABB (T) CORRECTION ENERGYÂ¶. BBB (T) CORRECTION ENERGYÂ¶; Components of the coupled-cluster perturbative triples correction [H]. ACPF DIPOLE XÂ¶. ACPF DIPOLE YÂ¶. ACPF DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; Th",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:1731,Energy Efficiency,energy,energy,1731," ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:1758,Energy Efficiency,energy,energy,1758," ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:2017,Energy Efficiency,energy,energy,2017,"ir functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCS",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:2068,Energy Efficiency,energy,energy,2068,"ir functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCS",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:2217,Energy Efficiency,energy,energy,2217,"ir functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATIO",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:2562,Energy Efficiency,energy,energy,2562,"r the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] an",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:2589,Energy Efficiency,energy,energy,2589,"r the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] an",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:3277,Energy Efficiency,energy,energy,3277,"). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:3304,Energy Efficiency,energy,energy,3304,"). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:3593,Energy Efficiency,energy,energy,3593,"oupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coup",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:3620,Energy Efficiency,energy,energy,3620,"oupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coup",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:3927,Energy Efficiency,energy,energy,3927,"nts of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximat",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:3954,Energy Efficiency,energy,energy,3954,"nts of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximat",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:4251,Energy Efficiency,energy,energy,4251,"lation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:4278,Energy Efficiency,energy,energy,4278,"lation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:4569,Energy Efficiency,energy,energy,4569,"ation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶.",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:4596,Energy Efficiency,energy,energy,4596,"ation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶.",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:4906,Energy Efficiency,energy,energy,4906,"ion energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:4933,Energy Efficiency,energy,energy,4933,"ion energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:5717,Energy Efficiency,energy,energy,5717,"ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; r",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:5744,Energy Efficiency,energy,energy,5744,"ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; r",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7366,Energy Efficiency,energy,energy,7366,the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ ,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7393,Energy Efficiency,energy,energy,7393,the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ ,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7605,Energy Efficiency,energy,energy,7605, -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of th,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7632,Energy Efficiency,energy,energy,7632, -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of th,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7764,Energy Efficiency,energy,energy,7764,"n interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise c",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7791,Energy Efficiency,energy,energy,7791,"n interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise c",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:8520,Energy Efficiency,energy,energy,8520,"RAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name D",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:8547,Energy Efficiency,energy,energy,8547,"RAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name D",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:8720,Energy Efficiency,energy,energy,8720,"ERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. I",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:8916,Energy Efficiency,energy,energy,8916,"IPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method nam",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:9011,Energy Efficiency,energy,energy,9011,"vel of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is avail",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:9196,Energy Efficiency,energy,energy,9196,"rupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:10133,Energy Efficiency,energy,energy,10133," The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity i",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:10449,Energy Efficiency,energy,energy,10449,"in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any disper",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:10751,Energy Efficiency,energy,energy,10751," this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORR",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:10792,Energy Efficiency,energy,energy,10792," this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORR",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11068,Energy Efficiency,energy,energy,11068,"T FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11250,Energy Efficiency,energy,energy,11250,". Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation ener",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11277,Energy Efficiency,energy,energy,11277,". Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation ener",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11394,Energy Efficiency,energy,energy,11394,"al electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 T",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11595,Energy Efficiency,energy,energy,11595,"Y. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy compone",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11691,Energy Efficiency,energy,energy,11691,"o; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATI",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11803,Energy Efficiency,energy,energy,11803,"ty in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and corr",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11830,Energy Efficiency,energy,energy,11830,"ty in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and corr",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11950,Energy Efficiency,energy,energy,11950,"od is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGY",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11977,Energy Efficiency,energy,energy,11977,"od is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGY",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:12095,Energy Efficiency,energy,energy,12095,"rlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERG",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:12122,Energy Efficiency,energy,energy,12122,"rlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERG",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:12248,Energy Efficiency,energy,energy,12248,"n energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:12275,Energy Efficiency,energy,energy,12275,"n energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:12552,Energy Efficiency,energy,energy,12552,"NERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-EL",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:12579,Energy Efficiency,energy,energy,12579,"NERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-EL",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:12799,Energy Efficiency,energy,energy,12799,"n energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interact",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:12826,Energy Efficiency,energy,energy,12826,"n energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interact",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:12984,Energy Efficiency,energy,energy,12984," component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy com",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13025,Energy Efficiency,energy,energy,13025," component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy com",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13135,Energy Efficiency,energy,energy,13135,"vel of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EX",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13162,Energy Efficiency,energy,energy,13162,"vel of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EX",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13302,Energy Efficiency,energy,energy,13302,", quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13329,Energy Efficiency,energy,energy,13329,", quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13465,Energy Efficiency,energy,energy,13465,"AL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the reques",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13492,Energy Efficiency,energy,energy,13492,"AL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the reques",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13600,Energy Efficiency,energy,energy,13600," the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAP",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13641,Energy Efficiency,energy,energy,13641," the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAP",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13740,Energy Efficiency,energy,energy,13740,"e total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) EN",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13767,Energy Efficiency,energy,energy,13767,"e total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) EN",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13946,Energy Efficiency,energy,energy,13946," [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Deb",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13973,Energy Efficiency,energy,energy,13973," [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Deb",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:14307,Energy Efficiency,energy,energy,14307,"ATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculat",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:14464,Energy Efficiency,energy,energy,14464,"energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity i",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:14656,Energy Efficiency,energy,energy,14656,"antity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT dou",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:14821,Energy Efficiency,energy,energy,14821,"les and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-B",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:15223,Energy Efficiency,energy,energy,15223,"statics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:15749,Energy Efficiency,energy,energy,15749,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:15790,Energy Efficiency,energy,energy,15790,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:15879,Energy Efficiency,energy,energy,15879,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:16100,Energy Efficiency,energy,energy,16100,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:16127,Energy Efficiency,energy,energy,16127,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:208,Modifiability,variab,variable,208,"ï»¿. PSI Variables by Alpha â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». PSI Variables by AlphaÂ¶. Note; Lowercase letters in PSI variable names represent portions of; the variable name that vary by root number, calculation order, etc.; See text for fuller description. (T) CORRECTION ENERGYÂ¶; The coupled-cluster perturbative triples correction [H]. MP4(T) CORRECTION ENERGYÂ¶; The MP4 triples component [H]. Quantity is second right-hand term in; Eq. (2). AAA (T) CORRECTION ENERGYÂ¶. AAB (T) CORRECTION ENERGYÂ¶. ABB (T) CORRECTION ENERGYÂ¶. BBB (T) CORRECTION ENERGYÂ¶; Components of the coupled-cluster perturbative triples correction [H]. ACPF DIPOLE XÂ¶. ACPF DIPOLE YÂ¶. ACPF DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The t",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:250,Modifiability,variab,variable,250,"ï»¿. PSI Variables by Alpha â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». PSI Variables by AlphaÂ¶. Note; Lowercase letters in PSI variable names represent portions of; the variable name that vary by root number, calculation order, etc.; See text for fuller description. (T) CORRECTION ENERGYÂ¶; The coupled-cluster perturbative triples correction [H]. MP4(T) CORRECTION ENERGYÂ¶; The MP4 triples component [H]. Quantity is second right-hand term in; Eq. (2). AAA (T) CORRECTION ENERGYÂ¶. AAB (T) CORRECTION ENERGYÂ¶. ABB (T) CORRECTION ENERGYÂ¶. BBB (T) CORRECTION ENERGYÂ¶; Components of the coupled-cluster perturbative triples correction [H]. ACPF DIPOLE XÂ¶. ACPF DIPOLE YÂ¶. ACPF DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The t",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:5952,Modifiability,config,configuration,5952," component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] f",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:6186,Modifiability,config,configuration,6186, electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; T,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:6426,Modifiability,config,configuration,6426,ts of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and cor,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:6788,Modifiability,config,configuration,6788,tion energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGY,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:6957,Modifiability,config,configuration,6957,requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three c,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7235,Modifiability,config,configuration,7235,vel of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrup,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7433,Modifiability,config,configuration,7433,the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ ,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7831,Modifiability,config,configuration,7831,"n interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise c",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:7983,Modifiability,config,configuration,7983,"evel of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:8239,Modifiability,config,configuration,8239," configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corre",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:8585,Modifiability,config,configuration,8585,"RAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name D",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:8820,Modifiability,variab,variable,8820,"tion interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQU",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:8963,Modifiability,variab,variable,8963,"IPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method nam",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:9267,Modifiability,variab,variable,9267,"rupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:11312,Modifiability,config,configuration,11312,". Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation ener",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13807,Modifiability,config,configuration,13807,"e total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) EN",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:14013,Modifiability,config,configuration,14013," [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Deb",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:15295,Modifiability,variab,variables,15295,"PT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search t",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:15388,Modifiability,variab,variables,15388,"PT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search t",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:15982,Modifiability,variab,variable,15982,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:9137,Performance,optimiz,optimizer,9137,"CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The tot",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13200,Performance,optimiz,optimized,13200,"vel of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EX",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13367,Performance,optimiz,optimized,13367,", quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html:13530,Performance,optimiz,optimized,13530,"AL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the reques",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables-1.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables-1.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:9493,Availability,avail,available,9493,"lectronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unl",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:9754,Availability,avail,available,9754," computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:10026,Availability,avail,available,10026,"age of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:5952,Deployability,configurat,configuration,5952," component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] f",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:6186,Deployability,configurat,configuration,6186, electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; T,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:6426,Deployability,configurat,configuration,6426,ts of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and cor,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:6788,Deployability,configurat,configuration,6788,tion energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGY,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:6957,Deployability,configurat,configuration,6957,requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three c,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7235,Deployability,configurat,configuration,7235,vel of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrup,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7433,Deployability,configurat,configuration,7433,the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ ,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7831,Deployability,configurat,configuration,7831,"n interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise c",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7983,Deployability,configurat,configuration,7983,"evel of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:8239,Deployability,configurat,configuration,8239," configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corre",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:8585,Deployability,configurat,configuration,8585,"RAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name D",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11312,Deployability,configurat,configuration,11312,". Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation ener",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13807,Deployability,configurat,configuration,13807,"e total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) EN",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:14013,Deployability,configurat,configuration,14013," [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Deb",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:16527,Deployability,update,updated,16527,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:1169,Energy Efficiency,energy,energy,1169,"rs in PSI variable names represent portions of; the variable name that vary by root number, calculation order, etc.; See text for fuller description. (T) CORRECTION ENERGYÂ¶; The coupled-cluster perturbative triples correction [H]. MP4(T) CORRECTION ENERGYÂ¶; The MP4 triples component [H]. Quantity is second right-hand term in; Eq. (2). AAA (T) CORRECTION ENERGYÂ¶. AAB (T) CORRECTION ENERGYÂ¶. ABB (T) CORRECTION ENERGYÂ¶. BBB (T) CORRECTION ENERGYÂ¶; Components of the coupled-cluster perturbative triples correction [H]. ACPF DIPOLE XÂ¶. ACPF DIPOLE YÂ¶. ACPF DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; Th",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:1196,Energy Efficiency,energy,energy,1196,"rs in PSI variable names represent portions of; the variable name that vary by root number, calculation order, etc.; See text for fuller description. (T) CORRECTION ENERGYÂ¶; The coupled-cluster perturbative triples correction [H]. MP4(T) CORRECTION ENERGYÂ¶; The MP4 triples component [H]. Quantity is second right-hand term in; Eq. (2). AAA (T) CORRECTION ENERGYÂ¶. AAB (T) CORRECTION ENERGYÂ¶. ABB (T) CORRECTION ENERGYÂ¶. BBB (T) CORRECTION ENERGYÂ¶; Components of the coupled-cluster perturbative triples correction [H]. ACPF DIPOLE XÂ¶. ACPF DIPOLE YÂ¶. ACPF DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; Th",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:1731,Energy Efficiency,energy,energy,1731," ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:1758,Energy Efficiency,energy,energy,1758," ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:2017,Energy Efficiency,energy,energy,2017,"ir functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCS",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:2068,Energy Efficiency,energy,energy,2068,"ir functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCS",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:2217,Energy Efficiency,energy,energy,2217,"ir functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATIO",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:2562,Energy Efficiency,energy,energy,2562,"r the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] an",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:2589,Energy Efficiency,energy,energy,2589,"r the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGYÂ¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] an",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:3277,Energy Efficiency,energy,energy,3277,"). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:3304,Energy Efficiency,energy,energy,3304,"). CC TOTAL ENERGYÂ¶. CC CORRELATION ENERGYÂ¶. CC2 TOTAL ENERGYÂ¶. CC2 CORRELATION ENERGYÂ¶. CC3 TOTAL ENERGYÂ¶. CC3 CORRELATION ENERGYÂ¶. CC4 TOTAL ENERGYÂ¶. CC4 CORRELATION ENERGYÂ¶. CCnn TOTAL ENERGYÂ¶. CCnn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested approximate coupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:3593,Energy Efficiency,energy,energy,3593,"oupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coup",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:3620,Energy Efficiency,energy,energy,3620,"oupled-cluster (CC2, CC3, up to CCnn); level of theory. CC DIPOLE XÂ¶. CC DIPOLE YÂ¶. CC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; coupled cluster level of theory and root. CC QUADRUPOLE XXÂ¶. CC QUADRUPOLE XYÂ¶. CC QUADRUPOLE XZÂ¶. CC QUADRUPOLE YYÂ¶. CC QUADRUPOLE YZÂ¶. CC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coup",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:3927,Energy Efficiency,energy,energy,3927,"nts of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximat",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:3954,Energy Efficiency,energy,energy,3954,"nts of the quadrupole [Debye Ang] for the requested; coupled cluster level of theory and root. CCSD TOTAL ENERGYÂ¶. CCSD CORRELATION ENERGYÂ¶. CCSDT TOTAL ENERGYÂ¶. CCSDT CORRELATION ENERGYÂ¶. CCSDTQ TOTAL ENERGYÂ¶. CCSDTQ CORRELATION ENERGYÂ¶. CCn TOTAL ENERGYÂ¶. CCn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximat",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:4251,Energy Efficiency,energy,energy,4251,"lation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:4278,Energy Efficiency,energy,energy,4278,"lation energy component [H]; for the requested full coupled-cluster (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGYÂ¶. CCSD(T) CORRELATION ENERGYÂ¶. CCSDT(Q) TOTAL ENERGYÂ¶. CCSDT(Q) CORRELATION ENERGYÂ¶. CC(n-1)(n) TOTAL ENERGYÂ¶. CC(n-1)(n) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:4569,Energy Efficiency,energy,energy,4569,"ation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶.",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:4596,Energy Efficiency,energy,energy,4596,"ation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGYÂ¶. CCSDT-1a CORRELATION ENERGYÂ¶. CCSDTQ-1a TOTAL ENERGYÂ¶. CCSDTQ-1a CORRELATION ENERGYÂ¶. CCn-1a TOTAL ENERGYÂ¶. CCn-1a CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶.",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:4906,Energy Efficiency,energy,energy,4906,"ion energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:4933,Energy Efficiency,energy,energy,4933,"ion energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGYÂ¶. CCSDT-1b CORRELATION ENERGYÂ¶. CCSDTQ-1b TOTAL ENERGYÂ¶. CCSDTQ-1b CORRELATION ENERGYÂ¶. CCn-1b TOTAL ENERGYÂ¶. CCn-1b CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGYÂ¶. CCSDT-3 CORRELATION ENERGYÂ¶. CCSDTQ-3 TOTAL ENERGYÂ¶. CCSDTQ-3 CORRELATION ENERGYÂ¶. CCn-3 TOTAL ENERGYÂ¶. CCn-3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGYÂ¶. CCSD(T)_L CORRELATION ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:5717,Energy Efficiency,energy,energy,5717,"ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; r",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:5744,Energy Efficiency,energy,energy,5744,"ENERGYÂ¶. CCSDT(Q)_L TOTAL ENERGYÂ¶. CCSDT(Q)_L CORRELATION ENERGYÂ¶. CC(n-1)(n)_L TOTAL ENERGYÂ¶. CC(n-1)(n)_L CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; r",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7366,Energy Efficiency,energy,energy,7366,the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ ,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7393,Energy Efficiency,energy,energy,7393,the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ ,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7605,Energy Efficiency,energy,energy,7605, -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of th,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7632,Energy Efficiency,energy,energy,7632, -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of th,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7764,Energy Efficiency,energy,energy,7764,"n interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise c",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7791,Energy Efficiency,energy,energy,7791,"n interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise c",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:8520,Energy Efficiency,energy,energy,8520,"RAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name D",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:8547,Energy Efficiency,energy,energy,8547,"RAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name D",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:8720,Energy Efficiency,energy,energy,8720,"ERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. I",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:8916,Energy Efficiency,energy,energy,8916,"IPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method nam",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:9011,Energy Efficiency,energy,energy,9011,"vel of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is avail",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:9196,Energy Efficiency,energy,energy,9196,"rupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:10133,Energy Efficiency,energy,energy,10133," The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity i",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:10449,Energy Efficiency,energy,energy,10449,"in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any disper",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:10751,Energy Efficiency,energy,energy,10751," this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORR",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:10792,Energy Efficiency,energy,energy,10792," this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORR",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11068,Energy Efficiency,energy,energy,11068,"T FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. (4) or (1). Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11250,Energy Efficiency,energy,energy,11250,". Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation ener",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11277,Energy Efficiency,energy,energy,11277,". Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation ener",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11394,Energy Efficiency,energy,energy,11394,"al electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 T",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11595,Energy Efficiency,energy,energy,11595,"Y. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy compone",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11691,Energy Efficiency,energy,energy,11691,"o; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATI",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11803,Energy Efficiency,energy,energy,11803,"ty in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and corr",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11830,Energy Efficiency,energy,energy,11830,"ty in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and corr",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11950,Energy Efficiency,energy,energy,11950,"od is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGY",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11977,Energy Efficiency,energy,energy,11977,"od is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGY",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:12095,Energy Efficiency,energy,energy,12095,"rlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERG",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:12122,Energy Efficiency,energy,energy,12122,"rlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERG",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:12248,Energy Efficiency,energy,energy,12248,"n energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:12275,Energy Efficiency,energy,energy,12275,"n energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:12552,Energy Efficiency,energy,energy,12552,"NERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-EL",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:12579,Energy Efficiency,energy,energy,12579,"NERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-EL",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:12799,Energy Efficiency,energy,energy,12799,"n energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interact",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:12826,Energy Efficiency,energy,energy,12826,"n energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interact",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:12984,Energy Efficiency,energy,energy,12984," component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy com",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13025,Energy Efficiency,energy,energy,13025," component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy com",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13135,Energy Efficiency,energy,energy,13135,"vel of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EX",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13162,Energy Efficiency,energy,energy,13162,"vel of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EX",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13302,Energy Efficiency,energy,energy,13302,", quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13329,Energy Efficiency,energy,energy,13329,", quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13465,Energy Efficiency,energy,energy,13465,"AL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the reques",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13492,Energy Efficiency,energy,energy,13492,"AL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the reques",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13600,Energy Efficiency,energy,energy,13600," the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAP",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13641,Energy Efficiency,energy,energy,13641," the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAP",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13740,Energy Efficiency,energy,energy,13740,"e total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) EN",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13767,Energy Efficiency,energy,energy,13767,"e total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) EN",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13946,Energy Efficiency,energy,energy,13946," [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Deb",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13973,Energy Efficiency,energy,energy,13973," [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Deb",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:14307,Energy Efficiency,energy,energy,14307,"ATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculat",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:14464,Energy Efficiency,energy,energy,14464,"energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity i",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:14656,Energy Efficiency,energy,energy,14656,"antity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT dou",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:14821,Energy Efficiency,energy,energy,14821,"les and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-B",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:15223,Energy Efficiency,energy,energy,15223,"statics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:15749,Energy Efficiency,energy,energy,15749,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:15790,Energy Efficiency,energy,energy,15790,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:15879,Energy Efficiency,energy,energy,15879,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:16100,Energy Efficiency,energy,energy,16100,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:16127,Energy Efficiency,energy,energy,16127,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:208,Modifiability,variab,variable,208,"ï»¿. PSI Variables by Alpha â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». PSI Variables by AlphaÂ¶. Note; Lowercase letters in PSI variable names represent portions of; the variable name that vary by root number, calculation order, etc.; See text for fuller description. (T) CORRECTION ENERGYÂ¶; The coupled-cluster perturbative triples correction [H]. MP4(T) CORRECTION ENERGYÂ¶; The MP4 triples component [H]. Quantity is second right-hand term in; Eq. (2). AAA (T) CORRECTION ENERGYÂ¶. AAB (T) CORRECTION ENERGYÂ¶. ABB (T) CORRECTION ENERGYÂ¶. BBB (T) CORRECTION ENERGYÂ¶; Components of the coupled-cluster perturbative triples correction [H]. ACPF DIPOLE XÂ¶. ACPF DIPOLE YÂ¶. ACPF DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The t",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:250,Modifiability,variab,variable,250,"ï»¿. PSI Variables by Alpha â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». PSI Variables by AlphaÂ¶. Note; Lowercase letters in PSI variable names represent portions of; the variable name that vary by root number, calculation order, etc.; See text for fuller description. (T) CORRECTION ENERGYÂ¶; The coupled-cluster perturbative triples correction [H]. MP4(T) CORRECTION ENERGYÂ¶; The MP4 triples component [H]. Quantity is second right-hand term in; Eq. (2). AAA (T) CORRECTION ENERGYÂ¶. AAB (T) CORRECTION ENERGYÂ¶. ABB (T) CORRECTION ENERGYÂ¶. BBB (T) CORRECTION ENERGYÂ¶; Components of the coupled-cluster perturbative triples correction [H]. ACPF DIPOLE XÂ¶. ACPF DIPOLE YÂ¶. ACPF DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged coupled-pair functional level of theory. ACPF QUADRUPOLE XXÂ¶. ACPF QUADRUPOLE XYÂ¶. ACPF QUADRUPOLE XZÂ¶. ACPF QUADRUPOLE YYÂ¶. ACPF QUADRUPOLE YZÂ¶. ACPF QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged coupled-pair functional level of theory. ACPF TOTAL ENERGYÂ¶. ACPF CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged coupled-pair functional level of theory. AQCC DIPOLE XÂ¶. AQCC DIPOLE YÂ¶. AQCC DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; averaged quadratic coupled-cluster level of theory. AQCC QUADRUPOLE XXÂ¶. AQCC QUADRUPOLE XYÂ¶. AQCC QUADRUPOLE XZÂ¶. AQCC QUADRUPOLE YYÂ¶. AQCC QUADRUPOLE YZÂ¶. AQCC QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; averaged quadratic coupled-cluster level of theory. AQCC TOTAL ENERGYÂ¶. AQCC CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGEDÂ¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGYÂ¶. CBS CORRELATION ENERGYÂ¶. CBS REFERENCE ENERGYÂ¶; The t",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:5952,Modifiability,config,configuration,5952," component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE XÂ¶. CEPA(0) DIPOLE YÂ¶. CEPA(0) DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] f",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:6186,Modifiability,config,configuration,6186, electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XXÂ¶. CEPA(0) QUADRUPOLE XYÂ¶. CEPA(0) QUADRUPOLE XZÂ¶. CEPA(0) QUADRUPOLE YYÂ¶. CEPA(0) QUADRUPOLE YZÂ¶. CEPA(0) QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; T,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:6426,Modifiability,config,configuration,6426,ts of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGYÂ¶. CEPA(0) CORRELATION ENERGYÂ¶. CEPA(1) TOTAL ENERGYÂ¶. CEPA(1) CORRELATION ENERGYÂ¶. CEPA(2) TOTAL ENERGYÂ¶. CEPA(2) CORRELATION ENERGYÂ¶. CEPA(3) TOTAL ENERGYÂ¶. CEPA(3) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and cor,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:6788,Modifiability,config,configuration,6788,tion energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CI DIPOLE XÂ¶. CI DIPOLE YÂ¶. CI DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGY,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:6957,Modifiability,config,configuration,6957,requested; configuration interaction level of theory and root. CI QUADRUPOLE XXÂ¶. CI QUADRUPOLE XYÂ¶. CI QUADRUPOLE XZÂ¶. CI QUADRUPOLE YYÂ¶. CI QUADRUPOLE YZÂ¶. CI QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three c,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7235,Modifiability,config,configuration,7235,vel of theory and root. CI ROOT n -> ROOT m DIPOLE XÂ¶. CI ROOT n -> ROOT m DIPOLE YÂ¶. CI ROOT n -> ROOT m DIPOLE ZÂ¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrup,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7433,Modifiability,config,configuration,7433,the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XXÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE XZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YYÂ¶. CI ROOT n -> ROOT m QUADRUPOLE YZÂ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZÂ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ ,MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7831,Modifiability,config,configuration,7831,"n interaction level of; theory. CI ROOT n DIPOLE XÂ¶. CI ROOT n DIPOLE YÂ¶. CI ROOT n DIPOLE ZÂ¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise c",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:7983,Modifiability,config,configuration,7983,"evel of theory and root n. CI ROOT n QUADRUPOLE XXÂ¶. CI ROOT n QUADRUPOLE XYÂ¶. CI ROOT n QUADRUPOLE XZÂ¶. CI ROOT n QUADRUPOLE YYÂ¶. CI ROOT n QUADRUPOLE YZÂ¶. CI ROOT n QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENE",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:8239,Modifiability,config,configuration,8239," configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGYÂ¶. CI ROOT n CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGYÂ¶. CI STATE-AVERAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corre",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:8585,Modifiability,config,configuration,8585,"RAGED CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGYÂ¶. CI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name D",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:8820,Modifiability,variab,variable,8820,"tion interaction level of theory and root. CISD DIPOLE XÂ¶. CISD DIPOLE YÂ¶. CISD DIPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQU",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:8963,Modifiability,variab,variable,8963,"IPOLE ZÂ¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XXÂ¶. CISD QUADRUPOLE XYÂ¶. CISD QUADRUPOLE XZÂ¶. CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method nam",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:9267,Modifiability,variab,variable,9267,"rupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The total electronic energy [H] for the underlying functional of the; requested DFT method, without ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:11312,Modifiability,config,configuration,11312,". Quantity; in Eqs. (4) and (1).; Unless the method includes a dispersion correction, this quantity is; equal to SCF TOTAL ENERGY. DFT TOTAL ENERGYÂ¶; The total electronic energy [H] for the requested DFT method,; in Eq. (1). (1); Unless the method is a DFT double-hybrid, this quantity is equal to; SCF TOTAL ENERGY. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; DFT FUNCTIONAL TOTAL ENERGY. DFT XC ENERGYÂ¶; The functional energy contribution [H] to the total SCF energy (DFT only).; Quantity in Eqs. (4) and (1). DISPERSION CORRECTION ENERGYÂ¶; The dispersion correction [H] appended to an underlying functional; when a DFT-D method is requested. Quantity ; in Eqs. (4) and (1). DOUBLE-HYBRID CORRECTION ENERGYÂ¶; The scaled MP2 correlation energy correction [H] appended to an; underlying functional when a DH-DFT method is requested.; Quantity in Eq. (1). FCI TOTAL ENERGYÂ¶. FCI CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full configuration interaction level of theory. HF TOTAL ENERGYÂ¶; The total electronic energy [H] for the HartreeâFock method, without; any dispersion correction; the first three (or four, since; ) terms in Eq. (4). Quantity ; in Eq. (4). LCC2 (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CC2 level of theory. LCCSD (+LMP2) TOTAL ENERGYÂ¶; The total electronic energy [H] for the local CCSD level of theory. MP2 TOTAL ENERGYÂ¶. MP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2 level of theory. MP2.5 TOTAL ENERGYÂ¶. MP2.5 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP2.5 level of theory. MP3 TOTAL ENERGYÂ¶. MP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP3 level of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation ener",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13807,Modifiability,config,configuration,13807,"e total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) EN",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:14013,Modifiability,config,configuration,14013," [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Deb",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:15295,Modifiability,variab,variables,15295,"PT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search t",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:15388,Modifiability,variab,variables,15388,"PT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the requested SAPT; level of theory. SAPT SAPT0 ENERGYÂ¶. SAPT SAPT2 ENERGYÂ¶. SAPT SAPT2+ ENERGYÂ¶. SAPT SAPT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search t",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:15982,Modifiability,variab,variable,15982,"PT2+(3) ENERGYÂ¶. SAPT SAPT2+3 ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory. SAPT SAPT2+(CCD) ENERGYÂ¶. SAPT SAPT2+(3)(CCD) ENERGYÂ¶. SAPT SAPT2+3(CCD) ENERGYÂ¶; The total electronic interaction energy [H] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. SCF DIPOLE XÂ¶. SCF DIPOLE YÂ¶. SCF DIPOLE ZÂ¶; The three components of the SCF dipole [Debye]. SCF QUADRUPOLE XXÂ¶. SCF QUADRUPOLE XYÂ¶. SCF QUADRUPOLE XZÂ¶. SCF QUADRUPOLE YYÂ¶. SCF QUADRUPOLE YZÂ¶. SCF QUADRUPOLE ZZÂ¶; The six components of the SCF quadrupole [Debye Ang]. SCF TOTAL ENERGYÂ¶; The total electronic energy [H] of the SCF stage of the calculation.; The CORRELATION ENERGY variables from subsequent stages of a; calculation are often the corresponding TOTAL ENERGY; variables less this quantity. Constructed from Eq. (4),; where this quantity is . (4); Unless the method includes a dispersion correction, this quantity is; equal to HF TOTAL ENERGY (for HF) or; DFT FUNCTIONAL TOTAL ENERGY (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. TWO-ELECTRON ENERGYÂ¶; The two-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). UNCP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed without counterpoise correction.; Related variable CP-CORRECTED 2-BODY INTERACTION ENERGY. ZAPTn TOTAL ENERGYÂ¶. ZAPTn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled Z-averaged perturbation theory level.; n is ZAPT perturbation order. Previous topic; WFN; Next topic; PSI Variables by Module; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â . previous Â  Â ; PSI4 [beta4] Â» ; Appendices Â». Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:9137,Performance,optimiz,optimizer,9137,"CISD QUADRUPOLE YYÂ¶. CISD QUADRUPOLE YZÂ¶. CISD QUADRUPOLE ZZÂ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGYÂ¶. CISD CORRELATION ENERGYÂ¶. CISDT TOTAL ENERGYÂ¶. CISDT CORRELATION ENERGYÂ¶. CISDTQ CORRELATION ENERGYÂ¶. CISDTQ TOTAL ENERGYÂ¶. CIn CORRELATION ENERGYÂ¶. CIn TOTAL ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGYÂ¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGYÂ¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGYÂ¶; The total electronic energy [H] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. CURRENT REFERENCE ENERGYÂ¶; The total electronic energy [H] of the reference stage corresponding to; the CURRENT ENERGY variable. db_name DATABASE MEAN ABSOLUTE DEVIATIONÂ¶; The mean absolute deviation [kcal mol-1] of the requested method; name from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE MEAN SIGNED DEVIATIONÂ¶; The mean deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. db_name DATABASE ROOT-MEAN-SQUARE SIGNED DEVIATIONÂ¶; The rms deviation [kcal mol-1] of the requested method name; from the stored reference values for the requested reactions in; database db_name. If no reference is available, this will be a large; and nonsensical value. DFT FUNCTIONAL TOTAL ENERGYÂ¶; The tot",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13200,Performance,optimiz,optimized,13200,"vel of theory. MP4(SDQ) TOTAL ENERGYÂ¶. MP4(SDQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EX",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13367,Performance,optimiz,optimized,13367,", quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGYÂ¶. MP4 CORRELATION ENERGYÂ¶. MP4(SDTQ) TOTAL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the ",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html:13530,Performance,optimiz,optimized,13530,"AL ENERGYÂ¶. MP4(SDTQ) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY is left-hand term in Eq. (2). (2). MPn TOTAL ENERGYÂ¶. MPn CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the labeled MÃ¶llerâPlesset perturbation theory level.; n is MP perturbation order. NUCLEAR REPULSION ENERGYÂ¶; The nuclear repulsion energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). (3). OCEPA(0) TOTAL ENERGYÂ¶. OCEPA(0) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized CEPA(0) level of theory. OMP2 TOTAL ENERGYÂ¶. OMP2 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP2 level of theory. OMP3 TOTAL ENERGYÂ¶. OMP3 CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the orbital-optimized MP3 level of theory. ONE-ELECTRON ENERGYÂ¶; The one-electron energy contribution [H] to the total SCF energy.; Quantity in Eq. (4). QCISD TOTAL ENERGYÂ¶. QCISD CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles level; of theory. QCISD(T) TOTAL ENERGYÂ¶. QCISD(T) CORRELATION ENERGYÂ¶; The total electronic energy [H] and correlation energy component [H]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. SAPT DISP ENERGYÂ¶. SAPT ELST ENERGYÂ¶. SAPT EXCH ENERGYÂ¶. SAPT IND ENERGYÂ¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [H] for the the; requested SAPT level of theory. The sum of these four components yields; SAPT ENERGY. SAPT ENERGYÂ¶; The total electronic interaction energy [H] for the reques",MatchSource.WIKI,psi4manual/4.0b4/glossary_psivariables.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/glossary_psivariables.html
https://psicode.org/psi4manual/4.0b4/index.html:3184,Deployability,update,updated,3184,"lerâPlesset Perturbation Theories; OCC: Conventional MÃ¸llerâPlesset Perturbation Theories; CC: Coupled Cluster Methods; FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; PSIMRCC Implementation of Mk-MRCC Theory; CI: Configuration Interaction; SAPT: Symmetry-Adapted Perturbation Theory; ADC: Ab Initio Polarization Propagator; Geometry Optimization; Evaluation of One-Electron Properties. Interfaces: Enhancing PSI4 Capabilities; Interface to MRCC by M. KÃ¡llay; Interface to DFTD3 by S. Grimme; Interface to Molden. Psithon Functions: Invoking a Calculation; Notes on Options; Energy; Property; Counterpoise Correct; Optimize; Frequency; Database; Complete Basis Set; Spectroscopic Constants for Diatomics; Function Intercalls. Customization: Adding Simple Extensions; User-Defined Basis Sets; Defining a Method Alias; Creating a Database. Contributions: Intro to Programming in PSI4; Plugins: Adding New Functionality to PSI4; Best Practices for Python Functions; Documentation; PsiPEP: Plans and Practices to Organize PSI4. Programming: Using the Core Libraries; LibOptions: globals, locals, has_changed and all that; Adding Methods to Driver. Python Driver; basislist; input; pubchem; psiexceptions; frac; molutil; proc; dashparam; procutil; driver; optproc; gaussian_n; physconst; wrappers; qmmm; basislistother; diatomic; functional; text; util; basislistdunning; aliases; qcdb. PsiMod: Linking C++ and Python; Appendices; Bibliography; Test Suite and Sample Inputs; Basis Sets by Element; Auxiliary Basis Sets; DFT Functionals; PSIOH Intermediate Files; Keywords by Alpha; Keywords by Module; PSI Variables by Alpha; PSI Variables by Module. Indices. Index; Module Index; Search Page. Next topic; Introduction; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â ; PSI4 [beta4] Â» . Â© Copyright 2013, The Psi4 Project.; Last updated on Mar 20, 2014.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/index.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/index.html
https://psicode.org/psi4manual/4.0b4/index.html:2545,Integrability,wrap,wrappers,2545,"lerâPlesset Perturbation Theories; OCC: Conventional MÃ¸llerâPlesset Perturbation Theories; CC: Coupled Cluster Methods; FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; PSIMRCC Implementation of Mk-MRCC Theory; CI: Configuration Interaction; SAPT: Symmetry-Adapted Perturbation Theory; ADC: Ab Initio Polarization Propagator; Geometry Optimization; Evaluation of One-Electron Properties. Interfaces: Enhancing PSI4 Capabilities; Interface to MRCC by M. KÃ¡llay; Interface to DFTD3 by S. Grimme; Interface to Molden. Psithon Functions: Invoking a Calculation; Notes on Options; Energy; Property; Counterpoise Correct; Optimize; Frequency; Database; Complete Basis Set; Spectroscopic Constants for Diatomics; Function Intercalls. Customization: Adding Simple Extensions; User-Defined Basis Sets; Defining a Method Alias; Creating a Database. Contributions: Intro to Programming in PSI4; Plugins: Adding New Functionality to PSI4; Best Practices for Python Functions; Documentation; PsiPEP: Plans and Practices to Organize PSI4. Programming: Using the Core Libraries; LibOptions: globals, locals, has_changed and all that; Adding Methods to Driver. Python Driver; basislist; input; pubchem; psiexceptions; frac; molutil; proc; dashparam; procutil; driver; optproc; gaussian_n; physconst; wrappers; qmmm; basislistother; diatomic; functional; text; util; basislistdunning; aliases; qcdb. PsiMod: Linking C++ and Python; Appendices; Bibliography; Test Suite and Sample Inputs; Basis Sets by Element; Auxiliary Basis Sets; DFT Functionals; PSIOH Intermediate Files; Keywords by Alpha; Keywords by Module; PSI Variables by Alpha; PSI Variables by Module. Indices. Index; Module Index; Search Page. Next topic; Introduction; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â . next Â  Â ; PSI4 [beta4] Â» . Â© Copyright 2013, The Psi4 Project.; Last updated on Mar 20, 2014.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/index.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/index.html
https://psicode.org/psi4manual/4.0b4/installfile.html:1922,Availability,avail,available,1922,"preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the cod",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:5857,Availability,down,down,5857,"cript will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/l",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:7110,Availability,error,error,7110,"chitectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:7123,Availability,error,error,7123,"chitectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:7961,Availability,down,download,7961,"There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usua",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8173,Availability,down,download,8173,""" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8723,Availability,error,error,8723,"on).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and to provide system routines for those libraries. Note that no fortr",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8786,Availability,error,error,8786,"de does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and to provide system routines for those libraries. Note that no fortran; compiler is necessary on Mac OS X systems (see below). The default search; ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:16585,Availability,failure,failure,16585,"; Use the Serialization library from boost. It is possible to specify a; certain library for the linker e.g.,; --with-boost-serialization=boost_serialization-gcc-mt-d-1_33_1. --with-boost-system[=special-lib] â; Use the System library from boost. It is possible to specify a certain; library for the linker e.g.,; --with-boost-system=boost_system-gcc-mt. --with-boost-thread[=special-lib] â; Use the Thread library from boost. It is possible to specify a certain; library for the linker e.g.,; --with-boost-thread=boost_thread-gcc-mt. Step 2: Compilation; Running make (which must be GNUâs âmakeâ utility) in $objdir will compile; the PSI4 libraries and executable modules. Step 3: Testing; To execute automatically the ever-growing number of test cases after; compilation, simply execute make tests in the $objdir directory.; This will run each (relatively small) test case and report the results.; Failure of any of the test cases should be reported to the developers.; By default, any such failure will stop the testing process. If you desire; to run the entire testing suit without interruption, execute make tests; TESTFLAGS='-u -q'. Note that you must do a make testsclean in $objdir; to run the test suite again. Step 4: Installation; Once testing is complete, installation into $prefix is accomplished by; running make install in $objdir. Executable modules are installed in; $prefix/bin, include files in $prefix/include, libraries in $prefix/lib, and; basis set data and various control structures in $prefix/share. Step 5: Building Documentation; This is not recommended because all of the documentation should be; available at http://sirius.chem.vt.edu/psi4manual/latest/index.html; (link âdocsâ off http://www.psicode.org), and it is automatically updated. However,; if your system has the appropriate utilities (notably the sphinx package; and LaTeX), you may build the package documentation from the top-level; $objdir by running make doc. The resulting files will appear in the; $prefi",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:17218,Availability,avail,available,17218," âmakeâ utility) in $objdir will compile; the PSI4 libraries and executable modules. Step 3: Testing; To execute automatically the ever-growing number of test cases after; compilation, simply execute make tests in the $objdir directory.; This will run each (relatively small) test case and report the results.; Failure of any of the test cases should be reported to the developers.; By default, any such failure will stop the testing process. If you desire; to run the entire testing suit without interruption, execute make tests; TESTFLAGS='-u -q'. Note that you must do a make testsclean in $objdir; to run the test suite again. Step 4: Installation; Once testing is complete, installation into $prefix is accomplished by; running make install in $objdir. Executable modules are installed in; $prefix/bin, include files in $prefix/include, libraries in $prefix/lib, and; basis set data and various control structures in $prefix/share. Step 5: Building Documentation; This is not recommended because all of the documentation should be; available at http://sirius.chem.vt.edu/psi4manual/latest/index.html; (link âdocsâ off http://www.psicode.org), and it is automatically updated. However,; if your system has the appropriate utilities (notably the sphinx package; and LaTeX), you may build the package documentation from the top-level; $objdir by running make doc. The resulting files will appear in the; $prefix/doc area. Step 6: Cleaning; All object files and libraries can be removed to save disk space by running; make clean in $objdir. Step 7: User Configuration; After the PSI4 package has been successfully installed, the user will need; to add the installation directory into his/her path. If the package has; been installed in the default location /usr/local/psi, then in C shell,; the user should add something like the following to their .cshrc file:; setenv PSI /usr/local/psi; set path = ($path $PSI/bin). Next, the user needs to tell the PSI4 I/O manager how to handle scratch files.; ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:19669,Availability,avail,available,19669,"g the .cshrc file to set the scratch; environment variable PSI_SCRATCH. If the selected location is; /scratch/user, add something like the following:; setenv PSI_SCRATCH /scratch/user. In a bash shell, the corresponding commands to be added to .bashrc is; the following:; export PSI=/usr/local/psi; PATH=$PSI/bin:$PATH ; export PATH; export PSI_SCRATCH=/scratch/user. More advanced control of scratch files and is handled through a; .psi4rc file, which is discussed at section Scratch Files and the ~/.psi4rc File. Note; For developers: during compilation and testing, PSI4 finds its basis sets,; grids, etc., in psi4/lib. After installation, PSI4 will look in; $prefix/share/psi. If you want to specify a non-standard location for this; information, you can do this by setting the environmental variable; $PSI4DATADIR to the directory containg the basis, grids, etc.,; subdirectories. IV. Recommendations for BLAS and LAPACK librariesÂ¶; Much of the speed and efficiency of the PSI4 programs depends on the; corresponding speed and efficiency of the available BLAS and LAPACK libraries; (especially the former). In addition, the most common compilation problems; involve these libraries. Users may therefore wish to consider the following; BLAS and LAPACK recommendations when building PSI4:. It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat. This library is usually just the; netlib distribution and is completely unoptimized. PSI4âs; performance will suffer if you choose this route.; The choice of LAPACK is less critical, and so the unoptimized; netlib distribution is acceptable. If you do choose to use the; RedHat/Fedora stock BLAS and LAPACK, make sure that the blas-devel; and lapack-devel packages are installed. Perhaps the best choice, if you have it available, is; Intelâs MKL library, which includes BLAS and LAPACK (note: use; version 11 or later, we had difficulty with version 10 for very; large coupled-cluster computations). MKL is e",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:20430,Availability,avail,available,20430,"ries. IV. Recommendations for BLAS and LAPACK librariesÂ¶; Much of the speed and efficiency of the PSI4 programs depends on the; corresponding speed and efficiency of the available BLAS and LAPACK libraries; (especially the former). In addition, the most common compilation problems; involve these libraries. Users may therefore wish to consider the following; BLAS and LAPACK recommendations when building PSI4:. It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat. This library is usually just the; netlib distribution and is completely unoptimized. PSI4âs; performance will suffer if you choose this route.; The choice of LAPACK is less critical, and so the unoptimized; netlib distribution is acceptable. If you do choose to use the; RedHat/Fedora stock BLAS and LAPACK, make sure that the blas-devel; and lapack-devel packages are installed. Perhaps the best choice, if you have it available, is; Intelâs MKL library, which includes BLAS and LAPACK (note: use; version 11 or later, we had difficulty with version 10 for very; large coupled-cluster computations). MKL is efficient and works; well in threaded mode.; Otherwise, the simplest choice is to use ATLAS; (http://math-atlas.sourceforge.net/), which is readily available; on all Linux distributions. Another alternative is OpenBLAS; (https://github.com/xianyi/OpenBLAS, formerly GotoBLAS). These; work well on nearly every achitecture to which the PSI4 developers; have access, though we have identified at least one case in which; the Goto libraries yielded faulty DGEMM calls. On Mac OS X; systems, the vecLib package that comes with Xcode works well. PSI4 does not require a Fortran compiler, unless the resident BLAS; and LAPACK libraries require Fortran-based system libraries. If you see; compiler complaints about missing symbols like âdo_fioâ or âe_wsfeâ, then; your libraries were most likely compiled with g77 or gfortran, which; require -lg2c to resolve the Fortran I/O calls. Use of ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:20766,Availability,avail,available,20766,"roblems; involve these libraries. Users may therefore wish to consider the following; BLAS and LAPACK recommendations when building PSI4:. It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat. This library is usually just the; netlib distribution and is completely unoptimized. PSI4âs; performance will suffer if you choose this route.; The choice of LAPACK is less critical, and so the unoptimized; netlib distribution is acceptable. If you do choose to use the; RedHat/Fedora stock BLAS and LAPACK, make sure that the blas-devel; and lapack-devel packages are installed. Perhaps the best choice, if you have it available, is; Intelâs MKL library, which includes BLAS and LAPACK (note: use; version 11 or later, we had difficulty with version 10 for very; large coupled-cluster computations). MKL is efficient and works; well in threaded mode.; Otherwise, the simplest choice is to use ATLAS; (http://math-atlas.sourceforge.net/), which is readily available; on all Linux distributions. Another alternative is OpenBLAS; (https://github.com/xianyi/OpenBLAS, formerly GotoBLAS). These; work well on nearly every achitecture to which the PSI4 developers; have access, though we have identified at least one case in which; the Goto libraries yielded faulty DGEMM calls. On Mac OS X; systems, the vecLib package that comes with Xcode works well. PSI4 does not require a Fortran compiler, unless the resident BLAS; and LAPACK libraries require Fortran-based system libraries. If you see; compiler complaints about missing symbols like âdo_fioâ or âe_wsfeâ, then; your libraries were most likely compiled with g77 or gfortran, which; require -lg2c to resolve the Fortran I/O calls. Use of the same gcc; package for PSI4 should normally resolve this problem. The PSI4 configure script can often identify and use several; different BLAS and LAPACK libraries, but its ability to do this; automatically depends on a number of factors, including correspondence; betwe",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:21064,Availability,fault,faulty,21064,"ibutions like RedHat. This library is usually just the; netlib distribution and is completely unoptimized. PSI4âs; performance will suffer if you choose this route.; The choice of LAPACK is less critical, and so the unoptimized; netlib distribution is acceptable. If you do choose to use the; RedHat/Fedora stock BLAS and LAPACK, make sure that the blas-devel; and lapack-devel packages are installed. Perhaps the best choice, if you have it available, is; Intelâs MKL library, which includes BLAS and LAPACK (note: use; version 11 or later, we had difficulty with version 10 for very; large coupled-cluster computations). MKL is efficient and works; well in threaded mode.; Otherwise, the simplest choice is to use ATLAS; (http://math-atlas.sourceforge.net/), which is readily available; on all Linux distributions. Another alternative is OpenBLAS; (https://github.com/xianyi/OpenBLAS, formerly GotoBLAS). These; work well on nearly every achitecture to which the PSI4 developers; have access, though we have identified at least one case in which; the Goto libraries yielded faulty DGEMM calls. On Mac OS X; systems, the vecLib package that comes with Xcode works well. PSI4 does not require a Fortran compiler, unless the resident BLAS; and LAPACK libraries require Fortran-based system libraries. If you see; compiler complaints about missing symbols like âdo_fioâ or âe_wsfeâ, then; your libraries were most likely compiled with g77 or gfortran, which; require -lg2c to resolve the Fortran I/O calls. Use of the same gcc; package for PSI4 should normally resolve this problem. The PSI4 configure script can often identify and use several; different BLAS and LAPACK libraries, but its ability to do this; automatically depends on a number of factors, including correspondence; between the compiler used for PSI4 and the compiler used to build; BLAS/LAPACK, placement of the libraries in commonly searched directories,; etc. PSI4âs configure script will find your BLAS and LAPACK if any of the; the ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:1271,Deployability,install,installed,1271,"III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. I. Compilation PrerequisitesÂ¶. C++ Compiler. F77 Compiler (the F95 compiler, gfortran, with gcc-4.X will work). Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section out",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:1892,Deployability,install,install,1892,"elow). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:2098,Deployability,install,installed,2098,"gher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:2313,Deployability,install,installing,2313,"eloper libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In t",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:2991,Deployability,configurat,configuration,2991,"th in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommen",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3037,Deployability,configurat,configuration,3037,"th in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommen",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3158,Deployability,configurat,configuration,3158,"oconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/p",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3201,Deployability,configurat,configuration,3201,"lation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; so",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3424,Deployability,configurat,configuration,3424,"lopment; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3567,Deployability,install,install,3567,"l psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation of the codes. A simple option is psi4/objdir, which should; work for most environments. However, i",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3615,Deployability,install,install,3615," this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation of the codes. A simple option is psi4/objdir, which should; work for most environments. However, if you need executables for several; architectures, you ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3664,Deployability,configurat,configuration,3664,"ith PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation of the codes. A simple option is psi4/objdir, which should; work for most environments. However, if you need executables for several; architectures, you should choose more meaningful subdirectory names. Note; The compila",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3920,Deployability,install,installing,3920,"Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation of the codes. A simple option is psi4/objdir, which should; work for most environments. However, if you need executables for several; architectures, you should choose more meaningful subdirectory names. Note; The compilation directory will be referred to as $objdir for the; remainder of these instructions. In $objdir, run the configure script found in the PSI4 top-level source; directory. This script will scan your syste",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:5099,Deployability,install,installation,5099,"i; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation of the codes. A simple option is psi4/objdir, which should; work for most environments. However, if you need executables for several; architectures, you should choose more meaningful subdirectory names. Note; The compilation directory will be referred to as $objdir for the; remainder of these instructions. In $objdir, run the configure script found in the PSI4 top-level source; directory. This script will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most commo",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:5665,Deployability,configurat,configuration,5665,"architectures, you should choose more meaningful subdirectory names. Note; The compilation directory will be referred to as $objdir for the; remainder of these instructions. In $objdir, run the configure script found in the PSI4 top-level source; directory. This script will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever direc",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:6223,Deployability,configurat,configuration,6223,"lt --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math libra",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:6388,Deployability,configurat,configuration,6388,"f these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --w",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:6614,Deployability,install,installation,6614," to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:7770,Deployability,install,install,7770,"a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran s",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8962,Deployability,configurat,configuration,8962,"e latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and to provide system routines for those libraries. Note that no fortran; compiler is necessary on Mac OS X systems (see below). The default search; order for compilers is: xlf_r (AIX only), gfortran, g77, ifort, f77, f2c. --with-f77symbol=value â This option allows manual assignment of the; FORTRAN77 symbol convention, ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:9197,Deployability,install,install,9197,"; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and to provide system routines for those libraries. Note that no fortran; compiler is necessary on Mac OS X systems (see below). The default search; order for compilers is: xlf_r (AIX only), gfortran, g77, ifort, f77, f2c. --with-f77symbol=value â This option allows manual assignment of the; FORTRAN77 symbol convention, which is necessary for C programs to link; Fortran-interface libraries such as BLAS and LAPACK. This option should; only be used by experts and even then should almost never be necessary.; Allowed values are:. lc : lower-case; lcu : lower-ca",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13272,Deployability,install,installed,13272,"er â Specifies the maximum angular; momentum level for first derivatives of the primitive Gaussian; basis functions. This is set to g-type functions (AM=4) by default. --with-max-am-deriv2=integer â Specifies the maximum angular; momentum level for second derivatives of the primitive Gaussian; basis functions. This is set to f-type functions (AM=3) by default. --with-max-am-r12=integer â Specifies the maximum angular momentum; level for primitive Gaussian basis functions used in r_12 explicitly; correlated methods. This is set to f-type functions (AM=3) by default.; Not yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:14173,Deployability,install,installation,14173," compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serialization; System; Thread. Relevant Configure Options:. --with-boost[=value] â Use Boost library from a standard location; if yes (default), from the specified location if <path>, or disable; it if no. --with-boost-libdir=directory â; Force given directory for boost libraries. Note that this will override; library path detection, so use this parameter only if default library; detection fails and you know exactly where your boost libraries are; located. --with-boost-filesystem[=special-lib] â;",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:14218,Deployability,install,installation,14218,"alled and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serialization; System; Thread. Relevant Configure Options:. --with-boost[=value] â Use Boost library from a standard location; if yes (default), from the specified location if <path>, or disable; it if no. --with-boost-libdir=directory â; Force given directory for boost libraries. Note that this will override; library path detection, so use this parameter only if default library; detection fails and you know exactly where your boost libraries are; located. --with-boost-filesystem[=special-lib] â; Use the Filesystem library from boost. It is possible to specify a; certain library for the linker e.g.,; --with-boost-filesystem=boost_file",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:14384,Deployability,install,installation,14384,"ter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serialization; System; Thread. Relevant Configure Options:. --with-boost[=value] â Use Boost library from a standard location; if yes (default), from the specified location if <path>, or disable; it if no. --with-boost-libdir=directory â; Force given directory for boost libraries. Note that this will override; library path detection, so use this parameter only if default library; detection fails and you know exactly where your boost libraries are; located. --with-boost-filesystem[=special-lib] â; Use the Filesystem library from boost. It is possible to specify a; certain library for the linker e.g.,; --with-boost-filesystem=boost_filesystem-gcc-mt. --with-boost-python â Specify the boost python library or suffix to use. --with-boost-regex[=special-lib] â; Use",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:16860,Deployability,install,installation,16860,"; library for the linker e.g.,; --with-boost-system=boost_system-gcc-mt. --with-boost-thread[=special-lib] â; Use the Thread library from boost. It is possible to specify a certain; library for the linker e.g.,; --with-boost-thread=boost_thread-gcc-mt. Step 2: Compilation; Running make (which must be GNUâs âmakeâ utility) in $objdir will compile; the PSI4 libraries and executable modules. Step 3: Testing; To execute automatically the ever-growing number of test cases after; compilation, simply execute make tests in the $objdir directory.; This will run each (relatively small) test case and report the results.; Failure of any of the test cases should be reported to the developers.; By default, any such failure will stop the testing process. If you desire; to run the entire testing suit without interruption, execute make tests; TESTFLAGS='-u -q'. Note that you must do a make testsclean in $objdir; to run the test suite again. Step 4: Installation; Once testing is complete, installation into $prefix is accomplished by; running make install in $objdir. Executable modules are installed in; $prefix/bin, include files in $prefix/include, libraries in $prefix/lib, and; basis set data and various control structures in $prefix/share. Step 5: Building Documentation; This is not recommended because all of the documentation should be; available at http://sirius.chem.vt.edu/psi4manual/latest/index.html; (link âdocsâ off http://www.psicode.org), and it is automatically updated. However,; if your system has the appropriate utilities (notably the sphinx package; and LaTeX), you may build the package documentation from the top-level; $objdir by running make doc. The resulting files will appear in the; $prefix/doc area. Step 6: Cleaning; All object files and libraries can be removed to save disk space by running; make clean in $objdir. Step 7: User Configuration; After the PSI4 package has been successfully installed, the user will need; to add the installation directory into his/her p",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:16919,Deployability,install,install,16919,"; library for the linker e.g.,; --with-boost-system=boost_system-gcc-mt. --with-boost-thread[=special-lib] â; Use the Thread library from boost. It is possible to specify a certain; library for the linker e.g.,; --with-boost-thread=boost_thread-gcc-mt. Step 2: Compilation; Running make (which must be GNUâs âmakeâ utility) in $objdir will compile; the PSI4 libraries and executable modules. Step 3: Testing; To execute automatically the ever-growing number of test cases after; compilation, simply execute make tests in the $objdir directory.; This will run each (relatively small) test case and report the results.; Failure of any of the test cases should be reported to the developers.; By default, any such failure will stop the testing process. If you desire; to run the entire testing suit without interruption, execute make tests; TESTFLAGS='-u -q'. Note that you must do a make testsclean in $objdir; to run the test suite again. Step 4: Installation; Once testing is complete, installation into $prefix is accomplished by; running make install in $objdir. Executable modules are installed in; $prefix/bin, include files in $prefix/include, libraries in $prefix/lib, and; basis set data and various control structures in $prefix/share. Step 5: Building Documentation; This is not recommended because all of the documentation should be; available at http://sirius.chem.vt.edu/psi4manual/latest/index.html; (link âdocsâ off http://www.psicode.org), and it is automatically updated. However,; if your system has the appropriate utilities (notably the sphinx package; and LaTeX), you may build the package documentation from the top-level; $objdir by running make doc. The resulting files will appear in the; $prefix/doc area. Step 6: Cleaning; All object files and libraries can be removed to save disk space by running; make clean in $objdir. Step 7: User Configuration; After the PSI4 package has been successfully installed, the user will need; to add the installation directory into his/her p",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:16962,Deployability,install,installed,16962,"ssible to specify a certain; library for the linker e.g.,; --with-boost-thread=boost_thread-gcc-mt. Step 2: Compilation; Running make (which must be GNUâs âmakeâ utility) in $objdir will compile; the PSI4 libraries and executable modules. Step 3: Testing; To execute automatically the ever-growing number of test cases after; compilation, simply execute make tests in the $objdir directory.; This will run each (relatively small) test case and report the results.; Failure of any of the test cases should be reported to the developers.; By default, any such failure will stop the testing process. If you desire; to run the entire testing suit without interruption, execute make tests; TESTFLAGS='-u -q'. Note that you must do a make testsclean in $objdir; to run the test suite again. Step 4: Installation; Once testing is complete, installation into $prefix is accomplished by; running make install in $objdir. Executable modules are installed in; $prefix/bin, include files in $prefix/include, libraries in $prefix/lib, and; basis set data and various control structures in $prefix/share. Step 5: Building Documentation; This is not recommended because all of the documentation should be; available at http://sirius.chem.vt.edu/psi4manual/latest/index.html; (link âdocsâ off http://www.psicode.org), and it is automatically updated. However,; if your system has the appropriate utilities (notably the sphinx package; and LaTeX), you may build the package documentation from the top-level; $objdir by running make doc. The resulting files will appear in the; $prefix/doc area. Step 6: Cleaning; All object files and libraries can be removed to save disk space by running; make clean in $objdir. Step 7: User Configuration; After the PSI4 package has been successfully installed, the user will need; to add the installation directory into his/her path. If the package has; been installed in the default location /usr/local/psi, then in C shell,; the user should add something like the following to the",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:17353,Deployability,update,updated,17353,"ses after; compilation, simply execute make tests in the $objdir directory.; This will run each (relatively small) test case and report the results.; Failure of any of the test cases should be reported to the developers.; By default, any such failure will stop the testing process. If you desire; to run the entire testing suit without interruption, execute make tests; TESTFLAGS='-u -q'. Note that you must do a make testsclean in $objdir; to run the test suite again. Step 4: Installation; Once testing is complete, installation into $prefix is accomplished by; running make install in $objdir. Executable modules are installed in; $prefix/bin, include files in $prefix/include, libraries in $prefix/lib, and; basis set data and various control structures in $prefix/share. Step 5: Building Documentation; This is not recommended because all of the documentation should be; available at http://sirius.chem.vt.edu/psi4manual/latest/index.html; (link âdocsâ off http://www.psicode.org), and it is automatically updated. However,; if your system has the appropriate utilities (notably the sphinx package; and LaTeX), you may build the package documentation from the top-level; $objdir by running make doc. The resulting files will appear in the; $prefix/doc area. Step 6: Cleaning; All object files and libraries can be removed to save disk space by running; make clean in $objdir. Step 7: User Configuration; After the PSI4 package has been successfully installed, the user will need; to add the installation directory into his/her path. If the package has; been installed in the default location /usr/local/psi, then in C shell,; the user should add something like the following to their .cshrc file:; setenv PSI /usr/local/psi; set path = ($path $PSI/bin). Next, the user needs to tell the PSI4 I/O manager how to handle scratch files.; Identify the path to a fast scratch disk for which the user has write access.; If the local /tmp volume is large enough, it might be used.; However, a dedicated ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:17796,Deployability,install,installed,17796,"uite again. Step 4: Installation; Once testing is complete, installation into $prefix is accomplished by; running make install in $objdir. Executable modules are installed in; $prefix/bin, include files in $prefix/include, libraries in $prefix/lib, and; basis set data and various control structures in $prefix/share. Step 5: Building Documentation; This is not recommended because all of the documentation should be; available at http://sirius.chem.vt.edu/psi4manual/latest/index.html; (link âdocsâ off http://www.psicode.org), and it is automatically updated. However,; if your system has the appropriate utilities (notably the sphinx package; and LaTeX), you may build the package documentation from the top-level; $objdir by running make doc. The resulting files will appear in the; $prefix/doc area. Step 6: Cleaning; All object files and libraries can be removed to save disk space by running; make clean in $objdir. Step 7: User Configuration; After the PSI4 package has been successfully installed, the user will need; to add the installation directory into his/her path. If the package has; been installed in the default location /usr/local/psi, then in C shell,; the user should add something like the following to their .cshrc file:; setenv PSI /usr/local/psi; set path = ($path $PSI/bin). Next, the user needs to tell the PSI4 I/O manager how to handle scratch files.; Identify the path to a fast scratch disk for which the user has write access.; If the local /tmp volume is large enough, it might be used.; However, a dedicated scratch volume (using RAID0 striping for speed) is; recommended. Warning; Scratch should NOT be a NFS-mounted volume, as writes to a; remote disk over the network can be very slow and can tie up the network; and negatively impact other users. Specify scratch location by editing the .cshrc file to set the scratch; environment variable PSI_SCRATCH. If the selected location is; /scratch/user, add something like the following:; setenv PSI_SCRATCH /scratch/use",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:17838,Deployability,install,installation,17838,"uite again. Step 4: Installation; Once testing is complete, installation into $prefix is accomplished by; running make install in $objdir. Executable modules are installed in; $prefix/bin, include files in $prefix/include, libraries in $prefix/lib, and; basis set data and various control structures in $prefix/share. Step 5: Building Documentation; This is not recommended because all of the documentation should be; available at http://sirius.chem.vt.edu/psi4manual/latest/index.html; (link âdocsâ off http://www.psicode.org), and it is automatically updated. However,; if your system has the appropriate utilities (notably the sphinx package; and LaTeX), you may build the package documentation from the top-level; $objdir by running make doc. The resulting files will appear in the; $prefix/doc area. Step 6: Cleaning; All object files and libraries can be removed to save disk space by running; make clean in $objdir. Step 7: User Configuration; After the PSI4 package has been successfully installed, the user will need; to add the installation directory into his/her path. If the package has; been installed in the default location /usr/local/psi, then in C shell,; the user should add something like the following to their .cshrc file:; setenv PSI /usr/local/psi; set path = ($path $PSI/bin). Next, the user needs to tell the PSI4 I/O manager how to handle scratch files.; Identify the path to a fast scratch disk for which the user has write access.; If the local /tmp volume is large enough, it might be used.; However, a dedicated scratch volume (using RAID0 striping for speed) is; recommended. Warning; Scratch should NOT be a NFS-mounted volume, as writes to a; remote disk over the network can be very slow and can tie up the network; and negatively impact other users. Specify scratch location by editing the .cshrc file to set the scratch; environment variable PSI_SCRATCH. If the selected location is; /scratch/user, add something like the following:; setenv PSI_SCRATCH /scratch/use",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:17905,Deployability,install,installed,17905,"es are installed in; $prefix/bin, include files in $prefix/include, libraries in $prefix/lib, and; basis set data and various control structures in $prefix/share. Step 5: Building Documentation; This is not recommended because all of the documentation should be; available at http://sirius.chem.vt.edu/psi4manual/latest/index.html; (link âdocsâ off http://www.psicode.org), and it is automatically updated. However,; if your system has the appropriate utilities (notably the sphinx package; and LaTeX), you may build the package documentation from the top-level; $objdir by running make doc. The resulting files will appear in the; $prefix/doc area. Step 6: Cleaning; All object files and libraries can be removed to save disk space by running; make clean in $objdir. Step 7: User Configuration; After the PSI4 package has been successfully installed, the user will need; to add the installation directory into his/her path. If the package has; been installed in the default location /usr/local/psi, then in C shell,; the user should add something like the following to their .cshrc file:; setenv PSI /usr/local/psi; set path = ($path $PSI/bin). Next, the user needs to tell the PSI4 I/O manager how to handle scratch files.; Identify the path to a fast scratch disk for which the user has write access.; If the local /tmp volume is large enough, it might be used.; However, a dedicated scratch volume (using RAID0 striping for speed) is; recommended. Warning; Scratch should NOT be a NFS-mounted volume, as writes to a; remote disk over the network can be very slow and can tie up the network; and negatively impact other users. Specify scratch location by editing the .cshrc file to set the scratch; environment variable PSI_SCRATCH. If the selected location is; /scratch/user, add something like the following:; setenv PSI_SCRATCH /scratch/user. In a bash shell, the corresponding commands to be added to .bashrc is; the following:; export PSI=/usr/local/psi; PATH=$PSI/bin:$PATH ; export PATH; exp",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:19248,Deployability,install,installation,19248,"al /tmp volume is large enough, it might be used.; However, a dedicated scratch volume (using RAID0 striping for speed) is; recommended. Warning; Scratch should NOT be a NFS-mounted volume, as writes to a; remote disk over the network can be very slow and can tie up the network; and negatively impact other users. Specify scratch location by editing the .cshrc file to set the scratch; environment variable PSI_SCRATCH. If the selected location is; /scratch/user, add something like the following:; setenv PSI_SCRATCH /scratch/user. In a bash shell, the corresponding commands to be added to .bashrc is; the following:; export PSI=/usr/local/psi; PATH=$PSI/bin:$PATH ; export PATH; export PSI_SCRATCH=/scratch/user. More advanced control of scratch files and is handled through a; .psi4rc file, which is discussed at section Scratch Files and the ~/.psi4rc File. Note; For developers: during compilation and testing, PSI4 finds its basis sets,; grids, etc., in psi4/lib. After installation, PSI4 will look in; $prefix/share/psi. If you want to specify a non-standard location for this; information, you can do this by setting the environmental variable; $PSI4DATADIR to the directory containg the basis, grids, etc.,; subdirectories. IV. Recommendations for BLAS and LAPACK librariesÂ¶; Much of the speed and efficiency of the PSI4 programs depends on the; corresponding speed and efficiency of the available BLAS and LAPACK libraries; (especially the former). In addition, the most common compilation problems; involve these libraries. Users may therefore wish to consider the following; BLAS and LAPACK recommendations when building PSI4:. It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat. This library is usually just the; netlib distribution and is completely unoptimized. PSI4âs; performance will suffer if you choose this route.; The choice of LAPACK is less critical, and so the unoptimized; netlib distribution is acceptable. If you do choose t",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:20379,Deployability,install,installed,20379,"fy a non-standard location for this; information, you can do this by setting the environmental variable; $PSI4DATADIR to the directory containg the basis, grids, etc.,; subdirectories. IV. Recommendations for BLAS and LAPACK librariesÂ¶; Much of the speed and efficiency of the PSI4 programs depends on the; corresponding speed and efficiency of the available BLAS and LAPACK libraries; (especially the former). In addition, the most common compilation problems; involve these libraries. Users may therefore wish to consider the following; BLAS and LAPACK recommendations when building PSI4:. It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat. This library is usually just the; netlib distribution and is completely unoptimized. PSI4âs; performance will suffer if you choose this route.; The choice of LAPACK is less critical, and so the unoptimized; netlib distribution is acceptable. If you do choose to use the; RedHat/Fedora stock BLAS and LAPACK, make sure that the blas-devel; and lapack-devel packages are installed. Perhaps the best choice, if you have it available, is; Intelâs MKL library, which includes BLAS and LAPACK (note: use; version 11 or later, we had difficulty with version 10 for very; large coupled-cluster computations). MKL is efficient and works; well in threaded mode.; Otherwise, the simplest choice is to use ATLAS; (http://math-atlas.sourceforge.net/), which is readily available; on all Linux distributions. Another alternative is OpenBLAS; (https://github.com/xianyi/OpenBLAS, formerly GotoBLAS). These; work well on nearly every achitecture to which the PSI4 developers; have access, though we have identified at least one case in which; the Goto libraries yielded faulty DGEMM calls. On Mac OS X; systems, the vecLib package that comes with Xcode works well. PSI4 does not require a Fortran compiler, unless the resident BLAS; and LAPACK libraries require Fortran-based system libraries. If you see; compiler complaints ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:22003,Deployability,install,installed,22003,"ccess, though we have identified at least one case in which; the Goto libraries yielded faulty DGEMM calls. On Mac OS X; systems, the vecLib package that comes with Xcode works well. PSI4 does not require a Fortran compiler, unless the resident BLAS; and LAPACK libraries require Fortran-based system libraries. If you see; compiler complaints about missing symbols like âdo_fioâ or âe_wsfeâ, then; your libraries were most likely compiled with g77 or gfortran, which; require -lg2c to resolve the Fortran I/O calls. Use of the same gcc; package for PSI4 should normally resolve this problem. The PSI4 configure script can often identify and use several; different BLAS and LAPACK libraries, but its ability to do this; automatically depends on a number of factors, including correspondence; between the compiler used for PSI4 and the compiler used to build; BLAS/LAPACK, placement of the libraries in commonly searched directories,; etc. PSI4âs configure script will find your BLAS and LAPACK if any of the; the following are installed in standard locations (e.g. /usr/local/lib):. ATLAS: libf77blas.a and libatlas.a, plus netlibâs liblapack.a; MKL 8: libmkl.so and libmkl_lapack64.a (with the corresponding; Intel compilers); Goto: libgoto.a and netlibâs liblapack.a; Cray SCSL (e.g. on SGI Altix): libscs.so (NB: No Fortran compiler; is necessary in this case, so --with-fc=no should work.); ESSL (e.g. on AIX systems): libessl.a. If configure cannot identify your BLAS and LAPACK libraries; automatically, you can specify them on the command-line using the; --with-blas and --with-lapack arguments described above. Here are a few; examples that work on the PSI4 developersâ systems:. Linux with ATLAS:; --with-blas='-lf77blas -latlas' --with-lapack='-llapack -lcblas'. Mac OS X with vecLib:; --with-blas='-altivec -framework vecLib' --with-lapack=' '. Linux with MKL 8.1 and icc/icpc/ifort 9.1:; --with-libdirs=-L/usr/local/opt/intel/mkl/8.0.2/lib/32 --with-blas=-lmkl --with-lapack=-lmkl_lapack3",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:23297,Deployability,install,installation,23297," libscs.so (NB: No Fortran compiler; is necessary in this case, so --with-fc=no should work.); ESSL (e.g. on AIX systems): libessl.a. If configure cannot identify your BLAS and LAPACK libraries; automatically, you can specify them on the command-line using the; --with-blas and --with-lapack arguments described above. Here are a few; examples that work on the PSI4 developersâ systems:. Linux with ATLAS:; --with-blas='-lf77blas -latlas' --with-lapack='-llapack -lcblas'. Mac OS X with vecLib:; --with-blas='-altivec -framework vecLib' --with-lapack=' '. Linux with MKL 8.1 and icc/icpc/ifort 9.1:; --with-libdirs=-L/usr/local/opt/intel/mkl/8.0.2/lib/32 --with-blas=-lmkl --with-lapack=-lmkl_lapack32. Linux on ia32 with MKL 10.1 and icc/icpc 11.0:; --with-blas='-Wl,--start-group -L/usr/local/opt/intel/mkl/10.1.0.015/lib/32 -l mkl -Wl,--end-group -lguide -lpthread'. Compilation notes for ATLAS; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CPU throttling so the auto-tuning capabilities have a chance; to work. On Linux, this can be tune using; /usr/bin/cpufreq-selector -g performance. cd into the compilation directory and run the source; directory configure script there, with any necessary flags, e.g.,; /usr/local/src/atlas/configure --prefix=/usr/local/atlas. where prefix gives the installation directory.; It should automatically detect if youâre on an x86_64; Then make and check using; make; make check; make ptcheck. And install; make install. Compilation notes for netlibâs LAPACK; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full LAPACK installation notes.; Youâll need a Fortran compiler installed.; If you decide to compile LAPACK fro",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:23349,Deployability,install,installed,23349,"e, so --with-fc=no should work.); ESSL (e.g. on AIX systems): libessl.a. If configure cannot identify your BLAS and LAPACK libraries; automatically, you can specify them on the command-line using the; --with-blas and --with-lapack arguments described above. Here are a few; examples that work on the PSI4 developersâ systems:. Linux with ATLAS:; --with-blas='-lf77blas -latlas' --with-lapack='-llapack -lcblas'. Mac OS X with vecLib:; --with-blas='-altivec -framework vecLib' --with-lapack=' '. Linux with MKL 8.1 and icc/icpc/ifort 9.1:; --with-libdirs=-L/usr/local/opt/intel/mkl/8.0.2/lib/32 --with-blas=-lmkl --with-lapack=-lmkl_lapack32. Linux on ia32 with MKL 10.1 and icc/icpc 11.0:; --with-blas='-Wl,--start-group -L/usr/local/opt/intel/mkl/10.1.0.015/lib/32 -l mkl -Wl,--end-group -lguide -lpthread'. Compilation notes for ATLAS; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CPU throttling so the auto-tuning capabilities have a chance; to work. On Linux, this can be tune using; /usr/bin/cpufreq-selector -g performance. cd into the compilation directory and run the source; directory configure script there, with any necessary flags, e.g.,; /usr/local/src/atlas/configure --prefix=/usr/local/atlas. where prefix gives the installation directory.; It should automatically detect if youâre on an x86_64; Then make and check using; make; make check; make ptcheck. And install; make install. Compilation notes for netlibâs LAPACK; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full LAPACK installation notes.; Youâll need a Fortran compiler installed.; If you decide to compile LAPACK from source, it may be obtained from; http://www.netlib.org/lapac",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:23849,Deployability,install,installation,23849,".1 and icc/icpc/ifort 9.1:; --with-libdirs=-L/usr/local/opt/intel/mkl/8.0.2/lib/32 --with-blas=-lmkl --with-lapack=-lmkl_lapack32. Linux on ia32 with MKL 10.1 and icc/icpc 11.0:; --with-blas='-Wl,--start-group -L/usr/local/opt/intel/mkl/10.1.0.015/lib/32 -l mkl -Wl,--end-group -lguide -lpthread'. Compilation notes for ATLAS; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CPU throttling so the auto-tuning capabilities have a chance; to work. On Linux, this can be tune using; /usr/bin/cpufreq-selector -g performance. cd into the compilation directory and run the source; directory configure script there, with any necessary flags, e.g.,; /usr/local/src/atlas/configure --prefix=/usr/local/atlas. where prefix gives the installation directory.; It should automatically detect if youâre on an x86_64; Then make and check using; make; make check; make ptcheck. And install; make install. Compilation notes for netlibâs LAPACK; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full LAPACK installation notes.; Youâll need a Fortran compiler installed.; If you decide to compile LAPACK from source, it may be obtained from; http://www.netlib.org/lapack/. Unpack the source code, and in the; top-level source directory, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library; (full pathnames are recommended):; BLASLIB = /home/david/software/atlas3.9.25/lib/libf77blas.a /home/david/software/atlas3.9.25/lib/libatlas.a. Edit Makefile as necessary (probably not needed).; make. Copy the resulting file [lapack_($ARCH",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:23992,Deployability,install,install,23992,"L 10.1 and icc/icpc 11.0:; --with-blas='-Wl,--start-group -L/usr/local/opt/intel/mkl/10.1.0.015/lib/32 -l mkl -Wl,--end-group -lguide -lpthread'. Compilation notes for ATLAS; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CPU throttling so the auto-tuning capabilities have a chance; to work. On Linux, this can be tune using; /usr/bin/cpufreq-selector -g performance. cd into the compilation directory and run the source; directory configure script there, with any necessary flags, e.g.,; /usr/local/src/atlas/configure --prefix=/usr/local/atlas. where prefix gives the installation directory.; It should automatically detect if youâre on an x86_64; Then make and check using; make; make check; make ptcheck. And install; make install. Compilation notes for netlibâs LAPACK; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full LAPACK installation notes.; Youâll need a Fortran compiler installed.; If you decide to compile LAPACK from source, it may be obtained from; http://www.netlib.org/lapack/. Unpack the source code, and in the; top-level source directory, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library; (full pathnames are recommended):; BLASLIB = /home/david/software/atlas3.9.25/lib/libf77blas.a /home/david/software/atlas3.9.25/lib/libatlas.a. Edit Makefile as necessary (probably not needed).; make. Copy the resulting file [lapack_($ARCH).a] where you want it; (a standard location like /usr/local/lib is easier for PSI to find).; It is probably helpful to rename the file liblapack.a. V. ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:24006,Deployability,install,install,24006,"L 10.1 and icc/icpc 11.0:; --with-blas='-Wl,--start-group -L/usr/local/opt/intel/mkl/10.1.0.015/lib/32 -l mkl -Wl,--end-group -lguide -lpthread'. Compilation notes for ATLAS; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CPU throttling so the auto-tuning capabilities have a chance; to work. On Linux, this can be tune using; /usr/bin/cpufreq-selector -g performance. cd into the compilation directory and run the source; directory configure script there, with any necessary flags, e.g.,; /usr/local/src/atlas/configure --prefix=/usr/local/atlas. where prefix gives the installation directory.; It should automatically detect if youâre on an x86_64; Then make and check using; make; make check; make ptcheck. And install; make install. Compilation notes for netlibâs LAPACK; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full LAPACK installation notes.; Youâll need a Fortran compiler installed.; If you decide to compile LAPACK from source, it may be obtained from; http://www.netlib.org/lapack/. Unpack the source code, and in the; top-level source directory, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library; (full pathnames are recommended):; BLASLIB = /home/david/software/atlas3.9.25/lib/libf77blas.a /home/david/software/atlas3.9.25/lib/libatlas.a. Edit Makefile as necessary (probably not needed).; make. Copy the resulting file [lapack_($ARCH).a] where you want it; (a standard location like /usr/local/lib is easier for PSI to find).; It is probably helpful to rename the file liblapack.a. V. ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:24177,Deployability,install,installation,24177,"on notes for ATLAS; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CPU throttling so the auto-tuning capabilities have a chance; to work. On Linux, this can be tune using; /usr/bin/cpufreq-selector -g performance. cd into the compilation directory and run the source; directory configure script there, with any necessary flags, e.g.,; /usr/local/src/atlas/configure --prefix=/usr/local/atlas. where prefix gives the installation directory.; It should automatically detect if youâre on an x86_64; Then make and check using; make; make check; make ptcheck. And install; make install. Compilation notes for netlibâs LAPACK; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full LAPACK installation notes.; Youâll need a Fortran compiler installed.; If you decide to compile LAPACK from source, it may be obtained from; http://www.netlib.org/lapack/. Unpack the source code, and in the; top-level source directory, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library; (full pathnames are recommended):; BLASLIB = /home/david/software/atlas3.9.25/lib/libf77blas.a /home/david/software/atlas3.9.25/lib/libatlas.a. Edit Makefile as necessary (probably not needed).; make. Copy the resulting file [lapack_($ARCH).a] where you want it; (a standard location like /usr/local/lib is easier for PSI to find).; It is probably helpful to rename the file liblapack.a. V. Miscellaneous Architecture-Specific NotesÂ¶. Linux on x86 and x86_64; Intel compilers: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Probl",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:24229,Deployability,install,installed,24229,"ou are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CPU throttling so the auto-tuning capabilities have a chance; to work. On Linux, this can be tune using; /usr/bin/cpufreq-selector -g performance. cd into the compilation directory and run the source; directory configure script there, with any necessary flags, e.g.,; /usr/local/src/atlas/configure --prefix=/usr/local/atlas. where prefix gives the installation directory.; It should automatically detect if youâre on an x86_64; Then make and check using; make; make check; make ptcheck. And install; make install. Compilation notes for netlibâs LAPACK; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full LAPACK installation notes.; Youâll need a Fortran compiler installed.; If you decide to compile LAPACK from source, it may be obtained from; http://www.netlib.org/lapack/. Unpack the source code, and in the; top-level source directory, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library; (full pathnames are recommended):; BLASLIB = /home/david/software/atlas3.9.25/lib/libf77blas.a /home/david/software/atlas3.9.25/lib/libatlas.a. Edit Makefile as necessary (probably not needed).; make. Copy the resulting file [lapack_($ARCH).a] where you want it; (a standard location like /usr/local/lib is easier for PSI to find).; It is probably helpful to rename the file liblapack.a. V. Miscellaneous Architecture-Specific NotesÂ¶. Linux on x86 and x86_64; Intel compilers: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Problems with PSI CompilationÂ¶. No rule to make target foo.h, neede",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:25273,Deployability,update,updates,25273,"PACK from source, it may be obtained from; http://www.netlib.org/lapack/. Unpack the source code, and in the; top-level source directory, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library; (full pathnames are recommended):; BLASLIB = /home/david/software/atlas3.9.25/lib/libf77blas.a /home/david/software/atlas3.9.25/lib/libatlas.a. Edit Makefile as necessary (probably not needed).; make. Copy the resulting file [lapack_($ARCH).a] where you want it; (a standard location like /usr/local/lib is easier for PSI to find).; It is probably helpful to rename the file liblapack.a. V. Miscellaneous Architecture-Specific NotesÂ¶. Linux on x86 and x86_64; Intel compilers: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Problems with PSI CompilationÂ¶. No rule to make target foo.h, needed by bar.d. Stop.; This commonly happens after pulling updates from the repository. It happens; when a library header file is removed or renamed by the update, but there are; still old dependency files in the object directory, which think that they; still need to know about that header. Thereâs a simple remedy, just run; >>> make DODEPEND=no dclean. in the object directory. Make gets stuck in an infinite loop; This means that the makefiles have not been properly updated. Running; >>> autoconf. in the top-level Psi directory, followed by; >>> ./config.status --recheck; >>> ./config.status. in the object directory should fix it. This procedure will need to be run; whenever an update changes the directory structure. Incompatible g++/icpc; The Intel compilers require an installed set of C++ headers. Unfortunately,; the GNU compilers tend to be more cutting-edge than the Intel compilers,; meaning that Intel is always playing catch-up to new features in g++. This; means the two are often incompatible, leading to trouble if one wants to use;",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:25370,Deployability,update,update,25370,"y, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library; (full pathnames are recommended):; BLASLIB = /home/david/software/atlas3.9.25/lib/libf77blas.a /home/david/software/atlas3.9.25/lib/libatlas.a. Edit Makefile as necessary (probably not needed).; make. Copy the resulting file [lapack_($ARCH).a] where you want it; (a standard location like /usr/local/lib is easier for PSI to find).; It is probably helpful to rename the file liblapack.a. V. Miscellaneous Architecture-Specific NotesÂ¶. Linux on x86 and x86_64; Intel compilers: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Problems with PSI CompilationÂ¶. No rule to make target foo.h, needed by bar.d. Stop.; This commonly happens after pulling updates from the repository. It happens; when a library header file is removed or renamed by the update, but there are; still old dependency files in the object directory, which think that they; still need to know about that header. Thereâs a simple remedy, just run; >>> make DODEPEND=no dclean. in the object directory. Make gets stuck in an infinite loop; This means that the makefiles have not been properly updated. Running; >>> autoconf. in the top-level Psi directory, followed by; >>> ./config.status --recheck; >>> ./config.status. in the object directory should fix it. This procedure will need to be run; whenever an update changes the directory structure. Incompatible g++/icpc; The Intel compilers require an installed set of C++ headers. Unfortunately,; the GNU compilers tend to be more cutting-edge than the Intel compilers,; meaning that Intel is always playing catch-up to new features in g++. This; means the two are often incompatible, leading to trouble if one wants to use; icpc to compile PSI4 (or anything else...). Your best bet in general is to not; upgrade Linux too fast, and always keep the very lates",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:25685,Deployability,update,updated,25685,"; BLASLIB = /home/david/software/atlas3.9.25/lib/libf77blas.a /home/david/software/atlas3.9.25/lib/libatlas.a. Edit Makefile as necessary (probably not needed).; make. Copy the resulting file [lapack_($ARCH).a] where you want it; (a standard location like /usr/local/lib is easier for PSI to find).; It is probably helpful to rename the file liblapack.a. V. Miscellaneous Architecture-Specific NotesÂ¶. Linux on x86 and x86_64; Intel compilers: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Problems with PSI CompilationÂ¶. No rule to make target foo.h, needed by bar.d. Stop.; This commonly happens after pulling updates from the repository. It happens; when a library header file is removed or renamed by the update, but there are; still old dependency files in the object directory, which think that they; still need to know about that header. Thereâs a simple remedy, just run; >>> make DODEPEND=no dclean. in the object directory. Make gets stuck in an infinite loop; This means that the makefiles have not been properly updated. Running; >>> autoconf. in the top-level Psi directory, followed by; >>> ./config.status --recheck; >>> ./config.status. in the object directory should fix it. This procedure will need to be run; whenever an update changes the directory structure. Incompatible g++/icpc; The Intel compilers require an installed set of C++ headers. Unfortunately,; the GNU compilers tend to be more cutting-edge than the Intel compilers,; meaning that Intel is always playing catch-up to new features in g++. This; means the two are often incompatible, leading to trouble if one wants to use; icpc to compile PSI4 (or anything else...). Your best bet in general is to not; upgrade Linux too fast, and always keep the very latest Intel compilers; around. Missing symbols like âdo_fioâ or âe_wsfeâ; See Section IV(3) above. Table Of Contents. Installation Instructions for PSI4; I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installa",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:25901,Deployability,update,update,25901,"ke /usr/local/lib is easier for PSI to find).; It is probably helpful to rename the file liblapack.a. V. Miscellaneous Architecture-Specific NotesÂ¶. Linux on x86 and x86_64; Intel compilers: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Problems with PSI CompilationÂ¶. No rule to make target foo.h, needed by bar.d. Stop.; This commonly happens after pulling updates from the repository. It happens; when a library header file is removed or renamed by the update, but there are; still old dependency files in the object directory, which think that they; still need to know about that header. Thereâs a simple remedy, just run; >>> make DODEPEND=no dclean. in the object directory. Make gets stuck in an infinite loop; This means that the makefiles have not been properly updated. Running; >>> autoconf. in the top-level Psi directory, followed by; >>> ./config.status --recheck; >>> ./config.status. in the object directory should fix it. This procedure will need to be run; whenever an update changes the directory structure. Incompatible g++/icpc; The Intel compilers require an installed set of C++ headers. Unfortunately,; the GNU compilers tend to be more cutting-edge than the Intel compilers,; meaning that Intel is always playing catch-up to new features in g++. This; means the two are often incompatible, leading to trouble if one wants to use; icpc to compile PSI4 (or anything else...). Your best bet in general is to not; upgrade Linux too fast, and always keep the very latest Intel compilers; around. Missing symbols like âdo_fioâ or âe_wsfeâ; See Section IV(3) above. Table Of Contents. Installation Instructions for PSI4; I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous Architecture-Specific Notes; VI. Common Problems with PSI Compilation. This Page. Show Source. Quick search. Enter search terms or a modu",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:25995,Deployability,install,installed,25995,"le liblapack.a. V. Miscellaneous Architecture-Specific NotesÂ¶. Linux on x86 and x86_64; Intel compilers: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Problems with PSI CompilationÂ¶. No rule to make target foo.h, needed by bar.d. Stop.; This commonly happens after pulling updates from the repository. It happens; when a library header file is removed or renamed by the update, but there are; still old dependency files in the object directory, which think that they; still need to know about that header. Thereâs a simple remedy, just run; >>> make DODEPEND=no dclean. in the object directory. Make gets stuck in an infinite loop; This means that the makefiles have not been properly updated. Running; >>> autoconf. in the top-level Psi directory, followed by; >>> ./config.status --recheck; >>> ./config.status. in the object directory should fix it. This procedure will need to be run; whenever an update changes the directory structure. Incompatible g++/icpc; The Intel compilers require an installed set of C++ headers. Unfortunately,; the GNU compilers tend to be more cutting-edge than the Intel compilers,; meaning that Intel is always playing catch-up to new features in g++. This; means the two are often incompatible, leading to trouble if one wants to use; icpc to compile PSI4 (or anything else...). Your best bet in general is to not; upgrade Linux too fast, and always keep the very latest Intel compilers; around. Missing symbols like âdo_fioâ or âe_wsfeâ; See Section IV(3) above. Table Of Contents. Installation Instructions for PSI4; I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous Architecture-Specific Notes; VI. Common Problems with PSI Compilation. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â ; PSI4 [beta4] Â»",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:26349,Deployability,upgrade,upgrade,26349,"s: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Problems with PSI CompilationÂ¶. No rule to make target foo.h, needed by bar.d. Stop.; This commonly happens after pulling updates from the repository. It happens; when a library header file is removed or renamed by the update, but there are; still old dependency files in the object directory, which think that they; still need to know about that header. Thereâs a simple remedy, just run; >>> make DODEPEND=no dclean. in the object directory. Make gets stuck in an infinite loop; This means that the makefiles have not been properly updated. Running; >>> autoconf. in the top-level Psi directory, followed by; >>> ./config.status --recheck; >>> ./config.status. in the object directory should fix it. This procedure will need to be run; whenever an update changes the directory structure. Incompatible g++/icpc; The Intel compilers require an installed set of C++ headers. Unfortunately,; the GNU compilers tend to be more cutting-edge than the Intel compilers,; meaning that Intel is always playing catch-up to new features in g++. This; means the two are often incompatible, leading to trouble if one wants to use; icpc to compile PSI4 (or anything else...). Your best bet in general is to not; upgrade Linux too fast, and always keep the very latest Intel compilers; around. Missing symbols like âdo_fioâ or âe_wsfeâ; See Section IV(3) above. Table Of Contents. Installation Instructions for PSI4; I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous Architecture-Specific Notes; VI. Common Problems with PSI Compilation. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â ; PSI4 [beta4] Â» . Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:27027,Deployability,update,updated,27027,"s: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Problems with PSI CompilationÂ¶. No rule to make target foo.h, needed by bar.d. Stop.; This commonly happens after pulling updates from the repository. It happens; when a library header file is removed or renamed by the update, but there are; still old dependency files in the object directory, which think that they; still need to know about that header. Thereâs a simple remedy, just run; >>> make DODEPEND=no dclean. in the object directory. Make gets stuck in an infinite loop; This means that the makefiles have not been properly updated. Running; >>> autoconf. in the top-level Psi directory, followed by; >>> ./config.status --recheck; >>> ./config.status. in the object directory should fix it. This procedure will need to be run; whenever an update changes the directory structure. Incompatible g++/icpc; The Intel compilers require an installed set of C++ headers. Unfortunately,; the GNU compilers tend to be more cutting-edge than the Intel compilers,; meaning that Intel is always playing catch-up to new features in g++. This; means the two are often incompatible, leading to trouble if one wants to use; icpc to compile PSI4 (or anything else...). Your best bet in general is to not; upgrade Linux too fast, and always keep the very latest Intel compilers; around. Missing symbols like âdo_fioâ or âe_wsfeâ; See Section IV(3) above. Table Of Contents. Installation Instructions for PSI4; I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous Architecture-Specific Notes; VI. Common Problems with PSI Compilation. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules Â  Â . toc Â  Â ; PSI4 [beta4] Â» . Â© Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:20618,Energy Efficiency,efficient,efficient,20618,"nding speed and efficiency of the available BLAS and LAPACK libraries; (especially the former). In addition, the most common compilation problems; involve these libraries. Users may therefore wish to consider the following; BLAS and LAPACK recommendations when building PSI4:. It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat. This library is usually just the; netlib distribution and is completely unoptimized. PSI4âs; performance will suffer if you choose this route.; The choice of LAPACK is less critical, and so the unoptimized; netlib distribution is acceptable. If you do choose to use the; RedHat/Fedora stock BLAS and LAPACK, make sure that the blas-devel; and lapack-devel packages are installed. Perhaps the best choice, if you have it available, is; Intelâs MKL library, which includes BLAS and LAPACK (note: use; version 11 or later, we had difficulty with version 10 for very; large coupled-cluster computations). MKL is efficient and works; well in threaded mode.; Otherwise, the simplest choice is to use ATLAS; (http://math-atlas.sourceforge.net/), which is readily available; on all Linux distributions. Another alternative is OpenBLAS; (https://github.com/xianyi/OpenBLAS, formerly GotoBLAS). These; work well on nearly every achitecture to which the PSI4 developers; have access, though we have identified at least one case in which; the Goto libraries yielded faulty DGEMM calls. On Mac OS X; systems, the vecLib package that comes with Xcode works well. PSI4 does not require a Fortran compiler, unless the resident BLAS; and LAPACK libraries require Fortran-based system libraries. If you see; compiler complaints about missing symbols like âdo_fioâ or âe_wsfeâ, then; your libraries were most likely compiled with g77 or gfortran, which; require -lg2c to resolve the Fortran I/O calls. Use of the same gcc; package for PSI4 should normally resolve this problem. The PSI4 configure script can often identify and use several; diffe",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:650,Integrability,rout,routines,650,"ï»¿. Installation Instructions for PSI4 â PSI4 [beta4] documentation. Navigation. index. modules Â  Â . toc Â  Â ; PSI4 [beta4] Â» . Installation Instructions for PSI4Â¶. I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. I. Compilation PrerequisitesÂ¶. C++ Compiler. F77 Compiler (the F95 compiler, gfortran, with gcc-4.X will work). Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:9672,Integrability,rout,routines,9672,"mpile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and to provide system routines for those libraries. Note that no fortran; compiler is necessary on Mac OS X systems (see below). The default search; order for compilers is: xlf_r (AIX only), gfortran, g77, ifort, f77, f2c. --with-f77symbol=value â This option allows manual assignment of the; FORTRAN77 symbol convention, which is necessary for C programs to link; Fortran-interface libraries such as BLAS and LAPACK. This option should; only be used by experts and even then should almost never be necessary.; Allowed values are:. lc : lower-case; lcu : lower-case with underscore (default); uc : upper-case; ucu : upper-case with underscore. --with-ld=linker â Use this option to specify a linker. The; default is âldâ. --with-ar=archiver â Use this option to specify an archiver. The; default is to look for âarâ automatically. --with-ar-flags=flags â Use this option to specify additional archiver; flags. The default is ârâ. --with-incdirs=direct",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:10023,Integrability,interface,interface,10023,"ration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and to provide system routines for those libraries. Note that no fortran; compiler is necessary on Mac OS X systems (see below). The default search; order for compilers is: xlf_r (AIX only), gfortran, g77, ifort, f77, f2c. --with-f77symbol=value â This option allows manual assignment of the; FORTRAN77 symbol convention, which is necessary for C programs to link; Fortran-interface libraries such as BLAS and LAPACK. This option should; only be used by experts and even then should almost never be necessary.; Allowed values are:. lc : lower-case; lcu : lower-case with underscore (default); uc : upper-case; ucu : upper-case with underscore. --with-ld=linker â Use this option to specify a linker. The; default is âldâ. --with-ar=archiver â Use this option to specify an archiver. The; default is to look for âarâ automatically. --with-ar-flags=flags â Use this option to specify additional archiver; flags. The default is ârâ. --with-incdirs=directories â Use this option to specify extra; directories where to look for header files. Directories should be specified; prepended by -I, i.e. -Idir1 -Idir2, etc. If several directories are; specified, enclose the list with single right-quotes, e.g.,; --with-incdirs='-I/usr/local/include -I/home/psi4/include'. --with-libs=libraries â Use this option to specify extra; l",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:19611,Integrability,depend,depends,19611,"g the .cshrc file to set the scratch; environment variable PSI_SCRATCH. If the selected location is; /scratch/user, add something like the following:; setenv PSI_SCRATCH /scratch/user. In a bash shell, the corresponding commands to be added to .bashrc is; the following:; export PSI=/usr/local/psi; PATH=$PSI/bin:$PATH ; export PATH; export PSI_SCRATCH=/scratch/user. More advanced control of scratch files and is handled through a; .psi4rc file, which is discussed at section Scratch Files and the ~/.psi4rc File. Note; For developers: during compilation and testing, PSI4 finds its basis sets,; grids, etc., in psi4/lib. After installation, PSI4 will look in; $prefix/share/psi. If you want to specify a non-standard location for this; information, you can do this by setting the environmental variable; $PSI4DATADIR to the directory containg the basis, grids, etc.,; subdirectories. IV. Recommendations for BLAS and LAPACK librariesÂ¶; Much of the speed and efficiency of the PSI4 programs depends on the; corresponding speed and efficiency of the available BLAS and LAPACK libraries; (especially the former). In addition, the most common compilation problems; involve these libraries. Users may therefore wish to consider the following; BLAS and LAPACK recommendations when building PSI4:. It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat. This library is usually just the; netlib distribution and is completely unoptimized. PSI4âs; performance will suffer if you choose this route.; The choice of LAPACK is less critical, and so the unoptimized; netlib distribution is acceptable. If you do choose to use the; RedHat/Fedora stock BLAS and LAPACK, make sure that the blas-devel; and lapack-devel packages are installed. Perhaps the best choice, if you have it available, is; Intelâs MKL library, which includes BLAS and LAPACK (note: use; version 11 or later, we had difficulty with version 10 for very; large coupled-cluster computations). MKL is e",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:20146,Integrability,rout,route,20146,"i4rc File. Note; For developers: during compilation and testing, PSI4 finds its basis sets,; grids, etc., in psi4/lib. After installation, PSI4 will look in; $prefix/share/psi. If you want to specify a non-standard location for this; information, you can do this by setting the environmental variable; $PSI4DATADIR to the directory containg the basis, grids, etc.,; subdirectories. IV. Recommendations for BLAS and LAPACK librariesÂ¶; Much of the speed and efficiency of the PSI4 programs depends on the; corresponding speed and efficiency of the available BLAS and LAPACK libraries; (especially the former). In addition, the most common compilation problems; involve these libraries. Users may therefore wish to consider the following; BLAS and LAPACK recommendations when building PSI4:. It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat. This library is usually just the; netlib distribution and is completely unoptimized. PSI4âs; performance will suffer if you choose this route.; The choice of LAPACK is less critical, and so the unoptimized; netlib distribution is acceptable. If you do choose to use the; RedHat/Fedora stock BLAS and LAPACK, make sure that the blas-devel; and lapack-devel packages are installed. Perhaps the best choice, if you have it available, is; Intelâs MKL library, which includes BLAS and LAPACK (note: use; version 11 or later, we had difficulty with version 10 for very; large coupled-cluster computations). MKL is efficient and works; well in threaded mode.; Otherwise, the simplest choice is to use ATLAS; (http://math-atlas.sourceforge.net/), which is readily available; on all Linux distributions. Another alternative is OpenBLAS; (https://github.com/xianyi/OpenBLAS, formerly GotoBLAS). These; work well on nearly every achitecture to which the PSI4 developers; have access, though we have identified at least one case in which; the Goto libraries yielded faulty DGEMM calls. On Mac OS X; systems, the vecLib packag",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:21710,Integrability,depend,depends,21710,".net/), which is readily available; on all Linux distributions. Another alternative is OpenBLAS; (https://github.com/xianyi/OpenBLAS, formerly GotoBLAS). These; work well on nearly every achitecture to which the PSI4 developers; have access, though we have identified at least one case in which; the Goto libraries yielded faulty DGEMM calls. On Mac OS X; systems, the vecLib package that comes with Xcode works well. PSI4 does not require a Fortran compiler, unless the resident BLAS; and LAPACK libraries require Fortran-based system libraries. If you see; compiler complaints about missing symbols like âdo_fioâ or âe_wsfeâ, then; your libraries were most likely compiled with g77 or gfortran, which; require -lg2c to resolve the Fortran I/O calls. Use of the same gcc; package for PSI4 should normally resolve this problem. The PSI4 configure script can often identify and use several; different BLAS and LAPACK libraries, but its ability to do this; automatically depends on a number of factors, including correspondence; between the compiler used for PSI4 and the compiler used to build; BLAS/LAPACK, placement of the libraries in commonly searched directories,; etc. PSI4âs configure script will find your BLAS and LAPACK if any of the; the following are installed in standard locations (e.g. /usr/local/lib):. ATLAS: libf77blas.a and libatlas.a, plus netlibâs liblapack.a; MKL 8: libmkl.so and libmkl_lapack64.a (with the corresponding; Intel compilers); Goto: libgoto.a and netlibâs liblapack.a; Cray SCSL (e.g. on SGI Altix): libscs.so (NB: No Fortran compiler; is necessary in this case, so --with-fc=no should work.); ESSL (e.g. on AIX systems): libessl.a. If configure cannot identify your BLAS and LAPACK libraries; automatically, you can specify them on the command-line using the; --with-blas and --with-lapack arguments described above. Here are a few; examples that work on the PSI4 developersâ systems:. Linux with ATLAS:; --with-blas='-lf77blas -latlas' --with-lapack='-llapack -l",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:25403,Integrability,depend,dependency,25403,"y, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library; (full pathnames are recommended):; BLASLIB = /home/david/software/atlas3.9.25/lib/libf77blas.a /home/david/software/atlas3.9.25/lib/libatlas.a. Edit Makefile as necessary (probably not needed).; make. Copy the resulting file [lapack_($ARCH).a] where you want it; (a standard location like /usr/local/lib is easier for PSI to find).; It is probably helpful to rename the file liblapack.a. V. Miscellaneous Architecture-Specific NotesÂ¶. Linux on x86 and x86_64; Intel compilers: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Problems with PSI CompilationÂ¶. No rule to make target foo.h, needed by bar.d. Stop.; This commonly happens after pulling updates from the repository. It happens; when a library header file is removed or renamed by the update, but there are; still old dependency files in the object directory, which think that they; still need to know about that header. Thereâs a simple remedy, just run; >>> make DODEPEND=no dclean. in the object directory. Make gets stuck in an infinite loop; This means that the makefiles have not been properly updated. Running; >>> autoconf. in the top-level Psi directory, followed by; >>> ./config.status --recheck; >>> ./config.status. in the object directory should fix it. This procedure will need to be run; whenever an update changes the directory structure. Incompatible g++/icpc; The Intel compilers require an installed set of C++ headers. Unfortunately,; the GNU compilers tend to be more cutting-edge than the Intel compilers,; meaning that Intel is always playing catch-up to new features in g++. This; means the two are often incompatible, leading to trouble if one wants to use; icpc to compile PSI4 (or anything else...). Your best bet in general is to not; upgrade Linux too fast, and always keep the very lates",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:1301,Modifiability,config,config,1301,"III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous architecture-specific notes; VI. Common Problems with PSI Compilation. I. Compilation PrerequisitesÂ¶. C++ Compiler. F77 Compiler (the F95 compiler, gfortran, with gcc-4.X will work). Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section out",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:1374,Modifiability,config,config,1374,"e-specific notes; VI. Common Problems with PSI Compilation. I. Compilation PrerequisitesÂ¶. C++ Compiler. F77 Compiler (the F95 compiler, gfortran, with gcc-4.X will work). Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf.",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:1396,Modifiability,config,config,1396,"e-specific notes; VI. Common Problems with PSI Compilation. I. Compilation PrerequisitesÂ¶. C++ Compiler. F77 Compiler (the F95 compiler, gfortran, with gcc-4.X will work). Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf.",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:1452,Modifiability,config,config,1452,"isitesÂ¶. C++ Compiler. F77 Compiler (the F95 compiler, gfortran, with gcc-4.X will work). Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch)",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:1481,Modifiability,config,config,1481,". F77 Compiler (the F95 compiler, gfortran, with gcc-4.X will work). Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first r",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:1512,Modifiability,config,config,1512," Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:1586,Modifiability,config,configure,1586," Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:2284,Modifiability,config,configuring,2284,"eloper libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In t",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:2519,Modifiability,config,configure,2519,"python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-co",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:2642,Modifiability,config,configure,2642,"called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:2723,Modifiability,config,configure,2723,". Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:2964,Modifiability,config,configure,2964,".org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configur",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:2991,Modifiability,config,configuration,2991,"th in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommen",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3037,Modifiability,config,configuration,3037,"th in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommen",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3130,Modifiability,config,configure,3130,"oconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/p",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3158,Modifiability,config,configuration,3158,"oconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/p",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3201,Modifiability,config,configuration,3201,"lation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; so",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3306,Modifiability,config,configure,3306,"and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from conf",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3327,Modifiability,config,configure,3327,"and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from conf",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3382,Modifiability,config,configure,3382," For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilati",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3396,Modifiability,config,configure,3396,"lopment; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3424,Modifiability,config,configuration,3424,"lopment; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3470,Modifiability,config,configure,3470,"lopment; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3503,Modifiability,config,configure,3503,"e; the file âconfigureâ in the top-level psi4 directory. For most Linux; and Mac compilations, this should not be necessary because the configure; file provided with PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation of the codes. A simple option is psi4/objdir, which should",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:3664,Modifiability,config,configuration,3664,"ith PSI4 should be sufficient. To replace the general; configure file with one specific to your architecture, in the top-level; psi4 directory, run autoconf:; >>> autoconf. Configuration and Compilation; Make an object directory in which you can compile the code; >>> mkdir obj. Next you need to configure the code. Find a configuration; option line or combination of; configuration options at Section III(1)A. Either, use the line directly:; >>> cd obj; >>> ../configure [your compilation configuration options here]. or, save your configuration options for a future compilation.; In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation of the codes. A simple option is psi4/objdir, which should; work for most environments. However, if you need executables for several; architectures, you should choose more meaningful subdirectory names. Note; The compila",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:4282,Modifiability,config,configure,4282,"In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation of the codes. A simple option is psi4/objdir, which should; work for most environments. However, if you need executables for several; architectures, you should choose more meaningful subdirectory names. Note; The compilation directory will be referred to as $objdir for the; remainder of these instructions. In $objdir, run the configure script found in the PSI4 top-level source; directory. This script will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:4305,Modifiability,config,configure,4305,"In the top-level psi4 directory, create a file like âdo-configureâ with; the configure command and options on one line.; >>> cat do-configure; ../configure [your compilation configuration options here]; >>> chmod u+x do-configure; >>> cd obj; >>> ../do-configure. Compile the code, run the tests, and (if tests pass) install it.; >>> make; >>> make tests; >>> make install. Thatâs it! The details about final user configuration are given below in; Section III(7). If something goes wrong,; check Section VI about common compilation problems. III. Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation of the codes. A simple option is psi4/objdir, which should; work for most environments. However, if you need executables for several; architectures, you should choose more meaningful subdirectory names. Note; The compilation directory will be referred to as $objdir for the; remainder of these instructions. In $objdir, run the configure script found in the PSI4 top-level source; directory. This script will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:4776,Modifiability,config,configure,4776,"Detailed Installation InstructionsÂ¶; This section provides a more detailed explanation of the procedure for; compiling and installing the PSI4 package. Step 1: Configuration. General Information about Configuration; First, we recommend that you choose for the top-level psi4 source; directory something other than /usr/local/psi; $HOME/psi4 or; /usr/local/src/psi4 are convenient choices. Next, in the top-level psi4; source directory youâve chosen, first run autoconf to generate the configure; script from configure.ac. It is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation of the codes. A simple option is psi4/objdir, which should; work for most environments. However, if you need executables for several; architectures, you should choose more meaningful subdirectory names. Note; The compilation directory will be referred to as $objdir for the; remainder of these instructions. In $objdir, run the configure script found in the PSI4 top-level source; directory. This script will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the t",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:5272,Modifiability,config,configure,5272," is best to keep the source code separate; from the compilation area, so you must first choose a subdirectory for; compilation of the codes. A simple option is psi4/objdir, which should; work for most environments. However, if you need executables for several; architectures, you should choose more meaningful subdirectory names. Note; The compilation directory will be referred to as $objdir for the; remainder of these instructions. In $objdir, run the configure script found in the PSI4 top-level source; directory. This script will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if y",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:5451,Modifiability,config,configure,5451,"ctory for; compilation of the codes. A simple option is psi4/objdir, which should; work for most environments. However, if you need executables for several; architectures, you should choose more meaningful subdirectory names. Note; The compilation directory will be referred to as $objdir for the; remainder of these instructions. In $objdir, run the configure script found in the PSI4 top-level source; directory. This script will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:5597,Modifiability,config,configure,5597,"architectures, you should choose more meaningful subdirectory names. Note; The compilation directory will be referred to as $objdir for the; remainder of these instructions. In $objdir, run the configure script found in the PSI4 top-level source; directory. This script will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever direc",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:5665,Modifiability,config,configuration,5665,"architectures, you should choose more meaningful subdirectory names. Note; The compilation directory will be referred to as $objdir for the; remainder of these instructions. In $objdir, run the configure script found in the PSI4 top-level source; directory. This script will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever direc",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:5741,Modifiability,config,configure,5741,"cript will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/l",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:5778,Modifiability,config,configure,5778,"cript will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/l",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:5980,Modifiability,config,configure,5980,"cript will scan your system to locate certain libraries,; header files, etc. needed for complete compilation. The script accepts a; number of options, all of which are listed above. The most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/l",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:6001,Modifiability,config,configure,6001," most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:6050,Modifiability,config,configure,6050," most important of; these is the --prefix option, which selects the installation directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:6078,Modifiability,config,configure,6078," directory for; the executables, the libraries, header files, basis set data, and other; administrative files. The default --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an e",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:6223,Modifiability,config,configuration,6223,"lt --prefix is /usr/local/psi. Note; The configure scriptâs --prefix directory will be referred to as; $prefix for the remainder of these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math libra",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:6388,Modifiability,config,configuration,6388,"f these instructions. Besides --prefix, PSI often needs a few additional options for the; configure script. To make it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --w",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:6494,Modifiability,config,configure,6494,"ake it easy to recompile later (especially if; youâre a developer), it can be convenient (but not necessary) to to put; the configure options in a small executable file, so you can re-do the; configuration later very easily. Let us assume that we will be putting; the configure options in a file named do-configure, in the top-level; psi4 directory (weâll keep it up there instead of down in the compilation; directory $objdir, so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran6",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:6822,Modifiability,config,configure,6822," so that if we delete the compilation directory later,; weâll still have the do-configure file). All configure options must be; on one line in the do-configure script. Note; The configure options below are for the most common architectures and; compilers. The developers would appreciate it if you would share any special; configuration options that might be needed for less commonly encountered; situations. For g++, if you have BLAS and LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a br",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:7276,Modifiability,config,configure,7276,"d LAPACK in standard locations (like /usr/lib64),; configuration is very easy. Pick one of the following scenarios, and place the; text given in the psi4/do-configure file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correct",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:7514,Modifiability,config,configure,7514,". Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If yo",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:7573,Modifiability,config,configure,7573," for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compil",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:7932,Modifiability,config,configuring,7932,"h-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8256,Modifiability,config,configure,8256,"x=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8429,Modifiability,config,configure,8429,"k=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order fo",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8472,Modifiability,config,configure,8472,"lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8489,Modifiability,plugin,plugins,8489,"lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8508,Modifiability,config,configure,8508,"../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8633,Modifiability,config,configure,8633,"PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and t",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8650,Modifiability,plugin,plugins,8650,"PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and t",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8775,Modifiability,config,configure,8775,"de does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and to provide system routines for those libraries. Note that no fortran; compiler is necessary on Mac OS X systems (see below). The default search; ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8868,Modifiability,config,configure,8868,"ot needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and to provide system routines for those libraries. Note that no fortran; compiler is necessary on Mac OS X systems (see below). The default search; order for compilers is: xlf_r (AIX only), gfortran, g77, ifort, f77, f2c.",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:8962,Modifiability,config,configuration,8962,"e latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and to provide system routines for those libraries. Note that no fortran; compiler is necessary on Mac OS X systems (see below). The default search; order for compilers is: xlf_r (AIX only), gfortran, g77, ifort, f77, f2c. --with-f77symbol=value â This option allows manual assignment of the; FORTRAN77 symbol convention, ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:9126,Modifiability,config,configure,9126,"ead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to the do-configure script. If you want to use the new LLVM compilers that; ship with XCode 4 (they compile quicker than GCC), use; ../configure --with-plugins --with-cxx=llvm-g++. Warning; If you still happen to encouter an error like:; checking Fortran symbols... giving up; configure: error: could not determine fortran symbol names. adding the following tag to your configure may help; --with-f77symbol=lcu. List of Specific Configuration Options; The example configuration options in the previous subsection are usually; sufficient. However, if not, you may need to make use of one or more; of the following options to the configure script:. --prefix=directory â Use this option if you wish to install the; PSI4 package somewhere other than the default directory, /usr/local/psi. --with-cxx=compiler â Use this option to specify a C++ compiler.; One should use compilers that generate reentrant code, if possible.; The default search order for compilers is: xlC_r (AIX only), g++, c++,; icpc, cxx. --with-fc=compiler â Use this option to specify a Fortran-77 compiler,; which is used to determine linking coventions for BLAS and LAPACK libraries; and to provide system routines for those libraries. Note that no fortran; compiler is necessary on Mac OS X systems (see below). The default search; order for compilers is: xlf_r (AIX only), gfortran, g77, ifort, f77, f2c. --with-f77symbol=value â This option allows manual assignment of the; FORTRAN77 symbol convention, which is necessary for C programs to link; Fortran-interface libraries such as BLAS and LAPACK. This option should; on",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13350,Modifiability,variab,variable,13350,"er â Specifies the maximum angular; momentum level for first derivatives of the primitive Gaussian; basis functions. This is set to g-type functions (AM=4) by default. --with-max-am-deriv2=integer â Specifies the maximum angular; momentum level for second derivatives of the primitive Gaussian; basis functions. This is set to f-type functions (AM=3) by default. --with-max-am-r12=integer â Specifies the maximum angular momentum; level for primitive Gaussian basis functions used in r_12 explicitly; correlated methods. This is set to f-type functions (AM=3) by default.; Not yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13553,Modifiability,variab,variable,13553,"; momentum level for second derivatives of the primitive Gaussian; basis functions. This is set to f-type functions (AM=3) by default. --with-max-am-r12=integer â Specifies the maximum angular momentum; level for primitive Gaussian basis functions used in r_12 explicitly; correlated methods. This is set to f-type functions (AM=3) by default.; Not yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Requir",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13610,Modifiability,variab,variable,13610,"set to f-type functions (AM=3) by default. --with-max-am-r12=integer â Specifies the maximum angular momentum; level for primitive Gaussian basis functions used in r_12 explicitly; correlated methods. This is set to f-type functions (AM=3) by default.; Not yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serializ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13638,Modifiability,config,config,13638,"set to f-type functions (AM=3) by default. --with-max-am-r12=integer â Specifies the maximum angular momentum; level for primitive Gaussian basis functions used in r_12 explicitly; correlated methods. This is set to f-type functions (AM=3) by default.; Not yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serializ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13773,Modifiability,config,config,13773,"aussian basis functions used in r_12 explicitly; correlated methods. This is set to f-type functions (AM=3) by default.; Not yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serialization; System; Thread. Relevant Configure Options:. --with-boost[=value] â Use Boost library from a standard location; if yes (defaul",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13814,Modifiability,variab,variable,13814,"ated methods. This is set to f-type functions (AM=3) by default.; Not yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serialization; System; Thread. Relevant Configure Options:. --with-boost[=value] â Use Boost library from a standard location; if yes (default), from the specified location if <path>, or disable; ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13839,Modifiability,config,configure,13839,"ated methods. This is set to f-type functions (AM=3) by default.; Not yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serialization; System; Thread. Relevant Configure Options:. --with-boost[=value] â Use Boost library from a standard location; if yes (default), from the specified location if <path>, or disable; ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13859,Modifiability,config,configure,13859,"ated methods. This is set to f-type functions (AM=3) by default.; Not yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serialization; System; Thread. Relevant Configure Options:. --with-boost[=value] â Use Boost library from a standard location; if yes (default), from the specified location if <path>, or disable; ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13883,Modifiability,config,configure,13883," yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serialization; System; Thread. Relevant Configure Options:. --with-boost[=value] â Use Boost library from a standard location; if yes (default), from the specified location if <path>, or disable; it if no. --with-boost-libdir=directory â; Force given directory for ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:14329,Modifiability,config,configure,14329,"alled and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serialization; System; Thread. Relevant Configure Options:. --with-boost[=value] â Use Boost library from a standard location; if yes (default), from the specified location if <path>, or disable; it if no. --with-boost-libdir=directory â; Force given directory for boost libraries. Note that this will override; library path detection, so use this parameter only if default library; detection fails and you know exactly where your boost libraries are; located. --with-boost-filesystem[=special-lib] â; Use the Filesystem library from boost. It is possible to specify a; certain library for the linker e.g.,; --with-boost-filesystem=boost_file",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:18669,Modifiability,variab,variable,18669,"be removed to save disk space by running; make clean in $objdir. Step 7: User Configuration; After the PSI4 package has been successfully installed, the user will need; to add the installation directory into his/her path. If the package has; been installed in the default location /usr/local/psi, then in C shell,; the user should add something like the following to their .cshrc file:; setenv PSI /usr/local/psi; set path = ($path $PSI/bin). Next, the user needs to tell the PSI4 I/O manager how to handle scratch files.; Identify the path to a fast scratch disk for which the user has write access.; If the local /tmp volume is large enough, it might be used.; However, a dedicated scratch volume (using RAID0 striping for speed) is; recommended. Warning; Scratch should NOT be a NFS-mounted volume, as writes to a; remote disk over the network can be very slow and can tie up the network; and negatively impact other users. Specify scratch location by editing the .cshrc file to set the scratch; environment variable PSI_SCRATCH. If the selected location is; /scratch/user, add something like the following:; setenv PSI_SCRATCH /scratch/user. In a bash shell, the corresponding commands to be added to .bashrc is; the following:; export PSI=/usr/local/psi; PATH=$PSI/bin:$PATH ; export PATH; export PSI_SCRATCH=/scratch/user. More advanced control of scratch files and is handled through a; .psi4rc file, which is discussed at section Scratch Files and the ~/.psi4rc File. Note; For developers: during compilation and testing, PSI4 finds its basis sets,; grids, etc., in psi4/lib. After installation, PSI4 will look in; $prefix/share/psi. If you want to specify a non-standard location for this; information, you can do this by setting the environmental variable; $PSI4DATADIR to the directory containg the basis, grids, etc.,; subdirectories. IV. Recommendations for BLAS and LAPACK librariesÂ¶; Much of the speed and efficiency of the PSI4 programs depends on the; corresponding speed and efficie",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:19415,Modifiability,variab,variable,19415,"; recommended. Warning; Scratch should NOT be a NFS-mounted volume, as writes to a; remote disk over the network can be very slow and can tie up the network; and negatively impact other users. Specify scratch location by editing the .cshrc file to set the scratch; environment variable PSI_SCRATCH. If the selected location is; /scratch/user, add something like the following:; setenv PSI_SCRATCH /scratch/user. In a bash shell, the corresponding commands to be added to .bashrc is; the following:; export PSI=/usr/local/psi; PATH=$PSI/bin:$PATH ; export PATH; export PSI_SCRATCH=/scratch/user. More advanced control of scratch files and is handled through a; .psi4rc file, which is discussed at section Scratch Files and the ~/.psi4rc File. Note; For developers: during compilation and testing, PSI4 finds its basis sets,; grids, etc., in psi4/lib. After installation, PSI4 will look in; $prefix/share/psi. If you want to specify a non-standard location for this; information, you can do this by setting the environmental variable; $PSI4DATADIR to the directory containg the basis, grids, etc.,; subdirectories. IV. Recommendations for BLAS and LAPACK librariesÂ¶; Much of the speed and efficiency of the PSI4 programs depends on the; corresponding speed and efficiency of the available BLAS and LAPACK libraries; (especially the former). In addition, the most common compilation problems; involve these libraries. Users may therefore wish to consider the following; BLAS and LAPACK recommendations when building PSI4:. It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat. This library is usually just the; netlib distribution and is completely unoptimized. PSI4âs; performance will suffer if you choose this route.; The choice of LAPACK is less critical, and so the unoptimized; netlib distribution is acceptable. If you do choose to use the; RedHat/Fedora stock BLAS and LAPACK, make sure that the blas-devel; and lapack-devel packages are installed. Per",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:21578,Modifiability,config,configure,21578,".net/), which is readily available; on all Linux distributions. Another alternative is OpenBLAS; (https://github.com/xianyi/OpenBLAS, formerly GotoBLAS). These; work well on nearly every achitecture to which the PSI4 developers; have access, though we have identified at least one case in which; the Goto libraries yielded faulty DGEMM calls. On Mac OS X; systems, the vecLib package that comes with Xcode works well. PSI4 does not require a Fortran compiler, unless the resident BLAS; and LAPACK libraries require Fortran-based system libraries. If you see; compiler complaints about missing symbols like âdo_fioâ or âe_wsfeâ, then; your libraries were most likely compiled with g77 or gfortran, which; require -lg2c to resolve the Fortran I/O calls. Use of the same gcc; package for PSI4 should normally resolve this problem. The PSI4 configure script can often identify and use several; different BLAS and LAPACK libraries, but its ability to do this; automatically depends on a number of factors, including correspondence; between the compiler used for PSI4 and the compiler used to build; BLAS/LAPACK, placement of the libraries in commonly searched directories,; etc. PSI4âs configure script will find your BLAS and LAPACK if any of the; the following are installed in standard locations (e.g. /usr/local/lib):. ATLAS: libf77blas.a and libatlas.a, plus netlibâs liblapack.a; MKL 8: libmkl.so and libmkl_lapack64.a (with the corresponding; Intel compilers); Goto: libgoto.a and netlibâs liblapack.a; Cray SCSL (e.g. on SGI Altix): libscs.so (NB: No Fortran compiler; is necessary in this case, so --with-fc=no should work.); ESSL (e.g. on AIX systems): libessl.a. If configure cannot identify your BLAS and LAPACK libraries; automatically, you can specify them on the command-line using the; --with-blas and --with-lapack arguments described above. Here are a few; examples that work on the PSI4 developersâ systems:. Linux with ATLAS:; --with-blas='-lf77blas -latlas' --with-lapack='-llapack -l",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:21922,Modifiability,config,configure,21922,"ccess, though we have identified at least one case in which; the Goto libraries yielded faulty DGEMM calls. On Mac OS X; systems, the vecLib package that comes with Xcode works well. PSI4 does not require a Fortran compiler, unless the resident BLAS; and LAPACK libraries require Fortran-based system libraries. If you see; compiler complaints about missing symbols like âdo_fioâ or âe_wsfeâ, then; your libraries were most likely compiled with g77 or gfortran, which; require -lg2c to resolve the Fortran I/O calls. Use of the same gcc; package for PSI4 should normally resolve this problem. The PSI4 configure script can often identify and use several; different BLAS and LAPACK libraries, but its ability to do this; automatically depends on a number of factors, including correspondence; between the compiler used for PSI4 and the compiler used to build; BLAS/LAPACK, placement of the libraries in commonly searched directories,; etc. PSI4âs configure script will find your BLAS and LAPACK if any of the; the following are installed in standard locations (e.g. /usr/local/lib):. ATLAS: libf77blas.a and libatlas.a, plus netlibâs liblapack.a; MKL 8: libmkl.so and libmkl_lapack64.a (with the corresponding; Intel compilers); Goto: libgoto.a and netlibâs liblapack.a; Cray SCSL (e.g. on SGI Altix): libscs.so (NB: No Fortran compiler; is necessary in this case, so --with-fc=no should work.); ESSL (e.g. on AIX systems): libessl.a. If configure cannot identify your BLAS and LAPACK libraries; automatically, you can specify them on the command-line using the; --with-blas and --with-lapack arguments described above. Here are a few; examples that work on the PSI4 developersâ systems:. Linux with ATLAS:; --with-blas='-lf77blas -latlas' --with-lapack='-llapack -lcblas'. Mac OS X with vecLib:; --with-blas='-altivec -framework vecLib' --with-lapack=' '. Linux with MKL 8.1 and icc/icpc/ifort 9.1:; --with-libdirs=-L/usr/local/opt/intel/mkl/8.0.2/lib/32 --with-blas=-lmkl --with-lapack=-lmkl_lapack3",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:22413,Modifiability,config,configure,22413,"he same gcc; package for PSI4 should normally resolve this problem. The PSI4 configure script can often identify and use several; different BLAS and LAPACK libraries, but its ability to do this; automatically depends on a number of factors, including correspondence; between the compiler used for PSI4 and the compiler used to build; BLAS/LAPACK, placement of the libraries in commonly searched directories,; etc. PSI4âs configure script will find your BLAS and LAPACK if any of the; the following are installed in standard locations (e.g. /usr/local/lib):. ATLAS: libf77blas.a and libatlas.a, plus netlibâs liblapack.a; MKL 8: libmkl.so and libmkl_lapack64.a (with the corresponding; Intel compilers); Goto: libgoto.a and netlibâs liblapack.a; Cray SCSL (e.g. on SGI Altix): libscs.so (NB: No Fortran compiler; is necessary in this case, so --with-fc=no should work.); ESSL (e.g. on AIX systems): libessl.a. If configure cannot identify your BLAS and LAPACK libraries; automatically, you can specify them on the command-line using the; --with-blas and --with-lapack arguments described above. Here are a few; examples that work on the PSI4 developersâ systems:. Linux with ATLAS:; --with-blas='-lf77blas -latlas' --with-lapack='-llapack -lcblas'. Mac OS X with vecLib:; --with-blas='-altivec -framework vecLib' --with-lapack=' '. Linux with MKL 8.1 and icc/icpc/ifort 9.1:; --with-libdirs=-L/usr/local/opt/intel/mkl/8.0.2/lib/32 --with-blas=-lmkl --with-lapack=-lmkl_lapack32. Linux on ia32 with MKL 10.1 and icc/icpc 11.0:; --with-blas='-Wl,--start-group -L/usr/local/opt/intel/mkl/10.1.0.015/lib/32 -l mkl -Wl,--end-group -lguide -lpthread'. Compilation notes for ATLAS; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CP",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:23711,Modifiability,config,configure,23711,"s -latlas' --with-lapack='-llapack -lcblas'. Mac OS X with vecLib:; --with-blas='-altivec -framework vecLib' --with-lapack=' '. Linux with MKL 8.1 and icc/icpc/ifort 9.1:; --with-libdirs=-L/usr/local/opt/intel/mkl/8.0.2/lib/32 --with-blas=-lmkl --with-lapack=-lmkl_lapack32. Linux on ia32 with MKL 10.1 and icc/icpc 11.0:; --with-blas='-Wl,--start-group -L/usr/local/opt/intel/mkl/10.1.0.015/lib/32 -l mkl -Wl,--end-group -lguide -lpthread'. Compilation notes for ATLAS; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CPU throttling so the auto-tuning capabilities have a chance; to work. On Linux, this can be tune using; /usr/bin/cpufreq-selector -g performance. cd into the compilation directory and run the source; directory configure script there, with any necessary flags, e.g.,; /usr/local/src/atlas/configure --prefix=/usr/local/atlas. where prefix gives the installation directory.; It should automatically detect if youâre on an x86_64; Then make and check using; make; make check; make ptcheck. And install; make install. Compilation notes for netlibâs LAPACK; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full LAPACK installation notes.; Youâll need a Fortran compiler installed.; If you decide to compile LAPACK from source, it may be obtained from; http://www.netlib.org/lapack/. Unpack the source code, and in the; top-level source directory, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library; (full pathnames are recommended):; BLASLIB = /home/david/software/atlas3.9.25/lib/libf77blas.a ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:23789,Modifiability,config,configure,23789,"framework vecLib' --with-lapack=' '. Linux with MKL 8.1 and icc/icpc/ifort 9.1:; --with-libdirs=-L/usr/local/opt/intel/mkl/8.0.2/lib/32 --with-blas=-lmkl --with-lapack=-lmkl_lapack32. Linux on ia32 with MKL 10.1 and icc/icpc 11.0:; --with-blas='-Wl,--start-group -L/usr/local/opt/intel/mkl/10.1.0.015/lib/32 -l mkl -Wl,--end-group -lguide -lpthread'. Compilation notes for ATLAS; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CPU throttling so the auto-tuning capabilities have a chance; to work. On Linux, this can be tune using; /usr/bin/cpufreq-selector -g performance. cd into the compilation directory and run the source; directory configure script there, with any necessary flags, e.g.,; /usr/local/src/atlas/configure --prefix=/usr/local/atlas. where prefix gives the installation directory.; It should automatically detect if youâre on an x86_64; Then make and check using; make; make check; make ptcheck. And install; make install. Compilation notes for netlibâs LAPACK; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full LAPACK installation notes.; Youâll need a Fortran compiler installed.; If you decide to compile LAPACK from source, it may be obtained from; http://www.netlib.org/lapack/. Unpack the source code, and in the; top-level source directory, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library; (full pathnames are recommended):; BLASLIB = /home/david/software/atlas3.9.25/lib/libf77blas.a /home/david/software/atlas3.9.25/lib/libatlas.a. Edit Makefile as necessary (probably not ",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:25768,Modifiability,config,config,25768,"necessary (probably not needed).; make. Copy the resulting file [lapack_($ARCH).a] where you want it; (a standard location like /usr/local/lib is easier for PSI to find).; It is probably helpful to rename the file liblapack.a. V. Miscellaneous Architecture-Specific NotesÂ¶. Linux on x86 and x86_64; Intel compilers: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Problems with PSI CompilationÂ¶. No rule to make target foo.h, needed by bar.d. Stop.; This commonly happens after pulling updates from the repository. It happens; when a library header file is removed or renamed by the update, but there are; still old dependency files in the object directory, which think that they; still need to know about that header. Thereâs a simple remedy, just run; >>> make DODEPEND=no dclean. in the object directory. Make gets stuck in an infinite loop; This means that the makefiles have not been properly updated. Running; >>> autoconf. in the top-level Psi directory, followed by; >>> ./config.status --recheck; >>> ./config.status. in the object directory should fix it. This procedure will need to be run; whenever an update changes the directory structure. Incompatible g++/icpc; The Intel compilers require an installed set of C++ headers. Unfortunately,; the GNU compilers tend to be more cutting-edge than the Intel compilers,; meaning that Intel is always playing catch-up to new features in g++. This; means the two are often incompatible, leading to trouble if one wants to use; icpc to compile PSI4 (or anything else...). Your best bet in general is to not; upgrade Linux too fast, and always keep the very latest Intel compilers; around. Missing symbols like âdo_fioâ or âe_wsfeâ; See Section IV(3) above. Table Of Contents. Installation Instructions for PSI4; I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous Architecture",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:25799,Modifiability,config,config,25799,".; make. Copy the resulting file [lapack_($ARCH).a] where you want it; (a standard location like /usr/local/lib is easier for PSI to find).; It is probably helpful to rename the file liblapack.a. V. Miscellaneous Architecture-Specific NotesÂ¶. Linux on x86 and x86_64; Intel compilers: We had trouble with icpc 12.0.x. Use 12.1 or; later. VI. Common Problems with PSI CompilationÂ¶. No rule to make target foo.h, needed by bar.d. Stop.; This commonly happens after pulling updates from the repository. It happens; when a library header file is removed or renamed by the update, but there are; still old dependency files in the object directory, which think that they; still need to know about that header. Thereâs a simple remedy, just run; >>> make DODEPEND=no dclean. in the object directory. Make gets stuck in an infinite loop; This means that the makefiles have not been properly updated. Running; >>> autoconf. in the top-level Psi directory, followed by; >>> ./config.status --recheck; >>> ./config.status. in the object directory should fix it. This procedure will need to be run; whenever an update changes the directory structure. Incompatible g++/icpc; The Intel compilers require an installed set of C++ headers. Unfortunately,; the GNU compilers tend to be more cutting-edge than the Intel compilers,; meaning that Intel is always playing catch-up to new features in g++. This; means the two are often incompatible, leading to trouble if one wants to use; icpc to compile PSI4 (or anything else...). Your best bet in general is to not; upgrade Linux too fast, and always keep the very latest Intel compilers; around. Missing symbols like âdo_fioâ or âe_wsfeâ; See Section IV(3) above. Table Of Contents. Installation Instructions for PSI4; I. Compilation Prerequisites; II. Brief Summary of Configuration, Compilation, and Installation; III. Detailed Installation Instructions; IV. Recommendations for BLAS and LAPACK libraries; V. Miscellaneous Architecture-Specific Notes; VI. Common Pro",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:7500,Performance,optimiz,optimized,7500," file (all on one long line). Replace the; text after prefix with whatever directory you want to use for your; installation directory. Intel compiler with MKL math library [highly recommended; if you donât use; this, then at least make sure you have a threaded BLAS (see BLAS; recommendations at Section IV below)]; ../configure --prefix=/usr/local/psi4 --with-blas='-mkl' --with-cc=icc --with-cxx=icpc --with-fc=ifort --with-opt='-O2 -static -no-prec-div' --with-incdirs=-mkl. Note; Itâs -mkl, not -lmkl. Warning; There seems to be a problem with icpc 12.0.2 and possibly earlier; 12.0 versions, giving an error like:; error: identifier ""__is_trivial"" is undefined. Use at least version 12.0.4. Gnu compiler with ACML math library (better than MKL for AMD processors); ../configure --prefix=/usr/local/psi4 --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with-opt=-O2 --with-blas=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"" --with-lapack=""-L/opt/acml5.2.0/gfortran64_mp/lib -lacml_mp"". g++, optimized; ../configure --prefix=/usr/local/psi4. g++, for debugging; ../configure --prefix=/usr/local/psi4 --without-opt --with-debug. Compiling for Mac; PSI4 has been compiled on OS X 10.7 (Lion) and 10.8 (Mountain Lion).; To get the compilers needed, itâs easiest to install XCode.; However, XCode does not provide a Fortran compiler. Although; Fortran compilers are not needed to compile Psi, a broken one can; prevent Psi from configuring properly. Do not download the latest; version of GFortran from the HPC website; this is unlikely to be; compatible with your version of GCC. Instead, you should run gcc; -v to find out what version of GCC youâre using, and then; download the corresponding GFortran from; http://r.research.att.com/tools/. If you configure Psi on a Mac; without any Fortran compiler it will set itself up correctly, so; this is only necessary if you want a Fortran compiler for other; purposes. You can configure Psi by adding something like; ../configure --with-plugins. to th",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13042,Performance,optimiz,optimizations,13042,"g.,; --with-lapack='-llapack -lcblas -latlas'. --with-max-am-eri=integer â Specifies the maximum angular momentum; level for the primitive Gaussian basis functions when computing; electron repulsion integrals. This is set to h-type functions (AM=5); by default. --with-max-am-deriv1=integer â Specifies the maximum angular; momentum level for first derivatives of the primitive Gaussian; basis functions. This is set to g-type functions (AM=4) by default. --with-max-am-deriv2=integer â Specifies the maximum angular; momentum level for second derivatives of the primitive Gaussian; basis functions. This is set to f-type functions (AM=3) by default. --with-max-am-r12=integer â Specifies the maximum angular momentum; level for primitive Gaussian basis functions used in r_12 explicitly; correlated methods. This is set to f-type functions (AM=3) by default.; Not yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:20103,Performance,perform,performance,20103,"i4rc File. Note; For developers: during compilation and testing, PSI4 finds its basis sets,; grids, etc., in psi4/lib. After installation, PSI4 will look in; $prefix/share/psi. If you want to specify a non-standard location for this; information, you can do this by setting the environmental variable; $PSI4DATADIR to the directory containg the basis, grids, etc.,; subdirectories. IV. Recommendations for BLAS and LAPACK librariesÂ¶; Much of the speed and efficiency of the PSI4 programs depends on the; corresponding speed and efficiency of the available BLAS and LAPACK libraries; (especially the former). In addition, the most common compilation problems; involve these libraries. Users may therefore wish to consider the following; BLAS and LAPACK recommendations when building PSI4:. It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat. This library is usually just the; netlib distribution and is completely unoptimized. PSI4âs; performance will suffer if you choose this route.; The choice of LAPACK is less critical, and so the unoptimized; netlib distribution is acceptable. If you do choose to use the; RedHat/Fedora stock BLAS and LAPACK, make sure that the blas-devel; and lapack-devel packages are installed. Perhaps the best choice, if you have it available, is; Intelâs MKL library, which includes BLAS and LAPACK (note: use; version 11 or later, we had difficulty with version 10 for very; large coupled-cluster computations). MKL is efficient and works; well in threaded mode.; Otherwise, the simplest choice is to use ATLAS; (http://math-atlas.sourceforge.net/), which is readily available; on all Linux distributions. Another alternative is OpenBLAS; (https://github.com/xianyi/OpenBLAS, formerly GotoBLAS). These; work well on nearly every achitecture to which the PSI4 developers; have access, though we have identified at least one case in which; the Goto libraries yielded faulty DGEMM calls. On Mac OS X; systems, the vecLib packag",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:23593,Performance,tune,tune,23593,"w; examples that work on the PSI4 developersâ systems:. Linux with ATLAS:; --with-blas='-lf77blas -latlas' --with-lapack='-llapack -lcblas'. Mac OS X with vecLib:; --with-blas='-altivec -framework vecLib' --with-lapack=' '. Linux with MKL 8.1 and icc/icpc/ifort 9.1:; --with-libdirs=-L/usr/local/opt/intel/mkl/8.0.2/lib/32 --with-blas=-lmkl --with-lapack=-lmkl_lapack32. Linux on ia32 with MKL 10.1 and icc/icpc 11.0:; --with-blas='-Wl,--start-group -L/usr/local/opt/intel/mkl/10.1.0.015/lib/32 -l mkl -Wl,--end-group -lguide -lpthread'. Compilation notes for ATLAS; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CPU throttling so the auto-tuning capabilities have a chance; to work. On Linux, this can be tune using; /usr/bin/cpufreq-selector -g performance. cd into the compilation directory and run the source; directory configure script there, with any necessary flags, e.g.,; /usr/local/src/atlas/configure --prefix=/usr/local/atlas. where prefix gives the installation directory.; It should automatically detect if youâre on an x86_64; Then make and check using; make; make check; make ptcheck. And install; make install. Compilation notes for netlibâs LAPACK; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full LAPACK installation notes.; Youâll need a Fortran compiler installed.; If you decide to compile LAPACK from source, it may be obtained from; http://www.netlib.org/lapack/. Unpack the source code, and in the; top-level source directory, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:23634,Performance,perform,performance,23634,"w; examples that work on the PSI4 developersâ systems:. Linux with ATLAS:; --with-blas='-lf77blas -latlas' --with-lapack='-llapack -lcblas'. Mac OS X with vecLib:; --with-blas='-altivec -framework vecLib' --with-lapack=' '. Linux with MKL 8.1 and icc/icpc/ifort 9.1:; --with-libdirs=-L/usr/local/opt/intel/mkl/8.0.2/lib/32 --with-blas=-lmkl --with-lapack=-lmkl_lapack32. Linux on ia32 with MKL 10.1 and icc/icpc 11.0:; --with-blas='-Wl,--start-group -L/usr/local/opt/intel/mkl/10.1.0.015/lib/32 -l mkl -Wl,--end-group -lguide -lpthread'. Compilation notes for ATLAS; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full ATLAS installation notes.; Youâll need a Fortran compiler installed.; Unpack the source code, then make a compilation directory (could; be an obj subdirectory in the source directory, or elsewhere).; Turn off CPU throttling so the auto-tuning capabilities have a chance; to work. On Linux, this can be tune using; /usr/bin/cpufreq-selector -g performance. cd into the compilation directory and run the source; directory configure script there, with any necessary flags, e.g.,; /usr/local/src/atlas/configure --prefix=/usr/local/atlas. where prefix gives the installation directory.; It should automatically detect if youâre on an x86_64; Then make and check using; make; make check; make ptcheck. And install; make install. Compilation notes for netlibâs LAPACK; These shortcut notes might be helpful if you are using Linux. However,; we recommend reading and following the full LAPACK installation notes.; Youâll need a Fortran compiler installed.; If you decide to compile LAPACK from source, it may be obtained from; http://www.netlib.org/lapack/. Unpack the source code, and in the; top-level source directory, you need to create a make.inc file with; the appropriate options for your machine. For Linux/gfortran,; simply; cp make.inc.example make.inc. Next, edit BLASLIB in make.inc to point to your BLAS library",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:1564,Safety,detect,detected,1564," Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and InstallationÂ¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file âconfigureâ in the top-level psi4",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:11649,Safety,detect,detected,11649,"rectories where to look for header files. Directories should be specified; prepended by -I, i.e. -Idir1 -Idir2, etc. If several directories are; specified, enclose the list with single right-quotes, e.g.,; --with-incdirs='-I/usr/local/include -I/home/psi4/include'. --with-libs=libraries â Use this option to specify extra; libraries which should be used during linking. Libraries should be; specified by their full names or in the usual -l notation, e.g.; -lm /usr/lib/libm.a. If several libraries are specified, enclose; the list with single right-quotes, e.g.,; --with-libs='-libm -lgcc_s'. --with-libdirs=directories â Use this option to specify extra; directories where to look for libraries. Directories should be specified; prepended by -L, e.g., -Ldir1 -Ldir2. If several directories are; specified, enclose the list with single right-quotes, e.g.,; --with-libdirs='-L/usr/local/lib -I/home/psi4/lib'. --with-blas=library â Use this option to specify a BLAS library.; (Many BLAS libraries can be detected automatically.); If your BLAS library has multiple components, enclose the file list; with single right-quotes, e.g.,; --with-blas='-lf77blas -latlas'. --with-lapack=library â Use this option to specify a LAPACK library.; (Many LAPACK libraries can be detected automatically.); If your LAPACK library has multiple components, enclose the file list; with single right-quotes, e.g.,; --with-lapack='-llapack -lcblas -latlas'. --with-max-am-eri=integer â Specifies the maximum angular momentum; level for the primitive Gaussian basis functions when computing; electron repulsion integrals. This is set to h-type functions (AM=5); by default. --with-max-am-deriv1=integer â Specifies the maximum angular; momentum level for first derivatives of the primitive Gaussian; basis functions. This is set to g-type functions (AM=4) by default. --with-max-am-deriv2=integer â Specifies the maximum angular; momentum level for second derivatives of the primitive Gaussian; basis functions. This is set",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:11910,Safety,detect,detected,11910,"ude'. --with-libs=libraries â Use this option to specify extra; libraries which should be used during linking. Libraries should be; specified by their full names or in the usual -l notation, e.g.; -lm /usr/lib/libm.a. If several libraries are specified, enclose; the list with single right-quotes, e.g.,; --with-libs='-libm -lgcc_s'. --with-libdirs=directories â Use this option to specify extra; directories where to look for libraries. Directories should be specified; prepended by -L, e.g., -Ldir1 -Ldir2. If several directories are; specified, enclose the list with single right-quotes, e.g.,; --with-libdirs='-L/usr/local/lib -I/home/psi4/lib'. --with-blas=library â Use this option to specify a BLAS library.; (Many BLAS libraries can be detected automatically.); If your BLAS library has multiple components, enclose the file list; with single right-quotes, e.g.,; --with-blas='-lf77blas -latlas'. --with-lapack=library â Use this option to specify a LAPACK library.; (Many LAPACK libraries can be detected automatically.); If your LAPACK library has multiple components, enclose the file list; with single right-quotes, e.g.,; --with-lapack='-llapack -lcblas -latlas'. --with-max-am-eri=integer â Specifies the maximum angular momentum; level for the primitive Gaussian basis functions when computing; electron repulsion integrals. This is set to h-type functions (AM=5); by default. --with-max-am-deriv1=integer â Specifies the maximum angular; momentum level for first derivatives of the primitive Gaussian; basis functions. This is set to g-type functions (AM=4) by default. --with-max-am-deriv2=integer â Specifies the maximum angular; momentum level for second derivatives of the primitive Gaussian; basis functions. This is set to f-type functions (AM=3) by default. --with-max-am-r12=integer â Specifies the maximum angular momentum; level for primitive Gaussian basis functions used in r_12 explicitly; correlated methods. This is set to f-type functions (AM=3) by default.; Not yet ac",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:13199,Safety,detect,detected,13199," functions when computing; electron repulsion integrals. This is set to h-type functions (AM=5); by default. --with-max-am-deriv1=integer â Specifies the maximum angular; momentum level for first derivatives of the primitive Gaussian; basis functions. This is set to g-type functions (AM=4) by default. --with-max-am-deriv2=integer â Specifies the maximum angular; momentum level for second derivatives of the primitive Gaussian; basis functions. This is set to f-type functions (AM=3) by default. --with-max-am-r12=integer â Specifies the maximum angular momentum; level for primitive Gaussian basis functions used in r_12 explicitly; correlated methods. This is set to f-type functions (AM=3) by default.; Not yet active. --with-debug=yes/no â Turns on debugging flags (-g) if yes. This is; set to no by default. --with-opt=yes/no â Turns off compiler optimizations (-OX) if no.; This is set to yes by default. --with-strict=yes â Turns on strict compiler warnings. Python interpreter; Usually Python will be detected automatically. If this fails, or if; you have multiple versions installed and want to specify a particular; one, set the PYTHON environmental variable to the full path name; of the Python interpreter you want to use. This defaults to the; python in your path. For example, if you want to use; python2.6 located in /usr/bin set the environmental variable to be:; PYTHON=/usr/bin/python2.6. Note; If the variable PYTHON is set, the config program must be; present with a similar name. For instance, in the above example; the following must exist:; /usr/bin/python2.6-config. You either set the environmental variable before you call configure, or; tell configure about it:; ../configure PYTHON=/usr/bin/python2.6. Boost Libraries; PSI4 can use a user-provided boost C++ library, or, alternatively,; build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (bo",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:14960,Safety,detect,detection,14960,"build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serialization; System; Thread. Relevant Configure Options:. --with-boost[=value] â Use Boost library from a standard location; if yes (default), from the specified location if <path>, or disable; it if no. --with-boost-libdir=directory â; Force given directory for boost libraries. Note that this will override; library path detection, so use this parameter only if default library; detection fails and you know exactly where your boost libraries are; located. --with-boost-filesystem[=special-lib] â; Use the Filesystem library from boost. It is possible to specify a; certain library for the linker e.g.,; --with-boost-filesystem=boost_filesystem-gcc-mt. --with-boost-python â Specify the boost python library or suffix to use. --with-boost-regex[=special-lib] â; Use the Regex library from boost. It is possible to specify a certain; library for the linker e.g.,; --with-boost-regex=boost_regex-gcc-mt-d-1_33_1. --with-boost-serialization[=special-lib] â; Use the Serialization library from boost. It is possible to specify a; certain library for the linker e.g.,; --with-boost-serialization=boost_serialization-gcc-mt-d-1_33_1. --with-boost-system[=special-lib] â; Use the System library from boost. It is possible to specify a certain; library for the linker e.g.,; --with-boost-system=boost_system-gcc-mt. --with-boost-thread[=special-lib] â; Use the Thread library",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
https://psicode.org/psi4manual/4.0b4/installfile.html:15018,Safety,detect,detection,15018,"build the boost version 1.48.0 that comes bundled with the distribution.; By default, PSI4 will look in your include/library paths for; a compatible and complete boost installation (boost 1.46 or newer). A; boost installation in a nonstandard location can be specified by the; --with-boost=PATH and --with-boost-libdir=PATH configure flags. If a; default or user-specified boost installation is found to be incomplete,; incompatible, or nonexistent, boost 1.48.0 will be unpacked automatically; and built as part of the PSI4 build process.; Required Compiled Boost Modules (all Boost 1.46.0 or later):. Filesystem; Python; Regex; Serialization; System; Thread. Relevant Configure Options:. --with-boost[=value] â Use Boost library from a standard location; if yes (default), from the specified location if <path>, or disable; it if no. --with-boost-libdir=directory â; Force given directory for boost libraries. Note that this will override; library path detection, so use this parameter only if default library; detection fails and you know exactly where your boost libraries are; located. --with-boost-filesystem[=special-lib] â; Use the Filesystem library from boost. It is possible to specify a; certain library for the linker e.g.,; --with-boost-filesystem=boost_filesystem-gcc-mt. --with-boost-python â Specify the boost python library or suffix to use. --with-boost-regex[=special-lib] â; Use the Regex library from boost. It is possible to specify a certain; library for the linker e.g.,; --with-boost-regex=boost_regex-gcc-mt-d-1_33_1. --with-boost-serialization[=special-lib] â; Use the Serialization library from boost. It is possible to specify a; certain library for the linker e.g.,; --with-boost-serialization=boost_serialization-gcc-mt-d-1_33_1. --with-boost-system[=special-lib] â; Use the System library from boost. It is possible to specify a certain; library for the linker e.g.,; --with-boost-system=boost_system-gcc-mt. --with-boost-thread[=special-lib] â; Use the Thread library",MatchSource.WIKI,psi4manual/4.0b4/installfile.html,psi4,psi4,v1.9.1,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html
