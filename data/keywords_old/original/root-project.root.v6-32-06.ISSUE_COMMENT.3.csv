id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/8781#issuecomment-1010898506:55,Deployability,install,installed,55,Master ref guide was rebuilt before qhelpgenerator was installed maybe?. ![image](https://user-images.githubusercontent.com/10653970/149124427-a8355b4c-2202-4da3-9f0e-cd220f3a1d60.png),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1010898506
https://github.com/root-project/root/issues/8781#issuecomment-1010898506:11,Usability,guid,guide,11,Master ref guide was rebuilt before qhelpgenerator was installed maybe?. ![image](https://user-images.githubusercontent.com/10653970/149124427-a8355b4c-2202-4da3-9f0e-cd220f3a1d60.png),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1010898506
https://github.com/root-project/root/issues/8781#issuecomment-1011056200:42,Availability,error,error,42,"Yes, that's to be expected because of the error in the command:; `qhelpgenerator index.qhp`. I checked locally and I am seeing the same error. It seems the index.qhp file is corrupted here because of a mismatch in section opening and closing tags:; ```. <toc>; <section title=""ROOT master"" ref=""index.html"">; <section title=""ROOT Reference Documentation"" ref=""index.html"">; <section title=""Introduction"" ref=""index.html#autotoc_md0"" />; <section title=""Manuals"" ref=""index.html#autotoc_md1"" />; <section title=""Tutorials and courses"" ref=""index.html#autotoc_md2"" />; <section title=""Provide your feedback"" ref=""index.html#autotoc_md3"" />; </section>; </section>; </section>; <section title=""Tutorials"" ref=""group__Tutorials.html"" />; ```; I guess I will have to file another bug report in doxygen :s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011056200
https://github.com/root-project/root/issues/8781#issuecomment-1011056200:136,Availability,error,error,136,"Yes, that's to be expected because of the error in the command:; `qhelpgenerator index.qhp`. I checked locally and I am seeing the same error. It seems the index.qhp file is corrupted here because of a mismatch in section opening and closing tags:; ```. <toc>; <section title=""ROOT master"" ref=""index.html"">; <section title=""ROOT Reference Documentation"" ref=""index.html"">; <section title=""Introduction"" ref=""index.html#autotoc_md0"" />; <section title=""Manuals"" ref=""index.html#autotoc_md1"" />; <section title=""Tutorials and courses"" ref=""index.html#autotoc_md2"" />; <section title=""Provide your feedback"" ref=""index.html#autotoc_md3"" />; </section>; </section>; </section>; <section title=""Tutorials"" ref=""group__Tutorials.html"" />; ```; I guess I will have to file another bug report in doxygen :s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011056200
https://github.com/root-project/root/issues/8781#issuecomment-1011056200:596,Usability,feedback,feedback,596,"Yes, that's to be expected because of the error in the command:; `qhelpgenerator index.qhp`. I checked locally and I am seeing the same error. It seems the index.qhp file is corrupted here because of a mismatch in section opening and closing tags:; ```. <toc>; <section title=""ROOT master"" ref=""index.html"">; <section title=""ROOT Reference Documentation"" ref=""index.html"">; <section title=""Introduction"" ref=""index.html#autotoc_md0"" />; <section title=""Manuals"" ref=""index.html#autotoc_md1"" />; <section title=""Tutorials and courses"" ref=""index.html#autotoc_md2"" />; <section title=""Provide your feedback"" ref=""index.html#autotoc_md3"" />; </section>; </section>; </section>; <section title=""Tutorials"" ref=""group__Tutorials.html"" />; ```; I guess I will have to file another bug report in doxygen :s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011056200
https://github.com/root-project/root/issues/8781#issuecomment-1011076618:389,Usability,undo,undocumented,389,"Yep, but it seems that this issue is still buggy in master. They suggest a workaround, but not sure... ```; QUICK FIXES FOR USERS:. If you personally encounter this ""Error in line 4595: Opening and ending tag; mismatch."", and you just want to fix that issue, then the solution is to; either make sure that all your enums are documented or that they are; appropriately hidden (nested in an undocumented class, or nested in a; filtered-out namespace (e.g., ""detail"")). This is what I did, it fixed all; my issues.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011076618
https://github.com/root-project/root/issues/8783#issuecomment-925104676:102,Deployability,update,update,102,"> They have the same name. We would probably ""just"" need to also tag roottest as `latest_stable`, and update the tag whenever we update root.git's `latest_stable`. That is one of the possible solutions. The other is to add additional code in `CMakeLists.txt` to checkout the corresponding branch of `roottest`, if `latest-stable` has been checked out in the `root` repository, i.e. something similar to; ```; $ git for-each-ref --points-at=latest-stable^2 --format='%(refname:short)'; v6-24-06; ```; And then checkout `v6-24-06` in `roottest`, which is what `latest-stable` points to. For the sake of a simpler release procedure, I vote for this option given that it should only require 3 additional lines in `CMakeLists.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8783#issuecomment-925104676
https://github.com/root-project/root/issues/8783#issuecomment-925104676:129,Deployability,update,update,129,"> They have the same name. We would probably ""just"" need to also tag roottest as `latest_stable`, and update the tag whenever we update root.git's `latest_stable`. That is one of the possible solutions. The other is to add additional code in `CMakeLists.txt` to checkout the corresponding branch of `roottest`, if `latest-stable` has been checked out in the `root` repository, i.e. something similar to; ```; $ git for-each-ref --points-at=latest-stable^2 --format='%(refname:short)'; v6-24-06; ```; And then checkout `v6-24-06` in `roottest`, which is what `latest-stable` points to. For the sake of a simpler release procedure, I vote for this option given that it should only require 3 additional lines in `CMakeLists.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8783#issuecomment-925104676
https://github.com/root-project/root/issues/8783#issuecomment-925104676:611,Deployability,release,release,611,"> They have the same name. We would probably ""just"" need to also tag roottest as `latest_stable`, and update the tag whenever we update root.git's `latest_stable`. That is one of the possible solutions. The other is to add additional code in `CMakeLists.txt` to checkout the corresponding branch of `roottest`, if `latest-stable` has been checked out in the `root` repository, i.e. something similar to; ```; $ git for-each-ref --points-at=latest-stable^2 --format='%(refname:short)'; v6-24-06; ```; And then checkout `v6-24-06` in `roottest`, which is what `latest-stable` points to. For the sake of a simpler release procedure, I vote for this option given that it should only require 3 additional lines in `CMakeLists.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8783#issuecomment-925104676
https://github.com/root-project/root/issues/8783#issuecomment-925104676:603,Usability,simpl,simpler,603,"> They have the same name. We would probably ""just"" need to also tag roottest as `latest_stable`, and update the tag whenever we update root.git's `latest_stable`. That is one of the possible solutions. The other is to add additional code in `CMakeLists.txt` to checkout the corresponding branch of `roottest`, if `latest-stable` has been checked out in the `root` repository, i.e. something similar to; ```; $ git for-each-ref --points-at=latest-stable^2 --format='%(refname:short)'; v6-24-06; ```; And then checkout `v6-24-06` in `roottest`, which is what `latest-stable` points to. For the sake of a simpler release procedure, I vote for this option given that it should only require 3 additional lines in `CMakeLists.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8783#issuecomment-925104676
https://github.com/root-project/root/pull/8798#issuecomment-2078772470:345,Testability,test,test,345,"@hahnjo Thanks for the comment! I can move it there, but do I really need to derive from TRandomEngine? The parent methods are for double Rndm(), which does not seem very useful to me.; This generator is a binary register generator, so rather a quite different structure, and it is not intended to be used as a normal generator, but rather as a test scenario or helper math functions for electronics testing. It also is inherently templated, etc. It returns an array rather than just a number Rndm(). See https://github.com/root-project/root/pull/8798/files#diff-2e848ceefaff2e24c9b2970fb86a8da1d3d00603fc4f48f920421e603198fab2. Wrt tests, I will 'copy' the mentioned tutorial as 'test' once it's clear where this class should go. Thanks for the review!! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8798#issuecomment-2078772470
https://github.com/root-project/root/pull/8798#issuecomment-2078772470:400,Testability,test,testing,400,"@hahnjo Thanks for the comment! I can move it there, but do I really need to derive from TRandomEngine? The parent methods are for double Rndm(), which does not seem very useful to me.; This generator is a binary register generator, so rather a quite different structure, and it is not intended to be used as a normal generator, but rather as a test scenario or helper math functions for electronics testing. It also is inherently templated, etc. It returns an array rather than just a number Rndm(). See https://github.com/root-project/root/pull/8798/files#diff-2e848ceefaff2e24c9b2970fb86a8da1d3d00603fc4f48f920421e603198fab2. Wrt tests, I will 'copy' the mentioned tutorial as 'test' once it's clear where this class should go. Thanks for the review!! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8798#issuecomment-2078772470
https://github.com/root-project/root/pull/8798#issuecomment-2078772470:633,Testability,test,tests,633,"@hahnjo Thanks for the comment! I can move it there, but do I really need to derive from TRandomEngine? The parent methods are for double Rndm(), which does not seem very useful to me.; This generator is a binary register generator, so rather a quite different structure, and it is not intended to be used as a normal generator, but rather as a test scenario or helper math functions for electronics testing. It also is inherently templated, etc. It returns an array rather than just a number Rndm(). See https://github.com/root-project/root/pull/8798/files#diff-2e848ceefaff2e24c9b2970fb86a8da1d3d00603fc4f48f920421e603198fab2. Wrt tests, I will 'copy' the mentioned tutorial as 'test' once it's clear where this class should go. Thanks for the review!! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8798#issuecomment-2078772470
https://github.com/root-project/root/pull/8798#issuecomment-2078772470:681,Testability,test,test,681,"@hahnjo Thanks for the comment! I can move it there, but do I really need to derive from TRandomEngine? The parent methods are for double Rndm(), which does not seem very useful to me.; This generator is a binary register generator, so rather a quite different structure, and it is not intended to be used as a normal generator, but rather as a test scenario or helper math functions for electronics testing. It also is inherently templated, etc. It returns an array rather than just a number Rndm(). See https://github.com/root-project/root/pull/8798/files#diff-2e848ceefaff2e24c9b2970fb86a8da1d3d00603fc4f48f920421e603198fab2. Wrt tests, I will 'copy' the mentioned tutorial as 'test' once it's clear where this class should go. Thanks for the review!! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8798#issuecomment-2078772470
https://github.com/root-project/root/pull/8798#issuecomment-2078772470:697,Usability,clear,clear,697,"@hahnjo Thanks for the comment! I can move it there, but do I really need to derive from TRandomEngine? The parent methods are for double Rndm(), which does not seem very useful to me.; This generator is a binary register generator, so rather a quite different structure, and it is not intended to be used as a normal generator, but rather as a test scenario or helper math functions for electronics testing. It also is inherently templated, etc. It returns an array rather than just a number Rndm(). See https://github.com/root-project/root/pull/8798/files#diff-2e848ceefaff2e24c9b2970fb86a8da1d3d00603fc4f48f920421e603198fab2. Wrt tests, I will 'copy' the mentioned tutorial as 'test' once it's clear where this class should go. Thanks for the review!! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8798#issuecomment-2078772470
https://github.com/root-project/root/pull/8804#issuecomment-893758696:19,Performance,perform,performance,19,> Did you make any performance studies?. I wanted to see with rootbench. I did a simple `root hsimple.C` comparison where I neither expected nor saw noticeable differences.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8804#issuecomment-893758696
https://github.com/root-project/root/pull/8804#issuecomment-893758696:81,Usability,simpl,simple,81,> Did you make any performance studies?. I wanted to see with rootbench. I did a simple `root hsimple.C` comparison where I neither expected nor saw noticeable differences.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8804#issuecomment-893758696
https://github.com/root-project/root/issues/8807#issuecomment-895069093:44,Usability,simpl,simple,44,"About naming: although `std::strtok` does a simple string splitting, tokenization is often understood as a more complex operation than string splitting, involving some lexing, see e.g. https://docs.python.org/3/library/tokenize.html (vs the simple Python string split mentioned above) and https://github.com/ArashPartow/lexertk . I would suggest to just call this `Split`, if other people share this ""tokenizing sounds more complex than just splitting"" feeling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8807#issuecomment-895069093
https://github.com/root-project/root/issues/8807#issuecomment-895069093:241,Usability,simpl,simple,241,"About naming: although `std::strtok` does a simple string splitting, tokenization is often understood as a more complex operation than string splitting, involving some lexing, see e.g. https://docs.python.org/3/library/tokenize.html (vs the simple Python string split mentioned above) and https://github.com/ArashPartow/lexertk . I would suggest to just call this `Split`, if other people share this ""tokenizing sounds more complex than just splitting"" feeling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8807#issuecomment-895069093
https://github.com/root-project/root/issues/8817#issuecomment-896106638:38,Integrability,depend,depend,38,"Even simpler reproducer, that doesn't depend on `TObject` at all (sorry for the noise); ```py; import ROOT. ROOT.gInterpreter.Declare(; '''; class A {};; class B: public A {};; class C: public B {};. void myfunc(const B &b){; std::cout << ""B"" << std::endl;; }. void myfunc(const C &c){; std::cout << ""c"" << std::endl;; }. '''). ROOT.myfunc(ROOT.B()); ROOT.myfunc(ROOT.C()); ```. output:; ```; B; B; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-896106638
https://github.com/root-project/root/issues/8817#issuecomment-896106638:5,Usability,simpl,simpler,5,"Even simpler reproducer, that doesn't depend on `TObject` at all (sorry for the noise); ```py; import ROOT. ROOT.gInterpreter.Declare(; '''; class A {};; class B: public A {};; class C: public B {};. void myfunc(const B &b){; std::cout << ""B"" << std::endl;; }. void myfunc(const C &c){; std::cout << ""c"" << std::endl;; }. '''). ROOT.myfunc(ROOT.B()); ROOT.myfunc(ROOT.C()); ```. output:; ```; B; B; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-896106638
https://github.com/root-project/root/issues/8817#issuecomment-897023454:352,Modifiability,inherit,inheritance,352,"After some investigation, it seems this issue is due to the priority level assigned to the two overloads. Specifically, the logic at https://github.com/root-project/root/blob/896940ef8c0936ad394a1cf6b98d1d8fbaabbfff/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L408-L412. seems to aim at assigning higher priority to class types that have a deeper inheritance chain. In the reproducer above, this should translate to class `B` having priority 1 (because it has 1 base class `A`) and class `C` having priority 2 (because it has 2 base classes `A,B`). The function this logic relies on ([GetNumBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1212)) in turn calls [TClass::GetListOfBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/core/meta/src/TClass.cxx#L3620) which does not return all the bases in the full inheritance chain of the class, rather just the direct bases of a class. So in this case:; ```; >>> import ROOT; >>> ROOT.gInterpreter.Declare(; ... '''; ... class A {};; ... class B: public A {};; ... class C: public B {};; ... '''); True; >>> c = ROOT.TClass.GetClass(""C""); >>> b = ROOT.TClass.GetClass(""B""); >>> len(c.GetListOfBases()); 1; >>> len(b.GetListOfBases()); 1; ```. In this case, if TClass:GetListOfBases returned a list of size 2 for class `C`, the correct overload would get assigned a higher priority and thus would be chosen at runtime. There is no clear general solution, but it is worth highlighting the cause of the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-897023454
https://github.com/root-project/root/issues/8817#issuecomment-897023454:966,Modifiability,inherit,inheritance,966,"After some investigation, it seems this issue is due to the priority level assigned to the two overloads. Specifically, the logic at https://github.com/root-project/root/blob/896940ef8c0936ad394a1cf6b98d1d8fbaabbfff/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L408-L412. seems to aim at assigning higher priority to class types that have a deeper inheritance chain. In the reproducer above, this should translate to class `B` having priority 1 (because it has 1 base class `A`) and class `C` having priority 2 (because it has 2 base classes `A,B`). The function this logic relies on ([GetNumBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1212)) in turn calls [TClass::GetListOfBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/core/meta/src/TClass.cxx#L3620) which does not return all the bases in the full inheritance chain of the class, rather just the direct bases of a class. So in this case:; ```; >>> import ROOT; >>> ROOT.gInterpreter.Declare(; ... '''; ... class A {};; ... class B: public A {};; ... class C: public B {};; ... '''); True; >>> c = ROOT.TClass.GetClass(""C""); >>> b = ROOT.TClass.GetClass(""B""); >>> len(c.GetListOfBases()); 1; >>> len(b.GetListOfBases()); 1; ```. In this case, if TClass:GetListOfBases returned a list of size 2 for class `C`, the correct overload would get assigned a higher priority and thus would be chosen at runtime. There is no clear general solution, but it is worth highlighting the cause of the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-897023454
https://github.com/root-project/root/issues/8817#issuecomment-897023454:124,Testability,log,logic,124,"After some investigation, it seems this issue is due to the priority level assigned to the two overloads. Specifically, the logic at https://github.com/root-project/root/blob/896940ef8c0936ad394a1cf6b98d1d8fbaabbfff/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L408-L412. seems to aim at assigning higher priority to class types that have a deeper inheritance chain. In the reproducer above, this should translate to class `B` having priority 1 (because it has 1 base class `A`) and class `C` having priority 2 (because it has 2 base classes `A,B`). The function this logic relies on ([GetNumBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1212)) in turn calls [TClass::GetListOfBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/core/meta/src/TClass.cxx#L3620) which does not return all the bases in the full inheritance chain of the class, rather just the direct bases of a class. So in this case:; ```; >>> import ROOT; >>> ROOT.gInterpreter.Declare(; ... '''; ... class A {};; ... class B: public A {};; ... class C: public B {};; ... '''); True; >>> c = ROOT.TClass.GetClass(""C""); >>> b = ROOT.TClass.GetClass(""B""); >>> len(c.GetListOfBases()); 1; >>> len(b.GetListOfBases()); 1; ```. In this case, if TClass:GetListOfBases returned a list of size 2 for class `C`, the correct overload would get assigned a higher priority and thus would be chosen at runtime. There is no clear general solution, but it is worth highlighting the cause of the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-897023454
https://github.com/root-project/root/issues/8817#issuecomment-897023454:572,Testability,log,logic,572,"After some investigation, it seems this issue is due to the priority level assigned to the two overloads. Specifically, the logic at https://github.com/root-project/root/blob/896940ef8c0936ad394a1cf6b98d1d8fbaabbfff/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L408-L412. seems to aim at assigning higher priority to class types that have a deeper inheritance chain. In the reproducer above, this should translate to class `B` having priority 1 (because it has 1 base class `A`) and class `C` having priority 2 (because it has 2 base classes `A,B`). The function this logic relies on ([GetNumBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1212)) in turn calls [TClass::GetListOfBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/core/meta/src/TClass.cxx#L3620) which does not return all the bases in the full inheritance chain of the class, rather just the direct bases of a class. So in this case:; ```; >>> import ROOT; >>> ROOT.gInterpreter.Declare(; ... '''; ... class A {};; ... class B: public A {};; ... class C: public B {};; ... '''); True; >>> c = ROOT.TClass.GetClass(""C""); >>> b = ROOT.TClass.GetClass(""B""); >>> len(c.GetListOfBases()); 1; >>> len(b.GetListOfBases()); 1; ```. In this case, if TClass:GetListOfBases returned a list of size 2 for class `C`, the correct overload would get assigned a higher priority and thus would be chosen at runtime. There is no clear general solution, but it is worth highlighting the cause of the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-897023454
https://github.com/root-project/root/issues/8817#issuecomment-897023454:1533,Usability,clear,clear,1533,"After some investigation, it seems this issue is due to the priority level assigned to the two overloads. Specifically, the logic at https://github.com/root-project/root/blob/896940ef8c0936ad394a1cf6b98d1d8fbaabbfff/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L408-L412. seems to aim at assigning higher priority to class types that have a deeper inheritance chain. In the reproducer above, this should translate to class `B` having priority 1 (because it has 1 base class `A`) and class `C` having priority 2 (because it has 2 base classes `A,B`). The function this logic relies on ([GetNumBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1212)) in turn calls [TClass::GetListOfBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/core/meta/src/TClass.cxx#L3620) which does not return all the bases in the full inheritance chain of the class, rather just the direct bases of a class. So in this case:; ```; >>> import ROOT; >>> ROOT.gInterpreter.Declare(; ... '''; ... class A {};; ... class B: public A {};; ... class C: public B {};; ... '''); True; >>> c = ROOT.TClass.GetClass(""C""); >>> b = ROOT.TClass.GetClass(""B""); >>> len(c.GetListOfBases()); 1; >>> len(b.GetListOfBases()); 1; ```. In this case, if TClass:GetListOfBases returned a list of size 2 for class `C`, the correct overload would get assigned a higher priority and thus would be chosen at runtime. There is no clear general solution, but it is worth highlighting the cause of the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-897023454
https://github.com/root-project/root/pull/8827#issuecomment-895853494:234,Usability,feedback,feedback,234,"## DeepCode failed to analyze this pull request; Something went wrong despite trying multiple times, sorry about that.; Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8827#issuecomment-895853494
https://github.com/root-project/root/issues/8828#issuecomment-2372486833:742,Deployability,update,update,742,"The fix is 'simple':; ```; diff --git a/core/metacling/src/TCling.cxx b/core/metacling/src/TCling.cxx; index 7fe65825ea..656396ffcd 100644; --- a/core/metacling/src/TCling.cxx; +++ b/core/metacling/src/TCling.cxx; @@ -6646,9 +6646,13 @@ void TCling::RefreshClassInfo(TClass *cl, const clang::NamedDecl *def, bool alia; cl->ResetCaches();; TClass::RemoveClassDeclId(cci->GetDeclId());; if (def) {; - // It's a tag decl, not a namespace decl.; - cci->Init(*cci->GetType());; - TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + if (cci->GetType()) {; + // It's a tag decl, not a namespace decl.; + cci->Init(*cci->GetType());; + TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + } else {; + Error(""RefreshClassInfo"", ""Should not need to update the classInfo a non type decl: %s"", oldDef->getNameAsString().c_str());; + }; }; }; } else if (!cl->TestBit(TClass::kLoading) && !cl->fHasRootPcmInfo) {; ```; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x12ef3d7b0; root [2] namespace Detail {}; Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2372486833
https://github.com/root-project/root/issues/8828#issuecomment-2372486833:1123,Deployability,update,update,1123,"The fix is 'simple':; ```; diff --git a/core/metacling/src/TCling.cxx b/core/metacling/src/TCling.cxx; index 7fe65825ea..656396ffcd 100644; --- a/core/metacling/src/TCling.cxx; +++ b/core/metacling/src/TCling.cxx; @@ -6646,9 +6646,13 @@ void TCling::RefreshClassInfo(TClass *cl, const clang::NamedDecl *def, bool alia; cl->ResetCaches();; TClass::RemoveClassDeclId(cci->GetDeclId());; if (def) {; - // It's a tag decl, not a namespace decl.; - cci->Init(*cci->GetType());; - TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + if (cci->GetType()) {; + // It's a tag decl, not a namespace decl.; + cci->Init(*cci->GetType());; + TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + } else {; + Error(""RefreshClassInfo"", ""Should not need to update the classInfo a non type decl: %s"", oldDef->getNameAsString().c_str());; + }; }; }; } else if (!cl->TestBit(TClass::kLoading) && !cl->fHasRootPcmInfo) {; ```; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x12ef3d7b0; root [2] namespace Detail {}; Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2372486833
https://github.com/root-project/root/issues/8828#issuecomment-2372486833:12,Usability,simpl,simple,12,"The fix is 'simple':; ```; diff --git a/core/metacling/src/TCling.cxx b/core/metacling/src/TCling.cxx; index 7fe65825ea..656396ffcd 100644; --- a/core/metacling/src/TCling.cxx; +++ b/core/metacling/src/TCling.cxx; @@ -6646,9 +6646,13 @@ void TCling::RefreshClassInfo(TClass *cl, const clang::NamedDecl *def, bool alia; cl->ResetCaches();; TClass::RemoveClassDeclId(cci->GetDeclId());; if (def) {; - // It's a tag decl, not a namespace decl.; - cci->Init(*cci->GetType());; - TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + if (cci->GetType()) {; + // It's a tag decl, not a namespace decl.; + cci->Init(*cci->GetType());; + TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + } else {; + Error(""RefreshClassInfo"", ""Should not need to update the classInfo a non type decl: %s"", oldDef->getNameAsString().c_str());; + }; }; }; } else if (!cl->TestBit(TClass::kLoading) && !cl->fHasRootPcmInfo) {; ```; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x12ef3d7b0; root [2] namespace Detail {}; Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2372486833
https://github.com/root-project/root/issues/8828#issuecomment-2373131937:14,Usability,simpl,simple,14,"> The fix is 'simple':. Well yes, see https://github.com/root-project/root/pull/9089 and discussion",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2373131937
https://github.com/root-project/root/issues/8850#issuecomment-1079188278:113,Usability,simpl,simply,113,"Actually, I found the old behaviour of root just ignoring unknown options extremely useful.; It allowed users to simply add their own command line options and parsing them in `.rootlogon.C`; A simple example I have been using for 15+ years:; ```; 	int argc = gApplication->Argc();; 	char** argv = gApplication->Argv();; 	for (int i=1; i<argc; i++) {; 		TString arg = argv[i];; 		if (arg == ""--browser"") {; 			new TBrowser();; 		}; 	}; ```. I can see the the arguments for the recent change, nevertheless I would very much like to keep the old behaviour.; My suggestion would be to add a command line option `--ignore-unknown`, after which all unknown options are ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8850#issuecomment-1079188278
https://github.com/root-project/root/issues/8850#issuecomment-1079188278:193,Usability,simpl,simple,193,"Actually, I found the old behaviour of root just ignoring unknown options extremely useful.; It allowed users to simply add their own command line options and parsing them in `.rootlogon.C`; A simple example I have been using for 15+ years:; ```; 	int argc = gApplication->Argc();; 	char** argv = gApplication->Argv();; 	for (int i=1; i<argc; i++) {; 		TString arg = argv[i];; 		if (arg == ""--browser"") {; 			new TBrowser();; 		}; 	}; ```. I can see the the arguments for the recent change, nevertheless I would very much like to keep the old behaviour.; My suggestion would be to add a command line option `--ignore-unknown`, after which all unknown options are ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8850#issuecomment-1079188278
https://github.com/root-project/root/issues/8850#issuecomment-1079234719:175,Performance,load,load,175,"Yes, I know about rootbrowse. The TBrowser was just the simplest example I have. It's not the only custom command line option I'm using, I also use this to manipulate gStyle, load .so files, etc. . Of course I am fully aware that my complaint feels a lot like https://xkcd.com/1172/...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8850#issuecomment-1079234719
https://github.com/root-project/root/issues/8850#issuecomment-1079234719:56,Usability,simpl,simplest,56,"Yes, I know about rootbrowse. The TBrowser was just the simplest example I have. It's not the only custom command line option I'm using, I also use this to manipulate gStyle, load .so files, etc. . Of course I am fully aware that my complaint feels a lot like https://xkcd.com/1172/...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8850#issuecomment-1079234719
https://github.com/root-project/root/pull/8868#issuecomment-902501605:112,Testability,test,test,112,Errors above were due to some options unrecognized by `root` were actually necessary for other callables in the test. Last commit moves the check to `TRint` and also now checks if there are multiple unrecognized options issued by the user:. ```; $ root --random -z --nonexistingoption; root: unrecognized option '--random'; root: unrecognized option '-z'; root: unrecognized option '--nonexistingoption'; Try 'root --help' for more information.; ```. Also changed to using `std::cerr` for simplicity. Before merging we can discuss the correct output stream,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8868#issuecomment-902501605
https://github.com/root-project/root/pull/8868#issuecomment-902501605:489,Usability,simpl,simplicity,489,Errors above were due to some options unrecognized by `root` were actually necessary for other callables in the test. Last commit moves the check to `TRint` and also now checks if there are multiple unrecognized options issued by the user:. ```; $ root --random -z --nonexistingoption; root: unrecognized option '--random'; root: unrecognized option '-z'; root: unrecognized option '--nonexistingoption'; Try 'root --help' for more information.; ```. Also changed to using `std::cerr` for simplicity. Before merging we can discuss the correct output stream,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8868#issuecomment-902501605
https://github.com/root-project/root/issues/8875#issuecomment-2076689182:165,Performance,perform,perform,165,This looks like a nasty mix of runtime reflection information and IO (we use TEmulatedTuple to abstract from implementation details of the tuple class in the stl to perform IO in a simple way). @pcanal would you be able to suggest a path to improve the current situation?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8875#issuecomment-2076689182
https://github.com/root-project/root/issues/8875#issuecomment-2076689182:181,Usability,simpl,simple,181,This looks like a nasty mix of runtime reflection information and IO (we use TEmulatedTuple to abstract from implementation details of the tuple class in the stl to perform IO in a simple way). @pcanal would you be able to suggest a path to improve the current situation?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8875#issuecomment-2076689182
https://github.com/root-project/root/pull/8884#issuecomment-903637323:234,Usability,feedback,feedback,234,"## DeepCode failed to analyze this pull request; Something went wrong despite trying multiple times, sorry about that.; Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8884#issuecomment-903637323
https://github.com/root-project/root/issues/8890#issuecomment-911515928:267,Availability,error,error,267,`curl -v https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root -o file.root` show the problem. `github.com` server supports `HTTP 2` while `TWebFile` uses `HTTP 1.1`. Therefore `github.com` simply refuses first request with 400 error. Not sure if there is easy way to support `HTTP 2` with `TWebFile`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8890#issuecomment-911515928
https://github.com/root-project/root/issues/8890#issuecomment-911515928:229,Usability,simpl,simply,229,`curl -v https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root -o file.root` show the problem. `github.com` server supports `HTTP 2` while `TWebFile` uses `HTTP 1.1`. Therefore `github.com` simply refuses first request with 400 error. Not sure if there is easy way to support `HTTP 2` with `TWebFile`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8890#issuecomment-911515928
https://github.com/root-project/root/issues/8893#issuecomment-1006570773:110,Usability,simpl,simplest,110,"Problem here is that `Describe` defined in `tree/dataframe/inc/ROOT/RDF/RInterface.hxx` returns a string. The simplest solution is to call `print(df.Describe())` to format properly the string. ""Fixing"" the desired output would change the existing usage of `Describe()` - returned type change from string to void and printing inside of the Describe. This is what is going on:; ```python; def foo(): # returns string; return ""a\nb"". def bar(): # void; print(""a\nb""). foo() # this is our case, giving excplicitly ""a\nb""; bar() # this is good; print(foo()) # this is good; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8893#issuecomment-1006570773
https://github.com/root-project/root/issues/8904#issuecomment-908272636:139,Deployability,update,updates,139,"Hi @Axel-Naumann ,. no, I was running just from home directory. But, let me have a look if 1) this behaviour will be seen after the recent updates of root in EPEL; 2)if I'm able to provide a simple reproducer. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904#issuecomment-908272636
https://github.com/root-project/root/issues/8904#issuecomment-908272636:191,Usability,simpl,simple,191,"Hi @Axel-Naumann ,. no, I was running just from home directory. But, let me have a look if 1) this behaviour will be seen after the recent updates of root in EPEL; 2)if I'm able to provide a simple reproducer. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904#issuecomment-908272636
https://github.com/root-project/root/pull/8934#issuecomment-908960572:40,Testability,test,test,40,Following Philippe's suggestion for the test (thanks!) it's clear that the current logic is not enough.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934#issuecomment-908960572
https://github.com/root-project/root/pull/8934#issuecomment-908960572:83,Testability,log,logic,83,Following Philippe's suggestion for the test (thanks!) it's clear that the current logic is not enough.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934#issuecomment-908960572
https://github.com/root-project/root/pull/8934#issuecomment-908960572:60,Usability,clear,clear,60,Following Philippe's suggestion for the test (thanks!) it's clear that the current logic is not enough.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934#issuecomment-908960572
https://github.com/root-project/root/issues/8950#issuecomment-934484956:153,Modifiability,config,configure,153,"Thanks for the feedback. Just as a suggestion, I think it would still be possible to migrate from that Makefile to a CMakeLists.txt. That way, one could configure via the command line what part of the docs to build, instead of having to modify the makeinput.sh script, which in turn modifies the git source directory, which brings us back to https://github.com/root-project/root/issues/8947",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950#issuecomment-934484956
https://github.com/root-project/root/issues/8950#issuecomment-934484956:15,Usability,feedback,feedback,15,"Thanks for the feedback. Just as a suggestion, I think it would still be possible to migrate from that Makefile to a CMakeLists.txt. That way, one could configure via the command line what part of the docs to build, instead of having to modify the makeinput.sh script, which in turn modifies the git source directory, which brings us back to https://github.com/root-project/root/issues/8947",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950#issuecomment-934484956
https://github.com/root-project/root/issues/8950#issuecomment-934492893:274,Usability,guid,guide,274,I am now looking at #8947. I am modifying the `Makefile` to left a clean source directory after build. `makeinput.sh` should be modified only temporarily by developers to make only part of the doc in order to speed the build when working on a specific part of the reference guide. This script is not only a static list. At the end is added the pieces of doc build by `xtract_docstrings.py`; and `print_roofit_pyz_doctrings.py`. But it is true that if one modifies (even temporarily) `makeinput.sh` then it will appears in `git status`. I am not should how a `cmake` approach will fix that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950#issuecomment-934492893
https://github.com/root-project/root/issues/8950#issuecomment-934499934:248,Usability,simpl,simple,248,Yes but the list of folders does not follow the classes naming .... You may need more something like `-DENABLE_HIST` .... but then is the `hist` folder we have `hist` and `histpainter` subfolders which might be enabled separately ... and this is a simple example there is much more complex structures for which we need a precise picking which is done by `makeinput.sh`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950#issuecomment-934499934
https://github.com/root-project/root/pull/8955#issuecomment-915152676:95,Deployability,integrat,integrating,95,"@MarkusFrankATcernch ; it's all clear now, nothing is missing. with the ROOT changes should be integrating fine.; thank you :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8955#issuecomment-915152676
https://github.com/root-project/root/pull/8955#issuecomment-915152676:95,Integrability,integrat,integrating,95,"@MarkusFrankATcernch ; it's all clear now, nothing is missing. with the ROOT changes should be integrating fine.; thank you :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8955#issuecomment-915152676
https://github.com/root-project/root/pull/8955#issuecomment-915152676:32,Usability,clear,clear,32,"@MarkusFrankATcernch ; it's all clear now, nothing is missing. with the ROOT changes should be integrating fine.; thank you :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8955#issuecomment-915152676
https://github.com/root-project/root/issues/8984#issuecomment-1387712730:645,Usability,simpl,simplified,645,"> You see that after deleting the dataset gives exactly the same memory as after having created the dataset, so there is a problem, isn't it ?!?. I'm not convinced by this yet because I don't completely understand the output at this point. Yes, you are right, memory doesn't decrease, but starting from the third toy it also doesn't *increase* when `generate()` is called, right? So these numbers don't make sense to me to begin with, and I would rather not conclude that there is a memory leak based on . But anyway, I managed to convince myself by generating many more toys, and observing a steady memory increase over time. I did this with a simplified version of your reproducer:; ```C++; void Minimum2(); {; using namespace RooFit;; using namespace RooStats;. ProcInfo_t procinfo;; const float toMB = 1.f / 1024.f;. std::unique_ptr<TFile> f_ws{TFile::Open(""WS-YY-resonant_500_For_Comb.root"", ""READ"")};. auto *ws = f_ws->Get<RooWorkspace>(""combWS"");; auto *mc = static_cast<ModelConfig *>(ws->obj(""ModelConfig""));; auto *pdf = static_cast<RooSimultaneous *>(mc->GetPdf());. for (std::size_t index_toy = 1; index_toy < 500; index_toy++) {. const RooArgSet *Observables = (RooArgSet *)mc->GetObservables();; std::vector<std::unique_ptr<RooDataSet>> toyDatas;; std::map<string, RooDataSet *> toyDataMap;. RooCategory channellist{""channellist"", ""channellist""};. // generate each category; for (auto const &item : pdf->indexCat()) {; channellist.defineType(item.first.c_str());; RooAbsPdf *pdftmp = pdf->getPdf(item.first.c_str());. RooArgSet obstmp;; pdftmp->getObservables(Observables, obstmp);. toyDatas.emplace_back(static_cast<RooDataSet *>(pdftmp->generate(obstmp, Extended())));; toyDataMap[item.first.c_str()] = toyDatas.back().get();; }. RooRealVar wt(""wt"", ""wt"", 1);; RooDataSet toyData{""toyData"", """", {*Observables, wt}, Index(channellist), Import(toyDataMap), WeightVar(wt)};. if (index_toy % 10 == 0) {; gSystem->GetProcInfo(&procinfo);; std::cout << index_toy << "": "" << procinfo.fMemResi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1387712730
https://github.com/root-project/root/issues/8989#issuecomment-919060975:62,Deployability,release,releases,62,"Hello @philippe554 ,; Indeed, we changed this behaviour a few releases ago, IIRC the reason was that the progressive output implementation had some problems, so we opted for capturing the output and releasing it only at the end, even at the expense of not covering cases such a progress bar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8989#issuecomment-919060975
https://github.com/root-project/root/issues/8989#issuecomment-919060975:278,Usability,progress bar,progress bar,278,"Hello @philippe554 ,; Indeed, we changed this behaviour a few releases ago, IIRC the reason was that the progressive output implementation had some problems, so we opted for capturing the output and releasing it only at the end, even at the expense of not covering cases such a progress bar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8989#issuecomment-919060975
https://github.com/root-project/root/pull/9005#issuecomment-920572223:90,Usability,undo,undoes,90,@Linev The first(2cf3535) and the last commit(3262d53) should be deleted. The last commit undoes the first. I could make an new PR if you think it is necessary.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9005#issuecomment-920572223
https://github.com/root-project/root/pull/9005#issuecomment-922042561:18,Usability,undo,undoes,18,"> The last commit undoes the first. I could make an new PR if you think it is necessary. Yes, please create new PR, removing these commits",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9005#issuecomment-922042561
https://github.com/root-project/root/issues/9011#issuecomment-957859532:364,Deployability,patch,patch,364,"Actually it worked for you because you centred the X title. In the previous macro, remove the X title centring and go to log scale in Y and you will get the problem you discovered. So that's not a regression. The bug fix simply revealed a problem (?) which was hidden by the bug generated by the X title centring. To make it short, with a ROOT version without the patch, try:; ```; {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1) {; x1.push_back(E);; sig1.push_back(10*pow(E,-0.1));; sig2.push_back(15*pow(E,-0.15));; }; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->Draw(""AL"");; gPad->Update();; c1->SetLogy();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9011#issuecomment-957859532
https://github.com/root-project/root/issues/9011#issuecomment-957859532:121,Testability,log,log,121,"Actually it worked for you because you centred the X title. In the previous macro, remove the X title centring and go to log scale in Y and you will get the problem you discovered. So that's not a regression. The bug fix simply revealed a problem (?) which was hidden by the bug generated by the X title centring. To make it short, with a ROOT version without the patch, try:; ```; {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1) {; x1.push_back(E);; sig1.push_back(10*pow(E,-0.1));; sig2.push_back(15*pow(E,-0.15));; }; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->Draw(""AL"");; gPad->Update();; c1->SetLogy();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9011#issuecomment-957859532
https://github.com/root-project/root/issues/9011#issuecomment-957859532:221,Usability,simpl,simply,221,"Actually it worked for you because you centred the X title. In the previous macro, remove the X title centring and go to log scale in Y and you will get the problem you discovered. So that's not a regression. The bug fix simply revealed a problem (?) which was hidden by the bug generated by the X title centring. To make it short, with a ROOT version without the patch, try:; ```; {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1) {; x1.push_back(E);; sig1.push_back(10*pow(E,-0.1));; sig2.push_back(15*pow(E,-0.15));; }; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->Draw(""AL"");; gPad->Update();; c1->SetLogy();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9011#issuecomment-957859532
https://github.com/root-project/root/pull/9012#issuecomment-922713482:186,Availability,avail,available,186,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:546,Integrability,protocol,protocols,546,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:740,Integrability,protocol,protocols,740,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:494,Modifiability,plugin,plugin,494,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:313,Security,access,access,313,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:140,Testability,test,test,140,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:217,Testability,test,test,217,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:262,Testability,test,test,262,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:590,Testability,test,tests,590,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:690,Testability,test,tests,690,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:722,Testability,benchmark,benchmark,722,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:824,Testability,test,testing,824,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:367,Usability,simpl,simple,367,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9012#issuecomment-922713482:571,Usability,simpl,simply,571,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482
https://github.com/root-project/root/pull/9015#issuecomment-923867560:74,Usability,simpl,simply,74,- It looks good. Thanks.; - I think for THistPainter::PaintErrors() it is simply missing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9015#issuecomment-923867560
https://github.com/root-project/root/pull/9015#issuecomment-923877185:78,Usability,simpl,simply,78,> * It looks good. Thanks.; > * I think for THistPainter::PaintErrors() it is simply missing. Now the offsets are also implemented for THistPainter::PaintErrors().,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9015#issuecomment-923877185
https://github.com/root-project/root/issues/9023#issuecomment-925569986:219,Usability,clear,clear,219,The `Histo1D` case comes from a pythonization that replaces the original proxy method by a Python function. Perhaps the same pythonization could take care of forwarding to the original method when possible. What is not clear is why `Count` and `Report` do not print docs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9023#issuecomment-925569986
https://github.com/root-project/root/issues/9030#issuecomment-927331768:4216,Energy Efficiency,efficient,efficient,4216,"rging, but the logical steps seem to be equivalent to me. Or I also might be misinterpreting your proposal. No, the approaches are different. In the approach without `RDataFrame::Merge` I save twice the modified trees with the new column added, so the whole thing is slower than the second approach where the looping and saving can be done only once. . > ; > ## Current possible approaches; > If you need to process a dataset with RDF and need to concatenate parts of it, the current best approach is to use the `RDataFrame(TTree &tree)` constructor after having created the correct tree with all the information you need. If for example you need to concatenate vertically 2 or more TTrees (i.e. if all have the same schema with column `a` and you want to append values of the same column into a single entity), than you can create a TChain and add all the trees to it. If you need horizontal concatenation (i.e. the trees have different schema but same number of entries) you can use friends pattern (e.g. `tree.AddFriend`). This has the big advantage that you don't need to merge any of the files/trees together and thus you also don't need to save them again before creating the RDF object. At the same time, once you do create the RDF object with this; concatenated dataset, you will still be able to call `Snapshot` and get practically a ""merged"" dataset in your output file. OK, I agree with this and this is a third approach what you propose. The trees can be added as a chain to the `RDataFrame`, the chain can get branches added with `Define` and then `Snapshot` would make a merged version. This would probably mean looping and saving only once and it is efficient. However what if we have 3 trees in the brach and we need a branch `index` whose value is `1` for the first tree `2` for the second and `3` for the third. How would we do that with `Define`? Stuff like:. ```python; df = df.Define('index', 'GetTreeNumber() + 1'); ```. would not work, right?. Cheers. > ; > Cheers,; > Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768
https://github.com/root-project/root/issues/9030#issuecomment-927331768:569,Integrability,interface,interface,569,"Dear @vepadulano . Thanks for your reply. > Dear @acampove,; > Thanks contacting us. We should probably wait for @eguiraud for a final answer, but I'd like to give my two cents about this.; > ; > > Instances of RDataFrame objects are meant to be treated like trees.; > ; > I am curious about this first sentence. I have never got this impression, neither reading docs / toying with tutorials or doing more complex analyses with RDF. the first line of the [RDF docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html) says `ROOT's RDataFrame offers a high level interface for analyses of data stored in TTree, CSV's and other data formats. `. Just by the fact that I can read and process other formats than TTree I would say that in general RDF is not meant to be treated like a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. I did not refer to the documentation but to how people would actually use this class. 99% of people do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```pytho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768
https://github.com/root-project/root/issues/9030#issuecomment-927331768:1375,Integrability,interface,interface,1375,"doing more complex analyses with RDF. the first line of the [RDF docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html) says `ROOT's RDataFrame offers a high level interface for analyses of data stored in TTree, CSV's and other data formats. `. Just by the fact that I can read and process other formats than TTree I would say that in general RDF is not meant to be treated like a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. I did not refer to the documentation but to how people would actually use this class. 99% of people do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768
https://github.com/root-project/root/issues/9030#issuecomment-927331768:1570,Performance,load,loading,1570,"tored in TTree, CSV's and other data formats. `. Just by the fact that I can read and process other formats than TTree I would say that in general RDF is not meant to be treated like a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. I did not refer to the documentation but to how people would actually use this class. 99% of people do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the new file; > df_3.Snapshot('tree', 'file.root'); > ```; > ; > I admit that I might not be able to see some internal optimizations that RDF might do while merging, but the logical steps seem to be equivalent",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768
https://github.com/root-project/root/issues/9030#issuecomment-927331768:1655,Performance,load,loading,1655,"ike a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. I did not refer to the documentation but to how people would actually use this class. 99% of people do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the new file; > df_3.Snapshot('tree', 'file.root'); > ```; > ; > I admit that I might not be able to see some internal optimizations that RDF might do while merging, but the logical steps seem to be equivalent to me. Or I also might be misinterpreting your proposal. No, the approaches are different. In the approach without `RDataFrame::Merge` I save twice the modified trees with the new",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768
https://github.com/root-project/root/issues/9030#issuecomment-927331768:2026,Performance,load,loading,2026,"e do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the new file; > df_3.Snapshot('tree', 'file.root'); > ```; > ; > I admit that I might not be able to see some internal optimizations that RDF might do while merging, but the logical steps seem to be equivalent to me. Or I also might be misinterpreting your proposal. No, the approaches are different. In the approach without `RDataFrame::Merge` I save twice the modified trees with the new column added, so the whole thing is slower than the second approach where the looping and saving can be done only once. . > ; > ## Current possible approaches; > If you need to process a dataset with RDF and need t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768
https://github.com/root-project/root/issues/9030#issuecomment-927331768:2511,Performance,optimiz,optimizations,2511,"volve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the new file; > df_3.Snapshot('tree', 'file.root'); > ```; > ; > I admit that I might not be able to see some internal optimizations that RDF might do while merging, but the logical steps seem to be equivalent to me. Or I also might be misinterpreting your proposal. No, the approaches are different. In the approach without `RDataFrame::Merge` I save twice the modified trees with the new column added, so the whole thing is slower than the second approach where the looping and saving can be done only once. . > ; > ## Current possible approaches; > If you need to process a dataset with RDF and need to concatenate parts of it, the current best approach is to use the `RDataFrame(TTree &tree)` constructor after having created the correct tree with all the information you need. If for example you need to concatenate vertically 2 or more TTrees (i.e. if all have the same schema with column `a` and you want to append values of the same column into a single entity), than you can create a TChain and add all the trees to it. If you need horizontal concatenation (i.e. the trees have different schema but same number of entries",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768
https://github.com/root-project/root/issues/9030#issuecomment-927331768:2566,Testability,log,logical,2566,"volve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the new file; > df_3.Snapshot('tree', 'file.root'); > ```; > ; > I admit that I might not be able to see some internal optimizations that RDF might do while merging, but the logical steps seem to be equivalent to me. Or I also might be misinterpreting your proposal. No, the approaches are different. In the approach without `RDataFrame::Merge` I save twice the modified trees with the new column added, so the whole thing is slower than the second approach where the looping and saving can be done only once. . > ; > ## Current possible approaches; > If you need to process a dataset with RDF and need to concatenate parts of it, the current best approach is to use the `RDataFrame(TTree &tree)` constructor after having created the correct tree with all the information you need. If for example you need to concatenate vertically 2 or more TTrees (i.e. if all have the same schema with column `a` and you want to append values of the same column into a single entity), than you can create a TChain and add all the trees to it. If you need horizontal concatenation (i.e. the trees have different schema but same number of entries",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768
https://github.com/root-project/root/issues/9030#issuecomment-927331768:1084,Usability,simpl,simple,1084,"@acampove,; > Thanks contacting us. We should probably wait for @eguiraud for a final answer, but I'd like to give my two cents about this.; > ; > > Instances of RDataFrame objects are meant to be treated like trees.; > ; > I am curious about this first sentence. I have never got this impression, neither reading docs / toying with tutorials or doing more complex analyses with RDF. the first line of the [RDF docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html) says `ROOT's RDataFrame offers a high level interface for analyses of data stored in TTree, CSV's and other data formats. `. Just by the fact that I can read and process other formats than TTree I would say that in general RDF is not meant to be treated like a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. I did not refer to the documentation but to how people would actually use this class. 99% of people do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing dat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768
https://github.com/root-project/root/issues/9030#issuecomment-929346153:1364,Integrability,depend,depending,1364,"How would we do that with Define?. Is it not possible to store these indexes in the trees when they are produced? If not, currently you have three possible solutions that I can think of:. - calculate the index from the value of `rdfentry_`, knowing how many entries are in each tree and their ordering inside the TChain; - store some unique identifier in each tree when it's produced (even a timestamp works, and although it's not elegant you don't have to worry about having that same value stored in each event because it will compress almost perfectly, occupying very little extra space on disk). With that unique identifier per tree you can build another tree that serves as a lookup table between id and index. It will have two branches, `id` and `index`, with the first taking the values of the ids of each tree and the second being an index from 0 to nTrees-1. Then you can use `TTree::BuildIndex` and `TChain::AddFriend` to add that lookup table tree as a friend of the original chain and thanks to `BuildIndex` the correct value of `index` will be returned for each event depending on the value of `id` in the original chain. More info at https://root.cern/manual/trees/#indexing-trees; - do a pass on each input tree to calculate whatever other quantities you need to calculate (let's call these trees `aux1`, `aux2` etc.), then make a TChain out of the original trees, another TChain out of the `aux` trees, and then add the second chain as a friend of the first (effectively creating a single large ""virtual"" TTree with everything in it). The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:. ```cpp; df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); ```. where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I exp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-929346153
https://github.com/root-project/root/issues/9030#issuecomment-929346153:19,Usability,simpl,simply,19,"Hi,; assuming that simply producing a single tree to begin with is impossible, I would also recommend to go with a TChain for post-processing. > what if we have 3 trees in the brach and we need a branch index whose value is 1 for the first tree 2 for the second and 3 for the third. How would we do that with Define?. Is it not possible to store these indexes in the trees when they are produced? If not, currently you have three possible solutions that I can think of:. - calculate the index from the value of `rdfentry_`, knowing how many entries are in each tree and their ordering inside the TChain; - store some unique identifier in each tree when it's produced (even a timestamp works, and although it's not elegant you don't have to worry about having that same value stored in each event because it will compress almost perfectly, occupying very little extra space on disk). With that unique identifier per tree you can build another tree that serves as a lookup table between id and index. It will have two branches, `id` and `index`, with the first taking the values of the ids of each tree and the second being an index from 0 to nTrees-1. Then you can use `TTree::BuildIndex` and `TChain::AddFriend` to add that lookup table tree as a friend of the original chain and thanks to `BuildIndex` the correct value of `index` will be returned for each event depending on the value of `id` in the original chain. More info at https://root.cern/manual/trees/#indexing-trees; - do a pass on each input tree to calculate whatever other quantities you need to calculate (let's call these trees `aux1`, `aux2` etc.), then make a TChain out of the original trees, another TChain out of the `aux` trees, and then add the second chain as a friend of the first (effectively creating a single large ""virtual"" TTree with everything in it). The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-929346153
https://github.com/root-project/root/issues/9030#issuecomment-929346153:1838,Usability,simpl,simplest,1838,"o store these indexes in the trees when they are produced? If not, currently you have three possible solutions that I can think of:. - calculate the index from the value of `rdfentry_`, knowing how many entries are in each tree and their ordering inside the TChain; - store some unique identifier in each tree when it's produced (even a timestamp works, and although it's not elegant you don't have to worry about having that same value stored in each event because it will compress almost perfectly, occupying very little extra space on disk). With that unique identifier per tree you can build another tree that serves as a lookup table between id and index. It will have two branches, `id` and `index`, with the first taking the values of the ids of each tree and the second being an index from 0 to nTrees-1. Then you can use `TTree::BuildIndex` and `TChain::AddFriend` to add that lookup table tree as a friend of the original chain and thanks to `BuildIndex` the correct value of `index` will be returned for each event depending on the value of `id` in the original chain. More info at https://root.cern/manual/trees/#indexing-trees; - do a pass on each input tree to calculate whatever other quantities you need to calculate (let's call these trees `aux1`, `aux2` etc.), then make a TChain out of the original trees, another TChain out of the `aux` trees, and then add the second chain as a friend of the first (effectively creating a single large ""virtual"" TTree with everything in it). The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:. ```cpp; df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); ```. where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-929346153
https://github.com/root-project/root/issues/9030#issuecomment-932494638:4772,Availability,alive,alive,4772," ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or tomorrow. So we would have to create a `GetIndex` function to extract from the ""filename/treename"" the index? Yes, that would make my code far simpler. However it might take months until that is available through CVMFS. In any case, the simpler our code gets, the better, fewer places for bugs to hide. Cheers and thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638
https://github.com/root-project/root/issues/9030#issuecomment-932494638:5508,Availability,avail,available,5508," ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or tomorrow. So we would have to create a `GetIndex` function to extract from the ""filename/treename"" the index? Yes, that would make my code far simpler. However it might take months until that is available through CVMFS. In any case, the simpler our code gets, the better, fewer places for bugs to hide. Cheers and thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638
https://github.com/root-project/root/issues/9030#issuecomment-932494638:1807,Integrability,depend,depending,1807,"e grid. We do need to postprocess these ntuples anyway, so the idea is to slip in a small function to add this index. ; > ; > * calculate the index from the value of `rdfentry_`, knowing how many entries are in each tree and their ordering inside the TChain. It is dangerous and requires adding too many lines of code. > * store some unique identifier in each tree when it's produced (even a timestamp works, and although it's not elegant you don't have to worry about having that same value stored in each event because it will compress almost perfectly, occupying very little extra space on disk). With that unique identifier per tree you can build another tree that serves as a lookup table between id and index. It will have two branches, `id` and `index`, with the first taking the values of the ids of each tree and the second being an index from 0 to nTrees-1. Then you can use `TTree::BuildIndex` and `TChain::AddFriend` to add that lookup table tree as a friend of the original chain and thanks to `BuildIndex` the correct value of `index` will be returned for each event depending on the value of `id` in the original chain. More info at https://root.cern/manual/trees/#indexing-trees. We would have to run again all the jobs in the grid to store a unique ID. However the name of the file identifies it, so we deduce the index with the filename. The rest of the solution is close to what I did below.; ; > * do a pass on each input tree to calculate whatever other quantities you need to calculate (let's call these trees `aux1`, `aux2` etc.), then make a TChain out of the original trees, another TChain out of the `aux` trees, and then add the second chain as a friend of the first (effectively creating a single large ""virtual"" TTree with everything in it). OK, that is closer to what we need, I managed to get the code below to add these indexes in a slightly different way from what you said (or maybe the same if I misunderstood you), i.e. using chains and friend trees:. ```python; im",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638
https://github.com/root-project/root/issues/9030#issuecomment-932494638:4286,Safety,safe,safe,4286,"yDataFrame({id_column: arr_id}); df_id.Snapshot(treename, idfilepath). ch_data = ROOT.TChain(treename, '') ; for _, filepath in l_tp_file:; ch_data.Add(filepath). size_ch = ch_data.GetEntries(); size_id = arr_id.size. if size_ch != size_id:; print('Different id and chain sizes: {}/{}'.format(size_id, size_ch)); raise. ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638
https://github.com/root-project/root/issues/9030#issuecomment-932494638:3778,Testability,test,test,3778,"r(val); filepath = '/tmp/file_{}.root'.format(val). df=ROOT.RDataFrame(2); df=df.Define('a', val); df.Snapshot('tree', filepath). return filepath; #------------------------------------------; def get_df(l_tp_file, treename, id_column='index'):; l_index = []; for index, filepath in l_tp_file:; df=ROOT.RDataFrame(treename, filepath); nentries = df.Count().GetValue(); l_index += nentries * [index]. arr_id = numpy.array(l_index). idfilepath = '/tmp/file_id.root'; df_id = ROOT.RDF.MakeNumpyDataFrame({id_column: arr_id}); df_id.Snapshot(treename, idfilepath). ch_data = ROOT.TChain(treename, '') ; for _, filepath in l_tp_file:; ch_data.Add(filepath). size_ch = ch_data.GetEntries(); size_id = arr_id.size. if size_ch != size_id:; print('Different id and chain sizes: {}/{}'.format(size_id, size_ch)); raise. ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: wi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638
https://github.com/root-project/root/issues/9030#issuecomment-932494638:4210,Testability,test,test,4210,"e(); l_index += nentries * [index]. arr_id = numpy.array(l_index). idfilepath = '/tmp/file_id.root'; df_id = ROOT.RDF.MakeNumpyDataFrame({id_column: arr_id}); df_id.Snapshot(treename, idfilepath). ch_data = ROOT.TChain(treename, '') ; for _, filepath in l_tp_file:; ch_data.Add(filepath). size_ch = ch_data.GetEntries(); size_id = arr_id.size. if size_ch != size_id:; print('Different id and chain sizes: {}/{}'.format(size_id, size_ch)); raise. ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638
https://github.com/root-project/root/issues/9030#issuecomment-932494638:25,Usability,simpl,simply,25,"Hi,. > Hi, assuming that simply producing a single tree to begin with is impossible, I would also recommend to go with a TChain for post-processing. These trees are produced from jobs in the grid, it is not possible to produce a single file.; > ; > > what if we have 3 trees in the brach and we need a branch index whose value is 1 for the first tree 2 for the second and 3 for the third. How would we do that with Define?; > ; > Is it not possible to store these indexes in the trees when they are produced? If not, currently you have three possible solutions that I can think of:. It is possible to do that. However those trees do not have those indexes and in order to add them we would need to rerun hundreds of jobs in the grid. We do need to postprocess these ntuples anyway, so the idea is to slip in a small function to add this index. ; > ; > * calculate the index from the value of `rdfentry_`, knowing how many entries are in each tree and their ordering inside the TChain. It is dangerous and requires adding too many lines of code. > * store some unique identifier in each tree when it's produced (even a timestamp works, and although it's not elegant you don't have to worry about having that same value stored in each event because it will compress almost perfectly, occupying very little extra space on disk). With that unique identifier per tree you can build another tree that serves as a lookup table between id and index. It will have two branches, `id` and `index`, with the first taking the values of the ids of each tree and the second being an index from 0 to nTrees-1. Then you can use `TTree::BuildIndex` and `TChain::AddFriend` to add that lookup table tree as a friend of the original chain and thanks to `BuildIndex` the correct value of `index` will be returned for each event depending on the value of `id` in the original chain. More info at https://root.cern/manual/trees/#indexing-trees. We would have to run again all the jobs in the grid to store a unique ID. Howev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638
https://github.com/root-project/root/issues/9030#issuecomment-932494638:4806,Usability,simpl,simplest,4806," ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or tomorrow. So we would have to create a `GetIndex` function to extract from the ""filename/treename"" the index? Yes, that would make my code far simpler. However it might take months until that is available through CVMFS. In any case, the simpler our code gets, the better, fewer places for bugs to hide. Cheers and thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638
https://github.com/root-project/root/issues/9030#issuecomment-932494638:5456,Usability,simpl,simpler,5456," ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or tomorrow. So we would have to create a `GetIndex` function to extract from the ""filename/treename"" the index? Yes, that would make my code far simpler. However it might take months until that is available through CVMFS. In any case, the simpler our code gets, the better, fewer places for bugs to hide. Cheers and thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638
https://github.com/root-project/root/issues/9030#issuecomment-932494638:5550,Usability,simpl,simpler,5550," ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or tomorrow. So we would have to create a `GetIndex` function to extract from the ""filename/treename"" the index? Yes, that would make my code far simpler. However it might take months until that is available through CVMFS. In any case, the simpler our code gets, the better, fewer places for bugs to hide. Cheers and thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638
https://github.com/root-project/root/issues/9036#issuecomment-933532217:165,Integrability,depend,depending,165,"I have not yet tried building llvm. Will try later this week. nvc++ has an implementation for std::par which allows seamless execution of both CPUs and NVIDIA GPUs (depending on a compile time flag). This could be a huge win for GPU portability (once other manufactures create the AMD/Intel backends), and allows much simpler user access to GPUs without having to learn CUDA (or hip, dpc++, etc). I was trying to compile some parts of a project with gcc and the bits that use std::par with nvc++, but immediately got some runtime segfaults at startup, so tried to compile the whole thing (including ROOT) with nvc++.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036#issuecomment-933532217
https://github.com/root-project/root/issues/9036#issuecomment-933532217:233,Modifiability,portab,portability,233,"I have not yet tried building llvm. Will try later this week. nvc++ has an implementation for std::par which allows seamless execution of both CPUs and NVIDIA GPUs (depending on a compile time flag). This could be a huge win for GPU portability (once other manufactures create the AMD/Intel backends), and allows much simpler user access to GPUs without having to learn CUDA (or hip, dpc++, etc). I was trying to compile some parts of a project with gcc and the bits that use std::par with nvc++, but immediately got some runtime segfaults at startup, so tried to compile the whole thing (including ROOT) with nvc++.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036#issuecomment-933532217
https://github.com/root-project/root/issues/9036#issuecomment-933532217:331,Security,access,access,331,"I have not yet tried building llvm. Will try later this week. nvc++ has an implementation for std::par which allows seamless execution of both CPUs and NVIDIA GPUs (depending on a compile time flag). This could be a huge win for GPU portability (once other manufactures create the AMD/Intel backends), and allows much simpler user access to GPUs without having to learn CUDA (or hip, dpc++, etc). I was trying to compile some parts of a project with gcc and the bits that use std::par with nvc++, but immediately got some runtime segfaults at startup, so tried to compile the whole thing (including ROOT) with nvc++.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036#issuecomment-933532217
https://github.com/root-project/root/issues/9036#issuecomment-933532217:318,Usability,simpl,simpler,318,"I have not yet tried building llvm. Will try later this week. nvc++ has an implementation for std::par which allows seamless execution of both CPUs and NVIDIA GPUs (depending on a compile time flag). This could be a huge win for GPU portability (once other manufactures create the AMD/Intel backends), and allows much simpler user access to GPUs without having to learn CUDA (or hip, dpc++, etc). I was trying to compile some parts of a project with gcc and the bits that use std::par with nvc++, but immediately got some runtime segfaults at startup, so tried to compile the whole thing (including ROOT) with nvc++.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036#issuecomment-933532217
https://github.com/root-project/root/issues/9036#issuecomment-933532217:364,Usability,learn,learn,364,"I have not yet tried building llvm. Will try later this week. nvc++ has an implementation for std::par which allows seamless execution of both CPUs and NVIDIA GPUs (depending on a compile time flag). This could be a huge win for GPU portability (once other manufactures create the AMD/Intel backends), and allows much simpler user access to GPUs without having to learn CUDA (or hip, dpc++, etc). I was trying to compile some parts of a project with gcc and the bits that use std::par with nvc++, but immediately got some runtime segfaults at startup, so tried to compile the whole thing (including ROOT) with nvc++.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036#issuecomment-933532217
https://github.com/root-project/root/pull/9066#issuecomment-933646782:620,Testability,test,tests,620,"Build failed on ROOT-fedora34/default.; Running on root-fedora34-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/console).; ### Warnings:; - [2021-10-04T15:57:57.930Z] /home/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9066#issuecomment-933646782
https://github.com/root-project/root/pull/9066#issuecomment-933646782:802,Testability,test,testReport,802,"Build failed on ROOT-fedora34/default.; Running on root-fedora34-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/console).; ### Warnings:; - [2021-10-04T15:57:57.930Z] /home/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9066#issuecomment-933646782
https://github.com/root-project/root/pull/9066#issuecomment-933646782:1075,Testability,test,testReport,1075,"Build failed on ROOT-fedora34/default.; Running on root-fedora34-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/console).; ### Warnings:; - [2021-10-04T15:57:57.930Z] /home/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9066#issuecomment-933646782
https://github.com/root-project/root/pull/9066#issuecomment-933646782:1344,Testability,test,testReport,1344,"Build failed on ROOT-fedora34/default.; Running on root-fedora34-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/console).; ### Warnings:; - [2021-10-04T15:57:57.930Z] /home/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9066#issuecomment-933646782
https://github.com/root-project/root/pull/9066#issuecomment-933646782:1603,Testability,test,testReport,1603,"Build failed on ROOT-fedora34/default.; Running on root-fedora34-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/console).; ### Warnings:; - [2021-10-04T15:57:57.930Z] /home/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9066#issuecomment-933646782
https://github.com/root-project/root/pull/9066#issuecomment-933646782:435,Usability,clear,clearing,435,"Build failed on ROOT-fedora34/default.; Running on root-fedora34-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/console).; ### Warnings:; - [2021-10-04T15:57:57.930Z] /home/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9066#issuecomment-933646782
https://github.com/root-project/root/pull/9067#issuecomment-934265717:1242,Testability,test,tests,1242,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126788/console).; ### Warnings:; - [2021-10-05T07:51:00.677Z] ghprbPullLongDescription=Should fix the following compilation warnings with `gcc 11` and the current `builtin_tbb`:\r\n```\r\nIn file included from ginclude/tbb/tbb.h:48,\r\n from /home/vpadulan/Programs/rootproject/root/core/imt/src/TThreadExecutor.cxx:10:\r\nginclude/tbb/concurrent_hash_map.h: In constructor 'tbb::interface5::internal::hash_map_base::hash_map_base()':\r\nginclude/tbb/concurrent_hash_map.h:131:24: warning: 'void* memset(void*, int, size_t)' clearing an object of type 'struct tbb::interface5::internal::hash_map_base::bucket' with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]\r\n 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));\r\n | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nginclude/tbb/concurrent_hash_map.h:93:16: note: 'struct tbb::interface5::internal::hash_map_base::bucket' declared here\r\n 93 | struct bucket : tbb::internal::no_copy {\r\n | ^~~~~~\r\n```\r\n . ### Failing tests:; - [projectroot.roottest.python.function.roottest_python_function_function](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126788/testReport/projectroot.roottest.python/function/roottest_python_function_function/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9067#issuecomment-934265717
https://github.com/root-project/root/pull/9067#issuecomment-934265717:1405,Testability,test,testReport,1405,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126788/console).; ### Warnings:; - [2021-10-05T07:51:00.677Z] ghprbPullLongDescription=Should fix the following compilation warnings with `gcc 11` and the current `builtin_tbb`:\r\n```\r\nIn file included from ginclude/tbb/tbb.h:48,\r\n from /home/vpadulan/Programs/rootproject/root/core/imt/src/TThreadExecutor.cxx:10:\r\nginclude/tbb/concurrent_hash_map.h: In constructor 'tbb::interface5::internal::hash_map_base::hash_map_base()':\r\nginclude/tbb/concurrent_hash_map.h:131:24: warning: 'void* memset(void*, int, size_t)' clearing an object of type 'struct tbb::interface5::internal::hash_map_base::bucket' with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]\r\n 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));\r\n | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nginclude/tbb/concurrent_hash_map.h:93:16: note: 'struct tbb::interface5::internal::hash_map_base::bucket' declared here\r\n 93 | struct bucket : tbb::internal::no_copy {\r\n | ^~~~~~\r\n```\r\n . ### Failing tests:; - [projectroot.roottest.python.function.roottest_python_function_function](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126788/testReport/projectroot.roottest.python/function/roottest_python_function_function/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9067#issuecomment-934265717
https://github.com/root-project/root/pull/9067#issuecomment-934265717:713,Usability,clear,clearing,713,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126788/console).; ### Warnings:; - [2021-10-05T07:51:00.677Z] ghprbPullLongDescription=Should fix the following compilation warnings with `gcc 11` and the current `builtin_tbb`:\r\n```\r\nIn file included from ginclude/tbb/tbb.h:48,\r\n from /home/vpadulan/Programs/rootproject/root/core/imt/src/TThreadExecutor.cxx:10:\r\nginclude/tbb/concurrent_hash_map.h: In constructor 'tbb::interface5::internal::hash_map_base::hash_map_base()':\r\nginclude/tbb/concurrent_hash_map.h:131:24: warning: 'void* memset(void*, int, size_t)' clearing an object of type 'struct tbb::interface5::internal::hash_map_base::bucket' with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]\r\n 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));\r\n | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nginclude/tbb/concurrent_hash_map.h:93:16: note: 'struct tbb::interface5::internal::hash_map_base::bucket' declared here\r\n 93 | struct bucket : tbb::internal::no_copy {\r\n | ^~~~~~\r\n```\r\n . ### Failing tests:; - [projectroot.roottest.python.function.roottest_python_function_function](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126788/testReport/projectroot.roottest.python/function/roottest_python_function_function/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9067#issuecomment-934265717
https://github.com/root-project/root/pull/9078#issuecomment-981617370:296,Availability,failure,failures,296,"@egpbos Given my [comment](https://github.com/root-project/root/pull/8385#issuecomment-870570029) in your previous merge request, I am quite disappointed to learn that this has been merged as enabled by default when it depends on a yet unreleased version of ZeroMQ. This, for example, has caused failures in pretty much all the LCG builds today: https://cdash.cern.ch/index.php?project=LCGSoft&date=2021-11-29. Please disable `roofit_multiprocess` by default and re-enable it only when a *released version* of ZeroMQ has the functionality you need, adding the proper version in your call to `find_package()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981617370
https://github.com/root-project/root/pull/9078#issuecomment-981617370:489,Deployability,release,released,489,"@egpbos Given my [comment](https://github.com/root-project/root/pull/8385#issuecomment-870570029) in your previous merge request, I am quite disappointed to learn that this has been merged as enabled by default when it depends on a yet unreleased version of ZeroMQ. This, for example, has caused failures in pretty much all the LCG builds today: https://cdash.cern.ch/index.php?project=LCGSoft&date=2021-11-29. Please disable `roofit_multiprocess` by default and re-enable it only when a *released version* of ZeroMQ has the functionality you need, adding the proper version in your call to `find_package()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981617370
https://github.com/root-project/root/pull/9078#issuecomment-981617370:219,Integrability,depend,depends,219,"@egpbos Given my [comment](https://github.com/root-project/root/pull/8385#issuecomment-870570029) in your previous merge request, I am quite disappointed to learn that this has been merged as enabled by default when it depends on a yet unreleased version of ZeroMQ. This, for example, has caused failures in pretty much all the LCG builds today: https://cdash.cern.ch/index.php?project=LCGSoft&date=2021-11-29. Please disable `roofit_multiprocess` by default and re-enable it only when a *released version* of ZeroMQ has the functionality you need, adding the proper version in your call to `find_package()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981617370
https://github.com/root-project/root/pull/9078#issuecomment-981617370:157,Usability,learn,learn,157,"@egpbos Given my [comment](https://github.com/root-project/root/pull/8385#issuecomment-870570029) in your previous merge request, I am quite disappointed to learn that this has been merged as enabled by default when it depends on a yet unreleased version of ZeroMQ. This, for example, has caused failures in pretty much all the LCG builds today: https://cdash.cern.ch/index.php?project=LCGSoft&date=2021-11-29. Please disable `roofit_multiprocess` by default and re-enable it only when a *released version* of ZeroMQ has the functionality you need, adding the proper version in your call to `find_package()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981617370
https://github.com/root-project/root/issues/9087#issuecomment-951644988:16,Availability,error,error,16,"The compilation error seems to be due to a mismatch between the toolchain that was used to compile ROOT and the toolchain you are using to compile your program (e.g. different glibc version). I don't know enough about nixOS to suggest a fix. The massif output shows little memory usage (`mem_heap_B=72938`). Can you try using `root.exe` instead of `root` as the command? By removing one layer of indirection we might help massif see things properly (but of course if we can run on a compiled program rather than through the interpreter it makes everything simpler). Cheers,; Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9087#issuecomment-951644988
https://github.com/root-project/root/issues/9087#issuecomment-951644988:556,Usability,simpl,simpler,556,"The compilation error seems to be due to a mismatch between the toolchain that was used to compile ROOT and the toolchain you are using to compile your program (e.g. different glibc version). I don't know enough about nixOS to suggest a fix. The massif output shows little memory usage (`mem_heap_B=72938`). Can you try using `root.exe` instead of `root` as the command? By removing one layer of indirection we might help massif see things properly (but of course if we can run on a compiled program rather than through the interpreter it makes everything simpler). Cheers,; Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9087#issuecomment-951644988
https://github.com/root-project/root/pull/9089#issuecomment-950711308:368,Availability,error,error,368,"> After the discussion at #8828 I have the impression that this shouldn't get merged. We might want to have an `Error()` call or similar instead. @hahnjo what's your opinion?. Yes, I wasn't sure either. I think Cling shouldn't crash (fixed for now with #9093), but because of the ambiguity of `std::ns` and `::ns`, I agree it would be more ""user-friendly"" to directly error out if a user tries to define a namespace that exists below `std::`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9089#issuecomment-950711308
https://github.com/root-project/root/pull/9089#issuecomment-950711308:341,Usability,user-friendly,user-friendly,341,"> After the discussion at #8828 I have the impression that this shouldn't get merged. We might want to have an `Error()` call or similar instead. @hahnjo what's your opinion?. Yes, I wasn't sure either. I think Cling shouldn't crash (fixed for now with #9093), but because of the ambiguity of `std::ns` and `::ns`, I agree it would be more ""user-friendly"" to directly error out if a user tries to define a namespace that exists below `std::`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9089#issuecomment-950711308
https://github.com/root-project/root/issues/9106#issuecomment-944297935:183,Availability,error,error,183,"@dudarboh the friend tree has less entries than the main tree. I think that's what's causing the problem. We should definitely have better diagnostics for this (i.e. give you a clear error message rather than the error you see), but this is not a supported usecase. . I could not reproduce the issue when truncating the tree in `test_default.root` to the same amount of entries as the friend. Can you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944297935
https://github.com/root-project/root/issues/9106#issuecomment-944297935:213,Availability,error,error,213,"@dudarboh the friend tree has less entries than the main tree. I think that's what's causing the problem. We should definitely have better diagnostics for this (i.e. give you a clear error message rather than the error you see), but this is not a supported usecase. . I could not reproduce the issue when truncating the tree in `test_default.root` to the same amount of entries as the friend. Can you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944297935
https://github.com/root-project/root/issues/9106#issuecomment-944297935:189,Integrability,message,message,189,"@dudarboh the friend tree has less entries than the main tree. I think that's what's causing the problem. We should definitely have better diagnostics for this (i.e. give you a clear error message rather than the error you see), but this is not a supported usecase. . I could not reproduce the issue when truncating the tree in `test_default.root` to the same amount of entries as the friend. Can you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944297935
https://github.com/root-project/root/issues/9106#issuecomment-944297935:177,Usability,clear,clear,177,"@dudarboh the friend tree has less entries than the main tree. I think that's what's causing the problem. We should definitely have better diagnostics for this (i.e. give you a clear error message rather than the error you see), but this is not a supported usecase. . I could not reproduce the issue when truncating the tree in `test_default.root` to the same amount of entries as the friend. Can you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944297935
https://github.com/root-project/root/issues/9106#issuecomment-944305281:304,Availability,error,error,304,"> @SClarkPhysics that's also with friends and multi-threading, and disappearing if you don't use friends or turn off multi-threading (or both)?. No, my issue seems a bit different and I am still investigating to see when it happens. I am **not** using multiprocessing or friends but am still getting the error "" Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy. ""; Not exactly sure how to recreate the error yet so I need to do some investigating on my own, but it definitely doesn't happen on every file I run over and it seems that it may be related to one of the custom cpp functions I am using to define a new column. Can report back when I learn a bit more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944305281
https://github.com/root-project/root/issues/9106#issuecomment-944305281:363,Availability,error,error,363,"> @SClarkPhysics that's also with friends and multi-threading, and disappearing if you don't use friends or turn off multi-threading (or both)?. No, my issue seems a bit different and I am still investigating to see when it happens. I am **not** using multiprocessing or friends but am still getting the error "" Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy. ""; Not exactly sure how to recreate the error yet so I need to do some investigating on my own, but it definitely doesn't happen on every file I run over and it seems that it may be related to one of the custom cpp functions I am using to define a new column. Can report back when I learn a bit more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944305281
https://github.com/root-project/root/issues/9106#issuecomment-944305281:426,Availability,error,error,426,"> @SClarkPhysics that's also with friends and multi-threading, and disappearing if you don't use friends or turn off multi-threading (or both)?. No, my issue seems a bit different and I am still investigating to see when it happens. I am **not** using multiprocessing or friends but am still getting the error "" Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy. ""; Not exactly sure how to recreate the error yet so I need to do some investigating on my own, but it definitely doesn't happen on every file I run over and it seems that it may be related to one of the custom cpp functions I am using to define a new column. Can report back when I learn a bit more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944305281
https://github.com/root-project/root/issues/9106#issuecomment-944305281:46,Performance,multi-thread,multi-threading,46,"> @SClarkPhysics that's also with friends and multi-threading, and disappearing if you don't use friends or turn off multi-threading (or both)?. No, my issue seems a bit different and I am still investigating to see when it happens. I am **not** using multiprocessing or friends but am still getting the error "" Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy. ""; Not exactly sure how to recreate the error yet so I need to do some investigating on my own, but it definitely doesn't happen on every file I run over and it seems that it may be related to one of the custom cpp functions I am using to define a new column. Can report back when I learn a bit more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944305281
https://github.com/root-project/root/issues/9106#issuecomment-944305281:117,Performance,multi-thread,multi-threading,117,"> @SClarkPhysics that's also with friends and multi-threading, and disappearing if you don't use friends or turn off multi-threading (or both)?. No, my issue seems a bit different and I am still investigating to see when it happens. I am **not** using multiprocessing or friends but am still getting the error "" Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy. ""; Not exactly sure how to recreate the error yet so I need to do some investigating on my own, but it definitely doesn't happen on every file I run over and it seems that it may be related to one of the custom cpp functions I am using to define a new column. Can report back when I learn a bit more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944305281
https://github.com/root-project/root/issues/9106#issuecomment-944305281:669,Usability,learn,learn,669,"> @SClarkPhysics that's also with friends and multi-threading, and disappearing if you don't use friends or turn off multi-threading (or both)?. No, my issue seems a bit different and I am still investigating to see when it happens. I am **not** using multiprocessing or friends but am still getting the error "" Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy. ""; Not exactly sure how to recreate the error yet so I need to do some investigating on my own, but it definitely doesn't happen on every file I run over and it seems that it may be related to one of the custom cpp functions I am using to define a new column. Can report back when I learn a bit more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944305281
https://github.com/root-project/root/issues/9116#issuecomment-944081398:95,Usability,simpl,simply,95,"Okay, having (`---`) between the lines looks good. Now for the left-most column, naively I can simply count rows. Alternatively, I can store the length of the longest collection, say 3. And then my left column would contain [0,1,2,0,1,2,0,1,2,0...]. Which alternative would be more useful in your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9116#issuecomment-944081398
https://github.com/root-project/root/pull/9128#issuecomment-957360673:144,Usability,clear,clear,144,"I like this decorator and I'm planning to use it wherever I can. I would have preferred a pattern rather than a prefix, but you made your point clear and I think I can work with what you propose. About the `name` argument, if inside the code you invoke the user function as `fn(klass, name=name)` then it becomes a user choice whether to use it or not.; In any case I'm not convinced that bare class name is very useful, I feel I would be more interested in the fully qualified name... and actually in all places you use `name` is for a class in the global namespace, and the only time you have to deal with a class in a namespace (`std::string`) you have to use `klass.__cpp_name__`, so if you change `name` to be the fully qualified version you can *fix* the only exception. Also, I'm not too much in favor of suggesting people to use *private* data members of a Python class, even if we know that it's always there (for the moment).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9128#issuecomment-957360673
https://github.com/root-project/root/pull/9128#issuecomment-982514902:510,Usability,clear,clear,510,"The last comments from @pikacic and @eguiraud have been addressed, namely:; - Possibility to define pythonizor functions with either one parameter (class proxy) or two parameters (class proxy and fully-qualified name of the class).; - Support for immediate pythonizations of classes that have already been used at the time of the registration of a pythonization.; - Prevent confusion with `is_prefix=True` not matching classes in nested namespaces. Now a separate parameter for the namespace exists to make it clear that pythonizors are applied to a certain namespace (default is global namespace), e.g.:; ```python; @pythonization(""RVec<"", ns=""ROOT::VecOps"", is_prefix=True); def pythonizor_RVec(klass, name):; ...; ```. Note that multiple `@pythonization` decorators can be stacked if a pythonizor targets classes in multiple namespaces:; ```python; @pythonization(""A""); @pythonization(""B"", ns=""NS""); def pythonizor_for_A_and_NS_B(klass):; ...; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9128#issuecomment-982514902
https://github.com/root-project/root/issues/9137#issuecomment-1173061495:391,Availability,error,error,391,"I see that this is a bug leading unwanted behaviour for TTree itself. However, I *think* we should be able to apply a fix from the RDF side.; * The TTreeProcessorMT, and hence for RDF with EnableImplicitMT solution is very clear: in fact when we have friends, we will be creating the clusters globally, and hence we will be calling `GetFriendEntries` defined in TTreeProcessorMT.cxx. We can error out whenever there is a friend with less entries than the main chain. Clearly, the check would not require opening extra files. Additional benefit ==> this is checked before the event loop.; * For single threaded cases, it is not so obvious, but there are 2 steps that could be done:; 	* Teach the RLoopManager to always understand the fFriendInfo (which was introduced by the RDatasetSpec) from InteralTreeUtils.; 	* Once that is done, GetEntries(friend_chain_name) after the event loop ==> user pays the cost of (maybe erroring for) short friends in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9137#issuecomment-1173061495
https://github.com/root-project/root/issues/9137#issuecomment-1173061495:918,Availability,error,erroring,918,"I see that this is a bug leading unwanted behaviour for TTree itself. However, I *think* we should be able to apply a fix from the RDF side.; * The TTreeProcessorMT, and hence for RDF with EnableImplicitMT solution is very clear: in fact when we have friends, we will be creating the clusters globally, and hence we will be calling `GetFriendEntries` defined in TTreeProcessorMT.cxx. We can error out whenever there is a friend with less entries than the main chain. Clearly, the check would not require opening extra files. Additional benefit ==> this is checked before the event loop.; * For single threaded cases, it is not so obvious, but there are 2 steps that could be done:; 	* Teach the RLoopManager to always understand the fFriendInfo (which was introduced by the RDatasetSpec) from InteralTreeUtils.; 	* Once that is done, GetEntries(friend_chain_name) after the event loop ==> user pays the cost of (maybe erroring for) short friends in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9137#issuecomment-1173061495
https://github.com/root-project/root/issues/9137#issuecomment-1173061495:223,Usability,clear,clear,223,"I see that this is a bug leading unwanted behaviour for TTree itself. However, I *think* we should be able to apply a fix from the RDF side.; * The TTreeProcessorMT, and hence for RDF with EnableImplicitMT solution is very clear: in fact when we have friends, we will be creating the clusters globally, and hence we will be calling `GetFriendEntries` defined in TTreeProcessorMT.cxx. We can error out whenever there is a friend with less entries than the main chain. Clearly, the check would not require opening extra files. Additional benefit ==> this is checked before the event loop.; * For single threaded cases, it is not so obvious, but there are 2 steps that could be done:; 	* Teach the RLoopManager to always understand the fFriendInfo (which was introduced by the RDatasetSpec) from InteralTreeUtils.; 	* Once that is done, GetEntries(friend_chain_name) after the event loop ==> user pays the cost of (maybe erroring for) short friends in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9137#issuecomment-1173061495
https://github.com/root-project/root/pull/9142#issuecomment-946778407:44,Safety,avoid,avoid,44,"> My general comment is that I would try to avoid doing a plain copy of code that is somewhere else.; > ; > I checked `rootx/src/rootx.cxx` and it not only parses `--notebook`, but also several other options such as `-b`, `-l`, etc. This makes me wonder: is `rootx/src/rootx.cxx` the right place to parse options or it's not?; > ; > Also, is there a place where options are parsed no matter the platform? If yes, we should put there the code for `--notebook`, shouldn't we?. `rootx` is used to create the `root` executable, which then may call `root.exe`. One cannot do that on Windows, we can only have one root executable, which is `root.exe`. Now, if someone find another, better solution, fine with me. As I said, this is the simplest and less intrusive solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9142#issuecomment-946778407
https://github.com/root-project/root/pull/9142#issuecomment-946778407:730,Usability,simpl,simplest,730,"> My general comment is that I would try to avoid doing a plain copy of code that is somewhere else.; > ; > I checked `rootx/src/rootx.cxx` and it not only parses `--notebook`, but also several other options such as `-b`, `-l`, etc. This makes me wonder: is `rootx/src/rootx.cxx` the right place to parse options or it's not?; > ; > Also, is there a place where options are parsed no matter the platform? If yes, we should put there the code for `--notebook`, shouldn't we?. `rootx` is used to create the `root` executable, which then may call `root.exe`. One cannot do that on Windows, we can only have one root executable, which is `root.exe`. Now, if someone find another, better solution, fine with me. As I said, this is the simplest and less intrusive solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9142#issuecomment-946778407
https://github.com/root-project/root/issues/9154#issuecomment-951163261:48,Safety,safe,safe,48,"The code in TTree is known to not be ""exception safe"" (it was written before exceptions were usable in practice), so it should never throw any exception . But also it should not interfere and should not change the return value of GetEntry. If I understood correctly and just catching the exception is changing the return value, could you confirm that it does so ""also"" in C++?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9154#issuecomment-951163261
https://github.com/root-project/root/issues/9154#issuecomment-951163261:93,Usability,usab,usable,93,"The code in TTree is known to not be ""exception safe"" (it was written before exceptions were usable in practice), so it should never throw any exception . But also it should not interfere and should not change the return value of GetEntry. If I understood correctly and just catching the exception is changing the return value, could you confirm that it does so ""also"" in C++?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9154#issuecomment-951163261
https://github.com/root-project/root/pull/9156#issuecomment-1812203134:16,Usability,feedback,feedback,16,@guitargeek any feedback on this one? Shall I rebase and run clang-format? Thanks in advance!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812203134
https://github.com/root-project/root/pull/9156#issuecomment-1812443312:110,Testability,test,tests,110,"Hi! No that's alright, we don't enforce the formatting of old code. Also a rebase is not necessary, since the tests all passed and the PR would merge fine. Just a note: probably the PR was unattended for so long because the usecase for this feature was not clear (or you needed it in your project?). Now that we have it, we might as well merge it, but for the future try to focus more on addressing concrete use needs or improving the ROOT developer experience (like you did in many other PRs).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812443312
https://github.com/root-project/root/pull/9156#issuecomment-1812443312:257,Usability,clear,clear,257,"Hi! No that's alright, we don't enforce the formatting of old code. Also a rebase is not necessary, since the tests all passed and the PR would merge fine. Just a note: probably the PR was unattended for so long because the usecase for this feature was not clear (or you needed it in your project?). Now that we have it, we might as well merge it, but for the future try to focus more on addressing concrete use needs or improving the ROOT developer experience (like you did in many other PRs).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812443312
https://github.com/root-project/root/pull/9156#issuecomment-1812527084:112,Testability,test,tests,112,"> Hi! No that's alright, we don't enforce the formatting of old code. Also a rebase is not necessary, since the tests all passed and the PR would merge fine.; > ; > Just a note: probably the PR was unattended for so long because the usecase for this feature was not clear (or you needed it in your project?). Now that we have it, we might as well merge it, but for the future try to focus more on addressing concrete use needs or improving the ROOT developer experience (like you did in many other PRs). Thanks for the feedback!. It was a feature needed for my project. Because it took long, I used a workaround with a TGLabel class, so I did not insist much either, but for the future I will make it more clear what the usecase is :). Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812527084
https://github.com/root-project/root/pull/9156#issuecomment-1812527084:266,Usability,clear,clear,266,"> Hi! No that's alright, we don't enforce the formatting of old code. Also a rebase is not necessary, since the tests all passed and the PR would merge fine.; > ; > Just a note: probably the PR was unattended for so long because the usecase for this feature was not clear (or you needed it in your project?). Now that we have it, we might as well merge it, but for the future try to focus more on addressing concrete use needs or improving the ROOT developer experience (like you did in many other PRs). Thanks for the feedback!. It was a feature needed for my project. Because it took long, I used a workaround with a TGLabel class, so I did not insist much either, but for the future I will make it more clear what the usecase is :). Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812527084
https://github.com/root-project/root/pull/9156#issuecomment-1812527084:519,Usability,feedback,feedback,519,"> Hi! No that's alright, we don't enforce the formatting of old code. Also a rebase is not necessary, since the tests all passed and the PR would merge fine.; > ; > Just a note: probably the PR was unattended for so long because the usecase for this feature was not clear (or you needed it in your project?). Now that we have it, we might as well merge it, but for the future try to focus more on addressing concrete use needs or improving the ROOT developer experience (like you did in many other PRs). Thanks for the feedback!. It was a feature needed for my project. Because it took long, I used a workaround with a TGLabel class, so I did not insist much either, but for the future I will make it more clear what the usecase is :). Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812527084
https://github.com/root-project/root/pull/9156#issuecomment-1812527084:706,Usability,clear,clear,706,"> Hi! No that's alright, we don't enforce the formatting of old code. Also a rebase is not necessary, since the tests all passed and the PR would merge fine.; > ; > Just a note: probably the PR was unattended for so long because the usecase for this feature was not clear (or you needed it in your project?). Now that we have it, we might as well merge it, but for the future try to focus more on addressing concrete use needs or improving the ROOT developer experience (like you did in many other PRs). Thanks for the feedback!. It was a feature needed for my project. Because it took long, I used a workaround with a TGLabel class, so I did not insist much either, but for the future I will make it more clear what the usecase is :). Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812527084
https://github.com/root-project/root/pull/9156#issuecomment-1813907124:240,Usability,feedback,feedback,240,"Thanks for the clarification!. Speaking of needs, I still need https://github.com/root-project/root/pull/8546 for my project, which deals with huge amounts of integer waveforms, but after two years I closed it because I was getting no more feedback / responses. (I am happy to reopen it once there is someone able to review it.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1813907124
https://github.com/root-project/root/pull/9157#issuecomment-948660830:380,Usability,clear,clearing,380,"Build failed on ROOT-ubuntu2004/soversion.; Running on root-ubuntu-2004-3.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/127729/console).; ### Warnings:; - [2021-10-21T13:48:06.579Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-10-21T13:54:54.096Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9157#issuecomment-948660830
https://github.com/root-project/root/pull/9157#issuecomment-948660830:659,Usability,clear,clearing,659,"Build failed on ROOT-ubuntu2004/soversion.; Running on root-ubuntu-2004-3.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/127729/console).; ### Warnings:; - [2021-10-21T13:48:06.579Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-10-21T13:54:54.096Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9157#issuecomment-948660830
https://github.com/root-project/root/issues/9172#issuecomment-949697288:135,Usability,simpl,simple,135,"To be more complete here is a reproducer:; ```; void ratioplot2() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetLowerRefYaxis()->SetNdivisions(2); // the number of divisions is not changed on the Y axis lower plot.; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9172#issuecomment-949697288
https://github.com/root-project/root/pull/9184#issuecomment-951725716:438,Modifiability,variab,variables,438,"Hi @guitargeek , I have some local example which I run to see if the Taylor expansion works fine. (simply Taylor expanding a RooFormulaVar around different points). I would like your inputs on the following items,; - What do you want to have as an unit test ? ; - Shall we also have a tutorial in place ?; - the anaytical integral for a polynomial can be written. I am unsure if the analyticalIntegral fully applies to a function of many variables, let me know how we can ; proceed here. :); ; Cheers,; Rahul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9184#issuecomment-951725716
https://github.com/root-project/root/pull/9184#issuecomment-951725716:253,Testability,test,test,253,"Hi @guitargeek , I have some local example which I run to see if the Taylor expansion works fine. (simply Taylor expanding a RooFormulaVar around different points). I would like your inputs on the following items,; - What do you want to have as an unit test ? ; - Shall we also have a tutorial in place ?; - the anaytical integral for a polynomial can be written. I am unsure if the analyticalIntegral fully applies to a function of many variables, let me know how we can ; proceed here. :); ; Cheers,; Rahul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9184#issuecomment-951725716
https://github.com/root-project/root/pull/9184#issuecomment-951725716:99,Usability,simpl,simply,99,"Hi @guitargeek , I have some local example which I run to see if the Taylor expansion works fine. (simply Taylor expanding a RooFormulaVar around different points). I would like your inputs on the following items,; - What do you want to have as an unit test ? ; - Shall we also have a tutorial in place ?; - the anaytical integral for a polynomial can be written. I am unsure if the analyticalIntegral fully applies to a function of many variables, let me know how we can ; proceed here. :); ; Cheers,; Rahul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9184#issuecomment-951725716
https://github.com/root-project/root/issues/9189#issuecomment-964344546:16,Usability,simpl,simple,16,I will commit a simple fix for this,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9189#issuecomment-964344546
https://github.com/root-project/root/issues/9196#issuecomment-964117041:23,Usability,simpl,simplifying,23,"I have spent some time simplifying the reproducer significantly. This code snippet it enough to reproduce the memory leak:; ```C++; #include ""RooRealVar.h"". #include ""TSystem.h"". void reproducer(); {; ProcInfo_t pinfo;; for(std::size_t i = 0; i < 10000; ++i) {. RooRealVar x(""x"",""x"",0);; RooRealVar y(x);. if(i % 500 == 0) {; gSystem->GetProcInfo(&pinfo);; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }. }; }; ```; For the memory increase to happen, it is important that both `RooRealVars` are defined in the loop. Now that we have a simple reproduced, I will continue to investigate the problem later. This problem with the RooRealVar seems so general that we probably solve a ton of RooFit issues at once if we solve this problem here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9196#issuecomment-964117041
https://github.com/root-project/root/issues/9196#issuecomment-964117041:591,Usability,simpl,simple,591,"I have spent some time simplifying the reproducer significantly. This code snippet it enough to reproduce the memory leak:; ```C++; #include ""RooRealVar.h"". #include ""TSystem.h"". void reproducer(); {; ProcInfo_t pinfo;; for(std::size_t i = 0; i < 10000; ++i) {. RooRealVar x(""x"",""x"",0);; RooRealVar y(x);. if(i % 500 == 0) {; gSystem->GetProcInfo(&pinfo);; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }. }; }; ```; For the memory increase to happen, it is important that both `RooRealVars` are defined in the loop. Now that we have a simple reproduced, I will continue to investigate the problem later. This problem with the RooRealVar seems so general that we probably solve a ton of RooFit issues at once if we solve this problem here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9196#issuecomment-964117041
https://github.com/root-project/root/issues/9196#issuecomment-1092547617:188,Usability,simpl,simple,188,"Ater merging https://github.com/root-project/root/pull/8324, I verified that the memory increase as reported in this PR is gone. Both with the code from the initial post and also with the simple reproducer that I wrote.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9196#issuecomment-1092547617
https://github.com/root-project/root/issues/9225#issuecomment-958037006:556,Performance,multi-thread,multi-threading,556,"@eguiraud Thank you for your detailed response!. I currently create some TDirectories representing different stages of seloctions, and write histograms into it. For some reason, I would like to have TTree output also in some of the stages, and for that I need to use the `Snapshot` method. The way I had thought of (haven't tested yet, sorry) would be creating all the directories first and close the file, snapshotting to that file (not sure if the sub-directory could be, specified), and then open it for histogram writing. I have little knowledge about multi-threading, and was just (naïvely) looking for an RDataFrame anology of creating a TTree inside a TDirectory. It simply seemed strange to have to close the file and reopen. If feasible, it would be great if the (official) way to create a snapshot and to store into a certain sub-directory of a TFile, along with the multi-threading consideration, could be documented, so that users switching from the imperative pattern would be easier to understand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9225#issuecomment-958037006
https://github.com/root-project/root/issues/9225#issuecomment-958037006:877,Performance,multi-thread,multi-threading,877,"@eguiraud Thank you for your detailed response!. I currently create some TDirectories representing different stages of seloctions, and write histograms into it. For some reason, I would like to have TTree output also in some of the stages, and for that I need to use the `Snapshot` method. The way I had thought of (haven't tested yet, sorry) would be creating all the directories first and close the file, snapshotting to that file (not sure if the sub-directory could be, specified), and then open it for histogram writing. I have little knowledge about multi-threading, and was just (naïvely) looking for an RDataFrame anology of creating a TTree inside a TDirectory. It simply seemed strange to have to close the file and reopen. If feasible, it would be great if the (official) way to create a snapshot and to store into a certain sub-directory of a TFile, along with the multi-threading consideration, could be documented, so that users switching from the imperative pattern would be easier to understand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9225#issuecomment-958037006
https://github.com/root-project/root/issues/9225#issuecomment-958037006:324,Testability,test,tested,324,"@eguiraud Thank you for your detailed response!. I currently create some TDirectories representing different stages of seloctions, and write histograms into it. For some reason, I would like to have TTree output also in some of the stages, and for that I need to use the `Snapshot` method. The way I had thought of (haven't tested yet, sorry) would be creating all the directories first and close the file, snapshotting to that file (not sure if the sub-directory could be, specified), and then open it for histogram writing. I have little knowledge about multi-threading, and was just (naïvely) looking for an RDataFrame anology of creating a TTree inside a TDirectory. It simply seemed strange to have to close the file and reopen. If feasible, it would be great if the (official) way to create a snapshot and to store into a certain sub-directory of a TFile, along with the multi-threading consideration, could be documented, so that users switching from the imperative pattern would be easier to understand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9225#issuecomment-958037006
https://github.com/root-project/root/issues/9225#issuecomment-958037006:674,Usability,simpl,simply,674,"@eguiraud Thank you for your detailed response!. I currently create some TDirectories representing different stages of seloctions, and write histograms into it. For some reason, I would like to have TTree output also in some of the stages, and for that I need to use the `Snapshot` method. The way I had thought of (haven't tested yet, sorry) would be creating all the directories first and close the file, snapshotting to that file (not sure if the sub-directory could be, specified), and then open it for histogram writing. I have little knowledge about multi-threading, and was just (naïvely) looking for an RDataFrame anology of creating a TTree inside a TDirectory. It simply seemed strange to have to close the file and reopen. If feasible, it would be great if the (official) way to create a snapshot and to store into a certain sub-directory of a TFile, along with the multi-threading consideration, could be documented, so that users switching from the imperative pattern would be easier to understand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9225#issuecomment-958037006
https://github.com/root-project/root/issues/9240#issuecomment-964801950:47,Usability,learn,learn,47,Sorry to hear that. It would still be great to learn possible workaround to make my project step forward.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9240#issuecomment-964801950
https://github.com/root-project/root/issues/9243#issuecomment-963063640:163,Deployability,patch,patching,163,"I've had similar issues with the Snap build, where ACliC remembers its build environment which doesn't exist in the runtime environment. As a remedy I've taken to patching `root/build/unix/compiledata.sh`, adding a segment which runs `sed` and clears up the unwanted extra include directories. Maybe something similar could work in your use case as a workaround. [Example here](https://github.com/MrCarroll/root-snap/blob/main/snap/local/patches/ROOT/ACliC.patch)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9243#issuecomment-963063640
https://github.com/root-project/root/issues/9243#issuecomment-963063640:438,Deployability,patch,patches,438,"I've had similar issues with the Snap build, where ACliC remembers its build environment which doesn't exist in the runtime environment. As a remedy I've taken to patching `root/build/unix/compiledata.sh`, adding a segment which runs `sed` and clears up the unwanted extra include directories. Maybe something similar could work in your use case as a workaround. [Example here](https://github.com/MrCarroll/root-snap/blob/main/snap/local/patches/ROOT/ACliC.patch)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9243#issuecomment-963063640
https://github.com/root-project/root/issues/9243#issuecomment-963063640:457,Deployability,patch,patch,457,"I've had similar issues with the Snap build, where ACliC remembers its build environment which doesn't exist in the runtime environment. As a remedy I've taken to patching `root/build/unix/compiledata.sh`, adding a segment which runs `sed` and clears up the unwanted extra include directories. Maybe something similar could work in your use case as a workaround. [Example here](https://github.com/MrCarroll/root-snap/blob/main/snap/local/patches/ROOT/ACliC.patch)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9243#issuecomment-963063640
https://github.com/root-project/root/issues/9243#issuecomment-963063640:244,Usability,clear,clears,244,"I've had similar issues with the Snap build, where ACliC remembers its build environment which doesn't exist in the runtime environment. As a remedy I've taken to patching `root/build/unix/compiledata.sh`, adding a segment which runs `sed` and clears up the unwanted extra include directories. Maybe something similar could work in your use case as a workaround. [Example here](https://github.com/MrCarroll/root-snap/blob/main/snap/local/patches/ROOT/ACliC.patch)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9243#issuecomment-963063640
https://github.com/root-project/root/issues/9252#issuecomment-962218564:110,Usability,simpl,simple,110,[reproducer_9252.tar.gz](https://github.com/root-project/root/files/7488905/reproducer_9252.tar.gz). Adding a simple reproducer of the failing case. See README in the tar file for instruction.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252#issuecomment-962218564
https://github.com/root-project/root/issues/9253#issuecomment-963066852:224,Availability,error,error-conflicting-types-alpine-linux,224,"Next problem is that musl [apparently](https://www.gnu.org/software/gnulib/manual/html_node/fpu_005fcontrol_002eh.html) does not provide `fpu_control.h`. According to this [forum post](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193/3), nothing from this file is in fact used and thus it should be possible to remove the include - based on the `fpu_control.h` [source code](https://code.woboq.org/userspace/glibc/sysdeps/x86/fpu_control.h.html) and a simple `grep`, this should hold for all ROOT components, except `math/mathcore/src/triangle.c`, which uses `_FPU_SETCW` at line 4888. I am not familiar with what `fpu_control.h` does (apparently it has something to do with float precision), but according to [this](https://sourceforge.net/p/jamvm/patches/6/), it should be replaceable by a standard `fenv.h` header file, which I suggest to do (I have not tested it yet, but I will).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963066852
https://github.com/root-project/root/issues/9253#issuecomment-963066852:782,Deployability,patch,patches,782,"Next problem is that musl [apparently](https://www.gnu.org/software/gnulib/manual/html_node/fpu_005fcontrol_002eh.html) does not provide `fpu_control.h`. According to this [forum post](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193/3), nothing from this file is in fact used and thus it should be possible to remove the include - based on the `fpu_control.h` [source code](https://code.woboq.org/userspace/glibc/sysdeps/x86/fpu_control.h.html) and a simple `grep`, this should hold for all ROOT components, except `math/mathcore/src/triangle.c`, which uses `_FPU_SETCW` at line 4888. I am not familiar with what `fpu_control.h` does (apparently it has something to do with float precision), but according to [this](https://sourceforge.net/p/jamvm/patches/6/), it should be replaceable by a standard `fenv.h` header file, which I suggest to do (I have not tested it yet, but I will).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963066852
https://github.com/root-project/root/issues/9253#issuecomment-963066852:890,Testability,test,tested,890,"Next problem is that musl [apparently](https://www.gnu.org/software/gnulib/manual/html_node/fpu_005fcontrol_002eh.html) does not provide `fpu_control.h`. According to this [forum post](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193/3), nothing from this file is in fact used and thus it should be possible to remove the include - based on the `fpu_control.h` [source code](https://code.woboq.org/userspace/glibc/sysdeps/x86/fpu_control.h.html) and a simple `grep`, this should hold for all ROOT components, except `math/mathcore/src/triangle.c`, which uses `_FPU_SETCW` at line 4888. I am not familiar with what `fpu_control.h` does (apparently it has something to do with float precision), but according to [this](https://sourceforge.net/p/jamvm/patches/6/), it should be replaceable by a standard `fenv.h` header file, which I suggest to do (I have not tested it yet, but I will).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963066852
https://github.com/root-project/root/issues/9253#issuecomment-963066852:485,Usability,simpl,simple,485,"Next problem is that musl [apparently](https://www.gnu.org/software/gnulib/manual/html_node/fpu_005fcontrol_002eh.html) does not provide `fpu_control.h`. According to this [forum post](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193/3), nothing from this file is in fact used and thus it should be possible to remove the include - based on the `fpu_control.h` [source code](https://code.woboq.org/userspace/glibc/sysdeps/x86/fpu_control.h.html) and a simple `grep`, this should hold for all ROOT components, except `math/mathcore/src/triangle.c`, which uses `_FPU_SETCW` at line 4888. I am not familiar with what `fpu_control.h` does (apparently it has something to do with float precision), but according to [this](https://sourceforge.net/p/jamvm/patches/6/), it should be replaceable by a standard `fenv.h` header file, which I suggest to do (I have not tested it yet, but I will).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963066852
https://github.com/root-project/root/issues/9253#issuecomment-963600314:1258,Availability,error,error,1258,"06/core/cont/inc -I/builddir/root-6.24.06/core/thread/inc -I/builddir/root-6.24.06/core/textinput/inc -I/b; uilddir/root-6.24.06/core/gui/inc -I/builddir/root-6.24.06/core/foundation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2; -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor; e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor; e/unix/src/TUnixSystem.cxx ; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3085 | if (getsockname(sock, &addr, &len) == -1) { ; | ^~~~ ; | | ; | int* ; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: ; /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'; 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3121 | if (getpeername(sock, &addr, &len) == -1) { ; | ^~~~ ; | | ; | int* ; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: ; /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'; 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:1920,Availability,error,error,1920,"dir/root-6.24.06/cor; e/unix/src/TUnixSystem.cxx ; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3085 | if (getsockname(sock, &addr, &len) == -1) { ; | ^~~~ ; | | ; | int* ; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: ; /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'; 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3121 | if (getpeername(sock, &addr, &len) == -1) { ; | ^~~~ ; | | ; | int* ; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: ; /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'; 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {; | ^~~~~~~ ; | | ; | int* ; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:2583,Availability,error,error,2583,"trict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3121 | if (getpeername(sock, &addr, &len) == -1) { ; | ^~~~ ; | | ; | int* ; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: ; /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'; 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {; | ^~~~~~~ ; | | ; | int* ; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); ; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnix",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:3152,Availability,error,error,3152,"addr*, socklen_t*)'; 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {; | ^~~~~~~ ; | | ; | int* ; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); ; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUni",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:3717,Availability,error,error,3717,"ore/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); ; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:4285,Availability,error,error,4285,"e/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:4853,Availability,error,error,4853,"e/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; ```; is the next error. The problem stem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:5421,Availability,error,error,5421,"e/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; ```; is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:; ```c; #if (defined(R__AIX) && !defined(_AIX43)) || \; (defined(R__SUNGCC3) && !defined(__arch64__)); # define USE_SIZE_T; #elif defined(R__GLIBC) || defined(R__FBSD) || \; (defined(R__SUNGCC3) && defined(__arch64__)) || \; defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \; (defined(R__AIX) && defined(_AIX43)) || \; (defined(R__SOLARIS) && defined(_SOCKLEN_T)); # define USE_SOCKLEN_T; #endif; ```; [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.htm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:5944,Availability,error,error,5944,"m.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; ```; is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:; ```c; #if (defined(R__AIX) && !defined(_AIX43)) || \; (defined(R__SUNGCC3) && !defined(__arch64__)); # define USE_SIZE_T; #elif defined(R__GLIBC) || defined(R__FBSD) || \; (defined(R__SUNGCC3) && defined(__arch64__)) || \; defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \; (defined(R__AIX) && defined(_AIX43)) || \; (defined(R__SOLARIS) && defined(_SOCKLEN_T)); # define USE_SOCKLEN_T; #endif; ```; [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:; > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unneces",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:6865,Integrability,interface,interfaces,6865,"TCP_NODELAY, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; ```; is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:; ```c; #if (defined(R__AIX) && !defined(_AIX43)) || \; (defined(R__SUNGCC3) && !defined(__arch64__)); # define USE_SIZE_T; #elif defined(R__GLIBC) || defined(R__FBSD) || \; (defined(R__SUNGCC3) && defined(__arch64__)) || \; defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \; (defined(R__AIX) && defined(_AIX43)) || \; (defined(R__SOLARIS) && defined(_SOCKLEN_T)); # define USE_SOCKLEN_T; #endif; ```; [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:; > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:7055,Integrability,interface,interfaces,7055,"TCP_NODELAY, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; ```; is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:; ```c; #if (defined(R__AIX) && !defined(_AIX43)) || \; (defined(R__SUNGCC3) && !defined(__arch64__)); # define USE_SIZE_T; #elif defined(R__GLIBC) || defined(R__FBSD) || \; (defined(R__SUNGCC3) && defined(__arch64__)) || \; defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \; (defined(R__AIX) && defined(_AIX43)) || \; (defined(R__SOLARIS) && defined(_SOCKLEN_T)); # define USE_SOCKLEN_T; #endif; ```; [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:; > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:7286,Safety,avoid,avoiding,7286,"TCP_NODELAY, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; ```; is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:; ```c; #if (defined(R__AIX) && !defined(_AIX43)) || \; (defined(R__SUNGCC3) && !defined(__arch64__)); # define USE_SIZE_T; #elif defined(R__GLIBC) || defined(R__FBSD) || \; (defined(R__SUNGCC3) && defined(__arch64__)) || \; defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \; (defined(R__AIX) && defined(_AIX43)) || \; (defined(R__SOLARIS) && defined(_SOCKLEN_T)); # define USE_SOCKLEN_T; #endif; ```; [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:; > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:7333,Usability,simpl,simply,7333,"TCP_NODELAY, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; ```; is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:; ```c; #if (defined(R__AIX) && !defined(_AIX43)) || \; (defined(R__SUNGCC3) && !defined(__arch64__)); # define USE_SIZE_T; #elif defined(R__GLIBC) || defined(R__FBSD) || \; (defined(R__SUNGCC3) && defined(__arch64__)) || \; defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \; (defined(R__AIX) && defined(_AIX43)) || \; (defined(R__SOLARIS) && defined(_SOCKLEN_T)); # define USE_SOCKLEN_T; #endif; ```; [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:; > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9253#issuecomment-963600314:7412,Usability,simpl,simpler,7412,"TCP_NODELAY, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; ```; is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:; ```c; #if (defined(R__AIX) && !defined(_AIX43)) || \; (defined(R__SUNGCC3) && !defined(__arch64__)); # define USE_SIZE_T; #elif defined(R__GLIBC) || defined(R__FBSD) || \; (defined(R__SUNGCC3) && defined(__arch64__)) || \; defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \; (defined(R__AIX) && defined(_AIX43)) || \; (defined(R__SOLARIS) && defined(_SOCKLEN_T)); # define USE_SOCKLEN_T; #endif; ```; [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:; > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314
https://github.com/root-project/root/issues/9261#issuecomment-966475070:472,Availability,avail,available,472,"> `root [1] auto firstTwo2 = Take(v, 2);`. This resolves correctly to `ROOT::VecOps::Take()` after a `using namespace ROOT::VecOps;`, which is what appears in the example referenced above. Thus, the following works:; ```c++; root [0] ROOT::VecOps::RVec v{2., 3., 1.};; root [1] using namespace ROOT::VecOps;; root [2] auto firstTwo = Take(v, 2); (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }; ```. I cannot tell whether the names in `ROOT::VecOps` were directly available for unqualified lookup in the past. @Axel-Naumann? . Anyways, I agree that the interpreter should be more clear about unresolved names (instead of partially dumping the AST). I can dedicate some spare cycles in the first week of December for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261#issuecomment-966475070
https://github.com/root-project/root/issues/9261#issuecomment-966475070:588,Usability,clear,clear,588,"> `root [1] auto firstTwo2 = Take(v, 2);`. This resolves correctly to `ROOT::VecOps::Take()` after a `using namespace ROOT::VecOps;`, which is what appears in the example referenced above. Thus, the following works:; ```c++; root [0] ROOT::VecOps::RVec v{2., 3., 1.};; root [1] using namespace ROOT::VecOps;; root [2] auto firstTwo = Take(v, 2); (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }; ```. I cannot tell whether the names in `ROOT::VecOps` were directly available for unqualified lookup in the past. @Axel-Naumann? . Anyways, I agree that the interpreter should be more clear about unresolved names (instead of partially dumping the AST). I can dedicate some spare cycles in the first week of December for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261#issuecomment-966475070
https://github.com/root-project/root/issues/9263#issuecomment-967029745:162,Usability,simpl,simple,162,"I put `gPad->Modified(); gPad->Update()` in all possible places and none of them worked. I guess for the time being we keep that a ""feature"" as the workaround is simple: it is enough to zoom on the X top Axis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263#issuecomment-967029745
https://github.com/root-project/root/pull/9271#issuecomment-967115318:527,Integrability,depend,depend,527,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318
https://github.com/root-project/root/pull/9271#issuecomment-967115318:34,Testability,test,tests,34,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318
https://github.com/root-project/root/pull/9271#issuecomment-967115318:103,Testability,log,log,103,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318
https://github.com/root-project/root/pull/9271#issuecomment-967115318:156,Testability,test,test,156,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318
https://github.com/root-project/root/pull/9271#issuecomment-967115318:427,Testability,log,login,427,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318
https://github.com/root-project/root/pull/9271#issuecomment-967115318:444,Testability,test,test,444,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318
https://github.com/root-project/root/pull/9271#issuecomment-967115318:449,Testability,log,logs,449,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318
https://github.com/root-project/root/pull/9271#issuecomment-967115318:494,Testability,test,tests,494,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318
https://github.com/root-project/root/pull/9271#issuecomment-967115318:232,Usability,clear,clear,232,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318
https://github.com/root-project/root/pull/9271#issuecomment-968052222:406,Availability,failure,failures,406,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:739,Integrability,depend,depend,739,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:944,Security,secur,secure,944,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:36,Testability,test,tests,36,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:105,Testability,log,log,105,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:158,Testability,test,test,158,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:281,Testability,log,logs,281,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:314,Testability,test,test,314,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:639,Testability,log,login,639,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:656,Testability,test,test,656,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:661,Testability,log,logs,661,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:706,Testability,test,tests,706,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:902,Testability,log,login,902,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:969,Testability,test,tests,969,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:1172,Testability,test,test,1172,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:1302,Testability,test,test,1302,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9271#issuecomment-968052222:234,Usability,clear,clear,234,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222
https://github.com/root-project/root/pull/9286#issuecomment-970839284:17,Deployability,update,update,17,Just undo-ed the update.; Hope that nothing breaks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286#issuecomment-970839284
https://github.com/root-project/root/pull/9286#issuecomment-970839284:5,Usability,undo,undo-ed,5,Just undo-ed the update.; Hope that nothing breaks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286#issuecomment-970839284
https://github.com/root-project/root/pull/9301#issuecomment-972998223:62,Security,expose,exposed,62,"@vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue https://github.com/root-project/root/issues/9312 to keep track.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-972998223
https://github.com/root-project/root/pull/9301#issuecomment-972998223:114,Usability,feedback,feedback,114,"@vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue https://github.com/root-project/root/issues/9312 to keep track.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-972998223
https://github.com/root-project/root/pull/9301#issuecomment-973325971:278,Performance,perform,performance,278,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-973325971
https://github.com/root-project/root/pull/9301#issuecomment-973325971:64,Security,expose,exposed,64,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-973325971
https://github.com/root-project/root/pull/9301#issuecomment-973325971:359,Testability,test,testing,359,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-973325971
https://github.com/root-project/root/pull/9301#issuecomment-973325971:116,Usability,feedback,feedback,116,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-973325971
https://github.com/root-project/root/issues/9364#issuecomment-1012969310:52,Usability,simpl,simple,52,"Yes, it is same problem. Actually, solution is very simple and I implement it with JSROOT. ; One can copy it to the C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9364#issuecomment-1012969310
https://github.com/root-project/root/issues/9371#issuecomment-997463726:189,Testability,test,testio,189,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp; #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");; }; ```. ```; root -l testio.cpp ; root [0] ; Processing testio.cpp...; Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved; root [1] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997463726
https://github.com/root-project/root/issues/9371#issuecomment-997463726:237,Testability,test,test,237,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp; #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");; }; ```. ```; root -l testio.cpp ; root [0] ; Processing testio.cpp...; Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved; root [1] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997463726
https://github.com/root-project/root/issues/9371#issuecomment-997463726:342,Testability,test,testio,342,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp; #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");; }; ```. ```; root -l testio.cpp ; root [0] ; Processing testio.cpp...; Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved; root [1] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997463726
https://github.com/root-project/root/issues/9371#issuecomment-997463726:377,Testability,test,testio,377,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp; #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");; }; ```. ```; root -l testio.cpp ; root [0] ; Processing testio.cpp...; Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved; root [1] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997463726
https://github.com/root-project/root/issues/9371#issuecomment-997463726:42,Usability,simpl,simpler,42,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp; #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");; }; ```. ```; root -l testio.cpp ; root [0] ; Processing testio.cpp...; Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved; root [1] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997463726
https://github.com/root-project/root/issues/9371#issuecomment-997467808:723,Usability,clear,clear,723,"And for this I think the problem is ""just"" the checks on ```TClass::IsLoaded()``` at. https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L384; https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L580; https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L592. Since the state of the TClass object is ```kInterpreted``` in this case. Not sure what the best solution here is. On the one hand being able to persist interpreted classes is extremely useful (especially for the case of templates which are only instantiated from PyROOT), but it's also clear that one can shoot themselves in the foot here if the interpreted class changes in a way that breaks the IO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997467808
https://github.com/root-project/root/issues/9383#issuecomment-987815314:59,Deployability,release,release,59,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383#issuecomment-987815314
https://github.com/root-project/root/issues/9383#issuecomment-987815314:177,Deployability,release,release,177,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383#issuecomment-987815314
https://github.com/root-project/root/issues/9383#issuecomment-987815314:105,Safety,avoid,avoid,105,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383#issuecomment-987815314
https://github.com/root-project/root/issues/9383#issuecomment-987815314:380,Usability,guid,guide,380,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383#issuecomment-987815314
https://github.com/root-project/root/issues/9429#issuecomment-992593304:412,Deployability,release,released,412,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304
https://github.com/root-project/root/issues/9429#issuecomment-992593304:568,Energy Efficiency,adapt,adaptive,568,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304
https://github.com/root-project/root/issues/9429#issuecomment-992593304:806,Energy Efficiency,adapt,adapts,806,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304
https://github.com/root-project/root/issues/9429#issuecomment-992593304:300,Integrability,message,message,300,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304
https://github.com/root-project/root/issues/9429#issuecomment-992593304:568,Modifiability,adapt,adaptive,568,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304
https://github.com/root-project/root/issues/9429#issuecomment-992593304:806,Modifiability,adapt,adapts,806,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304
https://github.com/root-project/root/issues/9429#issuecomment-992593304:680,Performance,queue,queueing-system-walltime-killing-workers,680,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304
https://github.com/root-project/root/issues/9429#issuecomment-992593304:247,Testability,log,logging,247,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304
https://github.com/root-project/root/issues/9429#issuecomment-992593304:256,Testability,log,logging,256,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304
https://github.com/root-project/root/issues/9429#issuecomment-992593304:318,Testability,log,logging,318,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304
https://github.com/root-project/root/issues/9429#issuecomment-992593304:21,Usability,feedback,feedback,21,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304
https://github.com/root-project/root/issues/9429#issuecomment-992602348:1164,Energy Efficiency,schedul,scheduler,1164,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):; ```python; import time; import random. from dask import delayed; from dask.distributed import Client; from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}); cluster.scale(jobs=1); client = Client(cluster). # Try with and without this; client.wait_for_workers(1). def inc(x):; time.sleep(random.random()); return x + 1. def dec(x):; time.sleep(random.random()); return x - 1. def add(x, y):; time.sleep(random.random()); return x + y. inc = delayed(inc); dec = delayed(dec); add = delayed(add). x = inc(1); y = dec(2); z = add(x, y). print(f""Result is: {z.compute()}""); ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like; ```python; df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS); ``` ; A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use.; UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992602348
https://github.com/root-project/root/issues/9429#issuecomment-992602348:1621,Energy Efficiency,adapt,adaptive,1621,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):; ```python; import time; import random. from dask import delayed; from dask.distributed import Client; from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}); cluster.scale(jobs=1); client = Client(cluster). # Try with and without this; client.wait_for_workers(1). def inc(x):; time.sleep(random.random()); return x + 1. def dec(x):; time.sleep(random.random()); return x - 1. def add(x, y):; time.sleep(random.random()); return x + y. inc = delayed(inc); dec = delayed(dec); add = delayed(add). x = inc(1); y = dec(2); z = add(x, y). print(f""Result is: {z.compute()}""); ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like; ```python; df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS); ``` ; A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use.; UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992602348
https://github.com/root-project/root/issues/9429#issuecomment-992602348:1732,Energy Efficiency,adapt,adapts,1732,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):; ```python; import time; import random. from dask import delayed; from dask.distributed import Client; from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}); cluster.scale(jobs=1); client = Client(cluster). # Try with and without this; client.wait_for_workers(1). def inc(x):; time.sleep(random.random()); return x + 1. def dec(x):; time.sleep(random.random()); return x - 1. def add(x, y):; time.sleep(random.random()); return x + y. inc = delayed(inc); dec = delayed(dec); add = delayed(add). x = inc(1); y = dec(2); z = add(x, y). print(f""Result is: {z.compute()}""); ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like; ```python; df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS); ``` ; A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use.; UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992602348
https://github.com/root-project/root/issues/9429#issuecomment-992602348:173,Modifiability,config,config,173,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):; ```python; import time; import random. from dask import delayed; from dask.distributed import Client; from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}); cluster.scale(jobs=1); client = Client(cluster). # Try with and without this; client.wait_for_workers(1). def inc(x):; time.sleep(random.random()); return x + 1. def dec(x):; time.sleep(random.random()); return x - 1. def add(x, y):; time.sleep(random.random()); return x + y. inc = delayed(inc); dec = delayed(dec); add = delayed(add). x = inc(1); y = dec(2); z = add(x, y). print(f""Result is: {z.compute()}""); ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like; ```python; df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS); ``` ; A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use.; UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992602348
https://github.com/root-project/root/issues/9429#issuecomment-992602348:1621,Modifiability,adapt,adaptive,1621,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):; ```python; import time; import random. from dask import delayed; from dask.distributed import Client; from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}); cluster.scale(jobs=1); client = Client(cluster). # Try with and without this; client.wait_for_workers(1). def inc(x):; time.sleep(random.random()); return x + 1. def dec(x):; time.sleep(random.random()); return x - 1. def add(x, y):; time.sleep(random.random()); return x + y. inc = delayed(inc); dec = delayed(dec); add = delayed(add). x = inc(1); y = dec(2); z = add(x, y). print(f""Result is: {z.compute()}""); ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like; ```python; df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS); ``` ; A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use.; UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992602348
https://github.com/root-project/root/issues/9429#issuecomment-992602348:1732,Modifiability,adapt,adapts,1732,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):; ```python; import time; import random. from dask import delayed; from dask.distributed import Client; from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}); cluster.scale(jobs=1); client = Client(cluster). # Try with and without this; client.wait_for_workers(1). def inc(x):; time.sleep(random.random()); return x + 1. def dec(x):; time.sleep(random.random()); return x - 1. def add(x, y):; time.sleep(random.random()); return x + y. inc = delayed(inc); dec = delayed(dec); add = delayed(add). x = inc(1); y = dec(2); z = add(x, y). print(f""Result is: {z.compute()}""); ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like; ```python; df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS); ``` ; A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use.; UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992602348
https://github.com/root-project/root/issues/9429#issuecomment-992602348:135,Usability,simpl,simple,135,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):; ```python; import time; import random. from dask import delayed; from dask.distributed import Client; from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}); cluster.scale(jobs=1); client = Client(cluster). # Try with and without this; client.wait_for_workers(1). def inc(x):; time.sleep(random.random()); return x + 1. def dec(x):; time.sleep(random.random()); return x - 1. def add(x, y):; time.sleep(random.random()); return x + y. inc = delayed(inc); dec = delayed(dec); add = delayed(add). x = inc(1); y = dec(2); z = add(x, y). print(f""Result is: {z.compute()}""); ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like; ```python; df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS); ``` ; A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use.; UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992602348
https://github.com/root-project/root/issues/9429#issuecomment-993713171:147,Deployability,configurat,configuration,147,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: !; Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-993713171
https://github.com/root-project/root/issues/9429#issuecomment-993713171:86,Integrability,interface,interfaces,86,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: !; Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-993713171
https://github.com/root-project/root/issues/9429#issuecomment-993713171:147,Modifiability,config,configuration,147,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: !; Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-993713171
https://github.com/root-project/root/issues/9429#issuecomment-993713171:42,Usability,learn,learning,42,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: !; Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-993713171
https://github.com/root-project/root/issues/9448#issuecomment-1925410790:23,Usability,simpl,simplifications,23,"I support this kind of simplifications: deprecating genreflex is an option. Before discussing that in detail, the advantages of the rootcling only approaches should be listed carefully. Users such as CMS and LHCb will have to migrate away of genreflex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448#issuecomment-1925410790
https://github.com/root-project/root/issues/9474#issuecomment-998846312:311,Deployability,patch,patch,311,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff; diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; index 9548c4adf0..3e39c80f33 100644; --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; @@ -57,6 +57,7 @@ private:; static unsigned int &GetStaticGlobalCounter(); {; static unsigned int sGlobalCounter = 1;; + printf(""static global counter:%u\n"", sGlobalCounter);; return sGlobalCounter;; }. @@ -68,7 +69,11 @@ public:; ////////////////////////////////////////////////////////////////////////////; /// \brief Resets the counter.; /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result.; - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }; + static void ClearCounter(); + {; + printf(""setting counter to 1\n"");; + GraphNode::GetStaticGlobalCounter() = 1;; + }. ////////////////////////////////////////////////////////////////////////////; /// \brief Appends a node on the head of the current node; ```. and execute the following code (adapted from Ivan's repro above):. ```cpp; // repro.cpp; #include <ROOT/RDFHelpers.hxx>; #include <ROOT/RDataFrame.hxx>. void repro() {; ROOT::RDataFrame rd1(1);; auto branch1_1 = rd1.Define(""one"", ""1"").Count();; auto branch1_2 = rd1.Define(""two"", ""2"").Count();; ROOT::RDF::SaveGraph(rd1);; }. #ifndef __CLING__; int main() { repro(); }; #endif; ```. Running through the interpreter:. ```; $ root -l -b -q repro.cpp. Processing repro.cpp...; setting counter to 1; static global counter:1; static global counter:1; static global counter:1 // one again!? this counter is always increased",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474#issuecomment-998846312
https://github.com/root-project/root/issues/9474#issuecomment-998846312:1416,Energy Efficiency,adapt,adapted,1416,"e/dataframe/inc/ROOT/RDF/GraphNode.hxx; index 9548c4adf0..3e39c80f33 100644; --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; @@ -57,6 +57,7 @@ private:; static unsigned int &GetStaticGlobalCounter(); {; static unsigned int sGlobalCounter = 1;; + printf(""static global counter:%u\n"", sGlobalCounter);; return sGlobalCounter;; }. @@ -68,7 +69,11 @@ public:; ////////////////////////////////////////////////////////////////////////////; /// \brief Resets the counter.; /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result.; - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }; + static void ClearCounter(); + {; + printf(""setting counter to 1\n"");; + GraphNode::GetStaticGlobalCounter() = 1;; + }. ////////////////////////////////////////////////////////////////////////////; /// \brief Appends a node on the head of the current node; ```. and execute the following code (adapted from Ivan's repro above):. ```cpp; // repro.cpp; #include <ROOT/RDFHelpers.hxx>; #include <ROOT/RDataFrame.hxx>. void repro() {; ROOT::RDataFrame rd1(1);; auto branch1_1 = rd1.Define(""one"", ""1"").Count();; auto branch1_2 = rd1.Define(""two"", ""2"").Count();; ROOT::RDF::SaveGraph(rd1);; }. #ifndef __CLING__; int main() { repro(); }; #endif; ```. Running through the interpreter:. ```; $ root -l -b -q repro.cpp. Processing repro.cpp...; setting counter to 1; static global counter:1; static global counter:1; static global counter:1 // one again!? this counter is always increased; static global counter:2; static global counter:3; static global counter:2 // two again!?; static global counter:4; ```. the output is wrong and different from what we get in a compiled program:. ```; $ g++ -g -Wall -Wextra -Wpedantic -o repro repro.cpp $(root-config --cflags --libs) && ./repro; setting counter to 1; static global counter:1; static global counter:1; static global counter:2; static global counter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474#issuecomment-998846312
https://github.com/root-project/root/issues/9474#issuecomment-998846312:1416,Modifiability,adapt,adapted,1416,"e/dataframe/inc/ROOT/RDF/GraphNode.hxx; index 9548c4adf0..3e39c80f33 100644; --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; @@ -57,6 +57,7 @@ private:; static unsigned int &GetStaticGlobalCounter(); {; static unsigned int sGlobalCounter = 1;; + printf(""static global counter:%u\n"", sGlobalCounter);; return sGlobalCounter;; }. @@ -68,7 +69,11 @@ public:; ////////////////////////////////////////////////////////////////////////////; /// \brief Resets the counter.; /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result.; - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }; + static void ClearCounter(); + {; + printf(""setting counter to 1\n"");; + GraphNode::GetStaticGlobalCounter() = 1;; + }. ////////////////////////////////////////////////////////////////////////////; /// \brief Appends a node on the head of the current node; ```. and execute the following code (adapted from Ivan's repro above):. ```cpp; // repro.cpp; #include <ROOT/RDFHelpers.hxx>; #include <ROOT/RDataFrame.hxx>. void repro() {; ROOT::RDataFrame rd1(1);; auto branch1_1 = rd1.Define(""one"", ""1"").Count();; auto branch1_2 = rd1.Define(""two"", ""2"").Count();; ROOT::RDF::SaveGraph(rd1);; }. #ifndef __CLING__; int main() { repro(); }; #endif; ```. Running through the interpreter:. ```; $ root -l -b -q repro.cpp. Processing repro.cpp...; setting counter to 1; static global counter:1; static global counter:1; static global counter:1 // one again!? this counter is always increased; static global counter:2; static global counter:3; static global counter:2 // two again!?; static global counter:4; ```. the output is wrong and different from what we get in a compiled program:. ```; $ g++ -g -Wall -Wextra -Wpedantic -o repro repro.cpp $(root-config --cflags --libs) && ./repro; setting counter to 1; static global counter:1; static global counter:1; static global counter:2; static global counter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474#issuecomment-998846312
https://github.com/root-project/root/issues/9474#issuecomment-998846312:2263,Modifiability,config,config,2263,"int &GetStaticGlobalCounter(); {; static unsigned int sGlobalCounter = 1;; + printf(""static global counter:%u\n"", sGlobalCounter);; return sGlobalCounter;; }. @@ -68,7 +69,11 @@ public:; ////////////////////////////////////////////////////////////////////////////; /// \brief Resets the counter.; /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result.; - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }; + static void ClearCounter(); + {; + printf(""setting counter to 1\n"");; + GraphNode::GetStaticGlobalCounter() = 1;; + }. ////////////////////////////////////////////////////////////////////////////; /// \brief Appends a node on the head of the current node; ```. and execute the following code (adapted from Ivan's repro above):. ```cpp; // repro.cpp; #include <ROOT/RDFHelpers.hxx>; #include <ROOT/RDataFrame.hxx>. void repro() {; ROOT::RDataFrame rd1(1);; auto branch1_1 = rd1.Define(""one"", ""1"").Count();; auto branch1_2 = rd1.Define(""two"", ""2"").Count();; ROOT::RDF::SaveGraph(rd1);; }. #ifndef __CLING__; int main() { repro(); }; #endif; ```. Running through the interpreter:. ```; $ root -l -b -q repro.cpp. Processing repro.cpp...; setting counter to 1; static global counter:1; static global counter:1; static global counter:1 // one again!? this counter is always increased; static global counter:2; static global counter:3; static global counter:2 // two again!?; static global counter:4; ```. the output is wrong and different from what we get in a compiled program:. ```; $ g++ -g -Wall -Wextra -Wpedantic -o repro repro.cpp $(root-config --cflags --libs) && ./repro; setting counter to 1; static global counter:1; static global counter:1; static global counter:2; static global counter:3; static global counter:4; static global counter:5; static global counter:6; ```. Assigning this to @Axel-Naumann as we need an interpreter person to figure out why the static global counter changes values like that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474#issuecomment-998846312
https://github.com/root-project/root/issues/9474#issuecomment-998846312:270,Usability,simpl,simplest,270,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff; diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; index 9548c4adf0..3e39c80f33 100644; --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; @@ -57,6 +57,7 @@ private:; static unsigned int &GetStaticGlobalCounter(); {; static unsigned int sGlobalCounter = 1;; + printf(""static global counter:%u\n"", sGlobalCounter);; return sGlobalCounter;; }. @@ -68,7 +69,11 @@ public:; ////////////////////////////////////////////////////////////////////////////; /// \brief Resets the counter.; /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result.; - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }; + static void ClearCounter(); + {; + printf(""setting counter to 1\n"");; + GraphNode::GetStaticGlobalCounter() = 1;; + }. ////////////////////////////////////////////////////////////////////////////; /// \brief Appends a node on the head of the current node; ```. and execute the following code (adapted from Ivan's repro above):. ```cpp; // repro.cpp; #include <ROOT/RDFHelpers.hxx>; #include <ROOT/RDataFrame.hxx>. void repro() {; ROOT::RDataFrame rd1(1);; auto branch1_1 = rd1.Define(""one"", ""1"").Count();; auto branch1_2 = rd1.Define(""two"", ""2"").Count();; ROOT::RDF::SaveGraph(rd1);; }. #ifndef __CLING__; int main() { repro(); }; #endif; ```. Running through the interpreter:. ```; $ root -l -b -q repro.cpp. Processing repro.cpp...; setting counter to 1; static global counter:1; static global counter:1; static global counter:1 // one again!? this counter is always increased",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474#issuecomment-998846312
https://github.com/root-project/root/pull/9479#issuecomment-1006504826:338,Availability,failure,failure,338,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1006504826
https://github.com/root-project/root/pull/9479#issuecomment-1006504826:96,Performance,cache,cache,96,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1006504826
https://github.com/root-project/root/pull/9479#issuecomment-1006504826:234,Performance,cache,cache,234,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1006504826
https://github.com/root-project/root/pull/9479#issuecomment-1006504826:391,Performance,cache,cache,391,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1006504826
https://github.com/root-project/root/pull/9479#issuecomment-1006504826:2,Testability,test,tested,2,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1006504826
https://github.com/root-project/root/pull/9479#issuecomment-1006504826:407,Usability,simpl,simply,407,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1006504826
https://github.com/root-project/root/pull/9482#issuecomment-1016939443:418,Integrability,interface,interface,418,"Hi @cburgard and @gartrog, thanks a lot for these developments! I have only a few comments inline. Besides that, please do a few things before we can merge (I would like to merge this as soon as possible, tomorrow or on Friday. If you have more you can always do a followup PR):. 1. You moved the `JSONInterface` to a public header now, so it's not a `RooFit::Detail` anymore (I understand now that the user needs the interface to implement custom importers/exporters). But still, it's an interface under heavy development and we need to make that clear to the user that they can't rely too much on the stability of this interface. Therefore, can you please change the namespace to `RooFit::Experimental`?; 2. Please give the PR a meaningful title, and the first commit a good commit message, optimally not only a title but also a body where you explain what you did. When merging, I will squash the commits and only the first commit message will be taken, so please consider that.; 3. Make sure that all C++ sources are formatted with `clang-format` and the python sources with `black --line-length=120`. Let me know when this is done, then we can ask the CI to test once again and then merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1016939443
https://github.com/root-project/root/pull/9482#issuecomment-1016939443:489,Integrability,interface,interface,489,"Hi @cburgard and @gartrog, thanks a lot for these developments! I have only a few comments inline. Besides that, please do a few things before we can merge (I would like to merge this as soon as possible, tomorrow or on Friday. If you have more you can always do a followup PR):. 1. You moved the `JSONInterface` to a public header now, so it's not a `RooFit::Detail` anymore (I understand now that the user needs the interface to implement custom importers/exporters). But still, it's an interface under heavy development and we need to make that clear to the user that they can't rely too much on the stability of this interface. Therefore, can you please change the namespace to `RooFit::Experimental`?; 2. Please give the PR a meaningful title, and the first commit a good commit message, optimally not only a title but also a body where you explain what you did. When merging, I will squash the commits and only the first commit message will be taken, so please consider that.; 3. Make sure that all C++ sources are formatted with `clang-format` and the python sources with `black --line-length=120`. Let me know when this is done, then we can ask the CI to test once again and then merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1016939443
https://github.com/root-project/root/pull/9482#issuecomment-1016939443:621,Integrability,interface,interface,621,"Hi @cburgard and @gartrog, thanks a lot for these developments! I have only a few comments inline. Besides that, please do a few things before we can merge (I would like to merge this as soon as possible, tomorrow or on Friday. If you have more you can always do a followup PR):. 1. You moved the `JSONInterface` to a public header now, so it's not a `RooFit::Detail` anymore (I understand now that the user needs the interface to implement custom importers/exporters). But still, it's an interface under heavy development and we need to make that clear to the user that they can't rely too much on the stability of this interface. Therefore, can you please change the namespace to `RooFit::Experimental`?; 2. Please give the PR a meaningful title, and the first commit a good commit message, optimally not only a title but also a body where you explain what you did. When merging, I will squash the commits and only the first commit message will be taken, so please consider that.; 3. Make sure that all C++ sources are formatted with `clang-format` and the python sources with `black --line-length=120`. Let me know when this is done, then we can ask the CI to test once again and then merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1016939443
https://github.com/root-project/root/pull/9482#issuecomment-1016939443:784,Integrability,message,message,784,"Hi @cburgard and @gartrog, thanks a lot for these developments! I have only a few comments inline. Besides that, please do a few things before we can merge (I would like to merge this as soon as possible, tomorrow or on Friday. If you have more you can always do a followup PR):. 1. You moved the `JSONInterface` to a public header now, so it's not a `RooFit::Detail` anymore (I understand now that the user needs the interface to implement custom importers/exporters). But still, it's an interface under heavy development and we need to make that clear to the user that they can't rely too much on the stability of this interface. Therefore, can you please change the namespace to `RooFit::Experimental`?; 2. Please give the PR a meaningful title, and the first commit a good commit message, optimally not only a title but also a body where you explain what you did. When merging, I will squash the commits and only the first commit message will be taken, so please consider that.; 3. Make sure that all C++ sources are formatted with `clang-format` and the python sources with `black --line-length=120`. Let me know when this is done, then we can ask the CI to test once again and then merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1016939443
https://github.com/root-project/root/pull/9482#issuecomment-1016939443:934,Integrability,message,message,934,"Hi @cburgard and @gartrog, thanks a lot for these developments! I have only a few comments inline. Besides that, please do a few things before we can merge (I would like to merge this as soon as possible, tomorrow or on Friday. If you have more you can always do a followup PR):. 1. You moved the `JSONInterface` to a public header now, so it's not a `RooFit::Detail` anymore (I understand now that the user needs the interface to implement custom importers/exporters). But still, it's an interface under heavy development and we need to make that clear to the user that they can't rely too much on the stability of this interface. Therefore, can you please change the namespace to `RooFit::Experimental`?; 2. Please give the PR a meaningful title, and the first commit a good commit message, optimally not only a title but also a body where you explain what you did. When merging, I will squash the commits and only the first commit message will be taken, so please consider that.; 3. Make sure that all C++ sources are formatted with `clang-format` and the python sources with `black --line-length=120`. Let me know when this is done, then we can ask the CI to test once again and then merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1016939443
https://github.com/root-project/root/pull/9482#issuecomment-1016939443:1163,Testability,test,test,1163,"Hi @cburgard and @gartrog, thanks a lot for these developments! I have only a few comments inline. Besides that, please do a few things before we can merge (I would like to merge this as soon as possible, tomorrow or on Friday. If you have more you can always do a followup PR):. 1. You moved the `JSONInterface` to a public header now, so it's not a `RooFit::Detail` anymore (I understand now that the user needs the interface to implement custom importers/exporters). But still, it's an interface under heavy development and we need to make that clear to the user that they can't rely too much on the stability of this interface. Therefore, can you please change the namespace to `RooFit::Experimental`?; 2. Please give the PR a meaningful title, and the first commit a good commit message, optimally not only a title but also a body where you explain what you did. When merging, I will squash the commits and only the first commit message will be taken, so please consider that.; 3. Make sure that all C++ sources are formatted with `clang-format` and the python sources with `black --line-length=120`. Let me know when this is done, then we can ask the CI to test once again and then merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1016939443
https://github.com/root-project/root/pull/9482#issuecomment-1016939443:548,Usability,clear,clear,548,"Hi @cburgard and @gartrog, thanks a lot for these developments! I have only a few comments inline. Besides that, please do a few things before we can merge (I would like to merge this as soon as possible, tomorrow or on Friday. If you have more you can always do a followup PR):. 1. You moved the `JSONInterface` to a public header now, so it's not a `RooFit::Detail` anymore (I understand now that the user needs the interface to implement custom importers/exporters). But still, it's an interface under heavy development and we need to make that clear to the user that they can't rely too much on the stability of this interface. Therefore, can you please change the namespace to `RooFit::Experimental`?; 2. Please give the PR a meaningful title, and the first commit a good commit message, optimally not only a title but also a body where you explain what you did. When merging, I will squash the commits and only the first commit message will be taken, so please consider that.; 3. Make sure that all C++ sources are formatted with `clang-format` and the python sources with `black --line-length=120`. Let me know when this is done, then we can ask the CI to test once again and then merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1016939443
https://github.com/root-project/root/issues/9489#issuecomment-1881439092:67,Safety,avoid,avoid,67,"Hi @acampove, thanks for reporting this issue!. I have opened a to avoid the overly-verbose printout in the unbinned case:; https://github.com/root-project/root/pull/14309. However, I would refrain from implementing a progress bar, because this makes the output more difficult to digest when reading log files from e.g. grid jobs. So while I agree it would be nice for interactive use, it would do more harm that good in batch jobs. One could maybe hack something that detects the context in which RooFit is used, but these hacks are usually fragile and I would prefer not to do it. I'll close this issue after merging the PR with the log in the unbinned case. If you *really* want this progress bar, feel free to open a new issue about this, but I'm afraid I can't justify giving that one a high priority. Thanks for your understanding!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489#issuecomment-1881439092
https://github.com/root-project/root/issues/9489#issuecomment-1881439092:469,Safety,detect,detects,469,"Hi @acampove, thanks for reporting this issue!. I have opened a to avoid the overly-verbose printout in the unbinned case:; https://github.com/root-project/root/pull/14309. However, I would refrain from implementing a progress bar, because this makes the output more difficult to digest when reading log files from e.g. grid jobs. So while I agree it would be nice for interactive use, it would do more harm that good in batch jobs. One could maybe hack something that detects the context in which RooFit is used, but these hacks are usually fragile and I would prefer not to do it. I'll close this issue after merging the PR with the log in the unbinned case. If you *really* want this progress bar, feel free to open a new issue about this, but I'm afraid I can't justify giving that one a high priority. Thanks for your understanding!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489#issuecomment-1881439092
https://github.com/root-project/root/issues/9489#issuecomment-1881439092:300,Testability,log,log,300,"Hi @acampove, thanks for reporting this issue!. I have opened a to avoid the overly-verbose printout in the unbinned case:; https://github.com/root-project/root/pull/14309. However, I would refrain from implementing a progress bar, because this makes the output more difficult to digest when reading log files from e.g. grid jobs. So while I agree it would be nice for interactive use, it would do more harm that good in batch jobs. One could maybe hack something that detects the context in which RooFit is used, but these hacks are usually fragile and I would prefer not to do it. I'll close this issue after merging the PR with the log in the unbinned case. If you *really* want this progress bar, feel free to open a new issue about this, but I'm afraid I can't justify giving that one a high priority. Thanks for your understanding!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489#issuecomment-1881439092
https://github.com/root-project/root/issues/9489#issuecomment-1881439092:635,Testability,log,log,635,"Hi @acampove, thanks for reporting this issue!. I have opened a to avoid the overly-verbose printout in the unbinned case:; https://github.com/root-project/root/pull/14309. However, I would refrain from implementing a progress bar, because this makes the output more difficult to digest when reading log files from e.g. grid jobs. So while I agree it would be nice for interactive use, it would do more harm that good in batch jobs. One could maybe hack something that detects the context in which RooFit is used, but these hacks are usually fragile and I would prefer not to do it. I'll close this issue after merging the PR with the log in the unbinned case. If you *really* want this progress bar, feel free to open a new issue about this, but I'm afraid I can't justify giving that one a high priority. Thanks for your understanding!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489#issuecomment-1881439092
https://github.com/root-project/root/issues/9489#issuecomment-1881439092:218,Usability,progress bar,progress bar,218,"Hi @acampove, thanks for reporting this issue!. I have opened a to avoid the overly-verbose printout in the unbinned case:; https://github.com/root-project/root/pull/14309. However, I would refrain from implementing a progress bar, because this makes the output more difficult to digest when reading log files from e.g. grid jobs. So while I agree it would be nice for interactive use, it would do more harm that good in batch jobs. One could maybe hack something that detects the context in which RooFit is used, but these hacks are usually fragile and I would prefer not to do it. I'll close this issue after merging the PR with the log in the unbinned case. If you *really* want this progress bar, feel free to open a new issue about this, but I'm afraid I can't justify giving that one a high priority. Thanks for your understanding!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489#issuecomment-1881439092
https://github.com/root-project/root/issues/9489#issuecomment-1881439092:687,Usability,progress bar,progress bar,687,"Hi @acampove, thanks for reporting this issue!. I have opened a to avoid the overly-verbose printout in the unbinned case:; https://github.com/root-project/root/pull/14309. However, I would refrain from implementing a progress bar, because this makes the output more difficult to digest when reading log files from e.g. grid jobs. So while I agree it would be nice for interactive use, it would do more harm that good in batch jobs. One could maybe hack something that detects the context in which RooFit is used, but these hacks are usually fragile and I would prefer not to do it. I'll close this issue after merging the PR with the log in the unbinned case. If you *really* want this progress bar, feel free to open a new issue about this, but I'm afraid I can't justify giving that one a high priority. Thanks for your understanding!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489#issuecomment-1881439092
https://github.com/root-project/root/issues/9490#issuecomment-1003615961:266,Usability,clear,clear,266,"Diagnostic findings:. Parameters are not saved unless there is a constraint due to [this line](https://root.cern.ch/doc/v624/RooMCStudy_8cxx_source.html#l00197). The documentation makes no mention of the need for constraints, and the use case without constraints is clear. . *External* constraints do not work because of the [use](https://root.cern.ch/doc/v624/RooMCStudy_8cxx_source.html#l00189) of `RooAbsPdf::getAllConstraints`, which does not account for external constraints, to determine the existence of constraints.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490#issuecomment-1003615961
https://github.com/root-project/root/issues/9491#issuecomment-1058270647:15,Usability,feedback,feedback,15,"Thanks for the feedback. Could the function be overriden ?; ```; TGraph::SaveAs(...); {; if (std::ends_with("".csv"")); {; //do something; }; else; {; TObject::SaveAs(...);; }; }; ```. Or alternatively, in TObject::SaveAs, do the following:. ```; if ends_with('.csv') and ClassName() == ""TGraph""); {; ... do something; }; else; {; ...do what does now; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9491#issuecomment-1058270647
https://github.com/root-project/root/issues/9491#issuecomment-1058992368:36,Usability,simpl,simplest,36,"Yes the first approach might be the simplest.; In your example you separate value with tabs. I thought `.csv` meant ""comma separated value"" therefore should we better do:; ```; outfile << x[i] << "","" << y[i] << std::endl;. ```; ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9491#issuecomment-1058992368
https://github.com/root-project/root/issues/9505#issuecomment-1092679466:41,Usability,simpl,simple,41,"Indeed, as said on the forum it is quite simple to reproduce this option with the current ROOT. See the script and plot I posted on the forum. If that enough for you we can close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505#issuecomment-1092679466
https://github.com/root-project/root/pull/9518#issuecomment-1047616127:230,Deployability,patch,patch,230,"Updated. > It seems ok for me... I do not see how it could be more ""friendly""?. By *fiendly* I mean ""prevent damaging or changing the appearance of due to line break, especially when long strings are encountered"". In the original patch, it provided a general way (from `TVirtulaPS`) to specify different characters (aside from white spaces) to break the line at, and the option to drop the white space at which the line break happens to prevent additional white spaces from showing up in the image when cutting through a long sentence. In the updated patch, a customised `PrintFast` method is created inside `TSVG` that provides more customization (e.g. it's natural to cut between tags `><` in XML) in addition to features from the original patch, while keeping the `TVirtualPS` simple.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1047616127
https://github.com/root-project/root/pull/9518#issuecomment-1047616127:543,Deployability,update,updated,543,"Updated. > It seems ok for me... I do not see how it could be more ""friendly""?. By *fiendly* I mean ""prevent damaging or changing the appearance of due to line break, especially when long strings are encountered"". In the original patch, it provided a general way (from `TVirtulaPS`) to specify different characters (aside from white spaces) to break the line at, and the option to drop the white space at which the line break happens to prevent additional white spaces from showing up in the image when cutting through a long sentence. In the updated patch, a customised `PrintFast` method is created inside `TSVG` that provides more customization (e.g. it's natural to cut between tags `><` in XML) in addition to features from the original patch, while keeping the `TVirtualPS` simple.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1047616127
https://github.com/root-project/root/pull/9518#issuecomment-1047616127:551,Deployability,patch,patch,551,"Updated. > It seems ok for me... I do not see how it could be more ""friendly""?. By *fiendly* I mean ""prevent damaging or changing the appearance of due to line break, especially when long strings are encountered"". In the original patch, it provided a general way (from `TVirtulaPS`) to specify different characters (aside from white spaces) to break the line at, and the option to drop the white space at which the line break happens to prevent additional white spaces from showing up in the image when cutting through a long sentence. In the updated patch, a customised `PrintFast` method is created inside `TSVG` that provides more customization (e.g. it's natural to cut between tags `><` in XML) in addition to features from the original patch, while keeping the `TVirtualPS` simple.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1047616127
https://github.com/root-project/root/pull/9518#issuecomment-1047616127:742,Deployability,patch,patch,742,"Updated. > It seems ok for me... I do not see how it could be more ""friendly""?. By *fiendly* I mean ""prevent damaging or changing the appearance of due to line break, especially when long strings are encountered"". In the original patch, it provided a general way (from `TVirtulaPS`) to specify different characters (aside from white spaces) to break the line at, and the option to drop the white space at which the line break happens to prevent additional white spaces from showing up in the image when cutting through a long sentence. In the updated patch, a customised `PrintFast` method is created inside `TSVG` that provides more customization (e.g. it's natural to cut between tags `><` in XML) in addition to features from the original patch, while keeping the `TVirtualPS` simple.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1047616127
https://github.com/root-project/root/pull/9518#issuecomment-1047616127:780,Usability,simpl,simple,780,"Updated. > It seems ok for me... I do not see how it could be more ""friendly""?. By *fiendly* I mean ""prevent damaging or changing the appearance of due to line break, especially when long strings are encountered"". In the original patch, it provided a general way (from `TVirtulaPS`) to specify different characters (aside from white spaces) to break the line at, and the option to drop the white space at which the line break happens to prevent additional white spaces from showing up in the image when cutting through a long sentence. In the updated patch, a customised `PrintFast` method is created inside `TSVG` that provides more customization (e.g. it's natural to cut between tags `><` in XML) in addition to features from the original patch, while keeping the `TVirtualPS` simple.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1047616127
https://github.com/root-project/root/pull/9546#issuecomment-1010928254:11,Usability,learn,learn,11,yes i will learn a bit about Root and get back to this issue; Thankyou for the guidance.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546#issuecomment-1010928254
https://github.com/root-project/root/pull/9546#issuecomment-1010928254:79,Usability,guid,guidance,79,yes i will learn a bit about Root and get back to this issue; Thankyou for the guidance.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546#issuecomment-1010928254
https://github.com/root-project/root/issues/9547#issuecomment-1011201311:56,Deployability,release,release,56,"Result from `git-bisect` on LLVM/Clang between current `release/13.x` and `llvmorg-13-init`:; ```; git bisect start; # bad: [9d9efb1f67ff70e996b1cb7fa00e24b9121be226] [lld][CMake] Add LLD_DEFAULT_NOSTART_STOP_GC; git bisect bad 9d9efb1f67ff70e996b1cb7fa00e24b9121be226; # good: [5369517d20dd362a178a1b2d6c398d8898ee4620] Bump the trunk major version to 13; git bisect good 5369517d20dd362a178a1b2d6c398d8898ee4620; # bad: [711a473cd9e3c8e63ad3460d49fdab1545634dd2] Update testcase for D101333.; git bisect bad 711a473cd9e3c8e63ad3460d49fdab1545634dd2; # bad: [11b70b9e3a7458b5b78c30020b56e8ca563a4801] Revert ""[NPM][CGSCC] FunctionAnalysisManagerCGSCCProxy: do not clear immutable function passes""; git bisect bad 11b70b9e3a7458b5b78c30020b56e8ca563a4801; # good: [97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65] [Coverage] Store compilation dir separately in coverage mapping; git bisect good 97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65; # bad: [4096ae06f47af9db2c2550a2c34979edfbd91b8d] [lldb] Support DWARF-5 DW_FORM_line_strp (used by GCC); git bisect bad 4096ae06f47af9db2c2550a2c34979edfbd91b8d; # bad: [d65ddca83ff85c7345fe9a0f5a15750f01e38420] [ValueTracking] ComputeKnownBits - minimum leading/trailing zero bits in LSHR/SHL (PR44526); git bisect bad d65ddca83ff85c7345fe9a0f5a15750f01e38420; # good: [15a74b64dfa9bc1213cd582415f849b4dba51bad] [VPlan] Manage pairs of incoming (VPValue, VPBB) in VPWidenPHIRecipe.; git bisect good 15a74b64dfa9bc1213cd582415f849b4dba51bad; # good: [dd68f3cf2899c554cab7baf3ccdcd3f987d77736] [RISCV] Support insertion of misaligned subvectors; git bisect good dd68f3cf2899c554cab7baf3ccdcd3f987d77736; # good: [97a304cc8f949e40693d63b855b4b24bc81fa729] [scan-build-py] Add sarif-html support in scan-build-py; git bisect good 97a304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311
https://github.com/root-project/root/issues/9547#issuecomment-1011201311:1858,Deployability,patch,patch,1858,"ing zero bits in LSHR/SHL (PR44526); git bisect bad d65ddca83ff85c7345fe9a0f5a15750f01e38420; # good: [15a74b64dfa9bc1213cd582415f849b4dba51bad] [VPlan] Manage pairs of incoming (VPValue, VPBB) in VPWidenPHIRecipe.; git bisect good 15a74b64dfa9bc1213cd582415f849b4dba51bad; # good: [dd68f3cf2899c554cab7baf3ccdcd3f987d77736] [RISCV] Support insertion of misaligned subvectors; git bisect good dd68f3cf2899c554cab7baf3ccdcd3f987d77736; # good: [97a304cc8f949e40693d63b855b4b24bc81fa729] [scan-build-py] Add sarif-html support in scan-build-py; git bisect good 97a304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; git bisect bad 56d228a14e3631de157ae98dd61d21193e4502d5; # good: [3adb89bb9f8e73c82787babb2f877fece7394770] [ThinLTO] Make cloneUsedGlobalVariables deterministic; git bisect good 3adb89bb9f8e73c82787babb2f877fece7394770; # good: [af4451eb4f38ce492ca38add91c8378f32b93eca] [NFC] Make TrailingObjects non-copyable/non-movable; git bisect good af4451eb4f38ce492ca38add91c8378f32b93eca; # good: [3c4cdd0b6a6fd760707be9b5dec32378ec55c549] [mlir] ExecutionEngine needs special handling for COFF binaries; git bisect good 3c4cdd0b6a6fd760707be9b5dec32378ec55c549; # good: [ab5b00ada9e77437ed2c76f73cfb8481bb9826a5] Revert ""[Driver][Windows] Support per-target runtimes dir layout for profile instr generate""; git bisect good ab5b00ada9e77437ed2c76f73cfb8481bb9826a5; # first bad commit: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; ```. ```; 56d228a14e3631de157ae98dd61d21193e4502d5 is the first bad commit; commit 56d228a14e3631de157ae98dd61d21193e4502d5; Author: Juneyoung Lee <aqjune@gmail.com>; Date: Tue Feb 23 11:46:59 2021 +0900. [SimplifyCFG]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311
https://github.com/root-project/root/issues/9547#issuecomment-1011201311:3280,Deployability,patch,patch,3280,"304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; git bisect bad 56d228a14e3631de157ae98dd61d21193e4502d5; # good: [3adb89bb9f8e73c82787babb2f877fece7394770] [ThinLTO] Make cloneUsedGlobalVariables deterministic; git bisect good 3adb89bb9f8e73c82787babb2f877fece7394770; # good: [af4451eb4f38ce492ca38add91c8378f32b93eca] [NFC] Make TrailingObjects non-copyable/non-movable; git bisect good af4451eb4f38ce492ca38add91c8378f32b93eca; # good: [3c4cdd0b6a6fd760707be9b5dec32378ec55c549] [mlir] ExecutionEngine needs special handling for COFF binaries; git bisect good 3c4cdd0b6a6fd760707be9b5dec32378ec55c549; # good: [ab5b00ada9e77437ed2c76f73cfb8481bb9826a5] Revert ""[Driver][Windows] Support per-target runtimes dir layout for profile instr generate""; git bisect good ab5b00ada9e77437ed2c76f73cfb8481bb9826a5; # first bad commit: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; ```. ```; 56d228a14e3631de157ae98dd61d21193e4502d5 is the first bad commit; commit 56d228a14e3631de157ae98dd61d21193e4502d5; Author: Juneyoung Lee <aqjune@gmail.com>; Date: Tue Feb 23 11:46:59 2021 +0900. [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes. This is a simple patch to update SimplifyCFG's passingValueIsAlwaysUndefined to inspect more attributes. A new function `CallBase::isPassingUndefUB` checks attributes that imply noundef. Reviewed By: spatel. Differential Revision: https://reviews.llvm.org/D97244. llvm/include/llvm/IR/InstrTypes.h | 11 +++++++++++; llvm/lib/Transforms/Utils/SimplifyCFG.cpp | 6 +++---; llvm/test/Transforms/SimplifyCFG/UnreachableEliminate.ll | 10 ++++++----; 3 files changed, 20 insertions(+), 7 deletions(-); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311
https://github.com/root-project/root/issues/9547#issuecomment-1011201311:3289,Deployability,update,update,3289,"304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; git bisect bad 56d228a14e3631de157ae98dd61d21193e4502d5; # good: [3adb89bb9f8e73c82787babb2f877fece7394770] [ThinLTO] Make cloneUsedGlobalVariables deterministic; git bisect good 3adb89bb9f8e73c82787babb2f877fece7394770; # good: [af4451eb4f38ce492ca38add91c8378f32b93eca] [NFC] Make TrailingObjects non-copyable/non-movable; git bisect good af4451eb4f38ce492ca38add91c8378f32b93eca; # good: [3c4cdd0b6a6fd760707be9b5dec32378ec55c549] [mlir] ExecutionEngine needs special handling for COFF binaries; git bisect good 3c4cdd0b6a6fd760707be9b5dec32378ec55c549; # good: [ab5b00ada9e77437ed2c76f73cfb8481bb9826a5] Revert ""[Driver][Windows] Support per-target runtimes dir layout for profile instr generate""; git bisect good ab5b00ada9e77437ed2c76f73cfb8481bb9826a5; # first bad commit: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; ```. ```; 56d228a14e3631de157ae98dd61d21193e4502d5 is the first bad commit; commit 56d228a14e3631de157ae98dd61d21193e4502d5; Author: Juneyoung Lee <aqjune@gmail.com>; Date: Tue Feb 23 11:46:59 2021 +0900. [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes. This is a simple patch to update SimplifyCFG's passingValueIsAlwaysUndefined to inspect more attributes. A new function `CallBase::isPassingUndefUB` checks attributes that imply noundef. Reviewed By: spatel. Differential Revision: https://reviews.llvm.org/D97244. llvm/include/llvm/IR/InstrTypes.h | 11 +++++++++++; llvm/lib/Transforms/Utils/SimplifyCFG.cpp | 6 +++---; llvm/test/Transforms/SimplifyCFG/UnreachableEliminate.ll | 10 ++++++----; 3 files changed, 20 insertions(+), 7 deletions(-); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311
https://github.com/root-project/root/issues/9547#issuecomment-1011201311:472,Testability,test,testcase,472,"Result from `git-bisect` on LLVM/Clang between current `release/13.x` and `llvmorg-13-init`:; ```; git bisect start; # bad: [9d9efb1f67ff70e996b1cb7fa00e24b9121be226] [lld][CMake] Add LLD_DEFAULT_NOSTART_STOP_GC; git bisect bad 9d9efb1f67ff70e996b1cb7fa00e24b9121be226; # good: [5369517d20dd362a178a1b2d6c398d8898ee4620] Bump the trunk major version to 13; git bisect good 5369517d20dd362a178a1b2d6c398d8898ee4620; # bad: [711a473cd9e3c8e63ad3460d49fdab1545634dd2] Update testcase for D101333.; git bisect bad 711a473cd9e3c8e63ad3460d49fdab1545634dd2; # bad: [11b70b9e3a7458b5b78c30020b56e8ca563a4801] Revert ""[NPM][CGSCC] FunctionAnalysisManagerCGSCCProxy: do not clear immutable function passes""; git bisect bad 11b70b9e3a7458b5b78c30020b56e8ca563a4801; # good: [97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65] [Coverage] Store compilation dir separately in coverage mapping; git bisect good 97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65; # bad: [4096ae06f47af9db2c2550a2c34979edfbd91b8d] [lldb] Support DWARF-5 DW_FORM_line_strp (used by GCC); git bisect bad 4096ae06f47af9db2c2550a2c34979edfbd91b8d; # bad: [d65ddca83ff85c7345fe9a0f5a15750f01e38420] [ValueTracking] ComputeKnownBits - minimum leading/trailing zero bits in LSHR/SHL (PR44526); git bisect bad d65ddca83ff85c7345fe9a0f5a15750f01e38420; # good: [15a74b64dfa9bc1213cd582415f849b4dba51bad] [VPlan] Manage pairs of incoming (VPValue, VPBB) in VPWidenPHIRecipe.; git bisect good 15a74b64dfa9bc1213cd582415f849b4dba51bad; # good: [dd68f3cf2899c554cab7baf3ccdcd3f987d77736] [RISCV] Support insertion of misaligned subvectors; git bisect good dd68f3cf2899c554cab7baf3ccdcd3f987d77736; # good: [97a304cc8f949e40693d63b855b4b24bc81fa729] [scan-build-py] Add sarif-html support in scan-build-py; git bisect good 97a304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311
https://github.com/root-project/root/issues/9547#issuecomment-1011201311:3638,Testability,test,test,3638,"304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; git bisect bad 56d228a14e3631de157ae98dd61d21193e4502d5; # good: [3adb89bb9f8e73c82787babb2f877fece7394770] [ThinLTO] Make cloneUsedGlobalVariables deterministic; git bisect good 3adb89bb9f8e73c82787babb2f877fece7394770; # good: [af4451eb4f38ce492ca38add91c8378f32b93eca] [NFC] Make TrailingObjects non-copyable/non-movable; git bisect good af4451eb4f38ce492ca38add91c8378f32b93eca; # good: [3c4cdd0b6a6fd760707be9b5dec32378ec55c549] [mlir] ExecutionEngine needs special handling for COFF binaries; git bisect good 3c4cdd0b6a6fd760707be9b5dec32378ec55c549; # good: [ab5b00ada9e77437ed2c76f73cfb8481bb9826a5] Revert ""[Driver][Windows] Support per-target runtimes dir layout for profile instr generate""; git bisect good ab5b00ada9e77437ed2c76f73cfb8481bb9826a5; # first bad commit: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; ```. ```; 56d228a14e3631de157ae98dd61d21193e4502d5 is the first bad commit; commit 56d228a14e3631de157ae98dd61d21193e4502d5; Author: Juneyoung Lee <aqjune@gmail.com>; Date: Tue Feb 23 11:46:59 2021 +0900. [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes. This is a simple patch to update SimplifyCFG's passingValueIsAlwaysUndefined to inspect more attributes. A new function `CallBase::isPassingUndefUB` checks attributes that imply noundef. Reviewed By: spatel. Differential Revision: https://reviews.llvm.org/D97244. llvm/include/llvm/IR/InstrTypes.h | 11 +++++++++++; llvm/lib/Transforms/Utils/SimplifyCFG.cpp | 6 +++---; llvm/test/Transforms/SimplifyCFG/UnreachableEliminate.ll | 10 ++++++----; 3 files changed, 20 insertions(+), 7 deletions(-); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311
https://github.com/root-project/root/issues/9547#issuecomment-1011201311:665,Usability,clear,clear,665,"Result from `git-bisect` on LLVM/Clang between current `release/13.x` and `llvmorg-13-init`:; ```; git bisect start; # bad: [9d9efb1f67ff70e996b1cb7fa00e24b9121be226] [lld][CMake] Add LLD_DEFAULT_NOSTART_STOP_GC; git bisect bad 9d9efb1f67ff70e996b1cb7fa00e24b9121be226; # good: [5369517d20dd362a178a1b2d6c398d8898ee4620] Bump the trunk major version to 13; git bisect good 5369517d20dd362a178a1b2d6c398d8898ee4620; # bad: [711a473cd9e3c8e63ad3460d49fdab1545634dd2] Update testcase for D101333.; git bisect bad 711a473cd9e3c8e63ad3460d49fdab1545634dd2; # bad: [11b70b9e3a7458b5b78c30020b56e8ca563a4801] Revert ""[NPM][CGSCC] FunctionAnalysisManagerCGSCCProxy: do not clear immutable function passes""; git bisect bad 11b70b9e3a7458b5b78c30020b56e8ca563a4801; # good: [97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65] [Coverage] Store compilation dir separately in coverage mapping; git bisect good 97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65; # bad: [4096ae06f47af9db2c2550a2c34979edfbd91b8d] [lldb] Support DWARF-5 DW_FORM_line_strp (used by GCC); git bisect bad 4096ae06f47af9db2c2550a2c34979edfbd91b8d; # bad: [d65ddca83ff85c7345fe9a0f5a15750f01e38420] [ValueTracking] ComputeKnownBits - minimum leading/trailing zero bits in LSHR/SHL (PR44526); git bisect bad d65ddca83ff85c7345fe9a0f5a15750f01e38420; # good: [15a74b64dfa9bc1213cd582415f849b4dba51bad] [VPlan] Manage pairs of incoming (VPValue, VPBB) in VPWidenPHIRecipe.; git bisect good 15a74b64dfa9bc1213cd582415f849b4dba51bad; # good: [dd68f3cf2899c554cab7baf3ccdcd3f987d77736] [RISCV] Support insertion of misaligned subvectors; git bisect good dd68f3cf2899c554cab7baf3ccdcd3f987d77736; # good: [97a304cc8f949e40693d63b855b4b24bc81fa729] [scan-build-py] Add sarif-html support in scan-build-py; git bisect good 97a304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311
https://github.com/root-project/root/issues/9547#issuecomment-1011201311:3273,Usability,simpl,simple,3273,"304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; git bisect bad 56d228a14e3631de157ae98dd61d21193e4502d5; # good: [3adb89bb9f8e73c82787babb2f877fece7394770] [ThinLTO] Make cloneUsedGlobalVariables deterministic; git bisect good 3adb89bb9f8e73c82787babb2f877fece7394770; # good: [af4451eb4f38ce492ca38add91c8378f32b93eca] [NFC] Make TrailingObjects non-copyable/non-movable; git bisect good af4451eb4f38ce492ca38add91c8378f32b93eca; # good: [3c4cdd0b6a6fd760707be9b5dec32378ec55c549] [mlir] ExecutionEngine needs special handling for COFF binaries; git bisect good 3c4cdd0b6a6fd760707be9b5dec32378ec55c549; # good: [ab5b00ada9e77437ed2c76f73cfb8481bb9826a5] Revert ""[Driver][Windows] Support per-target runtimes dir layout for profile instr generate""; git bisect good ab5b00ada9e77437ed2c76f73cfb8481bb9826a5; # first bad commit: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; ```. ```; 56d228a14e3631de157ae98dd61d21193e4502d5 is the first bad commit; commit 56d228a14e3631de157ae98dd61d21193e4502d5; Author: Juneyoung Lee <aqjune@gmail.com>; Date: Tue Feb 23 11:46:59 2021 +0900. [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes. This is a simple patch to update SimplifyCFG's passingValueIsAlwaysUndefined to inspect more attributes. A new function `CallBase::isPassingUndefUB` checks attributes that imply noundef. Reviewed By: spatel. Differential Revision: https://reviews.llvm.org/D97244. llvm/include/llvm/IR/InstrTypes.h | 11 +++++++++++; llvm/lib/Transforms/Utils/SimplifyCFG.cpp | 6 +++---; llvm/test/Transforms/SimplifyCFG/UnreachableEliminate.ll | 10 ++++++----; 3 files changed, 20 insertions(+), 7 deletions(-); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311
https://github.com/root-project/root/pull/9592#issuecomment-1018284184:40,Usability,feedback,feedback,40,"@smuzaffar, thanks a lot for the prompt feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592#issuecomment-1018284184
https://github.com/root-project/root/issues/9594#issuecomment-1017324188:59,Deployability,patch,patches,59,"Any plan when this can be addressed, at least for v6-26-00-patches? The LCG nightlies are not very usable at the moment.; Can I suggest to revet the patch for v6-26-00-patches and re-port it when it is fixed on the master ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1017324188
https://github.com/root-project/root/issues/9594#issuecomment-1017324188:149,Deployability,patch,patch,149,"Any plan when this can be addressed, at least for v6-26-00-patches? The LCG nightlies are not very usable at the moment.; Can I suggest to revet the patch for v6-26-00-patches and re-port it when it is fixed on the master ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1017324188
https://github.com/root-project/root/issues/9594#issuecomment-1017324188:168,Deployability,patch,patches,168,"Any plan when this can be addressed, at least for v6-26-00-patches? The LCG nightlies are not very usable at the moment.; Can I suggest to revet the patch for v6-26-00-patches and re-port it when it is fixed on the master ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1017324188
https://github.com/root-project/root/issues/9594#issuecomment-1017324188:99,Usability,usab,usable,99,"Any plan when this can be addressed, at least for v6-26-00-patches? The LCG nightlies are not very usable at the moment.; Can I suggest to revet the patch for v6-26-00-patches and re-port it when it is fixed on the master ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1017324188
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:70,Availability,down,downstream,70,"While ROOT master is now building successfully for us, there are some downstream packages that suffer from this change. They can probably be fixed by exporting the ROOT_INCLUDE_PATH, but to better understand where things go wrong I made a very simple repeater. I think on any centos7 with the sft cvmfs this should work; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/CMake/3.20.0/x86_64-centos7-gcc10-dbg/CMake-env.sh; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/ROOT-env.sh. git clone https://gitlab.cern.ch/sailer/root_repeater.git; cd root_repeater; mkdir build; cd build. cmake -D nlohmann_json_DIR=$JSONMCPP__HOME/lib64/cmake/nlohmann_json \; -D Python_ROOT_DIR=$PYTHON__HOME \; -D Vc_DIR=$VC__HOME/lib/cmake/Vc \; ..; make; ./RunTest; ```. Just linking an executable to ROOTTPython (https://gitlab.cern.ch/sailer/root_repeater/-/blob/master/CMakeLists.txt#L17); leads to an error like this; ```; ./RunTest ; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:948,Availability,error,error,948,"While ROOT master is now building successfully for us, there are some downstream packages that suffer from this change. They can probably be fixed by exporting the ROOT_INCLUDE_PATH, but to better understand where things go wrong I made a very simple repeater. I think on any centos7 with the sft cvmfs this should work; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/CMake/3.20.0/x86_64-centos7-gcc10-dbg/CMake-env.sh; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/ROOT-env.sh. git clone https://gitlab.cern.ch/sailer/root_repeater.git; cd root_repeater; mkdir build; cd build. cmake -D nlohmann_json_DIR=$JSONMCPP__HOME/lib64/cmake/nlohmann_json \; -D Python_ROOT_DIR=$PYTHON__HOME \; -D Vc_DIR=$VC__HOME/lib/cmake/Vc \; ..; make; ./RunTest; ```. Just linking an executable to ROOTTPython (https://gitlab.cern.ch/sailer/root_repeater/-/blob/master/CMakeLists.txt#L17); leads to an error like this; ```; ./RunTest ; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1029,Availability,error,error,1029,"e are some downstream packages that suffer from this change. They can probably be fixed by exporting the ROOT_INCLUDE_PATH, but to better understand where things go wrong I made a very simple repeater. I think on any centos7 with the sft cvmfs this should work; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/CMake/3.20.0/x86_64-centos7-gcc10-dbg/CMake-env.sh; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/ROOT-env.sh. git clone https://gitlab.cern.ch/sailer/root_repeater.git; cd root_repeater; mkdir build; cd build. cmake -D nlohmann_json_DIR=$JSONMCPP__HOME/lib64/cmake/nlohmann_json \; -D Python_ROOT_DIR=$PYTHON__HOME \; -D Vc_DIR=$VC__HOME/lib/cmake/Vc \; ..; make; ./RunTest; ```. Just linking an executable to ROOTTPython (https://gitlab.cern.ch/sailer/root_repeater/-/blob/master/CMakeLists.txt#L17); leads to an error like this; ```; ./RunTest ; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:4406,Availability,error,error,4406,"SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed.; Aborted (core dumped); ```; Even though Vc.pcm is sitting right next to MathCore.pcm; export ROOT_INCLUDE_PATH does solve this problem (see the other tests in the repeater), but at least to me this behaviour or at least the error message seems questionable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:4412,Integrability,message,message,4412,"SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed.; Aborted (core dumped); ```; Even though Vc.pcm is sitting right next to MathCore.pcm; export ROOT_INCLUDE_PATH does solve this problem (see the other tests in the repeater), but at least to me this behaviour or at least the error message seems questionable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1383,Performance,load,load,1383,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1415,Performance,load,load,1415,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1443,Performance,load,load,1443,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1480,Performance,load,load,1480,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1510,Performance,load,load,1510,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1544,Performance,load,load,1544,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1579,Performance,load,load,1579,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1608,Performance,load,load,1608,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1637,Performance,load,load,1637,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1669,Performance,load,load,1669,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1702,Performance,load,load,1702,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1732,Performance,load,load,1732,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1761,Performance,load,load,1761,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1792,Performance,load,load,1792,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1819,Performance,load,load,1819,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1854,Performance,load,load,1854,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1888,Performance,load,load,1888,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1919,Performance,load,load,1919,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1945,Performance,load,load,1945,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1973,Performance,load,load,1973,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2008,Performance,load,load,2008,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2040,Performance,load,load,2040,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2070,Performance,load,load,2070,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2098,Performance,load,load,2098,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2126,Performance,load,load,2126,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2157,Performance,load,load,2157,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2185,Performance,load,load,2185,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2216,Performance,load,load,2216,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2250,Performance,load,load,2250,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2281,Performance,load,load,2281,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2308,Performance,load,load,2308,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2338,Performance,load,load,2338,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2366,Performance,load,load,2366,cm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2400,Performance,load,load,2400,e; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2427,Performance,load,load,2427,st; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2456,Performance,load,load,2456,TBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2485,Performance,load,load,2485,dule Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2515,Performance,load,load,2515,dule RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2543,Performance,load,load,2543,oad module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2575,Performance,load,load,2575,o load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2622,Performance,load,load,2622,P; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2657,Performance,load,load,2657,Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2686,Performance,load,load,2686,aw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2716,Performance,load,load,2716,an; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2743,Performance,load,load,2743,uadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module RO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2775,Performance,load,load,2775,tic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module Tr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2803,Performance,load,load,2803,ve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2833,Performance,load,load,2833,Painter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2871,Performance,load,load,2871,wer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2905,Performance,load,load,2905,; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2932,Performance,load,load,2932, Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nig,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2968,Performance,load,load,2968,to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2999,Performance,load,load,2999,led to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/ll,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3036,Performance,load,load,3036,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3071,Performance,load,load,3071,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3102,Performance,load,load,3102,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3134,Performance,load,load,3134,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3167,Performance,load,load,3167,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3195,Performance,load,load,3195,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3234,Performance,load,load,3234,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3265,Performance,load,load,3265,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3292,Performance,load,load,3292,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3329,Performance,load,load,3329,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3362,Performance,load,load,3362,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3399,Performance,load,load,3399,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3429,Performance,load,load,3429,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3459,Performance,load,load,3459,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3487,Performance,load,load,3487,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3521,Performance,load,load,3521,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3549,Performance,load,load,3549,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3577,Performance,load,load,3577,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3605,Performance,load,load,3605,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3639,Performance,load,load,3639,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3671,Performance,load,load,3671,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3701,Performance,load,load,3701,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3732,Performance,load,load,3732,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3764,Performance,load,load,3764,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3798,Performance,load,load,3798,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3836,Performance,load,load,3836,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3867,Performance,load,load,3867,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:4332,Testability,test,tests,4332,"SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed.; Aborted (core dumped); ```; Even though Vc.pcm is sitting right next to MathCore.pcm; export ROOT_INCLUDE_PATH does solve this problem (see the other tests in the repeater), but at least to me this behaviour or at least the error message seems questionable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1029801305:244,Usability,simpl,simple,244,"While ROOT master is now building successfully for us, there are some downstream packages that suffer from this change. They can probably be fixed by exporting the ROOT_INCLUDE_PATH, but to better understand where things go wrong I made a very simple repeater. I think on any centos7 with the sft cvmfs this should work; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/CMake/3.20.0/x86_64-centos7-gcc10-dbg/CMake-env.sh; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/ROOT-env.sh. git clone https://gitlab.cern.ch/sailer/root_repeater.git; cd root_repeater; mkdir build; cd build. cmake -D nlohmann_json_DIR=$JSONMCPP__HOME/lib64/cmake/nlohmann_json \; -D Python_ROOT_DIR=$PYTHON__HOME \; -D Vc_DIR=$VC__HOME/lib/cmake/Vc \; ..; make; ./RunTest; ```. Just linking an executable to ROOTTPython (https://gitlab.cern.ch/sailer/root_repeater/-/blob/master/CMakeLists.txt#L17); leads to an error like this; ```; ./RunTest ; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305
https://github.com/root-project/root/issues/9594#issuecomment-1850068597:34,Usability,clear,clear,34,"Based on the discussion, it's not clear to me if there's anything left to be done. Can we close this? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1850068597
https://github.com/root-project/root/issues/9595#issuecomment-1022484732:16,Deployability,patch,patch,16,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732
https://github.com/root-project/root/issues/9595#issuecomment-1022484732:221,Deployability,release,released,221,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732
https://github.com/root-project/root/issues/9595#issuecomment-1022484732:265,Deployability,patch,patch,265,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732
https://github.com/root-project/root/issues/9595#issuecomment-1022484732:332,Deployability,patch,patches,332,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732
https://github.com/root-project/root/issues/9595#issuecomment-1022484732:454,Deployability,patch,patches,454,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732
https://github.com/root-project/root/issues/9595#issuecomment-1022484732:554,Deployability,patch,patches-,554,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732
https://github.com/root-project/root/issues/9595#issuecomment-1022484732:721,Deployability,patch,patches,721,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732
https://github.com/root-project/root/issues/9595#issuecomment-1022484732:807,Deployability,patch,patches,807,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732
https://github.com/root-project/root/issues/9595#issuecomment-1022484732:937,Deployability,patch,patches,937,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732
https://github.com/root-project/root/issues/9595#issuecomment-1022484732:733,Usability,clear,clearly,733,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732
https://github.com/root-project/root/issues/9600#issuecomment-1018559183:676,Deployability,configurat,configuration,676,"This is kind of annoying, both locally and in Jenkins. Is it maybe as simple to solve as; ```diff; diff --git a/root/meta/MakeProject/CMakeLists.txt b/root/meta/MakeProject/CMakeLists.txt; index 308fa288..d090321f 100644; --- a/root/meta/MakeProject/CMakeLists.txt; +++ b/root/meta/MakeProject/CMakeLists.txt; @@ -1,4 +1,4 @@; -ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h); +ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h DEPENDS Hist) . if(ROOT_runtime_cxxmodules_FOUND); # FIXME: For C++ modules builds, module.modulemap is generated during configuration time; ```; ?. At least, this makes `ninja stl_makeproject_test` succeed on a freshly configured build for me :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600#issuecomment-1018559183
https://github.com/root-project/root/issues/9600#issuecomment-1018559183:676,Modifiability,config,configuration,676,"This is kind of annoying, both locally and in Jenkins. Is it maybe as simple to solve as; ```diff; diff --git a/root/meta/MakeProject/CMakeLists.txt b/root/meta/MakeProject/CMakeLists.txt; index 308fa288..d090321f 100644; --- a/root/meta/MakeProject/CMakeLists.txt; +++ b/root/meta/MakeProject/CMakeLists.txt; @@ -1,4 +1,4 @@; -ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h); +ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h DEPENDS Hist) . if(ROOT_runtime_cxxmodules_FOUND); # FIXME: For C++ modules builds, module.modulemap is generated during configuration time; ```; ?. At least, this makes `ninja stl_makeproject_test` succeed on a freshly configured build for me :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600#issuecomment-1018559183
https://github.com/root-project/root/issues/9600#issuecomment-1018559183:775,Modifiability,config,configured,775,"This is kind of annoying, both locally and in Jenkins. Is it maybe as simple to solve as; ```diff; diff --git a/root/meta/MakeProject/CMakeLists.txt b/root/meta/MakeProject/CMakeLists.txt; index 308fa288..d090321f 100644; --- a/root/meta/MakeProject/CMakeLists.txt; +++ b/root/meta/MakeProject/CMakeLists.txt; @@ -1,4 +1,4 @@; -ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h); +ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h DEPENDS Hist) . if(ROOT_runtime_cxxmodules_FOUND); # FIXME: For C++ modules builds, module.modulemap is generated during configuration time; ```; ?. At least, this makes `ninja stl_makeproject_test` succeed on a freshly configured build for me :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600#issuecomment-1018559183
https://github.com/root-project/root/issues/9600#issuecomment-1018559183:70,Usability,simpl,simple,70,"This is kind of annoying, both locally and in Jenkins. Is it maybe as simple to solve as; ```diff; diff --git a/root/meta/MakeProject/CMakeLists.txt b/root/meta/MakeProject/CMakeLists.txt; index 308fa288..d090321f 100644; --- a/root/meta/MakeProject/CMakeLists.txt; +++ b/root/meta/MakeProject/CMakeLists.txt; @@ -1,4 +1,4 @@; -ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h); +ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h DEPENDS Hist) . if(ROOT_runtime_cxxmodules_FOUND); # FIXME: For C++ modules builds, module.modulemap is generated during configuration time; ```; ?. At least, this makes `ninja stl_makeproject_test` succeed on a freshly configured build for me :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600#issuecomment-1018559183
https://github.com/root-project/root/issues/9607#issuecomment-1016287337:16,Availability,error,errors,16,"I've seen those errors and I'll fix them. The only workaround for the time being is not to use `/permissive-` flag, unless you really need it, which is still not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607#issuecomment-1016287337
https://github.com/root-project/root/issues/9607#issuecomment-1016287337:162,Usability,clear,clear,162,"I've seen those errors and I'll fix them. The only workaround for the time being is not to use `/permissive-` flag, unless you really need it, which is still not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607#issuecomment-1016287337
https://github.com/root-project/root/pull/9610#issuecomment-1056797487:314,Integrability,interface,interface,314,"Thanks for your proposal! We won't need `std::shared_ptr<std::vector<Double_t>>` as datatype; `std::vector<Double_t>` would be enough as this allows cheap move operations. Then again, so does `Double_t *`. Did you consider simply implementing a move operator for `TGraph`?. We must avoid all backward incompatible interface changes. I didn't look in detail but the amount of code changes here suggests that this isn't the case for this draft?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1056797487
https://github.com/root-project/root/pull/9610#issuecomment-1056797487:282,Safety,avoid,avoid,282,"Thanks for your proposal! We won't need `std::shared_ptr<std::vector<Double_t>>` as datatype; `std::vector<Double_t>` would be enough as this allows cheap move operations. Then again, so does `Double_t *`. Did you consider simply implementing a move operator for `TGraph`?. We must avoid all backward incompatible interface changes. I didn't look in detail but the amount of code changes here suggests that this isn't the case for this draft?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1056797487
https://github.com/root-project/root/pull/9610#issuecomment-1056797487:223,Usability,simpl,simply,223,"Thanks for your proposal! We won't need `std::shared_ptr<std::vector<Double_t>>` as datatype; `std::vector<Double_t>` would be enough as this allows cheap move operations. Then again, so does `Double_t *`. Did you consider simply implementing a move operator for `TGraph`?. We must avoid all backward incompatible interface changes. I didn't look in detail but the amount of code changes here suggests that this isn't the case for this draft?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1056797487
https://github.com/root-project/root/pull/9611#issuecomment-1016215896:365,Usability,clear,clearly,365,"Thanks Enric!. > it also removes the part about AsRNode (to be discussed). how will users find out about the feature now? . > to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". good for me (EDIT: as long as we still clearly state that it's Python-only). > The doxygen entry for MakeNumpyDataFrame comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. MakeNumpyDataFrameImpl. Or we can surround it with `\cond`/`\endcond` doxygen commands. I don't have a preference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611#issuecomment-1016215896
https://github.com/root-project/root/pull/9611#issuecomment-1016215896:567,Usability,guid,guide,567,"Thanks Enric!. > it also removes the part about AsRNode (to be discussed). how will users find out about the feature now? . > to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". good for me (EDIT: as long as we still clearly state that it's Python-only). > The doxygen entry for MakeNumpyDataFrame comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. MakeNumpyDataFrameImpl. Or we can surround it with `\cond`/`\endcond` doxygen commands. I don't have a preference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611#issuecomment-1016215896
https://github.com/root-project/root/pull/9611#issuecomment-1016848413:252,Usability,clear,clearly,252,"> how will users find out about the feature now?. Indeed I wouldn't remove it, but we can discuss where we place it. What's the intended use case of `AsRNode`, pass an RDF object to C++ for further processing?. > good for me (EDIT: as long as we still clearly state that it's Python-only). Yes that's the case already in the current text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9611#issuecomment-1016848413
https://github.com/root-project/root/pull/9629#issuecomment-1040393898:12,Usability,feedback,feedback,12,Any further feedback on this PR ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9629#issuecomment-1040393898
https://github.com/root-project/root/pull/9643#issuecomment-1017950333:48,Availability,error,error,48,> I can't see the exact reason for clang-format error which is reported above. It simply fails for all PRs. No idea why,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9643#issuecomment-1017950333
https://github.com/root-project/root/pull/9643#issuecomment-1017950333:82,Usability,simpl,simply,82,> I can't see the exact reason for clang-format error which is reported above. It simply fails for all PRs. No idea why,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9643#issuecomment-1017950333
https://github.com/root-project/root/pull/9650#issuecomment-1020120699:656,Testability,log,log,656,"Something went wrong, it looks like you merged the master branch into your feature branch. We need to have one (or more) commit of yours on top of the master branch, like this:. ![image](https://user-images.githubusercontent.com/10999034/150794127-6b77d3bf-9a8d-4d8e-b697-134e1c51c426.png). Instead the current situation is:. ![image](https://user-images.githubusercontent.com/10999034/150794245-1d6abf5e-2011-43fa-b598-8bb4a55c4f35.png). Usually I use `git rebase --interactive` from the command line to fix these kind of issues, see e.g. https://www.sitepoint.com/git-interactive-rebase-guide/ . To display the state of the repository I use a custom git log command that basically runs `git log --graph --decorate --oneline --abbrev-commit`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650#issuecomment-1020120699
https://github.com/root-project/root/pull/9650#issuecomment-1020120699:693,Testability,log,log,693,"Something went wrong, it looks like you merged the master branch into your feature branch. We need to have one (or more) commit of yours on top of the master branch, like this:. ![image](https://user-images.githubusercontent.com/10999034/150794127-6b77d3bf-9a8d-4d8e-b697-134e1c51c426.png). Instead the current situation is:. ![image](https://user-images.githubusercontent.com/10999034/150794245-1d6abf5e-2011-43fa-b598-8bb4a55c4f35.png). Usually I use `git rebase --interactive` from the command line to fix these kind of issues, see e.g. https://www.sitepoint.com/git-interactive-rebase-guide/ . To display the state of the repository I use a custom git log command that basically runs `git log --graph --decorate --oneline --abbrev-commit`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650#issuecomment-1020120699
https://github.com/root-project/root/pull/9650#issuecomment-1020120699:589,Usability,guid,guide,589,"Something went wrong, it looks like you merged the master branch into your feature branch. We need to have one (or more) commit of yours on top of the master branch, like this:. ![image](https://user-images.githubusercontent.com/10999034/150794127-6b77d3bf-9a8d-4d8e-b697-134e1c51c426.png). Instead the current situation is:. ![image](https://user-images.githubusercontent.com/10999034/150794245-1d6abf5e-2011-43fa-b598-8bb4a55c4f35.png). Usually I use `git rebase --interactive` from the command line to fix these kind of issues, see e.g. https://www.sitepoint.com/git-interactive-rebase-guide/ . To display the state of the repository I use a custom git log command that basically runs `git log --graph --decorate --oneline --abbrev-commit`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9650#issuecomment-1020120699
https://github.com/root-project/root/pull/9654#issuecomment-1074169606:12,Usability,feedback,feedback,12,any further feedback on this one? (I think I am not changing code in any part),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9654#issuecomment-1074169606
https://github.com/root-project/root/issues/9664#issuecomment-1020964451:166,Usability,learn,learned,166,What Cling is really crashing on is the definition of `art::ensurePointer` or more precisely any function definition with a `try`-`catch` block as body (which I just learned is valid C++...). The problem can be seen with; ```c++; .rawInput; void f() try { } catch (...) { }; ```; (on the ROOT prompt),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664#issuecomment-1020964451
https://github.com/root-project/root/issues/9664#issuecomment-1021074174:168,Usability,learn,learned,168,"> What Cling is really crashing on is the definition of `art::ensurePointer` or more precisely any function definition with a `try`-`catch` block as body (which I just learned is valid C++...). The problem can be seen with; > ; > ```c++; > .rawInput; > void f() try { } catch (...) { }; > ```; > ; > (on the ROOT prompt). Yeah, that's a common pitfall, where the assumption that the function's body is a CompoundStmt is incorrect. I suspect the fix is trivial?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9664#issuecomment-1021074174
https://github.com/root-project/root/pull/9671#issuecomment-1019956657:50,Usability,simpl,simply,50,"Bertrand,; In my mind, after PR #9669 merged, one simply can remove build/win directory from includes at all - also inside ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9671#issuecomment-1019956657
https://github.com/root-project/root/pull/9671#issuecomment-1019957172:51,Usability,simpl,simply,51,"> Bertrand, In my mind, after PR #9669 merged, one simply can remove build/win directory from includes at all - also inside ROOT. Nope, it doesn't work. It would require more changes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9671#issuecomment-1019957172
https://github.com/root-project/root/pull/9673#issuecomment-1020020820:80,Usability,undo,undocumented,80,"One trick would be to set: WARN_NO_PARAMDOC to YES in the Doxyfile, to find all undocumented params",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9673#issuecomment-1020020820
https://github.com/root-project/root/pull/9673#issuecomment-1020117649:98,Usability,undo,undocumented,98,"@ferdymercury ; > One trick would be to set: WARN_NO_PARAMDOC to YES in the Doxyfile, to find all undocumented params. That was not the point. This fixes properly document the class members (sorry ""parameters"" was not the right word) with the `///<` tag.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9673#issuecomment-1020117649
https://github.com/root-project/root/pull/9747#issuecomment-1024992856:179,Deployability,update,updated,179,"Hi @lmoneta, thanks for the review! You are right, it's not a sustainable solution to duplicate the interfaces if we want to accept `std::string` more generally in RooFit. I have updated the PR with a new intermediate class that can be used for the interfaces. The intermediate class, `RooStringView`, is simply a wrapper around `const char*` that can also be constructed from a `std::string`. Note that this is different from `std::string_view`, which is not null-terminated and therefore needs a copy when turned into a `const char*`, so we couldn't use that in RooFit interfaces without introducing superfluous copies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747#issuecomment-1024992856
https://github.com/root-project/root/pull/9747#issuecomment-1024992856:62,Energy Efficiency,sustainab,sustainable,62,"Hi @lmoneta, thanks for the review! You are right, it's not a sustainable solution to duplicate the interfaces if we want to accept `std::string` more generally in RooFit. I have updated the PR with a new intermediate class that can be used for the interfaces. The intermediate class, `RooStringView`, is simply a wrapper around `const char*` that can also be constructed from a `std::string`. Note that this is different from `std::string_view`, which is not null-terminated and therefore needs a copy when turned into a `const char*`, so we couldn't use that in RooFit interfaces without introducing superfluous copies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747#issuecomment-1024992856
https://github.com/root-project/root/pull/9747#issuecomment-1024992856:100,Integrability,interface,interfaces,100,"Hi @lmoneta, thanks for the review! You are right, it's not a sustainable solution to duplicate the interfaces if we want to accept `std::string` more generally in RooFit. I have updated the PR with a new intermediate class that can be used for the interfaces. The intermediate class, `RooStringView`, is simply a wrapper around `const char*` that can also be constructed from a `std::string`. Note that this is different from `std::string_view`, which is not null-terminated and therefore needs a copy when turned into a `const char*`, so we couldn't use that in RooFit interfaces without introducing superfluous copies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747#issuecomment-1024992856
https://github.com/root-project/root/pull/9747#issuecomment-1024992856:249,Integrability,interface,interfaces,249,"Hi @lmoneta, thanks for the review! You are right, it's not a sustainable solution to duplicate the interfaces if we want to accept `std::string` more generally in RooFit. I have updated the PR with a new intermediate class that can be used for the interfaces. The intermediate class, `RooStringView`, is simply a wrapper around `const char*` that can also be constructed from a `std::string`. Note that this is different from `std::string_view`, which is not null-terminated and therefore needs a copy when turned into a `const char*`, so we couldn't use that in RooFit interfaces without introducing superfluous copies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747#issuecomment-1024992856
https://github.com/root-project/root/pull/9747#issuecomment-1024992856:314,Integrability,wrap,wrapper,314,"Hi @lmoneta, thanks for the review! You are right, it's not a sustainable solution to duplicate the interfaces if we want to accept `std::string` more generally in RooFit. I have updated the PR with a new intermediate class that can be used for the interfaces. The intermediate class, `RooStringView`, is simply a wrapper around `const char*` that can also be constructed from a `std::string`. Note that this is different from `std::string_view`, which is not null-terminated and therefore needs a copy when turned into a `const char*`, so we couldn't use that in RooFit interfaces without introducing superfluous copies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747#issuecomment-1024992856
https://github.com/root-project/root/pull/9747#issuecomment-1024992856:571,Integrability,interface,interfaces,571,"Hi @lmoneta, thanks for the review! You are right, it's not a sustainable solution to duplicate the interfaces if we want to accept `std::string` more generally in RooFit. I have updated the PR with a new intermediate class that can be used for the interfaces. The intermediate class, `RooStringView`, is simply a wrapper around `const char*` that can also be constructed from a `std::string`. Note that this is different from `std::string_view`, which is not null-terminated and therefore needs a copy when turned into a `const char*`, so we couldn't use that in RooFit interfaces without introducing superfluous copies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747#issuecomment-1024992856
https://github.com/root-project/root/pull/9747#issuecomment-1024992856:305,Usability,simpl,simply,305,"Hi @lmoneta, thanks for the review! You are right, it's not a sustainable solution to duplicate the interfaces if we want to accept `std::string` more generally in RooFit. I have updated the PR with a new intermediate class that can be used for the interfaces. The intermediate class, `RooStringView`, is simply a wrapper around `const char*` that can also be constructed from a `std::string`. Note that this is different from `std::string_view`, which is not null-terminated and therefore needs a copy when turned into a `const char*`, so we couldn't use that in RooFit interfaces without introducing superfluous copies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9747#issuecomment-1024992856
https://github.com/root-project/root/issues/9763#issuecomment-1026698105:114,Deployability,configurat,configuration,114,"In any case the `zoombox` for 1D is managed in `TPad.cxx`. I de-activated the alpha mode on Mac to be in the same configuration as yourself. But even with your example I do not see any artefact. May be you can deactivate the zoombox in `TPad::ExecuteEventAxis` and see if the artefact remains ? By the way if you do a simple drawing of a 1D histogram and try to zoom it, do you also see the artefact ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026698105
https://github.com/root-project/root/issues/9763#issuecomment-1026698105:114,Modifiability,config,configuration,114,"In any case the `zoombox` for 1D is managed in `TPad.cxx`. I de-activated the alpha mode on Mac to be in the same configuration as yourself. But even with your example I do not see any artefact. May be you can deactivate the zoombox in `TPad::ExecuteEventAxis` and see if the artefact remains ? By the way if you do a simple drawing of a 1D histogram and try to zoom it, do you also see the artefact ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026698105
https://github.com/root-project/root/issues/9763#issuecomment-1026698105:318,Usability,simpl,simple,318,"In any case the `zoombox` for 1D is managed in `TPad.cxx`. I de-activated the alpha mode on Mac to be in the same configuration as yourself. But even with your example I do not see any artefact. May be you can deactivate the zoombox in `TPad::ExecuteEventAxis` and see if the artefact remains ? By the way if you do a simple drawing of a 1D histogram and try to zoom it, do you also see the artefact ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026698105
https://github.com/root-project/root/issues/9763#issuecomment-1026887078:21,Usability,simpl,simple,21,"Yes, I see it with a simple 1D histogram, too, no need for secondary axes. But... Ok I found out the issue. I do see the artifact only if I call:; `c->SetFillStyle(0);`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026887078
https://github.com/root-project/root/issues/9763#issuecomment-1026929100:7,Usability,simpl,simple,7,"A more simple reproducer here shows the same effect on Ubuntu 18:; ```; TCanvas* c = new TCanvas(); TH1* h = new TH1F(""h"",""h"",100,0,10); c->SetFillStyle(0); h->Draw(); ```. ![image](https://user-images.githubusercontent.com/10653970/151991662-805da339-fd11-4490-9d08-631526798254.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026929100
https://github.com/root-project/root/issues/9763#issuecomment-1027002365:161,Deployability,release,release,161,"> May be you can deactivate the zoombox in `TPad::ExecuteEventAxis` and see if the artifact remains ?. If I deactivate the 'removal' of the zoombox after button release, I get this on Ubuntu 20:; ![image](https://user-images.githubusercontent.com/10653970/151999027-9261c038-1725-42d9-bb89-4aa43333c7fd.png). I can move around with the zoombox, make it smaller, etc. and the artifact is still there. Touching on the canvas does not clear the artifacts, which surprises me!. ![image](https://user-images.githubusercontent.com/10653970/151999166-f26ae15b-53d9-4b9e-a08d-fe6afa784214.png). Only if I right click on the box, ""Delete"", the artifacts go away. (without having to click on the canvas)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1027002365
https://github.com/root-project/root/issues/9763#issuecomment-1027002365:432,Usability,clear,clear,432,"> May be you can deactivate the zoombox in `TPad::ExecuteEventAxis` and see if the artifact remains ?. If I deactivate the 'removal' of the zoombox after button release, I get this on Ubuntu 20:; ![image](https://user-images.githubusercontent.com/10653970/151999027-9261c038-1725-42d9-bb89-4aa43333c7fd.png). I can move around with the zoombox, make it smaller, etc. and the artifact is still there. Touching on the canvas does not clear the artifacts, which surprises me!. ![image](https://user-images.githubusercontent.com/10653970/151999166-f26ae15b-53d9-4b9e-a08d-fe6afa784214.png). Only if I right click on the box, ""Delete"", the artifacts go away. (without having to click on the canvas)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1027002365
https://github.com/root-project/root/pull/9804#issuecomment-1029077291:277,Usability,simpl,simply,277,"I don't think the issue is with `copy_if_different` - I bet you'd see the same behavior if you were to use `copy` instead. My guess is that this is caused by CMake determining that the `DEPENDENCY` is older than the target, thus no need to run the command. What happens if you simply remove the DEPENDENCY, such that `copy_if_different` (which should *not* look at filestamps) is run unconditionally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9804#issuecomment-1029077291
https://github.com/root-project/root/pull/9804#issuecomment-1029083072:22,Usability,simpl,simply,22,> What happens if you simply remove the DEPENDENCY. Then rule executed only once when target file is not exists.; Any following changes in source will have no effect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9804#issuecomment-1029083072
https://github.com/root-project/root/issues/9805#issuecomment-1600982681:105,Usability,simpl,simple,105,We completely agree and the above PR implements what you propose. Apologies for the long wait for such a simple thing!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9805#issuecomment-1600982681
https://github.com/root-project/root/pull/9818#issuecomment-1031394700:35,Testability,test,test,35,"Can you add this to a super simple test, just to make sure we compile this case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9818#issuecomment-1031394700
https://github.com/root-project/root/pull/9818#issuecomment-1031394700:28,Usability,simpl,simple,28,"Can you add this to a super simple test, just to make sure we compile this case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9818#issuecomment-1031394700
https://github.com/root-project/root/issues/9869#issuecomment-1036281020:65,Usability,simpl,simply,65,"I have not completely understood why it crashed but that 's not ""simply"" because of the Drawing option. For instance if you move the `pad` creation and the `pad` Draw just before the `pad->cd() ` then it does not crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9869#issuecomment-1036281020
https://github.com/root-project/root/issues/9869#issuecomment-1036292700:40,Usability,simpl,simpler,40,"Indeed, nothing to do with TF2. An even simpler reproducer is:; ```; void w(); {; auto c1 = new TCanvas();; auto pad = new TPad(""p"",""p"", 0.5, 0 , 1., 1);; pad->Draw();. auto h0 = new TH2F(""h0"",""h0"", 10, 0.02, 15, 10, -8, 8);; h0->Draw();. // pad ->cd(); // uncomment this line an it will crash. auto h1 = new TH2F(""h1"",""h1"", 10, 0.01, 14, 10, -10, 10);; h1->Draw(""same"");; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9869#issuecomment-1036292700
https://github.com/root-project/root/issues/9869#issuecomment-1036303797:64,Usability,simpl,simple,64,I have no idea either yet .. but we should start from my latest simple reproducer.; It is much simpler than the initial example.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9869#issuecomment-1036303797
https://github.com/root-project/root/issues/9869#issuecomment-1036303797:95,Usability,simpl,simpler,95,I have no idea either yet .. but we should start from my latest simple reproducer.; It is much simpler than the initial example.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9869#issuecomment-1036303797
https://github.com/root-project/root/issues/9869#issuecomment-1036371552:98,Usability,clear,cleared,98,"I found in TH1::Draw(), line 3096. gPad->Clear();. If ""same"" not specified as draw option, pad is cleared.; Mean TPad object will be deleted. Not a nice feature, one always should draw histogram with care.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9869#issuecomment-1036371552
https://github.com/root-project/root/pull/9942#issuecomment-1061744458:1224,Integrability,interface,interface,1224,"> I might be missing something, but I think the C++ logic can be simplified by removing RTypeErasedMergeables: we should be able to just return a RMergeableVariations<T> (cast to RMergeableValueBase, from which it could inherit) from RVariedAction::GetMergeableValue. What do you think?. My understanding is as follows: `RVariedAction::GetMergeableValue`'s signature is `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const` . Inside the implementation of this function, I have no typename `T` with which I could construct internally a `std::vector<std::unique_ptr<RDFDetail::RMergeableValue<T>>>`. Thus, I need a struct that holds a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` (keep in mind that any subclass of `RActionImpl` defined in `ActionHelpers.hxx` has a method `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const`, so inside `RVariedAction`'s `GetMergeableValue` I don't have any information about the concrete mergeable value type).; I would also just return a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` directly from this method, but then I would break the pattern of passing around unique ptrs to `RMergeableValueBase` and I would need to change the interface just for `RVariedAction`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061744458
https://github.com/root-project/root/pull/9942#issuecomment-1061744458:220,Modifiability,inherit,inherit,220,"> I might be missing something, but I think the C++ logic can be simplified by removing RTypeErasedMergeables: we should be able to just return a RMergeableVariations<T> (cast to RMergeableValueBase, from which it could inherit) from RVariedAction::GetMergeableValue. What do you think?. My understanding is as follows: `RVariedAction::GetMergeableValue`'s signature is `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const` . Inside the implementation of this function, I have no typename `T` with which I could construct internally a `std::vector<std::unique_ptr<RDFDetail::RMergeableValue<T>>>`. Thus, I need a struct that holds a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` (keep in mind that any subclass of `RActionImpl` defined in `ActionHelpers.hxx` has a method `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const`, so inside `RVariedAction`'s `GetMergeableValue` I don't have any information about the concrete mergeable value type).; I would also just return a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` directly from this method, but then I would break the pattern of passing around unique ptrs to `RMergeableValueBase` and I would need to change the interface just for `RVariedAction`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061744458
https://github.com/root-project/root/pull/9942#issuecomment-1061744458:52,Testability,log,logic,52,"> I might be missing something, but I think the C++ logic can be simplified by removing RTypeErasedMergeables: we should be able to just return a RMergeableVariations<T> (cast to RMergeableValueBase, from which it could inherit) from RVariedAction::GetMergeableValue. What do you think?. My understanding is as follows: `RVariedAction::GetMergeableValue`'s signature is `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const` . Inside the implementation of this function, I have no typename `T` with which I could construct internally a `std::vector<std::unique_ptr<RDFDetail::RMergeableValue<T>>>`. Thus, I need a struct that holds a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` (keep in mind that any subclass of `RActionImpl` defined in `ActionHelpers.hxx` has a method `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const`, so inside `RVariedAction`'s `GetMergeableValue` I don't have any information about the concrete mergeable value type).; I would also just return a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` directly from this method, but then I would break the pattern of passing around unique ptrs to `RMergeableValueBase` and I would need to change the interface just for `RVariedAction`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061744458
https://github.com/root-project/root/pull/9942#issuecomment-1061744458:65,Usability,simpl,simplified,65,"> I might be missing something, but I think the C++ logic can be simplified by removing RTypeErasedMergeables: we should be able to just return a RMergeableVariations<T> (cast to RMergeableValueBase, from which it could inherit) from RVariedAction::GetMergeableValue. What do you think?. My understanding is as follows: `RVariedAction::GetMergeableValue`'s signature is `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const` . Inside the implementation of this function, I have no typename `T` with which I could construct internally a `std::vector<std::unique_ptr<RDFDetail::RMergeableValue<T>>>`. Thus, I need a struct that holds a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` (keep in mind that any subclass of `RActionImpl` defined in `ActionHelpers.hxx` has a method `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const`, so inside `RVariedAction`'s `GetMergeableValue` I don't have any information about the concrete mergeable value type).; I would also just return a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` directly from this method, but then I would break the pattern of passing around unique ptrs to `RMergeableValueBase` and I would need to change the interface just for `RVariedAction`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061744458
https://github.com/root-project/root/pull/9942#issuecomment-1061811239:193,Usability,clear,clear,193,"I see, then how about the following. It's basically a rename of `RTypeErasedMergeables` to `RMergeableVariationsBase` so that the usage as a type-erased version of `RMergeableVariations<T>` is clear, plus it removes the duplication of `fValues`, `fNames` data members and it adds a converting constructor that substitutes the ""manual"" conversion that we currently do in `GetMergeableValue(RResultMap<T>)`: . ```cpp; class RMergeableVariationsBase : public RMergeableValueBase {; vector<string> fNames;; vector<unique_ptr<RMergeableValueBase>> fValues;; public:; RMergeableVariationsBase(vector<string> &&names, vector<unique_ptr<RMergeableValueBase> &&values);; };. template <typename T>; class RMergeableVariations : public RMergeableVariationsBase {; public:; RMergeableVariations(RMergeableVariationsBase &&b) : RMergeableVariationsBase(std::move(b.fNames), std::move(b.fValues)) {}; };. std::unique_ptr<RMergeableValueBase> RVariedAction::GetMergeableValue() const; {; // ...; return std::make_unique<RMergeableVariationsBase>(std::move(keys), std::move(values));; }; ```. That is not more code than we have now, and it should enable a much simpler `GetMergeableValue`:. ```cpp; template <typename T>; std::unique_ptr<RMergeableVariations<T>> GetMergeableValue(ROOT::RDF::Experimental::RResultMap<T> &rmap); {; if (!rmap.fAction->HasRun()); rmap.fLoopManager->Run(); // Prevents from using `const` specifier in parameter. auto mergeable = rmap.fAction->GetMergeableValue();; return std::make_unique<RMergeableVariations<T>>(std::move(*mergeable));; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061811239
https://github.com/root-project/root/pull/9942#issuecomment-1061811239:1145,Usability,simpl,simpler,1145,"I see, then how about the following. It's basically a rename of `RTypeErasedMergeables` to `RMergeableVariationsBase` so that the usage as a type-erased version of `RMergeableVariations<T>` is clear, plus it removes the duplication of `fValues`, `fNames` data members and it adds a converting constructor that substitutes the ""manual"" conversion that we currently do in `GetMergeableValue(RResultMap<T>)`: . ```cpp; class RMergeableVariationsBase : public RMergeableValueBase {; vector<string> fNames;; vector<unique_ptr<RMergeableValueBase>> fValues;; public:; RMergeableVariationsBase(vector<string> &&names, vector<unique_ptr<RMergeableValueBase> &&values);; };. template <typename T>; class RMergeableVariations : public RMergeableVariationsBase {; public:; RMergeableVariations(RMergeableVariationsBase &&b) : RMergeableVariationsBase(std::move(b.fNames), std::move(b.fValues)) {}; };. std::unique_ptr<RMergeableValueBase> RVariedAction::GetMergeableValue() const; {; // ...; return std::make_unique<RMergeableVariationsBase>(std::move(keys), std::move(values));; }; ```. That is not more code than we have now, and it should enable a much simpler `GetMergeableValue`:. ```cpp; template <typename T>; std::unique_ptr<RMergeableVariations<T>> GetMergeableValue(ROOT::RDF::Experimental::RResultMap<T> &rmap); {; if (!rmap.fAction->HasRun()); rmap.fLoopManager->Run(); // Prevents from using `const` specifier in parameter. auto mergeable = rmap.fAction->GetMergeableValue();; return std::make_unique<RMergeableVariations<T>>(std::move(*mergeable));; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061811239
https://github.com/root-project/root/pull/9947#issuecomment-1072702588:677,Availability,alive,alive,677,"After discussion, we decided to go back to the original simpler design for this PR, which effectively accounts for the following usecase: user wants to open a file, write some stuff to it or read objects and get information from them, in an ""encapsulated"" environment, finally closing the file. The ROOT objects attached to the file will be `None`ified at the end of the context, but they can be detached with the `SetDirectory` method. The other use case imagined, where a user wants to `cd` into some file to get objects from it and then let those objects survive while returning to the previous directory, is addressed by #10167 . Notably, that behaviour will keep the file alive, so that also the special objects like TTree and RNTuple can properly survive the `with` context",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9947#issuecomment-1072702588
https://github.com/root-project/root/pull/9947#issuecomment-1072702588:56,Usability,simpl,simpler,56,"After discussion, we decided to go back to the original simpler design for this PR, which effectively accounts for the following usecase: user wants to open a file, write some stuff to it or read objects and get information from them, in an ""encapsulated"" environment, finally closing the file. The ROOT objects attached to the file will be `None`ified at the end of the context, but they can be detached with the `SetDirectory` method. The other use case imagined, where a user wants to `cd` into some file to get objects from it and then let those objects survive while returning to the previous directory, is addressed by #10167 . Notably, that behaviour will keep the file alive, so that also the special objects like TTree and RNTuple can properly survive the `with` context",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9947#issuecomment-1072702588
https://github.com/root-project/root/pull/9966#issuecomment-1081606634:101,Usability,simpl,simple,101,"Well, I do not think we can rely on a given bash version just to get a pid .; Can we not have a more simple standard way to get a such identifier ?; or may be we can just have a counter ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081606634
https://github.com/root-project/root/pull/9966#issuecomment-1081646859:25,Usability,simpl,simple,25,"> Can we not have a more simple standard way to get a such identifier ?. I commited a fix, would you mind giving it a try ?. Thanks! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081646859
https://github.com/root-project/root/pull/9966#issuecomment-1081920556:20,Testability,test,test,20,"BTW, why doing this test ? we have something working with all bash versions, simply use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081920556
https://github.com/root-project/root/pull/9966#issuecomment-1081920556:77,Usability,simpl,simply,77,"BTW, why doing this test ? we have something working with all bash versions, simply use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081920556
https://github.com/root-project/root/pull/9966#issuecomment-1081930311:22,Testability,test,test,22,"> BTW, why doing this test ? we have something working with all bash versions, simply use it. good point. I just changed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081930311
https://github.com/root-project/root/pull/9966#issuecomment-1081930311:79,Usability,simpl,simply,79,"> BTW, why doing this test ? we have something working with all bash versions, simply use it. good point. I just changed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081930311
https://github.com/root-project/root/pull/9966#issuecomment-1082799915:223,Usability,clear,clear,223,"> Side question. If you try opening the Cmakelists with QtCreator, does it run well, too?. Well, that QtCreator is still a bit weird to me. I opened the `CMakeLists.txt` file from `documentation/doxygen` but then it is not clear at all what to do . I prefer to concentrate on debugging the batch way which will be the one used at the end. Note: I get this:; <img width=""1217"" alt=""Screenshot 2022-03-30 at 10 47 14"" src=""https://user-images.githubusercontent.com/4697738/160791054-b9f80406-79fe-4389-a8fc-a2d7410254ba.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1082799915
https://github.com/root-project/root/pull/9966#issuecomment-1083459839:21,Usability,clear,clear,21,"> but then it is not clear at all what to do. - Click on ""Configure Project"".; - After that, you can override the default DOCU_INPUT or DOCU_THREADS, or DOXYGEN_EXECUTABLE, as you consider. (under Projects, Build settings).; - Finally click on the Build icon (hammer).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1083459839
https://github.com/root-project/root/pull/9968#issuecomment-2076533633:50,Usability,clear,clear,50,@lmoneta the reason why this is not merged is not clear to me: could you clarify?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9968#issuecomment-2076533633
https://github.com/root-project/root/pull/9968#issuecomment-2076889507:653,Integrability,interface,interfaces,653,"> @lmoneta the reason why this is not merged is not clear to me: could you clarify?. Ah, now I remember!. This would be a backwards incompatible change, because it changes the meaning of. ```c++; TVectorD{5};; ```; Before, this created a vector with 5 zero elements. With this PR, it will create a vector with a single 5!. This is way too backwards incompatible to be merged. @hageboeck maybe came to the same conclusion, and for that reason decided to not continue working on this PR anymore. Making it work in a backwards compatible way is probably not worth the effort for a legacy pre-STL class like `TVector`. I would instead suggest to change the interfaces of for example TGraph so that they can take initializer lists directly without going over the `TVectorT`. We can also wait for C++26 [1], which will introduce a `std::span` constructor from initializer list. Then we also have the option to use `std::span` in the interfaces to cover this usecase without losing generality: a TVectorT can probably be converted to a `std::span` too. [1] https://en.cppreference.com/w/cpp/container/span/span",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9968#issuecomment-2076889507
https://github.com/root-project/root/pull/9968#issuecomment-2076889507:927,Integrability,interface,interfaces,927,"> @lmoneta the reason why this is not merged is not clear to me: could you clarify?. Ah, now I remember!. This would be a backwards incompatible change, because it changes the meaning of. ```c++; TVectorD{5};; ```; Before, this created a vector with 5 zero elements. With this PR, it will create a vector with a single 5!. This is way too backwards incompatible to be merged. @hageboeck maybe came to the same conclusion, and for that reason decided to not continue working on this PR anymore. Making it work in a backwards compatible way is probably not worth the effort for a legacy pre-STL class like `TVector`. I would instead suggest to change the interfaces of for example TGraph so that they can take initializer lists directly without going over the `TVectorT`. We can also wait for C++26 [1], which will introduce a `std::span` constructor from initializer list. Then we also have the option to use `std::span` in the interfaces to cover this usecase without losing generality: a TVectorT can probably be converted to a `std::span` too. [1] https://en.cppreference.com/w/cpp/container/span/span",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9968#issuecomment-2076889507
https://github.com/root-project/root/pull/9968#issuecomment-2076889507:52,Usability,clear,clear,52,"> @lmoneta the reason why this is not merged is not clear to me: could you clarify?. Ah, now I remember!. This would be a backwards incompatible change, because it changes the meaning of. ```c++; TVectorD{5};; ```; Before, this created a vector with 5 zero elements. With this PR, it will create a vector with a single 5!. This is way too backwards incompatible to be merged. @hageboeck maybe came to the same conclusion, and for that reason decided to not continue working on this PR anymore. Making it work in a backwards compatible way is probably not worth the effort for a legacy pre-STL class like `TVector`. I would instead suggest to change the interfaces of for example TGraph so that they can take initializer lists directly without going over the `TVectorT`. We can also wait for C++26 [1], which will introduce a `std::span` constructor from initializer list. Then we also have the option to use `std::span` in the interfaces to cover this usecase without losing generality: a TVectorT can probably be converted to a `std::span` too. [1] https://en.cppreference.com/w/cpp/container/span/span",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9968#issuecomment-2076889507
https://github.com/root-project/root/pull/9969#issuecomment-1050635411:409,Usability,responsiv,responsive,409,"> `core/clib/res/mmprivate.h` is ours. I'm relatively sure this also comes from somewhere, judging by the occurrences that I found with a quick web search ;-). > Could you have that ""survive"" in this / a PR and propose the other one upstream?. I've opened https://github.com/civetweb/civetweb/pull/1056 to upstream the fix into `civetweb`. My plan would be to wait a few days, the maintainer seems to be very responsive. If we cannot get it in, I'll back out the other fix to get that merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9969#issuecomment-1050635411
https://github.com/root-project/root/pull/9969#issuecomment-1054112351:390,Deployability,update,updated,390,"> > Could you have that ""survive"" in this / a PR and propose the other one upstream?; > ; > I've opened [civetweb/civetweb#1056](https://github.com/civetweb/civetweb/pull/1056) to upstream the fix into `civetweb`. My plan would be to wait a few days, the maintainer seems to be very responsive. If we cannot get it in, I'll back out the other fix to get that merged. Merged on Friday, I've updated the PR to move the `#include` where I put it for upstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9969#issuecomment-1054112351
https://github.com/root-project/root/pull/9969#issuecomment-1054112351:283,Usability,responsiv,responsive,283,"> > Could you have that ""survive"" in this / a PR and propose the other one upstream?; > ; > I've opened [civetweb/civetweb#1056](https://github.com/civetweb/civetweb/pull/1056) to upstream the fix into `civetweb`. My plan would be to wait a few days, the maintainer seems to be very responsive. If we cannot get it in, I'll back out the other fix to get that merged. Merged on Friday, I've updated the PR to move the `#include` where I put it for upstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9969#issuecomment-1054112351
https://github.com/root-project/root/pull/9969#issuecomment-1060995959:107,Usability,clear,clearly,107,"> Could some text be added to explain why the subtraction was needed and is no longer needed? (i.e. It was clearly intentional and the reason it was there may or may not be relevant anymore). The subtraction was never needed, this was a way to cast a pointer into an integer via a `ptrdiff_t`. I can elaborate on this, but I'm not sure this really adds value to archeological investigations that might ever come across this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9969#issuecomment-1060995959
https://github.com/root-project/root/pull/10043#issuecomment-1058334840:142,Safety,avoid,avoid,142,"Hi @guitargeek, yeah that does sound like a good idea. The reason why I kept the GetName() just as the class name for now is that I wanted to avoid building the full name as a char* to not have to deal with messy c-string concatenation in a very simple function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10043#issuecomment-1058334840
https://github.com/root-project/root/pull/10043#issuecomment-1058334840:246,Usability,simpl,simple,246,"Hi @guitargeek, yeah that does sound like a good idea. The reason why I kept the GetName() just as the class name for now is that I wanted to avoid building the full name as a char* to not have to deal with messy c-string concatenation in a very simple function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10043#issuecomment-1058334840
https://github.com/root-project/root/pull/10055#issuecomment-1060729822:10,Deployability,update,updated,10,"I see you updated the old user's guide changing `documentation/users-guide/Cling.md` . The this guide is not supposed to be updated. It is frozen. You should changed the ""Manual"" on the web of the reference guide (doxygen).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1060729822
https://github.com/root-project/root/pull/10055#issuecomment-1060729822:124,Deployability,update,updated,124,"I see you updated the old user's guide changing `documentation/users-guide/Cling.md` . The this guide is not supposed to be updated. It is frozen. You should changed the ""Manual"" on the web of the reference guide (doxygen).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1060729822
https://github.com/root-project/root/pull/10055#issuecomment-1060729822:33,Usability,guid,guide,33,"I see you updated the old user's guide changing `documentation/users-guide/Cling.md` . The this guide is not supposed to be updated. It is frozen. You should changed the ""Manual"" on the web of the reference guide (doxygen).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1060729822
https://github.com/root-project/root/pull/10055#issuecomment-1060729822:69,Usability,guid,guide,69,"I see you updated the old user's guide changing `documentation/users-guide/Cling.md` . The this guide is not supposed to be updated. It is frozen. You should changed the ""Manual"" on the web of the reference guide (doxygen).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1060729822
https://github.com/root-project/root/pull/10055#issuecomment-1060729822:96,Usability,guid,guide,96,"I see you updated the old user's guide changing `documentation/users-guide/Cling.md` . The this guide is not supposed to be updated. It is frozen. You should changed the ""Manual"" on the web of the reference guide (doxygen).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1060729822
https://github.com/root-project/root/pull/10055#issuecomment-1060729822:207,Usability,guid,guide,207,"I see you updated the old user's guide changing `documentation/users-guide/Cling.md` . The this guide is not supposed to be updated. It is frozen. You should changed the ""Manual"" on the web of the reference guide (doxygen).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1060729822
https://github.com/root-project/root/pull/10055#issuecomment-1060733471:15,Usability,feedback,feedback,15,Thanks for the feedback. Reverted now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1060733471
https://github.com/root-project/root/pull/10055#issuecomment-1066504266:41,Usability,guid,guide,41,"I see you also modified the primer. This guide as now 3 version. The one in the ROOT repo, the one on the web site and the Jupyter Notebook one which has its own repo. I think the idea will be to keep only one ie the Jupyter NB one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1066504266
https://github.com/root-project/root/issues/10056#issuecomment-1060855729:70,Usability,guid,guide,70,"But did you add the '?' before each command, as in the example ?. The guide says:; `Use ? to get help on all ‘‘raw’’ interpreter commands`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10056#issuecomment-1060855729
https://github.com/root-project/root/issues/10056#issuecomment-1060858993:17,Usability,guid,guide,17,But why does the guide tell you to put those question marks then?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10056#issuecomment-1060858993
https://github.com/root-project/root/issues/10065#issuecomment-1067013995:131,Usability,clear,clear,131,Can you suggest a PR and an expert of that part of ROOT will examine it ? Several things you mentioned here do not work or are not clear to me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10065#issuecomment-1067013995
https://github.com/root-project/root/issues/10065#issuecomment-1067891493:498,Modifiability,variab,variables,498,"@eguiraud concerning .O1, should i change in MetaSema ; (not yet implemented) --> (implemented only for 0 and 1 ?) -->changed; And should I add (not yet implemented) to .undo or .U ? --> it seems to work for me. Also, I see that '.include' is implemented, but not documented. Should I add it? --> added; .stats and .fileEx are documented but not sure what they do.; What else from the CINT table above should be added that has been lost during the translation?; For example, .g still prints global variables, but .l does no longer print local variables.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10065#issuecomment-1067891493
https://github.com/root-project/root/issues/10065#issuecomment-1067891493:543,Modifiability,variab,variables,543,"@eguiraud concerning .O1, should i change in MetaSema ; (not yet implemented) --> (implemented only for 0 and 1 ?) -->changed; And should I add (not yet implemented) to .undo or .U ? --> it seems to work for me. Also, I see that '.include' is implemented, but not documented. Should I add it? --> added; .stats and .fileEx are documented but not sure what they do.; What else from the CINT table above should be added that has been lost during the translation?; For example, .g still prints global variables, but .l does no longer print local variables.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10065#issuecomment-1067891493
https://github.com/root-project/root/issues/10065#issuecomment-1067891493:170,Usability,undo,undo,170,"@eguiraud concerning .O1, should i change in MetaSema ; (not yet implemented) --> (implemented only for 0 and 1 ?) -->changed; And should I add (not yet implemented) to .undo or .U ? --> it seems to work for me. Also, I see that '.include' is implemented, but not documented. Should I add it? --> added; .stats and .fileEx are documented but not sure what they do.; What else from the CINT table above should be added that has been lost during the translation?; For example, .g still prints global variables, but .l does no longer print local variables.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10065#issuecomment-1067891493
https://github.com/root-project/root/pull/10077#issuecomment-1062072980:204,Usability,clear,clear,204,"This looks pretty good. One potential drawback (or maybe it is 'documented away') is that we now have 'more' possibility of the git tag and its RVersion.hxx to be out-of-sync. . Another thing that is not clear is whether (or not) we are losing the recording of the git commit in the ROOT banner:; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Feb 03 2022, 23:36:26 |; | From heads/pairOffset@v6-25-02-395-g873cf57666 |; | With Apple clang version 12.0.0 (clang-1200.0.32.29) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10077#issuecomment-1062072980
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:877,Availability,error,errors,877,"@Axel-Naumann Many thanks for the detailed and friendly reply! :+1: . > Do you have a proposal for the latter? We can add a new boolean constructor argument, `failOnUnknownArgs = false` which we set to `true` in ROOT. Indeed, I believe the additional constructor argument is best. ; The only other solution which comes to mind (if it would not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:2110,Integrability,inject,inject,2110,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:2044,Security,access,accessible,2044,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:2110,Security,inject,inject,2110,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:777,Testability,test,test,777,"@Axel-Naumann Many thanks for the detailed and friendly reply! :+1: . > Do you have a proposal for the latter? We can add a new boolean constructor argument, `failOnUnknownArgs = false` which we set to `true` in ROOT. Indeed, I believe the additional constructor argument is best. ; The only other solution which comes to mind (if it would not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:796,Testability,test,test,796,"@Axel-Naumann Many thanks for the detailed and friendly reply! :+1: . > Do you have a proposal for the latter? We can add a new boolean constructor argument, `failOnUnknownArgs = false` which we set to `true` in ROOT. Indeed, I believe the additional constructor argument is best. ; The only other solution which comes to mind (if it would not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:858,Testability,test,test,858,"@Axel-Naumann Many thanks for the detailed and friendly reply! :+1: . > Do you have a proposal for the latter? We can add a new boolean constructor argument, `failOnUnknownArgs = false` which we set to `true` in ROOT. Indeed, I believe the additional constructor argument is best. ; The only other solution which comes to mind (if it would not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1119,Testability,test,test,1119,"dd a new boolean constructor argument, `failOnUnknownArgs = false` which we set to `true` in ROOT. Indeed, I believe the additional constructor argument is best. ; The only other solution which comes to mind (if it would not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1163,Testability,test,test,1163,"dd a new boolean constructor argument, `failOnUnknownArgs = false` which we set to `true` in ROOT. Indeed, I believe the additional constructor argument is best. ; The only other solution which comes to mind (if it would not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1358,Testability,test,test,1358,"not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1377,Testability,test,test,1377,"not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1473,Testability,test,test,1473,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1573,Testability,test,test,1573,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1670,Testability,test,test,1670,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1818,Testability,test,test,1818,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:2138,Testability,test,test,2138,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:2420,Testability,test,tests,2420,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:721,Usability,clear,clearly,721,"@Axel-Naumann Many thanks for the detailed and friendly reply! :+1: . > Do you have a proposal for the latter? We can add a new boolean constructor argument, `failOnUnknownArgs = false` which we set to `true` in ROOT. Indeed, I believe the additional constructor argument is best. ; The only other solution which comes to mind (if it would not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1939,Usability,simpl,simplicity,1939,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10090#issuecomment-1064634456:2357,Usability,learn,learning,2357,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456
https://github.com/root-project/root/issues/10092#issuecomment-1065158302:555,Usability,simpl,simpler,555,"I believe the difference between `Filter` (not working) and `Define` (working) is the overload that is picked. For `Filter` it picks (`columns` is an `std::initializer_list< std::string >`):; https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a66c60dde810b86a97fc01d1f7310a1b2. whereas for `Define` it picks (`columns` is an `std::vector<std::string>`):; https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a4698601205a55ac49279150d56fc904f. If instead of passing a Python list to `Filter` we pass an `std::vector`, it works. A simpler reproducer is then:; ```python; import ROOT; ROOT.gInterpreter.Declare(""""""; void foo (const std::initializer_list< std::string > &columns) {}; """"""); ROOT.foo([""x""]); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1065158302
https://github.com/root-project/root/pull/10101#issuecomment-1080810665:102,Testability,test,test,102,It is great you add the support for overlapping range in DataRange. ; Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? ; You can just replace the assert with EXPECT_EQ.; A simple example to look is this test: ; https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080810665
https://github.com/root-project/root/pull/10101#issuecomment-1080810665:141,Testability,test,test,141,It is great you add the support for overlapping range in DataRange. ; Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? ; You can just replace the assert with EXPECT_EQ.; A simple example to look is this test: ; https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080810665
https://github.com/root-project/root/pull/10101#issuecomment-1080810665:181,Testability,test,test,181,It is great you add the support for overlapping range in DataRange. ; Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? ; You can just replace the assert with EXPECT_EQ.; A simple example to look is this test: ; https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080810665
https://github.com/root-project/root/pull/10101#issuecomment-1080810665:215,Testability,assert,assert,215,It is great you add the support for overlapping range in DataRange. ; Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? ; You can just replace the assert with EXPECT_EQ.; A simple example to look is this test: ; https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080810665
https://github.com/root-project/root/pull/10101#issuecomment-1080810665:272,Testability,test,test,272,It is great you add the support for overlapping range in DataRange. ; Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? ; You can just replace the assert with EXPECT_EQ.; A simple example to look is this test: ; https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080810665
https://github.com/root-project/root/pull/10101#issuecomment-1080810665:339,Testability,test,test,339,It is great you add the support for overlapping range in DataRange. ; Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? ; You can just replace the assert with EXPECT_EQ.; A simple example to look is this test: ; https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080810665
https://github.com/root-project/root/pull/10101#issuecomment-1080810665:127,Usability,simpl,simple,127,It is great you add the support for overlapping range in DataRange. ; Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? ; You can just replace the assert with EXPECT_EQ.; A simple example to look is this test: ; https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080810665
https://github.com/root-project/root/pull/10101#issuecomment-1080810665:241,Usability,simpl,simple,241,It is great you add the support for overlapping range in DataRange. ; Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? ; You can just replace the assert with EXPECT_EQ.; A simple example to look is this test: ; https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080810665
https://github.com/root-project/root/pull/10106#issuecomment-1066843499:147,Usability,clear,clear,147,"I still have to investigate if it is used in user code, but I would like to deprecate it at some point if we know if it's not used. Then it's also clear that we don't have to implement handling string values in the BatchMode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10106#issuecomment-1066843499
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:5275,Availability,down,downwards,5275,"qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style).; ==============================================================================; Arrow_Left : move cursor left [Ctrl+B]; Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]; Home : move cursor to beginning of line [Ctrl+A]; End : move cursor to end of line [Ctrl+E]; Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]; Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]; Backspace : delete previous character [Ctrl+H]; Del : delete next character [Ctrl+D]; Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]; Ctrl+Del : delete next word [Esc,D] [Alt,D]; Ctrl+U : cut all characters between cursor and start of line; Ctrl+K : cut all characters between cursor and end of line; Ctrl+T : transpose characters; Esc,C : character to upper and jump to next word; Esc,L : word to lower case and jump to its end; Esc,U : word to upper case and jump to its end; Ctrl+Shift+C : copy clipboard content; Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]; Ins : toggle overwrite mode; Ctrl+_ : undo last keypress action; Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]; Enter : execute command [Ctrl+J] [Ctrl+M]; Ctrl+L : clear prompt screen; Ctrl+D : quit ROOT (if empty line); Ctrl+C : send kSigInt interrupt signal; Ctrl+Z : send kSigStop pause job signal; Arrow_Down : navigate downwards in command history [Ctrl+N]; Arrow_Up : navigate upwards in command history [Ctrl+P]; Ctrl+R ; Ctrl+S : search command in your history by typing a string.; Use Backspace if you mistyped (but not arrows).; Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order; Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search; [Ctrl+O] [Enter] [Ctrl+J] [Ctr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:4936,Deployability,toggle,toggle,4936,"qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style).; ==============================================================================; Arrow_Left : move cursor left [Ctrl+B]; Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]; Home : move cursor to beginning of line [Ctrl+A]; End : move cursor to end of line [Ctrl+E]; Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]; Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]; Backspace : delete previous character [Ctrl+H]; Del : delete next character [Ctrl+D]; Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]; Ctrl+Del : delete next word [Esc,D] [Alt,D]; Ctrl+U : cut all characters between cursor and start of line; Ctrl+K : cut all characters between cursor and end of line; Ctrl+T : transpose characters; Esc,C : character to upper and jump to next word; Esc,L : word to lower case and jump to its end; Esc,U : word to upper case and jump to its end; Ctrl+Shift+C : copy clipboard content; Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]; Ins : toggle overwrite mode; Ctrl+_ : undo last keypress action; Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]; Enter : execute command [Ctrl+J] [Ctrl+M]; Ctrl+L : clear prompt screen; Ctrl+D : quit ROOT (if empty line); Ctrl+C : send kSigInt interrupt signal; Ctrl+Z : send kSigStop pause job signal; Arrow_Down : navigate downwards in command history [Ctrl+N]; Arrow_Up : navigate upwards in command history [Ctrl+P]; Ctrl+R ; Ctrl+S : search command in your history by typing a string.; Use Backspace if you mistyped (but not arrows).; Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order; Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search; [Ctrl+O] [Enter] [Ctrl+J] [Ctr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:1826,Integrability,wrap,wrapping,1826,"- Shows all include paths. If a path is given,; 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3); 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level).; 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels).; 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style; 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics; 				 as well as a list of their names. .g <var>				- Prints out information about global variable; 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the; 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding; 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one; 				 saved in a given file. .stats [name]		- Show stats for internal data structures; 				 'ast' abstract syntax tree stats; 				 'asttree [filter]' abstract syntax tree layout; 				 'decl' dump ast declarations; 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation; 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ================================================================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:1690,Modifiability,variab,variable,1690,"r; '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,; 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3); 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level).; 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels).; 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style; 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics; 				 as well as a list of their names. .g <var>				- Prints out information about global variable; 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the; 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding; 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one; 				 saved in a given file. .stats [name]		- Show stats for internal data structures; 				 'ast' abstract syntax tree stats; 				 'asttree [filter]' abstract syntax tree layout; 				 'decl' dump ast declarations; 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation; 				 (see .stats arguments for <repr>). .help			",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:958,Performance,optimiz,optimization,958,"Current screenshot:. ```; root [0] .?. Cling (C/C++ interpreter) meta commands usage; All commands must be preceded by a '.', except; for the evaluation statement { }; ==============================================================================================; Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with; 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file; '>' or '1>'		- Redirects the stdout stream only; '2>'			- Redirects the stderr stream only; '&>' (or '2>&1')		- Redirects both stdout and stderr; '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,; 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3); 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level).; 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels).; 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style; 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics; 				 as well as a list of their names. .g <var>				- Prints out information about global variable; 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the; 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:2884,Performance,load,load,2884,"- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding; 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one; 				 saved in a given file. .stats [name]		- Show stats for internal data structures; 				 'ast' abstract syntax tree stats; 				 'asttree [filter]' abstract syntax tree layout; 				 'decl' dump ast declarations; 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation; 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ===============================================================================; .L <filename>[flags]: load the given file with optional flags like; + to compile or ++ to force recompile.; Type .? TSystem::CompileMacro for a list of all flags.; .(x|X) <filename>[flags](args) :; same as .L <filename>[flags] and runs then a function; with signature: ret_type filename(args).; .credits : show credits; .demo : launch GUI demo; .help Class::Member : open reference guide for that class member (or .?).; Specifying '::Member' is optional.; .help edit : show line editing shortcuts (or .?); .license : show license; .ls : list contents of current TDirectory; .pwd : show current TDirectory, pad and style; .quit (or .exit) : quit ROOT (long form of .q); .R [user@]host[:dir] [-l user] [-d dbg] [script] :; launch process in a remote host; .qqq : quit ROOT - mandatory; .qqqqq : exit process immediately; .qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:3692,Safety,abort,abort,3692,"- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ===============================================================================; .L <filename>[flags]: load the given file with optional flags like; + to compile or ++ to force recompile.; Type .? TSystem::CompileMacro for a list of all flags.; .(x|X) <filename>[flags](args) :; same as .L <filename>[flags] and runs then a function; with signature: ret_type filename(args).; .credits : show credits; .demo : launch GUI demo; .help Class::Member : open reference guide for that class member (or .?).; Specifying '::Member' is optional.; .help edit : show line editing shortcuts (or .?); .license : show license; .ls : list contents of current TDirectory; .pwd : show current TDirectory, pad and style; .quit (or .exit) : quit ROOT (long form of .q); .R [user@]host[:dir] [-l user] [-d dbg] [script] :; launch process in a remote host; .qqq : quit ROOT - mandatory; .qqqqq : exit process immediately; .qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style).; ==============================================================================; Arrow_Left : move cursor left [Ctrl+B]; Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]; Home : move cursor to beginning of line [Ctrl+A]; End : move cursor to end of line [Ctrl+E]; Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]; Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]; Backspace : delete previous character [Ctrl+H]; Del : delete next character [Ctrl+D]; Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]; Ctrl+Del : delete next word [Esc,D] [Alt,D]; Ctrl+U : cut all characters between cursor and start of line; Ctrl+K : cut all characters between cursor and end of line; Ctrl+T : transpose characters; Esc,C :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:735,Usability,undo,undo,735,"Current screenshot:. ```; root [0] .?. Cling (C/C++ interpreter) meta commands usage; All commands must be preceded by a '.', except; for the evaluation statement { }; ==============================================================================================; Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with; 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file; '>' or '1>'		- Redirects the stdout stream only; '2>'			- Redirects the stderr stream only; '&>' (or '2>&1')		- Redirects both stdout and stderr; '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,; 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3); 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level).; 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels).; 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style; 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics; 				 as well as a list of their names. .g <var>				- Prints out information about global variable; 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the; 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:2512,Usability,undo,undo,2512,"				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics; 				 as well as a list of their names. .g <var>				- Prints out information about global variable; 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the; 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding; 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one; 				 saved in a given file. .stats [name]		- Show stats for internal data structures; 				 'ast' abstract syntax tree stats; 				 'asttree [filter]' abstract syntax tree layout; 				 'decl' dump ast declarations; 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation; 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ===============================================================================; .L <filename>[flags]: load the given file with optional flags like; + to compile or ++ to force recompile.; Type .? TSystem::CompileMacro for a list of all flags.; .(x|X) <filename>[flags](args) :; same as .L <filename>[flags] and runs then a function; with signature: ret_type filename(args).; .credits : show credits; .demo : launch GUI demo; .help Class::Member : open reference guide for that class member (or .?).; Specifying '::Member' is optional.; .help edit : show line editing shortcuts (or .?); .license : show license; .ls : list contents of current TDir",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:2523,Usability,undo,undo,2523,"				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics; 				 as well as a list of their names. .g <var>				- Prints out information about global variable; 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the; 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding; 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one; 				 saved in a given file. .stats [name]		- Show stats for internal data structures; 				 'ast' abstract syntax tree stats; 				 'asttree [filter]' abstract syntax tree layout; 				 'decl' dump ast declarations; 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation; 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ===============================================================================; .L <filename>[flags]: load the given file with optional flags like; + to compile or ++ to force recompile.; Type .? TSystem::CompileMacro for a list of all flags.; .(x|X) <filename>[flags](args) :; same as .L <filename>[flags] and runs then a function; with signature: ret_type filename(args).; .credits : show credits; .demo : launch GUI demo; .help Class::Member : open reference guide for that class member (or .?).; Specifying '::Member' is optional.; .help edit : show line editing shortcuts (or .?); .license : show license; .ls : list contents of current TDir",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:3244,Usability,guid,guide,3244,"e>	- Compare the interpreter's state with the one; 				 saved in a given file. .stats [name]		- Show stats for internal data structures; 				 'ast' abstract syntax tree stats; 				 'asttree [filter]' abstract syntax tree layout; 				 'decl' dump ast declarations; 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation; 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ===============================================================================; .L <filename>[flags]: load the given file with optional flags like; + to compile or ++ to force recompile.; Type .? TSystem::CompileMacro for a list of all flags.; .(x|X) <filename>[flags](args) :; same as .L <filename>[flags] and runs then a function; with signature: ret_type filename(args).; .credits : show credits; .demo : launch GUI demo; .help Class::Member : open reference guide for that class member (or .?).; Specifying '::Member' is optional.; .help edit : show line editing shortcuts (or .?); .license : show license; .ls : list contents of current TDirectory; .pwd : show current TDirectory, pad and style; .quit (or .exit) : quit ROOT (long form of .q); .R [user@]host[:dir] [-l user] [-d dbg] [script] :; launch process in a remote host; .qqq : quit ROOT - mandatory; .qqqqq : exit process immediately; .qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style).; ==============================================================================; Arrow_Left : move cursor left [Ctrl+B]; Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]; Home : move cursor to beginning of line [Ctrl+A]; End : move cursor to end of line [Ctrl+E]; Ctrl+Arrow_Left : jump to previous word [Esc,B] [Al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:4968,Usability,undo,undo,4968,"qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style).; ==============================================================================; Arrow_Left : move cursor left [Ctrl+B]; Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]; Home : move cursor to beginning of line [Ctrl+A]; End : move cursor to end of line [Ctrl+E]; Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]; Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]; Backspace : delete previous character [Ctrl+H]; Del : delete next character [Ctrl+D]; Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]; Ctrl+Del : delete next word [Esc,D] [Alt,D]; Ctrl+U : cut all characters between cursor and start of line; Ctrl+K : cut all characters between cursor and end of line; Ctrl+T : transpose characters; Esc,C : character to upper and jump to next word; Esc,L : word to lower case and jump to its end; Esc,U : word to upper case and jump to its end; Ctrl+Shift+C : copy clipboard content; Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]; Ins : toggle overwrite mode; Ctrl+_ : undo last keypress action; Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]; Enter : execute command [Ctrl+J] [Ctrl+M]; Ctrl+L : clear prompt screen; Ctrl+D : quit ROOT (if empty line); Ctrl+C : send kSigInt interrupt signal; Ctrl+Z : send kSigStop pause job signal; Arrow_Down : navigate downwards in command history [Ctrl+N]; Arrow_Up : navigate upwards in command history [Ctrl+P]; Ctrl+R ; Ctrl+S : search command in your history by typing a string.; Use Backspace if you mistyped (but not arrows).; Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order; Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search; [Ctrl+O] [Enter] [Ctrl+J] [Ctr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:5115,Usability,clear,clear,5115,"qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style).; ==============================================================================; Arrow_Left : move cursor left [Ctrl+B]; Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]; Home : move cursor to beginning of line [Ctrl+A]; End : move cursor to end of line [Ctrl+E]; Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]; Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]; Backspace : delete previous character [Ctrl+H]; Del : delete next character [Ctrl+D]; Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]; Ctrl+Del : delete next word [Esc,D] [Alt,D]; Ctrl+U : cut all characters between cursor and start of line; Ctrl+K : cut all characters between cursor and end of line; Ctrl+T : transpose characters; Esc,C : character to upper and jump to next word; Esc,L : word to lower case and jump to its end; Esc,U : word to upper case and jump to its end; Ctrl+Shift+C : copy clipboard content; Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]; Ins : toggle overwrite mode; Ctrl+_ : undo last keypress action; Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]; Enter : execute command [Ctrl+J] [Ctrl+M]; Ctrl+L : clear prompt screen; Ctrl+D : quit ROOT (if empty line); Ctrl+C : send kSigInt interrupt signal; Ctrl+Z : send kSigStop pause job signal; Arrow_Down : navigate downwards in command history [Ctrl+N]; Arrow_Up : navigate upwards in command history [Ctrl+P]; Ctrl+R ; Ctrl+S : search command in your history by typing a string.; Use Backspace if you mistyped (but not arrows).; Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order; Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search; [Ctrl+O] [Enter] [Ctrl+J] [Ctr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/pull/10121#issuecomment-1084927674:5235,Usability,pause,pause,5235,"qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style).; ==============================================================================; Arrow_Left : move cursor left [Ctrl+B]; Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]; Home : move cursor to beginning of line [Ctrl+A]; End : move cursor to end of line [Ctrl+E]; Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]; Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]; Backspace : delete previous character [Ctrl+H]; Del : delete next character [Ctrl+D]; Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]; Ctrl+Del : delete next word [Esc,D] [Alt,D]; Ctrl+U : cut all characters between cursor and start of line; Ctrl+K : cut all characters between cursor and end of line; Ctrl+T : transpose characters; Esc,C : character to upper and jump to next word; Esc,L : word to lower case and jump to its end; Esc,U : word to upper case and jump to its end; Ctrl+Shift+C : copy clipboard content; Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]; Ins : toggle overwrite mode; Ctrl+_ : undo last keypress action; Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]; Enter : execute command [Ctrl+J] [Ctrl+M]; Ctrl+L : clear prompt screen; Ctrl+D : quit ROOT (if empty line); Ctrl+C : send kSigInt interrupt signal; Ctrl+Z : send kSigStop pause job signal; Arrow_Down : navigate downwards in command history [Ctrl+N]; Arrow_Up : navigate upwards in command history [Ctrl+P]; Ctrl+R ; Ctrl+S : search command in your history by typing a string.; Use Backspace if you mistyped (but not arrows).; Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order; Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search; [Ctrl+O] [Enter] [Ctrl+J] [Ctr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674
https://github.com/root-project/root/issues/10139#issuecomment-1072149923:51,Usability,feedback,feedback,51,Thank you @petruccs for opening this issue and the feedback. You are right that one needs to use`GetPaintedGraph` for this. I will improve the documentation and add a tutorial example.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10139#issuecomment-1072149923
https://github.com/root-project/root/issues/10178#issuecomment-1812233608:193,Availability,error,error,193,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608
https://github.com/root-project/root/issues/10178#issuecomment-1812233608:382,Availability,error,error,382,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608
https://github.com/root-project/root/issues/10178#issuecomment-1812233608:767,Availability,error,error,767,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608
https://github.com/root-project/root/issues/10178#issuecomment-1812233608:341,Safety,abort,aborted,341,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608
https://github.com/root-project/root/issues/10178#issuecomment-1812233608:530,Safety,abort,aborted,530,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608
https://github.com/root-project/root/issues/10178#issuecomment-1812233608:915,Safety,abort,aborted,915,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608
https://github.com/root-project/root/issues/10178#issuecomment-1812233608:103,Usability,undo,undo,103,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608
https://github.com/root-project/root/issues/10178#issuecomment-1812233608:140,Usability,undo,undo,140,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608
https://github.com/root-project/root/issues/10178#issuecomment-1812233608:156,Usability,undo,undo,156,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608
https://github.com/root-project/root/issues/10178#issuecomment-1812233608:688,Usability,undo,undo,688,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608
https://github.com/root-project/root/issues/10178#issuecomment-1812233608:727,Usability,undo,undo,727,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608
https://github.com/root-project/root/issues/10182#issuecomment-1073909757:57,Usability,clear,clear,57,"Actually, I think that the correct behavior should be to clear the undo history after accepting a new input line (which also follows what GNU-readline does).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182#issuecomment-1073909757
https://github.com/root-project/root/issues/10182#issuecomment-1073909757:67,Usability,undo,undo,67,"Actually, I think that the correct behavior should be to clear the undo history after accepting a new input line (which also follows what GNU-readline does).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182#issuecomment-1073909757
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:3648,Integrability,interface,interface,3648,"handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off; (C++ compiled) class TVirtualPadPainter //Painter interface for pad.; (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter; (C++ compiled) class TVirtualGLManip //Interface for GL manipulator; (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager; (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering; (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components; (C++ compiled) class TAttBBox //Helper for management of bounding-box information; (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:4069,Integrability,interface,interface,4069,"handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off; (C++ compiled) class TVirtualPadPainter //Painter interface for pad.; (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter; (C++ compiled) class TVirtualGLManip //Interface for GL manipulator; (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager; (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering; (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components; (C++ compiled) class TAttBBox //Helper for management of bounding-box information; (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:4151,Integrability,interface,interface,4151,"handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off; (C++ compiled) class TVirtualPadPainter //Painter interface for pad.; (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter; (C++ compiled) class TVirtualGLManip //Interface for GL manipulator; (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager; (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering; (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components; (C++ compiled) class TAttBBox //Helper for management of bounding-box information; (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:4410,Integrability,interface,interface,4410,"handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off; (C++ compiled) class TVirtualPadPainter //Painter interface for pad.; (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter; (C++ compiled) class TVirtualGLManip //Interface for GL manipulator; (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager; (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering; (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components; (C++ compiled) class TAttBBox //Helper for management of bounding-box information; (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:5531,Integrability,inject,injected,5531,) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off; (C++ compiled) class TVirtualPadPainter //Painter interface for pad.; (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter; (C++ compiled) class TVirtualGLManip //Interface for GL manipulator; (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager; (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering; (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components; (C++ compiled) class TAttBBox //Helper for management of bounding-box information; (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes; (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member; (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type; (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type; (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects; (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNam,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:6007,Integrability,interface,interface,6007,"iled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting; TMVA::VariableDecorrTransform ; TMVA::VariableGaussTransform ; TMVA::VariableIdentityTransform ; TMVA::VariableNormalizeTransform ; TMVA::VariablePCATransform ; TMVA::VariableRearrangeTransform ; TMVA::VariableTransformBase ; TSpectrum2Transform ; TSpectrumTransform ; ROOT::Math::Transform3D ; TGeoUniformMagField ; class ROOT::Math::SinVariableTransformation ; class ROOT::Math::SqrtLowVariableTransformation ; class ROOT::Math::SqrtUpVariableTransformation ; class auto_ptr<ROOT::Math::MinimizerVariableTransformation> ; class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > ; class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> ; (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class; (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:2549,Modifiability,plugin,plugin,2549," sprintf(char *string,char *format,arglist,...);; int fscanf(FILE *fp,char *format,arglist,...);; int scanf(char *format,arglist,...);; int sscanf(char *string,char *format,arglist,...);; (C++ compiled) class TClass public:TDictionary //Dictionary containing class information; (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects; (C++ compiled) class TMemberInspector //ABC for inspecting class data members; (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title); (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics; (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup; (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information; (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information; (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:2631,Modifiability,plugin,plugin,2631," sprintf(char *string,char *format,arglist,...);; int fscanf(FILE *fp,char *format,arglist,...);; int scanf(char *format,arglist,...);; int sscanf(char *string,char *format,arglist,...);; (C++ compiled) class TClass public:TDictionary //Dictionary containing class information; (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects; (C++ compiled) class TMemberInspector //ABC for inspecting class data members; (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title); (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics; (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup; (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information; (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information; (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:3142,Performance,load,load,3142,"etion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:1721,Security,hash,hashtable,1721," sprintf(char *string,char *format,arglist,...);; int fscanf(FILE *fp,char *format,arglist,...);; int scanf(char *format,arglist,...);; int sscanf(char *string,char *format,arglist,...);; (C++ compiled) class TClass public:TDictionary //Dictionary containing class information; (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects; (C++ compiled) class TMemberInspector //ABC for inspecting class data members; (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title); (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics; (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup; (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information; (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information; (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:5531,Security,inject,injected,5531,) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off; (C++ compiled) class TVirtualPadPainter //Painter interface for pad.; (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter; (C++ compiled) class TVirtualGLManip //Interface for GL manipulator; (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager; (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering; (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components; (C++ compiled) class TAttBBox //Helper for management of bounding-box information; (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes; (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member; (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type; (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type; (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects; (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNam,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:2809,Usability,undo,undo,2809," sprintf(char *string,char *format,arglist,...);; int fscanf(FILE *fp,char *format,arglist,...);; int scanf(char *format,arglist,...);; int sscanf(char *string,char *format,arglist,...);; (C++ compiled) class TClass public:TDictionary //Dictionary containing class information; (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects; (C++ compiled) class TMemberInspector //ABC for inspecting class data members; (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title); (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics; (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup; (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information; (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information; (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/issues/10191#issuecomment-1084824531:2918,Usability,undo,undo,2918,"class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531
https://github.com/root-project/root/pull/10195#issuecomment-1075129814:654,Performance,optimiz,optimizer,654,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195#issuecomment-1075129814
https://github.com/root-project/root/pull/10195#issuecomment-1075129814:198,Usability,simpl,simplifies,198,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195#issuecomment-1075129814
https://github.com/root-project/root/issues/10222#issuecomment-1079823051:456,Deployability,integrat,integration,456,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222#issuecomment-1079823051
https://github.com/root-project/root/issues/10222#issuecomment-1079823051:456,Integrability,integrat,integration,456,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222#issuecomment-1079823051
https://github.com/root-project/root/issues/10222#issuecomment-1079823051:194,Modifiability,variab,variables,194,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222#issuecomment-1079823051
https://github.com/root-project/root/issues/10222#issuecomment-1079823051:263,Modifiability,variab,variables,263,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222#issuecomment-1079823051
https://github.com/root-project/root/issues/10222#issuecomment-1079823051:447,Testability,test,test,447,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222#issuecomment-1079823051
https://github.com/root-project/root/issues/10222#issuecomment-1079823051:468,Testability,test,test,468,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222#issuecomment-1079823051
https://github.com/root-project/root/issues/10222#issuecomment-1079823051:162,Usability,simpl,simply,162,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222#issuecomment-1079823051
https://github.com/root-project/root/issues/10238#issuecomment-1080355066:32,Usability,feedback,feedback,32,"Hi @klenze ,; thank you for the feedback, I tend to agree, my only doubt is that these days we don't expect the vast majority of users to have to compile ROOT from source, that's something for developers and contributors, who might want to checkout the full repo anyway.; Why do grad students working on their laptops have to compile ROOT from source?. (with that said, I think we would accept a PR that changes the commands as you suggest. Or maybe we can just mention it in a comment. There is a button the bottom-right of each page on our website which opens a new tab where you can suggest changes)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238#issuecomment-1080355066
https://github.com/root-project/root/issues/10239#issuecomment-1940943807:448,Usability,simpl,simply,448,"It seems this is not working because the part after the `?` is interpreted as a query string. However, I'm not sure when the `?` should be treated as a wildcard and when it should be treated as a query starter. Should `?` only be treated as _not_ a wildcard if the part after contains `=` characters for query parameters or a `#` for a tree name? In addition, some files can have `?` as part of the file name: what do we do in this case? Should we simply not allow `?` for wild carding anymore? This needs to be discussed before making changes. @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239#issuecomment-1940943807
https://github.com/root-project/root/issues/10239#issuecomment-1958992264:4,Usability,simpl,simple,4,"One simple but maybe effective way to address this is the following strategy:. * if the `?` is followed exactly by `.root` or it is the last character in the string, then it's a wildcard; * Otherwise, it's a query, the most common usage is to start the beginning of a token to introduce the treename inside the file i.e. `filename?#treename` . @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239#issuecomment-1958992264
https://github.com/root-project/root/issues/10259#issuecomment-1090486006:536,Usability,clear,clear,536,"Yes, documentation is not there.; Many settings are not RBrowser specific, but applied for all web widgets: canvases, geometry viewer, eve7, browser, fit panel.; Major settings are mentioned here:; https://root.cern/doc/master/classROOT_1_1Experimental_1_1RWebWindowsManager.html ; See CreateServer and ShowWindow methods. Chrome and Firefox browser are required for batch mode.; For normal interactive mode any modern web browser should do the job.; But in fact, most of them are just modifications of chrome - beside firefox. ; To be clear - old `Internet Explorer` is not ""modern"" browser and therefore not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10259#issuecomment-1090486006
https://github.com/root-project/root/pull/10263#issuecomment-1081652232:1101,Safety,safe,safety,1101,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue.; > ; > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263#issuecomment-1081652232
https://github.com/root-project/root/pull/10263#issuecomment-1081652232:972,Usability,guid,guidelines,972,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue.; > ; > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263#issuecomment-1081652232
https://github.com/root-project/root/pull/10263#issuecomment-1081654215:217,Safety,safe,safety,217,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263#issuecomment-1081654215
https://github.com/root-project/root/pull/10263#issuecomment-1081654215:88,Usability,guid,guidelines,88,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263#issuecomment-1081654215
https://github.com/root-project/root/pull/10263#issuecomment-1081654215:334,Usability,guid,guideline,334,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263#issuecomment-1081654215
https://github.com/root-project/root/issues/10265#issuecomment-1090470674:225,Usability,feedback,feedback,225,"Yes, it is not supported up to now.; In #10344 I implement exactly this feature.; In the settings dialog one can specify flag ""Append to canvas"", which does exactly the same as ""same"" draw option. Thanks for providing useful feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10265#issuecomment-1090470674
https://github.com/root-project/root/issues/10282#issuecomment-1085399125:163,Usability,simpl,simpler,163,"I am unable to reproduce the working case (with 819b4e321b), so I am missing something (i.e. probably part of the ATLAS software). > If it would help to produce a simpler reproducer workspace, I'm glad to help out by trying to build one. Could you please? :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1085399125
https://github.com/root-project/root/issues/10282#issuecomment-1085634160:84,Testability,test,test,84,"Alright, I'm building a simpler reproducer then! Good to have one anyway for a unit test. Strange, at least getting a pointer to the workspace works for me also without the ATLAS RooFit extensions (indeed, the workspace contains some custom ATLAS classes)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1085634160
https://github.com/root-project/root/issues/10282#issuecomment-1085634160:24,Usability,simpl,simpler,24,"Alright, I'm building a simpler reproducer then! Good to have one anyway for a unit test. Strange, at least getting a pointer to the workspace works for me also without the ATLAS RooFit extensions (indeed, the workspace contains some custom ATLAS classes)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1085634160
https://github.com/root-project/root/issues/10282#issuecomment-1086030662:406,Testability,test,tests,406,"That is not quite surprising as the problem is likely to do with some type of schema evolution (particularly sensitive to this set of change are map/multimap where the key or value is an enum). In addition to having a simpler example, you could consider trying out https://github.com/root-project/root/pull/10230 which contains all the fixes I have been making (and is currently passing all but one of the tests I have/examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1086030662
https://github.com/root-project/root/issues/10282#issuecomment-1086030662:218,Usability,simpl,simpler,218,"That is not quite surprising as the problem is likely to do with some type of schema evolution (particularly sensitive to this set of change are map/multimap where the key or value is an enum). In addition to having a simpler example, you could consider trying out https://github.com/root-project/root/pull/10230 which contains all the fixes I have been making (and is currently passing all but one of the tests I have/examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1086030662
https://github.com/root-project/root/issues/10282#issuecomment-1087909663:1017,Performance,optimiz,optimized,1017,"ot produce a simpler reproducer, but I noticed that we have also problematic workspaces that are about 6 times smaller (from the same repo linked above):; ```; auto f = TFile::Open(""toyws/WS-HGam-STXS_xs_toy.root"");; auto w = (RooWorkspace*)f->Get(""combWS"");; ```. With this one, I can reproduce the problem without messing around with the stack size limit. Also, your PR #10230 actually affects also this issue, but it does not resolve it. There is now a different crash with a different stack trace, that looks like there is interference of your changes with some `RooWorkspace::Streamer` hackery:; ```; #0 0x000015555276f34c in __pthread_kill_implementation () from /usr/lib/libc.so.6; #1 0x00001555527224b8 in raise () from /usr/lib/libc.so.6; #2 0x000015555270c534 in abort () from /usr/lib/libc.so.6; #3 0x000015555299e7ee in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00001555529aac4c in __cxxabiv1::__terminate (handler=<optimized out>); at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00001555529aacb9 in std::terminate () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00001555529aba77 in __cxxabiv1::__cxa_deleted_virtual () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/pure.cc:57; #7 0x0000155553413509 in RooWorkspace::Streamer (this=0x55555698ea60, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooWorkspace.cxx:2591; #8 0x0000155554e2df7e in TKey::ReadObj (this=0x555556757fc0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:834; #9 0x0000155554df25e0 in TDirectoryFile::Get (this=0x5555556e2510, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:975; #10 0x0000555555555235 in repro () at repro.C:25; #11 0x00005555555551d9 in main () at /tmp/root-compile/repro/main.cpp:4; ```. Fortunately, the stack trace is shorter now! Does this tell you anything? Maybe your insig",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1087909663
https://github.com/root-project/root/issues/10282#issuecomment-1087909663:1707,Performance,optimiz,optimized,1707,"we have also problematic workspaces that are about 6 times smaller (from the same repo linked above):; ```; auto f = TFile::Open(""toyws/WS-HGam-STXS_xs_toy.root"");; auto w = (RooWorkspace*)f->Get(""combWS"");; ```. With this one, I can reproduce the problem without messing around with the stack size limit. Also, your PR #10230 actually affects also this issue, but it does not resolve it. There is now a different crash with a different stack trace, that looks like there is interference of your changes with some `RooWorkspace::Streamer` hackery:; ```; #0 0x000015555276f34c in __pthread_kill_implementation () from /usr/lib/libc.so.6; #1 0x00001555527224b8 in raise () from /usr/lib/libc.so.6; #2 0x000015555270c534 in abort () from /usr/lib/libc.so.6; #3 0x000015555299e7ee in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00001555529aac4c in __cxxabiv1::__terminate (handler=<optimized out>); at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00001555529aacb9 in std::terminate () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00001555529aba77 in __cxxabiv1::__cxa_deleted_virtual () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/pure.cc:57; #7 0x0000155553413509 in RooWorkspace::Streamer (this=0x55555698ea60, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooWorkspace.cxx:2591; #8 0x0000155554e2df7e in TKey::ReadObj (this=0x555556757fc0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:834; #9 0x0000155554df25e0 in TDirectoryFile::Get (this=0x5555556e2510, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:975; #10 0x0000555555555235 in repro () at repro.C:25; #11 0x00005555555551d9 in main () at /tmp/root-compile/repro/main.cpp:4; ```. Fortunately, the stack trace is shorter now! Does this tell you anything? Maybe your insights can also help me to build a reproducer. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1087909663
https://github.com/root-project/root/issues/10282#issuecomment-1087909663:794,Safety,abort,abort,794,"Hi @pcanal! I could not produce a simpler reproducer, but I noticed that we have also problematic workspaces that are about 6 times smaller (from the same repo linked above):; ```; auto f = TFile::Open(""toyws/WS-HGam-STXS_xs_toy.root"");; auto w = (RooWorkspace*)f->Get(""combWS"");; ```. With this one, I can reproduce the problem without messing around with the stack size limit. Also, your PR #10230 actually affects also this issue, but it does not resolve it. There is now a different crash with a different stack trace, that looks like there is interference of your changes with some `RooWorkspace::Streamer` hackery:; ```; #0 0x000015555276f34c in __pthread_kill_implementation () from /usr/lib/libc.so.6; #1 0x00001555527224b8 in raise () from /usr/lib/libc.so.6; #2 0x000015555270c534 in abort () from /usr/lib/libc.so.6; #3 0x000015555299e7ee in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00001555529aac4c in __cxxabiv1::__terminate (handler=<optimized out>); at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00001555529aacb9 in std::terminate () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00001555529aba77 in __cxxabiv1::__cxa_deleted_virtual () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/pure.cc:57; #7 0x0000155553413509 in RooWorkspace::Streamer (this=0x55555698ea60, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooWorkspace.cxx:2591; #8 0x0000155554e2df7e in TKey::ReadObj (this=0x555556757fc0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:834; #9 0x0000155554df25e0 in TDirectoryFile::Get (this=0x5555556e2510, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:975; #10 0x0000555555555235 in repro () at repro.C:25; #11 0x00005555555551d9 in main () at /tmp/root-compile/repro/main.cpp:4; ```. Fortunately, the stack trace is shorter now! Does this tell you anyth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1087909663
https://github.com/root-project/root/issues/10282#issuecomment-1087909663:34,Usability,simpl,simpler,34,"Hi @pcanal! I could not produce a simpler reproducer, but I noticed that we have also problematic workspaces that are about 6 times smaller (from the same repo linked above):; ```; auto f = TFile::Open(""toyws/WS-HGam-STXS_xs_toy.root"");; auto w = (RooWorkspace*)f->Get(""combWS"");; ```. With this one, I can reproduce the problem without messing around with the stack size limit. Also, your PR #10230 actually affects also this issue, but it does not resolve it. There is now a different crash with a different stack trace, that looks like there is interference of your changes with some `RooWorkspace::Streamer` hackery:; ```; #0 0x000015555276f34c in __pthread_kill_implementation () from /usr/lib/libc.so.6; #1 0x00001555527224b8 in raise () from /usr/lib/libc.so.6; #2 0x000015555270c534 in abort () from /usr/lib/libc.so.6; #3 0x000015555299e7ee in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00001555529aac4c in __cxxabiv1::__terminate (handler=<optimized out>); at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00001555529aacb9 in std::terminate () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00001555529aba77 in __cxxabiv1::__cxa_deleted_virtual () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/pure.cc:57; #7 0x0000155553413509 in RooWorkspace::Streamer (this=0x55555698ea60, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooWorkspace.cxx:2591; #8 0x0000155554e2df7e in TKey::ReadObj (this=0x555556757fc0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:834; #9 0x0000155554df25e0 in TDirectoryFile::Get (this=0x5555556e2510, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:975; #10 0x0000555555555235 in repro () at repro.C:25; #11 0x00005555555551d9 in main () at /tmp/root-compile/repro/main.cpp:4; ```. Fortunately, the stack trace is shorter now! Does this tell you anyth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1087909663
https://github.com/root-project/root/pull/10294#issuecomment-1136396468:20,Availability,failure,failures,20,"> Now there are new failures associated with this change. Can you point me to one or two of those failures?. > https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160 fixed a bug in the template argument printing,. For up-streaming that, it probably would need to become a policy switch. If I understand correctly. 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 : remove suffix in template parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). So, so far, my best guess (because I don't understand 'what' it really does) is that 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 has the side effect of destroying/replacing the partial desugaring. I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines. (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repository)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136396468
https://github.com/root-project/root/pull/10294#issuecomment-1136396468:98,Availability,failure,failures,98,"> Now there are new failures associated with this change. Can you point me to one or two of those failures?. > https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160 fixed a bug in the template argument printing,. For up-streaming that, it probably would need to become a policy switch. If I understand correctly. 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 : remove suffix in template parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). So, so far, my best guess (because I don't understand 'what' it really does) is that 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 has the side effect of destroying/replacing the partial desugaring. I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines. (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repository)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136396468
https://github.com/root-project/root/pull/10294#issuecomment-1136396468:1386,Integrability,rout,routines,1386,"> Now there are new failures associated with this change. Can you point me to one or two of those failures?. > https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160 fixed a bug in the template argument printing,. For up-streaming that, it probably would need to become a policy switch. If I understand correctly. 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 : remove suffix in template parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). So, so far, my best guess (because I don't understand 'what' it really does) is that 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 has the side effect of destroying/replacing the partial desugaring. I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines. (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repository)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136396468
https://github.com/root-project/root/pull/10294#issuecomment-1136396468:454,Usability,intuit,intuitive,454,"> Now there are new failures associated with this change. Can you point me to one or two of those failures?. > https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160 fixed a bug in the template argument printing,. For up-streaming that, it probably would need to become a policy switch. If I understand correctly. 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 : remove suffix in template parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). So, so far, my best guess (because I don't understand 'what' it really does) is that 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 has the side effect of destroying/replacing the partial desugaring. I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines. (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repository)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136396468
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:22,Availability,failure,failures,22,"> > Now there are new failures associated with this change; > ; > Can you point me to one or two of those failures?; > ; > > [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) fixed a bug in the template argument printing,; > ; > For up-streaming that, it probably would need to become a policy switch.; > ; > If I understand correctly; > ; > [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) : remove suffix in template parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). It is a long discussion, you can find more information [here](https://reviews.llvm.org/D77598#inline-1057607). The idea is when we print the values of integral types, we should print them as they were written. Here is an example where this does not happen https://godbolt.org/z/MGK5s734G so this patch should be easy to upstream. > ; > [4417a2c](https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a) : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). That was my take as well but without this switch we get failures like this one https://github.com/root-project/root/pull/10294#issuecomment-1135181954. Here are more details from my local builds:. <details>. ```. diff -u ../root-release-master/./math/genvector/G__GenVector.cxx ../root-release-llvm13/./math/genvector/G__GenVector.cxx; --- ../root-release-master/./math/genvector/G__GenVector.cxx	2022-05-08 08:38:55.942037418 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector.cxx	2022-05-08 09:17:42.965205197 +0300; @@ -2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:106,Availability,failure,failures,106,"> > Now there are new failures associated with this change; > ; > Can you point me to one or two of those failures?; > ; > > [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) fixed a bug in the template argument printing,; > ; > For up-streaming that, it probably would need to become a policy switch.; > ; > If I understand correctly; > ; > [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) : remove suffix in template parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). It is a long discussion, you can find more information [here](https://reviews.llvm.org/D77598#inline-1057607). The idea is when we print the values of integral types, we should print them as they were written. Here is an example where this does not happen https://godbolt.org/z/MGK5s734G so this patch should be easy to upstream. > ; > [4417a2c](https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a) : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). That was my take as well but without this switch we get failures like this one https://github.com/root-project/root/pull/10294#issuecomment-1135181954. Here are more details from my local builds:. <details>. ```. diff -u ../root-release-master/./math/genvector/G__GenVector.cxx ../root-release-llvm13/./math/genvector/G__GenVector.cxx; --- ../root-release-master/./math/genvector/G__GenVector.cxx	2022-05-08 08:38:55.942037418 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector.cxx	2022-05-08 09:17:42.965205197 +0300; @@ -2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:1520,Availability,failure,failures,1520,"e parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). It is a long discussion, you can find more information [here](https://reviews.llvm.org/D77598#inline-1057607). The idea is when we print the values of integral types, we should print them as they were written. Here is an example where this does not happen https://godbolt.org/z/MGK5s734G so this patch should be easy to upstream. > ; > [4417a2c](https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a) : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). That was my take as well but without this switch we get failures like this one https://github.com/root-project/root/pull/10294#issuecomment-1135181954. Here are more details from my local builds:. <details>. ```. diff -u ../root-release-master/./math/genvector/G__GenVector.cxx ../root-release-llvm13/./math/genvector/G__GenVector.cxx; --- ../root-release-master/./math/genvector/G__GenVector.cxx	2022-05-08 08:38:55.942037418 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector.cxx	2022-05-08 09:17:42.965205197 +0300; @@ -2073,8 +2073,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >*); {; @@ -2090,24 +2088,6 @@; instance.SetDelete(&delete_ROOTcLcLMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:21918,Availability,error,error,21918,">fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; // Static variable to force the class initialization; @@ -2755,8 +2675,8 @@; nullptr; };; static const char* includePaths[] = {; -""/build/vvassilev/root-release-master/include"",; -""/build/vvassilev/root-release-master/include/"",; +""/build/vvassilev/root-release-llvm13/include"",; +""/build/vvassilev/root-release-llvm13/include/"",; nullptr; };; static const char* fwdDeclCode = nullptr;; (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ make. [ 77%] Built target G__GenVector; [ 77%] Linking CXX shared library ../../lib/libGenVector.so; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian2D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:22182,Availability,error,error,22182," = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; // Static variable to force the class initialization; @@ -2755,8 +2675,8 @@; nullptr; };; static const char* includePaths[] = {; -""/build/vvassilev/root-release-master/include"",; -""/build/vvassilev/root-release-master/include/"",; +""/build/vvassilev/root-release-llvm13/include"",; +""/build/vvassilev/root-release-llvm13/include/"",; nullptr; };; static const char* fwdDeclCode = nullptr;; (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ make. [ 77%] Built target G__GenVector; [ 77%] Linking CXX shared library ../../lib/libGenVector.so; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian2D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian3D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:22520,Availability,error,error,22520,"ease-master/include"",; -""/build/vvassilev/root-release-master/include/"",; +""/build/vvassilev/root-release-llvm13/include"",; +""/build/vvassilev/root-release-llvm13/include/"",; nullptr; };; static const char* fwdDeclCode = nullptr;; (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ make. [ 77%] Built target G__GenVector; [ 77%] Linking CXX shared library ../../lib/libGenVector.so; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian2D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian3D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:22854,Availability,error,error,22854,"inking CXX shared library ../../lib/libGenVector.so; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian2D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian3D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:23118,Availability,error,error,23118,"or.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian3D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:23456,Availability,error,error,23456,"or.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian3D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzE4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzM4D<double> const*)'; /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:23746,Availability,error,error,23746,")'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian3D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzE4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzM4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; collect2: error: ld returned 1 exit status; math/genvector/CMakeFiles/GenVector.dir/build.make:363: recipe for target 'lib/libGenVector.so' failed; make[2]: *** [lib/libGenVector.so] Error 1; CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:24036,Availability,error,error,24036,"keFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzE4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzM4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; collect2: error: ld returned 1 exit status; math/genvector/CMakeFiles/GenVector.dir/build.make:363: recipe for target 'lib/libGenVector.so' failed; make[2]: *** [lib/libGenVector.so] Error 1; CMakeFiles/Makefile2:41978: recipe for target 'math/genvector/CMakeFiles/GenVector.dir/all' failed; make[1]: *** [math/genvector/CMakeFiles/GenVector.dir/all] Error 2; Makefile:165: recipe for target 'all' failed; ```. </details>. > So, so far, my best guess (because I don't understand 'what' it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:24298,Availability,error,error,24298,"e>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzE4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzM4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; collect2: error: ld returned 1 exit status; math/genvector/CMakeFiles/GenVector.dir/build.make:363: recipe for target 'lib/libGenVector.so' failed; make[2]: *** [lib/libGenVector.so] Error 1; CMakeFiles/Makefile2:41978: recipe for target 'math/genvector/CMakeFiles/GenVector.dir/all' failed; make[1]: *** [math/genvector/CMakeFiles/GenVector.dir/all] Error 2; Makefile:165: recipe for target 'all' failed; ```. </details>. > So, so far, my best guess (because I don't understand 'what' it really does) is that [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) has the side effect of destroying/replacing the partial desugaring.; > ; > I would have expected the change to be much closer to part that gener",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:24551,Availability,error,error,24551,"ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzE4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzM4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; collect2: error: ld returned 1 exit status; math/genvector/CMakeFiles/GenVector.dir/build.make:363: recipe for target 'lib/libGenVector.so' failed; make[2]: *** [lib/libGenVector.so] Error 1; CMakeFiles/Makefile2:41978: recipe for target 'math/genvector/CMakeFiles/GenVector.dir/all' failed; make[1]: *** [math/genvector/CMakeFiles/GenVector.dir/all] Error 2; Makefile:165: recipe for target 'all' failed; ```. </details>. > So, so far, my best guess (because I don't understand 'what' it really does) is that [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) has the side effect of destroying/replacing the partial desugaring.; > ; > I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines.; > ; > (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repositor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:910,Deployability,patch,patch,910,"> > Now there are new failures associated with this change; > ; > Can you point me to one or two of those failures?; > ; > > [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) fixed a bug in the template argument printing,; > ; > For up-streaming that, it probably would need to become a policy switch.; > ; > If I understand correctly; > ; > [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) : remove suffix in template parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). It is a long discussion, you can find more information [here](https://reviews.llvm.org/D77598#inline-1057607). The idea is when we print the values of integral types, we should print them as they were written. Here is an example where this does not happen https://godbolt.org/z/MGK5s734G so this patch should be easy to upstream. > ; > [4417a2c](https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a) : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). That was my take as well but without this switch we get failures like this one https://github.com/root-project/root/pull/10294#issuecomment-1135181954. Here are more details from my local builds:. <details>. ```. diff -u ../root-release-master/./math/genvector/G__GenVector.cxx ../root-release-llvm13/./math/genvector/G__GenVector.cxx; --- ../root-release-master/./math/genvector/G__GenVector.cxx	2022-05-08 08:38:55.942037418 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector.cxx	2022-05-08 09:17:42.965205197 +0300; @@ -2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:1693,Deployability,release,release-master,1693,"rg/D77598#inline-1057607). The idea is when we print the values of integral types, we should print them as they were written. Here is an example where this does not happen https://godbolt.org/z/MGK5s734G so this patch should be easy to upstream. > ; > [4417a2c](https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a) : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). That was my take as well but without this switch we get failures like this one https://github.com/root-project/root/pull/10294#issuecomment-1135181954. Here are more details from my local builds:. <details>. ```. diff -u ../root-release-master/./math/genvector/G__GenVector.cxx ../root-release-llvm13/./math/genvector/G__GenVector.cxx; --- ../root-release-master/./math/genvector/G__GenVector.cxx	2022-05-08 08:38:55.942037418 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector.cxx	2022-05-08 09:17:42.965205197 +0300; @@ -2073,8 +2073,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >*); {; @@ -2090,24 +2088,6 @@; instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR);; instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR);; instance.Set",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:1750,Deployability,release,release-,1750,"values of integral types, we should print them as they were written. Here is an example where this does not happen https://godbolt.org/z/MGK5s734G so this patch should be easy to upstream. > ; > [4417a2c](https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a) : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). That was my take as well but without this switch we get failures like this one https://github.com/root-project/root/pull/10294#issuecomment-1135181954. Here are more details from my local builds:. <details>. ```. diff -u ../root-release-master/./math/genvector/G__GenVector.cxx ../root-release-llvm13/./math/genvector/G__GenVector.cxx; --- ../root-release-master/./math/genvector/G__GenVector.cxx	2022-05-08 08:38:55.942037418 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector.cxx	2022-05-08 09:17:42.965205197 +0300; @@ -2073,8 +2073,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >*); {; @@ -2090,24 +2088,6 @@; instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR);; instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:1812,Deployability,release,release-master,1812,"itten. Here is an example where this does not happen https://godbolt.org/z/MGK5s734G so this patch should be easy to upstream. > ; > [4417a2c](https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a) : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). That was my take as well but without this switch we get failures like this one https://github.com/root-project/root/pull/10294#issuecomment-1135181954. Here are more details from my local builds:. <details>. ```. diff -u ../root-release-master/./math/genvector/G__GenVector.cxx ../root-release-llvm13/./math/genvector/G__GenVector.cxx; --- ../root-release-master/./math/genvector/G__GenVector.cxx	2022-05-08 08:38:55.942037418 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector.cxx	2022-05-08 09:17:42.965205197 +0300; @@ -2073,8 +2073,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >*); {; @@ -2090,24 +2088,6 @@; instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR);; instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR);; -; - ::ROOT::Internal::T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:1910,Deployability,release,release-,1910," should be easy to upstream. > ; > [4417a2c](https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a) : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). That was my take as well but without this switch we get failures like this one https://github.com/root-project/root/pull/10294#issuecomment-1135181954. Here are more details from my local builds:. <details>. ```. diff -u ../root-release-master/./math/genvector/G__GenVector.cxx ../root-release-llvm13/./math/genvector/G__GenVector.cxx; --- ../root-release-master/./math/genvector/G__GenVector.cxx	2022-05-08 08:38:55.942037418 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector.cxx	2022-05-08 09:17:42.965205197 +0300; @@ -2073,8 +2073,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >*); {; @@ -2090,24 +2088,6 @@; instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR);; instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEdoublegRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> rea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:14843,Deployability,release,release-master,14843,"floatgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*); (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ diff -u ../root-release-master/./math/genvector/G__GenVector32.cxx ../root-release-llvm13/./math/genvector/G__GenVector32.cxx; --- ../root-release-master/./math/genvector/G__GenVector32.cxx	2022-05-08 08:38:48.526036225 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector32.cxx	2022-05-08 09:17:27.925209486 +0300; @@ -1593,8 +1593,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >*); {; @@ -1610,24 +1608,6 @@; instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR);; instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDoub",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:14902,Deployability,release,release-,14902,"hcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEfloatgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*); (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ diff -u ../root-release-master/./math/genvector/G__GenVector32.cxx ../root-release-llvm13/./math/genvector/G__GenVector32.cxx; --- ../root-release-master/./math/genvector/G__GenVector32.cxx	2022-05-08 08:38:48.526036225 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector32.cxx	2022-05-08 09:17:27.925209486 +0300; @@ -1593,8 +1593,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >*); {; @@ -1610,24 +1608,6 @@; instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR);; instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:14966,Deployability,release,release-master,14966,"-; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*); (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ diff -u ../root-release-master/./math/genvector/G__GenVector32.cxx ../root-release-llvm13/./math/genvector/G__GenVector32.cxx; --- ../root-release-master/./math/genvector/G__GenVector32.cxx	2022-05-08 08:38:48.526036225 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector32.cxx	2022-05-08 09:17:27.925209486 +0300; @@ -1593,8 +1593,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >*); {; @@ -1610,24 +1608,6 @@; instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR);; instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:15066,Deployability,release,release-,15066,"al::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >*); (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ diff -u ../root-release-master/./math/genvector/G__GenVector32.cxx ../root-release-llvm13/./math/genvector/G__GenVector32.cxx; --- ../root-release-master/./math/genvector/G__GenVector32.cxx	2022-05-08 08:38:48.526036225 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector32.cxx	2022-05-08 09:17:27.925209486 +0300; @@ -1593,8 +1593,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >*); {; @@ -1610,24 +1608,6 @@; instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR);; instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::In",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:21509,Deployability,release,release-master,21509,"tEtaPhiM4DlEDouble32_tgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; // Static variable to force the class initialization; @@ -2755,8 +2675,8 @@; nullptr; };; static const char* includePaths[] = {; -""/build/vvassilev/root-release-master/include"",; -""/build/vvassilev/root-release-master/include/"",; +""/build/vvassilev/root-release-llvm13/include"",; +""/build/vvassilev/root-release-llvm13/include/"",; nullptr; };; static const char* fwdDeclCode = nullptr;; (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ make. [ 77%] Built target G__GenVector; [ 77%] Linking CXX shared library ../../lib/libGenVector.so; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian2D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:21559,Deployability,release,release-master,21559,"tEtaPhiM4DlEDouble32_tgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; // Static variable to force the class initialization; @@ -2755,8 +2675,8 @@; nullptr; };; static const char* includePaths[] = {; -""/build/vvassilev/root-release-master/include"",; -""/build/vvassilev/root-release-master/include/"",; +""/build/vvassilev/root-release-llvm13/include"",; +""/build/vvassilev/root-release-llvm13/include/"",; nullptr; };; static const char* fwdDeclCode = nullptr;; (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ make. [ 77%] Built target G__GenVector; [ 77%] Linking CXX shared library ../../lib/libGenVector.so; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian2D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:21610,Deployability,release,release-,21610,"tEtaPhiM4DlEDouble32_tgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; // Static variable to force the class initialization; @@ -2755,8 +2675,8 @@; nullptr; };; static const char* includePaths[] = {; -""/build/vvassilev/root-release-master/include"",; -""/build/vvassilev/root-release-master/include/"",; +""/build/vvassilev/root-release-llvm13/include"",; +""/build/vvassilev/root-release-llvm13/include/"",; nullptr; };; static const char* fwdDeclCode = nullptr;; (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ make. [ 77%] Built target G__GenVector; [ 77%] Linking CXX shared library ../../lib/libGenVector.so; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian2D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:21660,Deployability,release,release-,21660,"tEtaPhiM4DlEDouble32_tgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; // Static variable to force the class initialization; @@ -2755,8 +2675,8 @@; nullptr; };; static const char* includePaths[] = {; -""/build/vvassilev/root-release-master/include"",; -""/build/vvassilev/root-release-master/include/"",; +""/build/vvassilev/root-release-llvm13/include"",; +""/build/vvassilev/root-release-llvm13/include/"",; nullptr; };; static const char* fwdDeclCode = nullptr;; (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ make. [ 77%] Built target G__GenVector; [ 77%] Linking CXX shared library ../../lib/libGenVector.so; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian2D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:25396,Integrability,rout,routines,25396,"d: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzE4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzM4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; collect2: error: ld returned 1 exit status; math/genvector/CMakeFiles/GenVector.dir/build.make:363: recipe for target 'lib/libGenVector.so' failed; make[2]: *** [lib/libGenVector.so] Error 1; CMakeFiles/Makefile2:41978: recipe for target 'math/genvector/CMakeFiles/GenVector.dir/all' failed; make[1]: *** [math/genvector/CMakeFiles/GenVector.dir/all] Error 2; Makefile:165: recipe for target 'all' failed; ```. </details>. > So, so far, my best guess (because I don't understand 'what' it really does) is that [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) has the side effect of destroying/replacing the partial desugaring.; > ; > I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines.; > ; > (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repository). I do not see how that is affecting the desugaring but I have not debugged this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:16665,Modifiability,variab,variable,16665,"athcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzE4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; // Static variable to force the class initialization; @@ -1654,8 +1634,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzM4DlEDouble32_tgRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzM4DlEDouble32_tgRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >*); {; @@ -1671,24 +1649,6 @@; instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzM4DlEDouble32_tgRsPgR);; instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzM4DlEDouble32_tgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzM4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:18220,Modifiability,variab,variable,18220,"cLcLLorentzVectorlEROOTcLcLMathcLcLPxPyPzM4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<float> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; // Static variable to force the class initialization; @@ -1715,8 +1675,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiE4DlEDouble32_tgRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiE4DlEDouble32_tgRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >*); {; @@ -1732,24 +1690,6 @@; instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiE4DlEDouble32_tgRsPgR);; instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiE4DlEDouble32_tgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiE4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:19793,Modifiability,variab,variable,19793,"ntzVectorlEROOTcLcLMathcLcLPtEtaPhiE4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<float> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; // Static variable to force the class initialization; @@ -1776,8 +1716,6 @@; static void deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEDouble32_tgRsPgR(void *p);; static void destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEDouble32_tgRsPgR(void *p);; ; - // Schema evolution read functions; -; // Function generating the singleton type initializer; static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >*); {; @@ -1793,24 +1731,6 @@; instance.SetDelete(&delete_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEDouble32_tgRsPgR);; instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEDouble32_tgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:21366,Modifiability,variab,variable,21366,"tEtaPhiM4DlEDouble32_tgRsPgR);; instance.SetDestructor(&destruct_ROOTcLcLMathcLcLLorentzVectorlEROOTcLcLMathcLcLPtEtaPhiM4DlEDouble32_tgRsPgR);; -; - ::ROOT::Internal::TSchemaHelper* rule;; -; - // the io read rules; - std::vector<::ROOT::Internal::TSchemaHelper> readrules(3);; - rule = &readrules[0];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[1];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - rule = &readrules[2];; - rule->fSourceClass = ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Float16_t> >"";; - rule->fTarget = """";; - rule->fVersion = ""[1-]"";; - instance.SetReadRules( readrules );; return &instance;; }; // Static variable to force the class initialization; @@ -2755,8 +2675,8 @@; nullptr; };; static const char* includePaths[] = {; -""/build/vvassilev/root-release-master/include"",; -""/build/vvassilev/root-release-master/include/"",; +""/build/vvassilev/root-release-llvm13/include"",; +""/build/vvassilev/root-release-llvm13/include/"",; nullptr; };; static const char* fwdDeclCode = nullptr;; (.venv) vvassilev@vv-nuc /build/vvassilev/root_build $ make. [ 77%] Built target G__GenVector; [ 77%] Linking CXX shared library ../../lib/libGenVector.so; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::Cartesian2D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>, ROOT::Math::DefaultCoordinateSystemTag> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1136423157:553,Usability,intuit,intuitive,553,"> > Now there are new failures associated with this change; > ; > Can you point me to one or two of those failures?; > ; > > [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) fixed a bug in the template argument printing,; > ; > For up-streaming that, it probably would need to become a policy switch.; > ; > If I understand correctly; > ; > [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) : remove suffix in template parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). It is a long discussion, you can find more information [here](https://reviews.llvm.org/D77598#inline-1057607). The idea is when we print the values of integral types, we should print them as they were written. Here is an example where this does not happen https://godbolt.org/z/MGK5s734G so this patch should be easy to upstream. > ; > [4417a2c](https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a) : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). That was my take as well but without this switch we get failures like this one https://github.com/root-project/root/pull/10294#issuecomment-1135181954. Here are more details from my local builds:. <details>. ```. diff -u ../root-release-master/./math/genvector/G__GenVector.cxx ../root-release-llvm13/./math/genvector/G__GenVector.cxx; --- ../root-release-master/./math/genvector/G__GenVector.cxx	2022-05-08 08:38:55.942037418 +0300; +++ ../root-release-llvm13/./math/genvector/G__GenVector.cxx	2022-05-08 09:17:42.965205197 +0300; @@ -2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157
https://github.com/root-project/root/pull/10294#issuecomment-1137026344:31,Usability,simpl,simpler,31,"In the end, the reason is much simpler: my fix for the dictionary build is simply too narrow. In fixing `GetNormalizedName` but not, for example, the `PrintingPolicy` in `GetPartiallyDesugaredNameWithScopeHandling`, ROOT internally disagrees on normalized class names and therefore doesn't find the IO rules stored in a `map` with the class name as key. Should be fixed with the next push.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137026344
https://github.com/root-project/root/pull/10294#issuecomment-1137026344:75,Usability,simpl,simply,75,"In the end, the reason is much simpler: my fix for the dictionary build is simply too narrow. In fixing `GetNormalizedName` but not, for example, the `PrintingPolicy` in `GetPartiallyDesugaredNameWithScopeHandling`, ROOT internally disagrees on normalized class names and therefore doesn't find the IO rules stored in a `map` with the class name as key. Should be fixed with the next push.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137026344
https://github.com/root-project/root/pull/10294#issuecomment-1137193958:33,Usability,simpl,simpler,33,"> In the end, the reason is much simpler: my fix for the dictionary build is simply too narrow. . Great :) Just for kicks, can you verify that the following trivial example works as expected:. ```; root [0] template <typename T, typename Q=const T> struct Example {};; root [1] TClass::GetClass(""Example<Double32_t>"")->GetName(); (const char *) ""Example<Double32_t,const Double32_t>""; root [2] TClass::GetClass(""Example<Double32_t,Float16_t>"")->GetName(); (const char *) ""Example<Double32_t,Float16_t>""; ```. Thanks,; Philippe. eg. Copy/paste this on the ROOT prompt:. ```; template <typename T, typename Q=const T> struct Example {};; TClass::GetClass(""Example<Double32_t>"")->GetName(); TClass::GetClass(""Example<Double32_t,Float16_t>"")->GetName(); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137193958
https://github.com/root-project/root/pull/10294#issuecomment-1137193958:77,Usability,simpl,simply,77,"> In the end, the reason is much simpler: my fix for the dictionary build is simply too narrow. . Great :) Just for kicks, can you verify that the following trivial example works as expected:. ```; root [0] template <typename T, typename Q=const T> struct Example {};; root [1] TClass::GetClass(""Example<Double32_t>"")->GetName(); (const char *) ""Example<Double32_t,const Double32_t>""; root [2] TClass::GetClass(""Example<Double32_t,Float16_t>"")->GetName(); (const char *) ""Example<Double32_t,Float16_t>""; ```. Thanks,; Philippe. eg. Copy/paste this on the ROOT prompt:. ```; template <typename T, typename Q=const T> struct Example {};; TClass::GetClass(""Example<Double32_t>"")->GetName(); TClass::GetClass(""Example<Double32_t,Float16_t>"")->GetName(); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137193958
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1686,Integrability,interface,interface,1686, - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSel,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1849,Integrability,interface,interface,1849,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1201,Performance,load,load,1201,quests-build/146424/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1362,Performance,load,load,1362,rt/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:246,Testability,test,tests,246,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:269,Testability,test,test,269,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:378,Testability,test,testReport,378,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:401,Testability,test,test,401,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:597,Testability,test,testReport,597,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:854,Testability,test,testReport,854,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1091,Testability,test,testReport,1091,ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1319,Testability,test,testReport,1319,/lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1563,Testability,test,testReport,1563,root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-j,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1809,Testability,test,testReport,1809,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:2064,Testability,test,testReport,2064,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:2323,Testability,test,testReport,2323,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:2591,Testability,test,testReport,2591,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:2450,Usability,simpl,simple,2450,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143358479:2637,Usability,simpl,simple,2637,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1686,Integrability,interface,interface,1686, - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSel,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1849,Integrability,interface,interface,1849,ttest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1201,Performance,load,load,1201,quests-build/146495/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1362,Performance,load,load,1362,rt/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:246,Testability,test,tests,246,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:269,Testability,test,test,269,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:378,Testability,test,testReport,378,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:401,Testability,test,test,401,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:597,Testability,test,testReport,597,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:854,Testability,test,testReport,854,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1091,Testability,test,testReport,1091,ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1319,Testability,test,testReport,1319,/lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1563,Testability,test,testReport,1563,root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-j,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1809,Testability,test,testReport,1809,ttest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:2064,Testability,test,testReport,2064,ttest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:2323,Testability,test,testReport,2323,ttest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:2591,Testability,test,testReport,2591,ttest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:2450,Usability,simpl,simple,2450,ttest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1143554468:2637,Usability,simpl,simple,2637,ttest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2262,Integrability,interface,interface,2262,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2425,Integrability,interface,interface,2425,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:21,Performance,perform,performance-,21,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/console).; ### Warnings:; - [2022-06-02T14:49:09.186Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T14:49:29.255Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1559,Performance,load,load,1559,## Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](ht,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1720,Performance,load,load,1720,nterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:572,Testability,test,tests,572,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/console).; ### Warnings:; - [2022-06-02T14:49:09.186Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T14:49:29.255Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:595,Testability,test,test,595,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/console).; ### Warnings:; - [2022-06-02T14:49:09.186Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T14:49:29.255Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:704,Testability,test,testReport,704,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/console).; ### Warnings:; - [2022-06-02T14:49:09.186Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T14:49:29.255Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:727,Testability,test,test,727,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/console).; ### Warnings:; - [2022-06-02T14:49:09.186Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T14:49:29.255Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:923,Testability,test,testReport,923,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/console).; ### Warnings:; - [2022-06-02T14:49:09.186Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T14:49:29.255Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1180,Testability,test,testReport,1180,//lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/console).; ### Warnings:; - [2022-06-02T14:49:09.186Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T14:49:29.255Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1433,Testability,test,testReport,1433,-06-02T14:49:29.255Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1677,Testability,test,testReport,1677,nkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1920,Testability,test,testReport,1920,sts-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2155,Testability,test,testReport,2155,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2385,Testability,test,testReport,2385,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2640,Testability,test,testReport,2640,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2919,Testability,test,testReport,2919,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2778,Usability,simpl,simple,2778,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2965,Usability,simpl,simple,2965,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1432,Integrability,interface,interface,1432,ojectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1595,Integrability,interface,interface,1595,ttest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:947,Performance,load,load,947,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcga,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1108,Performance,load,load,1108,le output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:246,Testability,test,tests,246,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcga,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:269,Testability,test,test,269,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcga,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:378,Testability,test,testReport,378,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcga,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:401,Testability,test,test,401,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcga,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:597,Testability,test,testReport,597,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcga,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:837,Testability,test,testReport,837,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcga,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1065,Testability,test,testReport,1065,on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1309,Testability,test,testReport,1309,r](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1555,Testability,test,testReport,1555,cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1810,Testability,test,testReport,1810,jectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:2069,Testability,test,testReport,2069,jectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:2320,Testability,test,testReport,2320,jectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:2591,Testability,test,testReport,2591,jectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:2450,Usability,simpl,simple,2450,jectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1144990827:2637,Usability,simpl,simple,2637,jectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2262,Integrability,interface,interface,2262,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2425,Integrability,interface,interface,2425,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:21,Performance,perform,performance-,21,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/console).; ### Warnings:; - [2022-06-02T18:36:05.557Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T18:36:24.346Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1559,Performance,load,load,1559,## Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](ht,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1720,Performance,load,load,1720,nterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:572,Testability,test,tests,572,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/console).; ### Warnings:; - [2022-06-02T18:36:05.557Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T18:36:24.346Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:595,Testability,test,test,595,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/console).; ### Warnings:; - [2022-06-02T18:36:05.557Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T18:36:24.346Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:704,Testability,test,testReport,704,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/console).; ### Warnings:; - [2022-06-02T18:36:05.557Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T18:36:24.346Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:727,Testability,test,test,727,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/console).; ### Warnings:; - [2022-06-02T18:36:05.557Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T18:36:24.346Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:923,Testability,test,testReport,923,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/console).; ### Warnings:; - [2022-06-02T18:36:05.557Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T18:36:24.346Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1180,Testability,test,testReport,1180,//lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/console).; ### Warnings:; - [2022-06-02T18:36:05.557Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T18:36:24.346Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1433,Testability,test,testReport,1433,-06-02T18:36:24.346Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1677,Testability,test,testReport,1677,nkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1920,Testability,test,testReport,1920,sts-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2155,Testability,test,testReport,2155,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2385,Testability,test,testReport,2385,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2640,Testability,test,testReport,2640,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2919,Testability,test,testReport,2919,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2778,Usability,simpl,simple,2778,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2965,Usability,simpl,simple,2965,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1686,Integrability,interface,interface,1686, - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSel,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1849,Integrability,interface,interface,1849,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1201,Performance,load,load,1201,quests-build/147284/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1362,Performance,load,load,1362,rt/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:246,Testability,test,tests,246,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:269,Testability,test,test,269,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:378,Testability,test,testReport,378,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:401,Testability,test,test,401,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:597,Testability,test,testReport,597,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:854,Testability,test,testReport,854,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1091,Testability,test,testReport,1091,ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1319,Testability,test,testReport,1319,/lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1563,Testability,test,testReport,1563,root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-j,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1809,Testability,test,testReport,1809,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:2064,Testability,test,testReport,2064,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:2323,Testability,test,testReport,2323,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:2591,Testability,test,testReport,2591,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:2450,Usability,simpl,simple,2450,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1153748598:2637,Usability,simpl,simple,2637,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:96,Availability,error,error,96,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:757,Availability,error,error,757,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1803,Availability,error,error,1803," AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:2412,Availability,error,error,2412,"-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-onl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:2442,Availability,error,error,2442,"-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-onl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:2569,Availability,error,error,2569,"y():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:3100,Availability,error,error,3100,"../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:3527,Availability,error,error,3527,"un successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hlcwf_/setup.py'""'""',), ""<pip-setuptools-caller>"", ""exec""))' egg_info --egg-base .../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-pip-egg-info-pxqkc5sy; cwd: .../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hlcwf_/; Preparing metadata (setup.py): finished with status 'error'; error: metadata-generation-failed; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:3602,Availability,avail,available,3602,"un successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hlcwf_/setup.py'""'""',), ""<pip-setuptools-caller>"", ""exec""))' egg_info --egg-base .../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-pip-egg-info-pxqkc5sy; cwd: .../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hlcwf_/; Preparing metadata (setup.py): finished with status 'error'; error: metadata-generation-failed; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:4442,Availability,error,error,4442,"un successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hlcwf_/setup.py'""'""',), ""<pip-setuptools-caller>"", ""exec""))' egg_info --egg-base .../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-pip-egg-info-pxqkc5sy; cwd: .../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hlcwf_/; Preparing metadata (setup.py): finished with status 'error'; error: metadata-generation-failed; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:4450,Availability,error,error,4450,"un successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hlcwf_/setup.py'""'""',), ""<pip-setuptools-caller>"", ""exec""))' egg_info --egg-base .../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-pip-egg-info-pxqkc5sy; cwd: .../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hlcwf_/; Preparing metadata (setup.py): finished with status 'error'; error: metadata-generation-failed; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:161,Deployability,integrat,integration,161,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:271,Deployability,install,install,271,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:3137,Deployability,install,installed,3137,"../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:161,Integrability,integrat,integration,161,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:3106,Integrability,message,message,3106,"../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:337,Performance,cache,cache-dir,337,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:2013,Performance,load,load,2013,"d64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:2041,Performance,load,load,2041,"d64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:2068,Performance,load,load,2068,"d64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:3290,Safety,avoid,avoids,3290,"try *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hlcwf_/setup.py'""'""',), ""<pip-setuptools-caller>"", ""exec""))' egg_info --egg-base .../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-pip-egg-info-pxqkc5sy; cwd: .../py3-hepdata-lib/0.8.1-ec986c2493f6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:253,Testability,log,log,253,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:474,Testability,test,tests,474,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:480,Testability,test,testBuildDir,480,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:832,Testability,test,tests,832,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:838,Testability,test,testBuildDir,838,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1009,Testability,test,tests,1009,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1015,Testability,test,testBuildDir,1015,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1205,Testability,test,tests,1205,25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1211,Testability,test,testBuildDir,1211,25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1442,Testability,test,tests,1442,".tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1448,Testability,test,testBuildDir,1448,".tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1864,Testability,test,tests,1864," AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1870,Testability,test,testBuildDir,1870," AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:2699,Testability,test,tests,2699,"T!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:2705,Testability,test,testBuildDir,2705,"T!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1154135015:3094,Usability,clear,clear,3094,"../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:21,Performance,perform,performance-,21,Build failed on ROOT-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/console).; ### Warnings:; - [2022-07-05T13:55:21.463Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T13:55:40.879Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:2305,Performance,load,load,2305,oottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:2466,Performance,load,load,2466,oottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:570,Testability,test,tests,570,Build failed on ROOT-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/console).; ### Warnings:; - [2022-07-05T13:55:21.463Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T13:55:40.879Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:743,Testability,test,testReport,743,Build failed on ROOT-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/console).; ### Warnings:; - [2022-07-05T13:55:21.463Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T13:55:40.879Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:995,Testability,test,testReport,995,Build failed on ROOT-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/console).; ### Warnings:; - [2022-07-05T13:55:21.463Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T13:55:40.879Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:1263,Testability,test,testReport,1263,### Warnings:; - [2022-07-05T13:55:21.463Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T13:55:40.879Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:1518,Testability,test,testReport,1518,e following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:1738,Testability,test,testReport,1738,uests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:1959,Testability,test,testReport,1959,h/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:2187,Testability,test,testReport,2187,oottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:2423,Testability,test,testReport,2423,oottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:2685,Testability,test,testReport,2685,oottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:2953,Testability,test,testReport,2953,oottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:2544,Usability,simpl,simple,2544,oottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175116758:2731,Usability,simpl,simple,2731,oottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758
https://github.com/root-project/root/pull/10294#issuecomment-1175130897:1252,Performance,load,load,1252,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897
https://github.com/root-project/root/pull/10294#issuecomment-1175130897:1413,Performance,load,load,1413,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897
https://github.com/root-project/root/pull/10294#issuecomment-1175130897:249,Testability,test,tests,249,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897
https://github.com/root-project/root/pull/10294#issuecomment-1175130897:422,Testability,test,testReport,422,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897
https://github.com/root-project/root/pull/10294#issuecomment-1175130897:674,Testability,test,testReport,674,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897
https://github.com/root-project/root/pull/10294#issuecomment-1175130897:906,Testability,test,testReport,906,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897
https://github.com/root-project/root/pull/10294#issuecomment-1175130897:1134,Testability,test,testReport,1134,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897
https://github.com/root-project/root/pull/10294#issuecomment-1175130897:1370,Testability,test,testReport,1370,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897
https://github.com/root-project/root/pull/10294#issuecomment-1175130897:1632,Testability,test,testReport,1632,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897
https://github.com/root-project/root/pull/10294#issuecomment-1175130897:1491,Usability,simpl,simple,1491,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897
https://github.com/root-project/root/pull/10294#issuecomment-1175130897:1678,Usability,simpl,simple,1678,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:569,Testability,test,tests,569,Build failed on ROOT-ubuntu2004/python3.; Running on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/console).; ### Warnings:; - [2022-07-05T14:28:36.238Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T14:29:07.480Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:623,Testability,test,test,623,Build failed on ROOT-ubuntu2004/python3.; Running on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/console).; ### Warnings:; - [2022-07-05T14:28:36.238Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T14:29:07.480Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:741,Testability,test,testReport,741,Build failed on ROOT-ubuntu2004/python3.; Running on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/console).; ### Warnings:; - [2022-07-05T14:28:36.238Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T14:29:07.480Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:795,Testability,test,test,795,Build failed on ROOT-ubuntu2004/python3.; Running on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/console).; ### Warnings:; - [2022-07-05T14:28:36.238Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T14:29:07.480Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:1016,Testability,test,testReport,1016,ild failed on ROOT-ubuntu2004/python3.; Running on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/console).; ### Warnings:; - [2022-07-05T14:28:36.238Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T14:29:07.480Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:1271,Testability,test,testReport,1271,ngs:; - [2022-07-05T14:28:36.238Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T14:29:07.480Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:1491,Testability,test,testReport,1491,rning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:1727,Testability,test,testReport,1727,t-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:1982,Testability,test,testReport,1982,root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:2234,Testability,test,testReport,2234,t/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:2466,Testability,test,testReport,2466,t/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:2694,Testability,test,testReport,2694,t/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:2956,Testability,test,testReport,2956,t/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:2815,Usability,simpl,simple,2815,t/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175163072:3002,Usability,simpl,simple,3002,t/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072
https://github.com/root-project/root/pull/10294#issuecomment-1175603018:572,Testability,test,tests,572,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/console).; ### Warnings:; - [2022-07-05T22:47:30.183Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T22:48:01.949Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018
https://github.com/root-project/root/pull/10294#issuecomment-1175603018:745,Testability,test,testReport,745,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/console).; ### Warnings:; - [2022-07-05T22:47:30.183Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T22:48:01.949Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018
https://github.com/root-project/root/pull/10294#issuecomment-1175603018:997,Testability,test,testReport,997,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/console).; ### Warnings:; - [2022-07-05T22:47:30.183Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T22:48:01.949Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018
https://github.com/root-project/root/pull/10294#issuecomment-1175603018:1265,Testability,test,testReport,1265,### Warnings:; - [2022-07-05T22:47:30.183Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T22:48:01.949Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018
https://github.com/root-project/root/pull/10294#issuecomment-1175603018:1520,Testability,test,testReport,1520,e following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root.selector/simple/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018
https://github.com/root-project/root/pull/10294#issuecomment-1175603018:1740,Testability,test,testReport,1740,. ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018
https://github.com/root-project/root/pull/10294#issuecomment-1175603018:1961,Testability,test,testReport,1961,. ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018
https://github.com/root-project/root/pull/10294#issuecomment-1175603018:2189,Testability,test,testReport,2189,. ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018
https://github.com/root-project/root/pull/10294#issuecomment-1175603018:2451,Testability,test,testReport,2451,. ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018
https://github.com/root-project/root/pull/10294#issuecomment-1175603018:2310,Usability,simpl,simple,2310,. ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018
https://github.com/root-project/root/pull/10294#issuecomment-1175603018:2497,Usability,simpl,simple,2497,. ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018
https://github.com/root-project/root/pull/10294#issuecomment-1186244868:149,Deployability,patch,patches-,149,"Thanks, @vgvassilev. Just to be clear, since I didn't find branches named `llvm13`, you mean these?. * https://github.com/vgvassilev/llvm/tree/cling-patches-llvm13; * https://github.com/vgvassilev/clang/tree/cling-patches-llvm13; * https://github.com/vgvassilev/cling/tree/cling-patches-llvm13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1186244868
https://github.com/root-project/root/pull/10294#issuecomment-1186244868:214,Deployability,patch,patches-,214,"Thanks, @vgvassilev. Just to be clear, since I didn't find branches named `llvm13`, you mean these?. * https://github.com/vgvassilev/llvm/tree/cling-patches-llvm13; * https://github.com/vgvassilev/clang/tree/cling-patches-llvm13; * https://github.com/vgvassilev/cling/tree/cling-patches-llvm13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1186244868
https://github.com/root-project/root/pull/10294#issuecomment-1186244868:279,Deployability,patch,patches-,279,"Thanks, @vgvassilev. Just to be clear, since I didn't find branches named `llvm13`, you mean these?. * https://github.com/vgvassilev/llvm/tree/cling-patches-llvm13; * https://github.com/vgvassilev/clang/tree/cling-patches-llvm13; * https://github.com/vgvassilev/cling/tree/cling-patches-llvm13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1186244868
https://github.com/root-project/root/pull/10294#issuecomment-1186244868:32,Usability,clear,clear,32,"Thanks, @vgvassilev. Just to be clear, since I didn't find branches named `llvm13`, you mean these?. * https://github.com/vgvassilev/llvm/tree/cling-patches-llvm13; * https://github.com/vgvassilev/clang/tree/cling-patches-llvm13; * https://github.com/vgvassilev/cling/tree/cling-patches-llvm13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1186244868
https://github.com/root-project/root/pull/10294#issuecomment-1192957714:158,Availability,down,down,158,"Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case. Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192957714
https://github.com/root-project/root/pull/10294#issuecomment-1192957714:240,Availability,error,error-test-case,240,"Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case. Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192957714
https://github.com/root-project/root/pull/10294#issuecomment-1192957714:61,Testability,test,test,61,"Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case. Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192957714
https://github.com/root-project/root/pull/10294#issuecomment-1192957714:179,Testability,test,test,179,"Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case. Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192957714
https://github.com/root-project/root/pull/10294#issuecomment-1192957714:246,Testability,test,test-case,246,"Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case. Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192957714
https://github.com/root-project/root/pull/10294#issuecomment-1192957714:170,Usability,simpl,simplest,170,"Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case. Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192957714
https://github.com/root-project/root/pull/10294#issuecomment-1193060626:160,Availability,down,down,160,"> Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > ; > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred. You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060626
https://github.com/root-project/root/pull/10294#issuecomment-1193060626:242,Availability,error,error-test-case,242,"> Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > ; > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred. You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060626
https://github.com/root-project/root/pull/10294#issuecomment-1193060626:63,Testability,test,test,63,"> Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > ; > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred. You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060626
https://github.com/root-project/root/pull/10294#issuecomment-1193060626:181,Testability,test,test,181,"> Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > ; > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred. You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060626
https://github.com/root-project/root/pull/10294#issuecomment-1193060626:248,Testability,test,test-case,248,"> Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > ; > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred. You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060626
https://github.com/root-project/root/pull/10294#issuecomment-1193060626:172,Usability,simpl,simplest,172,"> Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > ; > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred. You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060626
https://github.com/root-project/root/pull/10294#issuecomment-1193060988:162,Availability,down,down,162,"> > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > ; > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well. Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060988
https://github.com/root-project/root/pull/10294#issuecomment-1193060988:244,Availability,error,error-test-case,244,"> > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > ; > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well. Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060988
https://github.com/root-project/root/pull/10294#issuecomment-1193060988:944,Security,expose,expose,944,"> > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > ; > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well. Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060988
https://github.com/root-project/root/pull/10294#issuecomment-1193060988:65,Testability,test,test,65,"> > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > ; > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well. Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060988
https://github.com/root-project/root/pull/10294#issuecomment-1193060988:183,Testability,test,test,183,"> > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > ; > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well. Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060988
https://github.com/root-project/root/pull/10294#issuecomment-1193060988:250,Testability,test,test-case,250,"> > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > ; > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well. Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060988
https://github.com/root-project/root/pull/10294#issuecomment-1193060988:174,Usability,simpl,simplest,174,"> > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > ; > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well. Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060988
https://github.com/root-project/root/pull/10294#issuecomment-1193095859:164,Availability,down,down,164,"> > > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > > ; > > ; > > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.; > ; > Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?. Can you add to cling -fno-rtti? I don’t think this can be done automatically it is not automatic for compilers as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193095859
https://github.com/root-project/root/pull/10294#issuecomment-1193095859:246,Availability,error,error-test-case,246,"> > > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > > ; > > ; > > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.; > ; > Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?. Can you add to cling -fno-rtti? I don’t think this can be done automatically it is not automatic for compilers as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193095859
https://github.com/root-project/root/pull/10294#issuecomment-1193095859:965,Security,expose,expose,965,"> > > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > > ; > > ; > > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.; > ; > Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?. Can you add to cling -fno-rtti? I don’t think this can be done automatically it is not automatic for compilers as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193095859
https://github.com/root-project/root/pull/10294#issuecomment-1193095859:67,Testability,test,test,67,"> > > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > > ; > > ; > > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.; > ; > Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?. Can you add to cling -fno-rtti? I don’t think this can be done automatically it is not automatic for compilers as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193095859
https://github.com/root-project/root/pull/10294#issuecomment-1193095859:185,Testability,test,test,185,"> > > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > > ; > > ; > > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.; > ; > Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?. Can you add to cling -fno-rtti? I don’t think this can be done automatically it is not automatic for compilers as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193095859
https://github.com/root-project/root/pull/10294#issuecomment-1193095859:252,Testability,test,test-case,252,"> > > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > > ; > > ; > > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.; > ; > Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?. Can you add to cling -fno-rtti? I don’t think this can be done automatically it is not automatic for compilers as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193095859
https://github.com/root-project/root/pull/10294#issuecomment-1193095859:176,Usability,simpl,simplest,176,"> > > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > > ; > > ; > > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.; > ; > Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?. Can you add to cling -fno-rtti? I don’t think this can be done automatically it is not automatic for compilers as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193095859
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:558,Testability,test,tests,558,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/console).; ### Warnings:; - [2022-09-13T17:42:54.005Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-09-13T17:43:20.121Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:581,Testability,test,test,581,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/console).; ### Warnings:; - [2022-09-13T17:42:54.005Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-09-13T17:43:20.121Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:699,Testability,test,testReport,699,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/console).; ### Warnings:; - [2022-09-13T17:42:54.005Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-09-13T17:43:20.121Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:722,Testability,test,test,722,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/console).; ### Warnings:; - [2022-09-13T17:42:54.005Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-09-13T17:43:20.121Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:914,Testability,test,testReport,914,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/console).; ### Warnings:; - [2022-09-13T17:42:54.005Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-09-13T17:43:20.121Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:1149,Testability,test,testReport,1149,le output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/console).; ### Warnings:; - [2022-09-13T17:42:54.005Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-09-13T17:43:20.121Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:1409,Testability,test,testReport,1409, ; - [2022-09-13T17:43:20.121Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:1695,Testability,test,testReport,1695,e Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:1961,Testability,test,testReport,1961,e Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:2201,Testability,test,testReport,2201,e Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:2445,Testability,test,testReport,2445,e Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:1554,Usability,simpl,simple,1554,e Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10294#issuecomment-1245798559:1741,Usability,simpl,simple,1741,e Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559
https://github.com/root-project/root/pull/10302#issuecomment-1091685848:125,Testability,test,test,125,"Yeah, I wrote those docs :sweat_smile: but I am not sure they should say ""stored as 64 bit"". @pcanal I guess we can fix this test such that writing and reading back a `Long_t` leaf works correctly both on 32bit and 64bit architectures, but what happens when you write that data on a 64bit machine and read it on a 32bit machine or vice-versa?. @ellert in this test we really want to test `long int` support (see be6a62ee84317), so I think the appropriate fix would be to simply use a smaller value than the current `2^33` on 32bit machines, rather than switching to `long long`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10302#issuecomment-1091685848
https://github.com/root-project/root/pull/10302#issuecomment-1091685848:360,Testability,test,test,360,"Yeah, I wrote those docs :sweat_smile: but I am not sure they should say ""stored as 64 bit"". @pcanal I guess we can fix this test such that writing and reading back a `Long_t` leaf works correctly both on 32bit and 64bit architectures, but what happens when you write that data on a 64bit machine and read it on a 32bit machine or vice-versa?. @ellert in this test we really want to test `long int` support (see be6a62ee84317), so I think the appropriate fix would be to simply use a smaller value than the current `2^33` on 32bit machines, rather than switching to `long long`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10302#issuecomment-1091685848
https://github.com/root-project/root/pull/10302#issuecomment-1091685848:383,Testability,test,test,383,"Yeah, I wrote those docs :sweat_smile: but I am not sure they should say ""stored as 64 bit"". @pcanal I guess we can fix this test such that writing and reading back a `Long_t` leaf works correctly both on 32bit and 64bit architectures, but what happens when you write that data on a 64bit machine and read it on a 32bit machine or vice-versa?. @ellert in this test we really want to test `long int` support (see be6a62ee84317), so I think the appropriate fix would be to simply use a smaller value than the current `2^33` on 32bit machines, rather than switching to `long long`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10302#issuecomment-1091685848
https://github.com/root-project/root/pull/10302#issuecomment-1091685848:471,Usability,simpl,simply,471,"Yeah, I wrote those docs :sweat_smile: but I am not sure they should say ""stored as 64 bit"". @pcanal I guess we can fix this test such that writing and reading back a `Long_t` leaf works correctly both on 32bit and 64bit architectures, but what happens when you write that data on a 64bit machine and read it on a 32bit machine or vice-versa?. @ellert in this test we really want to test `long int` support (see be6a62ee84317), so I think the appropriate fix would be to simply use a smaller value than the current `2^33` on 32bit machines, rather than switching to `long long`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10302#issuecomment-1091685848
https://github.com/root-project/root/pull/10302#issuecomment-1092976574:45,Usability,simpl,simply,45,"> so I think the appropriate fix would be to simply use a smaller value than the current 2^33 on 32bit machines, rather than switching to long long. I agree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10302#issuecomment-1092976574
https://github.com/root-project/root/pull/10318#issuecomment-1090957110:214,Usability,clear,clear,214,"That is a good point that I overlooked. The case I was thinking of instead was the question of distinct files opened by distinct threads whose objects might reference the file. [In the case you describe, it is not clear how much it matters which of the TFile instance with the same uuid is being used when following a reference (as they are semantically equivalent] [Actually it might matter for lifetime issues ... ;( ]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10318#issuecomment-1090957110
https://github.com/root-project/root/pull/10330#issuecomment-1089868124:35,Availability,avail,available,35,"> AFAIK the new autoloading is not available for COFF?; > ; > Do we understand (as in reproduced and debugged) where the original issue is coming from? Let's _first_ do that and _then_ try to repair, please. We do have coff support in symbol resolution and it is default already: https://github.com/vgvassilev/cling/blob/329af99e47a39526df49c27abd10d3306fbc7c9b/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L933. I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1089868124
https://github.com/root-project/root/pull/10330#issuecomment-1089868124:192,Availability,repair,repair,192,"> AFAIK the new autoloading is not available for COFF?; > ; > Do we understand (as in reproduced and debugged) where the original issue is coming from? Let's _first_ do that and _then_ try to repair, please. We do have coff support in symbol resolution and it is default already: https://github.com/vgvassilev/cling/blob/329af99e47a39526df49c27abd10d3306fbc7c9b/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L933. I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1089868124
https://github.com/root-project/root/pull/10330#issuecomment-1089868124:518,Performance,load,load,518,"> AFAIK the new autoloading is not available for COFF?; > ; > Do we understand (as in reproduced and debugged) where the original issue is coming from? Let's _first_ do that and _then_ try to repair, please. We do have coff support in symbol resolution and it is default already: https://github.com/vgvassilev/cling/blob/329af99e47a39526df49c27abd10d3306fbc7c9b/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L933. I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1089868124
https://github.com/root-project/root/pull/10330#issuecomment-1089868124:584,Performance,load,loading,584,"> AFAIK the new autoloading is not available for COFF?; > ; > Do we understand (as in reproduced and debugged) where the original issue is coming from? Let's _first_ do that and _then_ try to repair, please. We do have coff support in symbol resolution and it is default already: https://github.com/vgvassilev/cling/blob/329af99e47a39526df49c27abd10d3306fbc7c9b/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L933. I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1089868124
https://github.com/root-project/root/pull/10330#issuecomment-1089868124:442,Usability,clear,clear,442,"> AFAIK the new autoloading is not available for COFF?; > ; > Do we understand (as in reproduced and debugged) where the original issue is coming from? Let's _first_ do that and _then_ try to repair, please. We do have coff support in symbol resolution and it is default already: https://github.com/vgvassilev/cling/blob/329af99e47a39526df49c27abd10d3306fbc7c9b/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L933. I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1089868124
https://github.com/root-project/root/pull/10330#issuecomment-1091405727:341,Availability,failure,failure,341,"> I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem. Note that:; - We can still not reproduce the issue; - With this change, I got the following test failure on Windows (not tested in our CI):; ```; 988: Processing C:/Users/sftnight/git/master/tutorials/rcanvas/symlog.cxx...; 988: IncrementalExecutor::executeFunction: symbol '_imp_?gRandom@@3PAVTRandom@@A' unresolved while linking function '_GLOBAL__sub_I_cling_module_5'!; 988: You are probably missing the definition of _imp_?gRandom@@3PAVTRandom@@A; 988: Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1091405727
https://github.com/root-project/root/pull/10330#issuecomment-1091405727:104,Performance,load,load,104,"> I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem. Note that:; - We can still not reproduce the issue; - With this change, I got the following test failure on Windows (not tested in our CI):; ```; 988: Processing C:/Users/sftnight/git/master/tutorials/rcanvas/symlog.cxx...; 988: IncrementalExecutor::executeFunction: symbol '_imp_?gRandom@@3PAVTRandom@@A' unresolved while linking function '_GLOBAL__sub_I_cling_module_5'!; 988: You are probably missing the definition of _imp_?gRandom@@3PAVTRandom@@A; 988: Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1091405727
https://github.com/root-project/root/pull/10330#issuecomment-1091405727:170,Performance,load,loading,170,"> I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem. Note that:; - We can still not reproduce the issue; - With this change, I got the following test failure on Windows (not tested in our CI):; ```; 988: Processing C:/Users/sftnight/git/master/tutorials/rcanvas/symlog.cxx...; 988: IncrementalExecutor::executeFunction: symbol '_imp_?gRandom@@3PAVTRandom@@A' unresolved while linking function '_GLOBAL__sub_I_cling_module_5'!; 988: You are probably missing the definition of _imp_?gRandom@@3PAVTRandom@@A; 988: Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1091405727
https://github.com/root-project/root/pull/10330#issuecomment-1091405727:720,Performance,load,load,720,"> I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem. Note that:; - We can still not reproduce the issue; - With this change, I got the following test failure on Windows (not tested in our CI):; ```; 988: Processing C:/Users/sftnight/git/master/tutorials/rcanvas/symlog.cxx...; 988: IncrementalExecutor::executeFunction: symbol '_imp_?gRandom@@3PAVTRandom@@A' unresolved while linking function '_GLOBAL__sub_I_cling_module_5'!; 988: You are probably missing the definition of _imp_?gRandom@@3PAVTRandom@@A; 988: Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1091405727
https://github.com/root-project/root/pull/10330#issuecomment-1091405727:336,Testability,test,test,336,"> I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem. Note that:; - We can still not reproduce the issue; - With this change, I got the following test failure on Windows (not tested in our CI):; ```; 988: Processing C:/Users/sftnight/git/master/tutorials/rcanvas/symlog.cxx...; 988: IncrementalExecutor::executeFunction: symbol '_imp_?gRandom@@3PAVTRandom@@A' unresolved while linking function '_GLOBAL__sub_I_cling_module_5'!; 988: You are probably missing the definition of _imp_?gRandom@@3PAVTRandom@@A; 988: Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1091405727
https://github.com/root-project/root/pull/10330#issuecomment-1091405727:365,Testability,test,tested,365,"> I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem. Note that:; - We can still not reproduce the issue; - With this change, I got the following test failure on Windows (not tested in our CI):; ```; 988: Processing C:/Users/sftnight/git/master/tutorials/rcanvas/symlog.cxx...; 988: IncrementalExecutor::executeFunction: symbol '_imp_?gRandom@@3PAVTRandom@@A' unresolved while linking function '_GLOBAL__sub_I_cling_module_5'!; 988: You are probably missing the definition of _imp_?gRandom@@3PAVTRandom@@A; 988: Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1091405727
https://github.com/root-project/root/pull/10330#issuecomment-1091405727:28,Usability,clear,clear,28,"> I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem. Note that:; - We can still not reproduce the issue; - With this change, I got the following test failure on Windows (not tested in our CI):; ```; 988: Processing C:/Users/sftnight/git/master/tutorials/rcanvas/symlog.cxx...; 988: IncrementalExecutor::executeFunction: symbol '_imp_?gRandom@@3PAVTRandom@@A' unresolved while linking function '_GLOBAL__sub_I_cling_module_5'!; 988: You are probably missing the definition of _imp_?gRandom@@3PAVTRandom@@A; 988: Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1091405727
https://github.com/root-project/root/pull/10341#issuecomment-1094750476:748,Integrability,wrap,wrapper,748,"Thanks for the review @eguiraud , regarding :. > the _extra_args relay logic could be documented a bit better (I'm not sure MethodTemplateWrapper's init method needs to take extra_args as argument, but MethodTemplateGetter's docs should mention that the extra_args are passed when constructing the wrapper_class instance. I think this is already clear enough in the docs of `__get__` in `MethodTemplateGetter`:; ```; Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; ```; also `_extra_args` is documented as:; ```; _extra_args (tuple): extra arguments to be used by the wrapper object; when receiving a call.; ```; And the extra args need to be passed when constructing the getter, so they can be passed to the wrapper (the user that is pythonizing a class only deals with the getter).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094750476
https://github.com/root-project/root/pull/10341#issuecomment-1094750476:889,Integrability,wrap,wrapper,889,"Thanks for the review @eguiraud , regarding :. > the _extra_args relay logic could be documented a bit better (I'm not sure MethodTemplateWrapper's init method needs to take extra_args as argument, but MethodTemplateGetter's docs should mention that the extra_args are passed when constructing the wrapper_class instance. I think this is already clear enough in the docs of `__get__` in `MethodTemplateGetter`:; ```; Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; ```; also `_extra_args` is documented as:; ```; _extra_args (tuple): extra arguments to be used by the wrapper object; when receiving a call.; ```; And the extra args need to be passed when constructing the getter, so they can be passed to the wrapper (the user that is pythonizing a class only deals with the getter).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094750476
https://github.com/root-project/root/pull/10341#issuecomment-1094750476:71,Testability,log,logic,71,"Thanks for the review @eguiraud , regarding :. > the _extra_args relay logic could be documented a bit better (I'm not sure MethodTemplateWrapper's init method needs to take extra_args as argument, but MethodTemplateGetter's docs should mention that the extra_args are passed when constructing the wrapper_class instance. I think this is already clear enough in the docs of `__get__` in `MethodTemplateGetter`:; ```; Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; ```; also `_extra_args` is documented as:; ```; _extra_args (tuple): extra arguments to be used by the wrapper object; when receiving a call.; ```; And the extra args need to be passed when constructing the getter, so they can be passed to the wrapper (the user that is pythonizing a class only deals with the getter).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094750476
https://github.com/root-project/root/pull/10341#issuecomment-1094750476:346,Usability,clear,clear,346,"Thanks for the review @eguiraud , regarding :. > the _extra_args relay logic could be documented a bit better (I'm not sure MethodTemplateWrapper's init method needs to take extra_args as argument, but MethodTemplateGetter's docs should mention that the extra_args are passed when constructing the wrapper_class instance. I think this is already clear enough in the docs of `__get__` in `MethodTemplateGetter`:; ```; Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; ```; also `_extra_args` is documented as:; ```; _extra_args (tuple): extra arguments to be used by the wrapper object; when receiving a call.; ```; And the extra args need to be passed when constructing the getter, so they can be passed to the wrapper (the user that is pythonizing a class only deals with the getter).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094750476
https://github.com/root-project/root/pull/10341#issuecomment-1094768654:150,Integrability,wrap,wrapper,150,"> I think this is already clear enough. To the person that wrote the code i'm sure it is! :smile: Concretely maybe ""extra arguments to be used by the wrapper object when receiving a call."" could be e.g. ""extra arguments that will be forwarded to `_wrapper_class`'s init method""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094768654
https://github.com/root-project/root/pull/10341#issuecomment-1094768654:26,Usability,clear,clear,26,"> I think this is already clear enough. To the person that wrote the code i'm sure it is! :smile: Concretely maybe ""extra arguments to be used by the wrapper object when receiving a call."" could be e.g. ""extra arguments that will be forwarded to `_wrapper_class`'s init method""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094768654
https://github.com/root-project/root/pull/10366#issuecomment-1122636569:167,Testability,log,logic,167,"> I can imagine that we can make change this function to return a string and then call it when we called the `.gh` command?. Sounds great, as long as the 'stacktrace' logic does not clear it internally, once it has printed it to terminal before calling `.gh bug`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1122636569
https://github.com/root-project/root/pull/10366#issuecomment-1122636569:182,Usability,clear,clear,182,"> I can imagine that we can make change this function to return a string and then call it when we called the `.gh` command?. Sounds great, as long as the 'stacktrace' logic does not clear it internally, once it has printed it to terminal before calling `.gh bug`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1122636569
https://github.com/root-project/root/pull/10366#issuecomment-1219758325:15,Usability,feedback,feedback,15,Thanks for the feedback! Then it looks ready to me :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1219758325
https://github.com/root-project/root/issues/10382#issuecomment-1096759521:216,Usability,clear,clear,216,"We are probably missing an I/O rule along the line of; ```; #pragma read sourceClass=""TNDArrayT<float>"" targetClass=""TNDArrayT<float>"" source=""Int_t fNumData; float *fData;"" target=""fData"" versions=""1"" code=""{ fData.clear(); for(int i = 0; i < onfile.fNumData; ++i) fData.push_back(onfile.fData[i]); }""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10382#issuecomment-1096759521
https://github.com/root-project/root/pull/10428#issuecomment-1105055702:65,Usability,guid,guide,65,"Exactly, It looks like a bug in `nbconvert`. This polite the ref guide build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10428#issuecomment-1105055702
https://github.com/root-project/root/issues/10447#issuecomment-1110865265:473,Availability,error,erroring,473,"Hi, thanks for pointing out that this clipping is inconsistent with the TTree version! And thanks for the kind words!. I designed the numpy version to be consistent with filling a RooDataSet one-by-one with `RooDataSet::add()`, in which case the value is clipped. That's a general problem in RooFit, many ways to do the same thing and they behave inconsistently. However, I think both clipping and skipping can be very dangerous. I'm about to change the behavior to simply erroring out when the values are not in the range, with the possibility to manually change that behavior to skipping or clipping if desired. Like that, there are no bad surprises. Any thoughts on that?. This issue is related to https://github.com/root-project/root/issues/6937. Probably I will address them together in one PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447#issuecomment-1110865265
https://github.com/root-project/root/issues/10447#issuecomment-1110865265:466,Usability,simpl,simply,466,"Hi, thanks for pointing out that this clipping is inconsistent with the TTree version! And thanks for the kind words!. I designed the numpy version to be consistent with filling a RooDataSet one-by-one with `RooDataSet::add()`, in which case the value is clipped. That's a general problem in RooFit, many ways to do the same thing and they behave inconsistently. However, I think both clipping and skipping can be very dangerous. I'm about to change the behavior to simply erroring out when the values are not in the range, with the possibility to manually change that behavior to skipping or clipping if desired. Like that, there are no bad surprises. Any thoughts on that?. This issue is related to https://github.com/root-project/root/issues/6937. Probably I will address them together in one PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447#issuecomment-1110865265
https://github.com/root-project/root/issues/10447#issuecomment-1110909383:112,Availability,error,erroring,112,"> However, I think both clipping and skipping can be very dangerous. I'm about to change the behavior to simply erroring out when the values are not in the range, with the possibility to manually change that behavior to skipping or clipping if desired. Like that, there are no bad surprises. Any thoughts on that?. That sounds very reasonable. I would have intuitively assumed that the values are skipped, but if the clipping behavior also exists in the interface others might have assume that. Then it's probably best to force the users to decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447#issuecomment-1110909383
https://github.com/root-project/root/issues/10447#issuecomment-1110909383:454,Integrability,interface,interface,454,"> However, I think both clipping and skipping can be very dangerous. I'm about to change the behavior to simply erroring out when the values are not in the range, with the possibility to manually change that behavior to skipping or clipping if desired. Like that, there are no bad surprises. Any thoughts on that?. That sounds very reasonable. I would have intuitively assumed that the values are skipped, but if the clipping behavior also exists in the interface others might have assume that. Then it's probably best to force the users to decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447#issuecomment-1110909383
https://github.com/root-project/root/issues/10447#issuecomment-1110909383:105,Usability,simpl,simply,105,"> However, I think both clipping and skipping can be very dangerous. I'm about to change the behavior to simply erroring out when the values are not in the range, with the possibility to manually change that behavior to skipping or clipping if desired. Like that, there are no bad surprises. Any thoughts on that?. That sounds very reasonable. I would have intuitively assumed that the values are skipped, but if the clipping behavior also exists in the interface others might have assume that. Then it's probably best to force the users to decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447#issuecomment-1110909383
https://github.com/root-project/root/issues/10447#issuecomment-1110909383:357,Usability,intuit,intuitively,357,"> However, I think both clipping and skipping can be very dangerous. I'm about to change the behavior to simply erroring out when the values are not in the range, with the possibility to manually change that behavior to skipping or clipping if desired. Like that, there are no bad surprises. Any thoughts on that?. That sounds very reasonable. I would have intuitively assumed that the values are skipped, but if the clipping behavior also exists in the interface others might have assume that. Then it's probably best to force the users to decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10447#issuecomment-1110909383
https://github.com/root-project/root/pull/10480#issuecomment-1112122353:41,Usability,clear,clearly,41,"No, I do not know. That's the bin center clearly. Why was it shifted? I do not know.; But it fixes the problem and other examples work too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10480#issuecomment-1112122353
https://github.com/root-project/root/pull/10509#issuecomment-1881730104:98,Testability,log,logging,98,"Actually, it's probably not a good idea to introduce this progress bar, because it will break the logging to files, which is done a lot in batch jobs. Hence, I close this PR, which is superseded by another PR:; * https://github.com/root-project/root/pull/14309",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10509#issuecomment-1881730104
https://github.com/root-project/root/pull/10509#issuecomment-1881730104:58,Usability,progress bar,progress bar,58,"Actually, it's probably not a good idea to introduce this progress bar, because it will break the logging to files, which is done a lot in batch jobs. Hence, I close this PR, which is superseded by another PR:; * https://github.com/root-project/root/pull/14309",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10509#issuecomment-1881730104
https://github.com/root-project/root/issues/10512#issuecomment-1149766446:824,Availability,error,error,824,"I've been able to get somewhere but now I need guidance. I created a `dict.modulemap` file:; ```; module dict {; header ""MyClass.h""; header ""OtherClass.h""; export *; }; ```; and the module-aware dictionary:; ```bash; $ ls; LinkDef.h MyClass.h OtherClass.h dict.modulemap; $ rootcling -cxxmodule -f dict.cpp MyClass.h OtherClass.h -moduleMapFile=dict.modulemap LinkDef.h; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm libDict.so; ```; but I cannot load the dictionary on the root shell:; ```; $ root; root [0] .L libDict.so ; Module dict not found.; ```; I put `$PWD` in `LD_LIBRARY_PATH` and `ROOT_INCLUDE_PATH` but the error is still there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10512#issuecomment-1149766446
https://github.com/root-project/root/issues/10512#issuecomment-1149766446:651,Performance,load,load,651,"I've been able to get somewhere but now I need guidance. I created a `dict.modulemap` file:; ```; module dict {; header ""MyClass.h""; header ""OtherClass.h""; export *; }; ```; and the module-aware dictionary:; ```bash; $ ls; LinkDef.h MyClass.h OtherClass.h dict.modulemap; $ rootcling -cxxmodule -f dict.cpp MyClass.h OtherClass.h -moduleMapFile=dict.modulemap LinkDef.h; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm libDict.so; ```; but I cannot load the dictionary on the root shell:; ```; $ root; root [0] .L libDict.so ; Module dict not found.; ```; I put `$PWD` in `LD_LIBRARY_PATH` and `ROOT_INCLUDE_PATH` but the error is still there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10512#issuecomment-1149766446
https://github.com/root-project/root/issues/10512#issuecomment-1149766446:47,Usability,guid,guidance,47,"I've been able to get somewhere but now I need guidance. I created a `dict.modulemap` file:; ```; module dict {; header ""MyClass.h""; header ""OtherClass.h""; export *; }; ```; and the module-aware dictionary:; ```bash; $ ls; LinkDef.h MyClass.h OtherClass.h dict.modulemap; $ rootcling -cxxmodule -f dict.cpp MyClass.h OtherClass.h -moduleMapFile=dict.modulemap LinkDef.h; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm libDict.so; ```; but I cannot load the dictionary on the root shell:; ```; $ root; root [0] .L libDict.so ; Module dict not found.; ```; I put `$PWD` in `LD_LIBRARY_PATH` and `ROOT_INCLUDE_PATH` but the error is still there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10512#issuecomment-1149766446
https://github.com/root-project/root/pull/10529#issuecomment-1118610993:41,Usability,feedback,feedback,41,"@dennisklein, thanks a lot for the quick feedback. @hahnjo, let's move forward with this then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10529#issuecomment-1118610993
https://github.com/root-project/root/issues/10535#issuecomment-1925606745:71,Usability,simpl,simple,71,"This is low priority, but I add more eyes to it: perhaps we can have a simple idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10535#issuecomment-1925606745
https://github.com/root-project/root/issues/10556#issuecomment-1968330234:10,Usability,clear,clear,10,We have a clear path to deal with this behaviour.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1968330234
https://github.com/root-project/root/issues/10556#issuecomment-1968623162:300,Integrability,wrap,wrappers,300,"> We have a clear path to deal with this behaviour. Although there is a workaround, people hit by this bug will not necessarily know right away why their ROOT doesn't work and may waste their time trying to debug it. I think it's worth looking at a fix. It used to work before even with the compiler wrappers. Note also that the problem reported by @xkzl happens for a similar reason, but is not quite the same as the one reported here, as in https://github.com/root-project/root/issues/10556#issuecomment-1931464549 ccache is not involved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1968623162
https://github.com/root-project/root/issues/10556#issuecomment-1968623162:12,Usability,clear,clear,12,"> We have a clear path to deal with this behaviour. Although there is a workaround, people hit by this bug will not necessarily know right away why their ROOT doesn't work and may waste their time trying to debug it. I think it's worth looking at a fix. It used to work before even with the compiler wrappers. Note also that the problem reported by @xkzl happens for a similar reason, but is not quite the same as the one reported here, as in https://github.com/root-project/root/issues/10556#issuecomment-1931464549 ccache is not involved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1968623162
https://github.com/root-project/root/pull/10562#issuecomment-1128075811:91,Testability,benchmark,benchmark,91,"Hi @lmoneta and @hageboeck, thanks for the feedback!. I will open a PR in rootbench with a benchmark based on the hf001_example.C tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562#issuecomment-1128075811
https://github.com/root-project/root/pull/10562#issuecomment-1128075811:43,Usability,feedback,feedback,43,"Hi @lmoneta and @hageboeck, thanks for the feedback!. I will open a PR in rootbench with a benchmark based on the hf001_example.C tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562#issuecomment-1128075811
https://github.com/root-project/root/issues/10577#issuecomment-1126366016:207,Performance,cache,caches,207,"While the current behaviour is clearly a bug and needs to be fixed, I would also appreciate a workaround that I could use right now. Maybe there is some function/static method to call to clean up the global caches (if that is indeed a problem of caching).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1126366016
https://github.com/root-project/root/issues/10577#issuecomment-1126366016:31,Usability,clear,clearly,31,"While the current behaviour is clearly a bug and needs to be fixed, I would also appreciate a workaround that I could use right now. Maybe there is some function/static method to call to clean up the global caches (if that is indeed a problem of caching).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1126366016
https://github.com/root-project/root/issues/10577#issuecomment-1133924183:23,Performance,cache,caches,23,"Hi! I think the global caches are a bad idea, I'm still thinking of how to get rid of them without losing cache efficiency. For now, the workaround is to clear the global cache with:; ```C++; RooExpensiveObjectCache::instance().clearAll();; ```; Another solution is to use the RooWorkspace factory pattern to create your model, because then it uses a model local cache in the workspace that gets cleared when the workspace goes out of scope. Hope that helps for now!. edit 1: corrected ""mode local"" to ""model local""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1133924183
https://github.com/root-project/root/issues/10577#issuecomment-1133924183:106,Performance,cache,cache,106,"Hi! I think the global caches are a bad idea, I'm still thinking of how to get rid of them without losing cache efficiency. For now, the workaround is to clear the global cache with:; ```C++; RooExpensiveObjectCache::instance().clearAll();; ```; Another solution is to use the RooWorkspace factory pattern to create your model, because then it uses a model local cache in the workspace that gets cleared when the workspace goes out of scope. Hope that helps for now!. edit 1: corrected ""mode local"" to ""model local""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1133924183
https://github.com/root-project/root/issues/10577#issuecomment-1133924183:171,Performance,cache,cache,171,"Hi! I think the global caches are a bad idea, I'm still thinking of how to get rid of them without losing cache efficiency. For now, the workaround is to clear the global cache with:; ```C++; RooExpensiveObjectCache::instance().clearAll();; ```; Another solution is to use the RooWorkspace factory pattern to create your model, because then it uses a model local cache in the workspace that gets cleared when the workspace goes out of scope. Hope that helps for now!. edit 1: corrected ""mode local"" to ""model local""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1133924183
https://github.com/root-project/root/issues/10577#issuecomment-1133924183:363,Performance,cache,cache,363,"Hi! I think the global caches are a bad idea, I'm still thinking of how to get rid of them without losing cache efficiency. For now, the workaround is to clear the global cache with:; ```C++; RooExpensiveObjectCache::instance().clearAll();; ```; Another solution is to use the RooWorkspace factory pattern to create your model, because then it uses a model local cache in the workspace that gets cleared when the workspace goes out of scope. Hope that helps for now!. edit 1: corrected ""mode local"" to ""model local""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1133924183
https://github.com/root-project/root/issues/10577#issuecomment-1133924183:154,Usability,clear,clear,154,"Hi! I think the global caches are a bad idea, I'm still thinking of how to get rid of them without losing cache efficiency. For now, the workaround is to clear the global cache with:; ```C++; RooExpensiveObjectCache::instance().clearAll();; ```; Another solution is to use the RooWorkspace factory pattern to create your model, because then it uses a model local cache in the workspace that gets cleared when the workspace goes out of scope. Hope that helps for now!. edit 1: corrected ""mode local"" to ""model local""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1133924183
https://github.com/root-project/root/issues/10577#issuecomment-1133924183:228,Usability,clear,clearAll,228,"Hi! I think the global caches are a bad idea, I'm still thinking of how to get rid of them without losing cache efficiency. For now, the workaround is to clear the global cache with:; ```C++; RooExpensiveObjectCache::instance().clearAll();; ```; Another solution is to use the RooWorkspace factory pattern to create your model, because then it uses a model local cache in the workspace that gets cleared when the workspace goes out of scope. Hope that helps for now!. edit 1: corrected ""mode local"" to ""model local""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1133924183
https://github.com/root-project/root/issues/10577#issuecomment-1133924183:396,Usability,clear,cleared,396,"Hi! I think the global caches are a bad idea, I'm still thinking of how to get rid of them without losing cache efficiency. For now, the workaround is to clear the global cache with:; ```C++; RooExpensiveObjectCache::instance().clearAll();; ```; Another solution is to use the RooWorkspace factory pattern to create your model, because then it uses a model local cache in the workspace that gets cleared when the workspace goes out of scope. Hope that helps for now!. edit 1: corrected ""mode local"" to ""model local""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1133924183
https://github.com/root-project/root/pull/10588#issuecomment-1128913760:125,Usability,clear,clear,125,"> Thanks. Sounds like a good idea. Or maybe step and offset. (default 1 and 0). I prefer to set the ""start value"" it is more clear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10588#issuecomment-1128913760
https://github.com/root-project/root/issues/10640#issuecomment-1137195752:7,Usability,clear,clear,7,"Right, clear now. Thanks! This can be closed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640#issuecomment-1137195752
https://github.com/root-project/root/issues/10660#issuecomment-1464032410:135,Usability,feedback,feedback,135,"Thanks. Would such a PR be likely to be accepted? I programmed other things involving histograms two years ago and did not get further feedback / revision (https://github.com/root-project/root/pull/8546) on how to proceed, thus I am not sure if I should embark in new PRs at the moment, until the others are solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660#issuecomment-1464032410
https://github.com/root-project/root/pull/10670#issuecomment-1143539344:442,Usability,intuit,intuitive,442,"`obj.ClassName()` is not only less verbose, but also doesn't require you to include `TClass.h`. Okay I see the point that one doesn't know if it is `obj.IsA()->GetName()` or `obj.Class()->GetName()`, but to be confused by this one needs to be a `TObject` expert why knows about the difference between `IsA()` and `Class()`. Without this prior knowledge, I think the behavior of `obj.ClassName()` to give the name of the derived class is very intuitive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10670#issuecomment-1143539344
https://github.com/root-project/root/pull/10690#issuecomment-1403728768:687,Availability,error,error,687,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768
https://github.com/root-project/root/pull/10690#issuecomment-1403728768:826,Availability,error,error,826,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768
https://github.com/root-project/root/pull/10690#issuecomment-1403728768:963,Availability,fault,fault,963,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768
https://github.com/root-project/root/pull/10690#issuecomment-1403728768:151,Integrability,depend,dependency,151,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768
https://github.com/root-project/root/pull/10690#issuecomment-1403728768:17,Testability,test,tested,17,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768
https://github.com/root-project/root/pull/10690#issuecomment-1403728768:59,Testability,test,test,59,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768
https://github.com/root-project/root/pull/10690#issuecomment-1403728768:271,Testability,test,test,271,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768
https://github.com/root-project/root/pull/10690#issuecomment-1403728768:399,Testability,test,test,399,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768
https://github.com/root-project/root/pull/10690#issuecomment-1403728768:664,Testability,test,test,664,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768
https://github.com/root-project/root/pull/10690#issuecomment-1403728768:1102,Usability,simpl,simple,1102,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768
https://github.com/root-project/root/pull/10705#issuecomment-1148590657:196,Availability,error,error,196,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657
https://github.com/root-project/root/pull/10705#issuecomment-1148590657:437,Availability,avail,available,437,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657
https://github.com/root-project/root/pull/10705#issuecomment-1148590657:623,Availability,error,error,623,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657
https://github.com/root-project/root/pull/10705#issuecomment-1148590657:347,Deployability,patch,patch,347,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657
https://github.com/root-project/root/pull/10705#issuecomment-1148590657:202,Integrability,message,message,202,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657
https://github.com/root-project/root/pull/10705#issuecomment-1148590657:521,Integrability,message,message,521,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657
https://github.com/root-project/root/pull/10705#issuecomment-1148590657:629,Integrability,message,message,629,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657
https://github.com/root-project/root/pull/10705#issuecomment-1148590657:159,Performance,cache,cached,159,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657
https://github.com/root-project/root/pull/10705#issuecomment-1148590657:615,Usability,clear,clearer,615,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657
https://github.com/root-project/root/pull/10720#issuecomment-1152096497:243,Usability,feedback,feedback,243,"> Very nice! A few nits, in particular whole line comments in the code should use the `//` style (which makes it easier to comment blocks including comments with `/* */`).; > ; > I leave the final approval up to @jalopezg-r00t. Thanks for the feedback and suggestions, @jblomer! Block comments will be used more judiciously from now on :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720#issuecomment-1152096497
https://github.com/root-project/root/pull/10720#issuecomment-1152255768:141,Usability,feedback,feedback,141,"> Thanks! Very nice work, @glmiotto :slightly_smiling_face:!; > ; > I have added some comments that we have to address before merging. Great feedback @jalopezg-r00t, thanks as always! I'll get right on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720#issuecomment-1152255768
https://github.com/root-project/root/pull/10721#issuecomment-1151021014:71,Usability,simpl,simple,71,"Hi Bertrand, what's the stacktrace for df017_vecOpsHEP.py? it's a very simple tutorial, so if that doesn't work i'm thinking no RDF program should work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10721#issuecomment-1151021014
https://github.com/root-project/root/pull/10721#issuecomment-1151028323:156,Availability,error,error,156,"> Hi Bertrand, what's the stacktrace for df017_vecOpsHEP.py? it's a very simple tutorial, so if that doesn't work i'm thinking no RDF program should work. `error code: Exit code 0xc0000374`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10721#issuecomment-1151028323
https://github.com/root-project/root/pull/10721#issuecomment-1151028323:73,Usability,simpl,simple,73,"> Hi Bertrand, what's the stacktrace for df017_vecOpsHEP.py? it's a very simple tutorial, so if that doesn't work i'm thinking no RDF program should work. `error code: Exit code 0xc0000374`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10721#issuecomment-1151028323
https://github.com/root-project/root/issues/10722#issuecomment-1151073680:18,Usability,guid,guide,18,That's the user's guide... it is deprecated ... you should not use it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722#issuecomment-1151073680
https://github.com/root-project/root/issues/10722#issuecomment-1151136310:163,Availability,error,error-in-thisroot-csh-during-installation,163,"> That's the user's guide... it is deprecated ... you should not use it. Hi, I am not using it, but forum users are doing, see https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue. So my suggestion is to put a big label on top informing anyone that it is deprecated. The results still appear when googling, so it seems useful to add some deprecated mark",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722#issuecomment-1151136310
https://github.com/root-project/root/issues/10722#issuecomment-1151136310:192,Deployability,install,installation,192,"> That's the user's guide... it is deprecated ... you should not use it. Hi, I am not using it, but forum users are doing, see https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue. So my suggestion is to put a big label on top informing anyone that it is deprecated. The results still appear when googling, so it seems useful to add some deprecated mark",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722#issuecomment-1151136310
https://github.com/root-project/root/issues/10722#issuecomment-1151136310:20,Usability,guid,guide,20,"> That's the user's guide... it is deprecated ... you should not use it. Hi, I am not using it, but forum users are doing, see https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue. So my suggestion is to put a big label on top informing anyone that it is deprecated. The results still appear when googling, so it seems useful to add some deprecated mark",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722#issuecomment-1151136310
https://github.com/root-project/root/issues/10722#issuecomment-1151216488:222,Usability,guid,guide,222,"> By the way, from the new ROOT website, I do not see what is the clicks-series leading to the Old Users Guide. Yes, it seems the problem arises mainly when googling. The first two results lead you to the deprecated users guide. ![image](https://user-images.githubusercontent.com/10653970/172875715-28ccea27-c989-4658-80e8-7ef7bcb437ea.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722#issuecomment-1151216488
https://github.com/root-project/root/issues/10722#issuecomment-1151221786:112,Usability,guid,guide,112,"> Yes, it seems the problem arises mainly when googling. The first two results lead you to the deprecated users guide. We need to watermark them in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722#issuecomment-1151221786
https://github.com/root-project/root/pull/10740#issuecomment-1153930628:21,Usability,clear,clear,21,"Ok, thank you! It is clear now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10740#issuecomment-1153930628
https://github.com/root-project/root/issues/10743#issuecomment-1154462514:1576,Integrability,rout,routine,1576,"With the following changes; ```; diff --git a/bindings/pyroot/pythonizations/python/ROOT/__init__.py b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; index 52d23a6fc3..790432eb3d 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/__init__.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; @@ -79,6 +79,7 @@ def cleanup():; # Hard teardown: run part of the gROOT shutdown sequence.; # Running it here ensures that it is done before any ROOT libraries; # are off-loaded, with unspecified order of static object destruction.; + print(""Calling EndOfProcessCleanups from __init__.py""); backend.gROOT.EndOfProcessCleanups(); ; atexit.register(cleanup); diff --git a/core/base/src/TApplication.cxx b/core/base/src/TApplication.cxx; index 8bdaa03f8d..9a02160611 100644; --- a/core/base/src/TApplication.cxx; +++ b/core/base/src/TApplication.cxx; @@ -86,6 +86,7 @@ static void CallEndOfProcessCleanups(); // set gROOT in its end-of-life mode which prevents executing code, like; // autoloading libraries (!) that is pointless ...; if (gROOT) {; + std::cout << ""Calling EndOfProcessCleanups from TApplication\n"";; gROOT->SetBit(kInvalidObject);; gROOT->EndOfProcessCleanups();; }; ```. I get this; ```; $: python -c ""import ROOT""; Calling EndOfProcessCleanups from __init__.py; $: python -c ""import ROOT; ROOT.TH1F""; Calling EndOfProcessCleanups from __init__.py; Calling EndOfProcessCleanups from TApplication; ```. i.e. it looks to me that as long as anything is done in the PyROOT application other than simply importing the module, the second cleanup routine is called at the end of the process (after the Python one). Either one of these should probably not be called",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743#issuecomment-1154462514
https://github.com/root-project/root/issues/10743#issuecomment-1154462514:492,Performance,load,loaded,492,"With the following changes; ```; diff --git a/bindings/pyroot/pythonizations/python/ROOT/__init__.py b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; index 52d23a6fc3..790432eb3d 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/__init__.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; @@ -79,6 +79,7 @@ def cleanup():; # Hard teardown: run part of the gROOT shutdown sequence.; # Running it here ensures that it is done before any ROOT libraries; # are off-loaded, with unspecified order of static object destruction.; + print(""Calling EndOfProcessCleanups from __init__.py""); backend.gROOT.EndOfProcessCleanups(); ; atexit.register(cleanup); diff --git a/core/base/src/TApplication.cxx b/core/base/src/TApplication.cxx; index 8bdaa03f8d..9a02160611 100644; --- a/core/base/src/TApplication.cxx; +++ b/core/base/src/TApplication.cxx; @@ -86,6 +86,7 @@ static void CallEndOfProcessCleanups(); // set gROOT in its end-of-life mode which prevents executing code, like; // autoloading libraries (!) that is pointless ...; if (gROOT) {; + std::cout << ""Calling EndOfProcessCleanups from TApplication\n"";; gROOT->SetBit(kInvalidObject);; gROOT->EndOfProcessCleanups();; }; ```. I get this; ```; $: python -c ""import ROOT""; Calling EndOfProcessCleanups from __init__.py; $: python -c ""import ROOT; ROOT.TH1F""; Calling EndOfProcessCleanups from __init__.py; Calling EndOfProcessCleanups from TApplication; ```. i.e. it looks to me that as long as anything is done in the PyROOT application other than simply importing the module, the second cleanup routine is called at the end of the process (after the Python one). Either one of these should probably not be called",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743#issuecomment-1154462514
https://github.com/root-project/root/issues/10743#issuecomment-1154462514:1528,Usability,simpl,simply,1528,"With the following changes; ```; diff --git a/bindings/pyroot/pythonizations/python/ROOT/__init__.py b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; index 52d23a6fc3..790432eb3d 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/__init__.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; @@ -79,6 +79,7 @@ def cleanup():; # Hard teardown: run part of the gROOT shutdown sequence.; # Running it here ensures that it is done before any ROOT libraries; # are off-loaded, with unspecified order of static object destruction.; + print(""Calling EndOfProcessCleanups from __init__.py""); backend.gROOT.EndOfProcessCleanups(); ; atexit.register(cleanup); diff --git a/core/base/src/TApplication.cxx b/core/base/src/TApplication.cxx; index 8bdaa03f8d..9a02160611 100644; --- a/core/base/src/TApplication.cxx; +++ b/core/base/src/TApplication.cxx; @@ -86,6 +86,7 @@ static void CallEndOfProcessCleanups(); // set gROOT in its end-of-life mode which prevents executing code, like; // autoloading libraries (!) that is pointless ...; if (gROOT) {; + std::cout << ""Calling EndOfProcessCleanups from TApplication\n"";; gROOT->SetBit(kInvalidObject);; gROOT->EndOfProcessCleanups();; }; ```. I get this; ```; $: python -c ""import ROOT""; Calling EndOfProcessCleanups from __init__.py; $: python -c ""import ROOT; ROOT.TH1F""; Calling EndOfProcessCleanups from __init__.py; Calling EndOfProcessCleanups from TApplication; ```. i.e. it looks to me that as long as anything is done in the PyROOT application other than simply importing the module, the second cleanup routine is called at the end of the process (after the Python one). Either one of these should probably not be called",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743#issuecomment-1154462514
https://github.com/root-project/root/issues/10748#issuecomment-1159127875:67,Modifiability,variab,variable,67,"It is old logic that `TBrowser` does not starts without `DISAPLAY` variable set or simply in batch mode.; One can solve this, but with some fine-tuning in ""normal"" `TBrowser`/`TBrowserImp` classes.; If @bellenot has nothing against it - I can propose PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748#issuecomment-1159127875
https://github.com/root-project/root/issues/10748#issuecomment-1159127875:10,Testability,log,logic,10,"It is old logic that `TBrowser` does not starts without `DISAPLAY` variable set or simply in batch mode.; One can solve this, but with some fine-tuning in ""normal"" `TBrowser`/`TBrowserImp` classes.; If @bellenot has nothing against it - I can propose PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748#issuecomment-1159127875
https://github.com/root-project/root/issues/10748#issuecomment-1159127875:83,Usability,simpl,simply,83,"It is old logic that `TBrowser` does not starts without `DISAPLAY` variable set or simply in batch mode.; One can solve this, but with some fine-tuning in ""normal"" `TBrowser`/`TBrowserImp` classes.; If @bellenot has nothing against it - I can propose PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748#issuecomment-1159127875
https://github.com/root-project/root/issues/10748#issuecomment-1159421157:69,Modifiability,variab,variable,69,"> It is old logic that `TBrowser` does not starts without `DISAPLAY` variable set or simply in batch mode. One can solve this, but with some fine-tuning in ""normal"" `TBrowser`/`TBrowserImp` classes. If @bellenot has nothing against it - I can propose PR. Thanks @linev ! Feel free to open a PR if you want 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748#issuecomment-1159421157
https://github.com/root-project/root/issues/10748#issuecomment-1159421157:12,Testability,log,logic,12,"> It is old logic that `TBrowser` does not starts without `DISAPLAY` variable set or simply in batch mode. One can solve this, but with some fine-tuning in ""normal"" `TBrowser`/`TBrowserImp` classes. If @bellenot has nothing against it - I can propose PR. Thanks @linev ! Feel free to open a PR if you want 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748#issuecomment-1159421157
https://github.com/root-project/root/issues/10748#issuecomment-1159421157:85,Usability,simpl,simply,85,"> It is old logic that `TBrowser` does not starts without `DISAPLAY` variable set or simply in batch mode. One can solve this, but with some fine-tuning in ""normal"" `TBrowser`/`TBrowserImp` classes. If @bellenot has nothing against it - I can propose PR. Thanks @linev ! Feel free to open a PR if you want 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10748#issuecomment-1159421157
https://github.com/root-project/root/pull/10753#issuecomment-1155283317:536,Usability,simpl,simpler,536,"Thanks Vincenzo! I think the most important change in this PR is that PyROOT does not register the `EndOfProcessCleanups` call with _Python's_ atexit mechanism anymore, but it uses the classic handlers mechanism that `TApplication` already uses. And that means that now PyROOT objects will de deleted before `EndOfProcessCleanups` is called, which is an important change in behavior but I think it is the intended/correct behavior. I am not sure we need the combo `std::call_once` + `std::once_flag` data member, a static counter seems simpler and it does the job (unless we expect that TApplication and PyROOT could try to register the handler _concurrently_, but I can't imagine how that would happen). With this said I'm the least qualified person to decide on whether we want to go with this or not, I'll leave it to the other reviewers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155283317
https://github.com/root-project/root/pull/10753#issuecomment-1155649950:226,Usability,clear,cleared,226,"> Can we at least make EndOfProcessCleanups truly a no-op if it's not the first time it's been called? . Well, maybe, maybe not. If it is currently not a true no-op then it might be either. * (a bug) some list is not properly cleared; * (a feature) some items are added to the to-be-cleaned list between the 2 calls. > This should let Python call it before point (5) above, then when it's going to get called by the TApplication it won't bother RDF. . It *must* be called (by python) during point (1) (which maybe what you meant) and RDF should not be doing anything after (5) so it should *already* not bother RDF. But maybe I am missing something. I.e. is the second call to `EndOfProcessCleanups` a red-herring that 'just' looks suspicious and the problem is ""first call affecting RDF"" or is it really the 2nd call that is creating a problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155649950
https://github.com/root-project/root/issues/10777#issuecomment-1205188390:271,Usability,simpl,simply,271,"@stephanlachnit I know you come from the Debian side, and I remember you have a private package of ROOT that builds successfully. Any idea what might go wrong on Ubuntu?. Otherwise I'm tempted to close this because it's basically not reproducible standalone, and I could simply argue it's a problem in the packaging system...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1205188390
https://github.com/root-project/root/pull/10780#issuecomment-1160231233:115,Deployability,release,release,115,"Hi Lorenzo, thank you for your feedback 😀! Do you know by any chance if this fix will be included in the next ROOT release? It is important for us to know if we should wait or implement some workaround in our project code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1160231233
https://github.com/root-project/root/pull/10780#issuecomment-1160231233:31,Usability,feedback,feedback,31,"Hi Lorenzo, thank you for your feedback 😀! Do you know by any chance if this fix will be included in the next ROOT release? It is important for us to know if we should wait or implement some workaround in our project code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1160231233
https://github.com/root-project/root/pull/10780#issuecomment-1192647873:195,Integrability,message,messages,195,@petrstepanov : Thank you for the contribution that now is merged!; I forgot to mention you that next time it would be better to merge together simple commits and have more meaningful commit log messages. ; Thanks again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1192647873
https://github.com/root-project/root/pull/10780#issuecomment-1192647873:191,Testability,log,log,191,@petrstepanov : Thank you for the contribution that now is merged!; I forgot to mention you that next time it would be better to merge together simple commits and have more meaningful commit log messages. ; Thanks again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1192647873
https://github.com/root-project/root/pull/10780#issuecomment-1192647873:144,Usability,simpl,simple,144,@petrstepanov : Thank you for the contribution that now is merged!; I forgot to mention you that next time it would be better to merge together simple commits and have more meaningful commit log messages. ; Thanks again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1192647873
https://github.com/root-project/root/pull/10826#issuecomment-1167247909:2,Usability,simpl,simple,2,"A simple `interp.declare(""#pragma once"")` should be enough. The original case was a header that got embedded verbatim in a dictionary, through genreflex, iirc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10826#issuecomment-1167247909
https://github.com/root-project/root/pull/10830#issuecomment-1168354018:131,Usability,clear,clear,131,You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168354018
https://github.com/root-project/root/pull/10830#issuecomment-1168753106:1031,Availability,avail,availability-swift,1031,"> This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case. I doubt there's something I don't know, anyway by applying this patch, tests below in LLVM failed:; ```; Failed Tests (23): ; Clang :: AST/ast-dump-attr.cpp ; Clang :: AST/ast-dump-attr.m ; Clang :: AST/ast-dump-c-attr.c ; Clang :: AST/ast-dump-color.cpp ; Clang :: AST/ast-dump-wasm-attr-export.c ; Clang :: AST/ast-dump-wasm-attr-import.c ; Clang :: AST/ast-print-attr.c; Clang :: AST/attr-swift_attr.m; Clang :: AST/attr-swift_bridge.m; Clang :: AST/category-attribute.m; Clang :: AST/pragma-attribute-cxx-subject-match-rules.cpp; Clang :: AST/pragma-attribute-objc-subject-match-rules.m; Clang :: AST/pragma-multiple-attributes.cpp; Clang :: Misc/pragma-attribute-cxx.cpp; Clang :: Misc/pragma-attribute-objc.m; Clang :: Misc/pragma-attribute-strict-subjects.c; Clang :: OpenMP/assumes_codegen.cpp; Clang :: OpenMP/assumes_print.cpp; Clang :: OpenMP/assumes_template_print.cpp; Clang :: Sema/ast-print.c; Clang :: Sema/attr-availability-swift.c; Clang :: SemaCXX/cxx11-attr-print.cpp; Clang :: SemaTemplate/attributes.cpp; ```. A broken example like:; ```; /home/jun/dev/llvm-project/clang/test/AST/ast-print-attr.c:14:11: error: CHECK: expected string not found in input ; // CHECK: int fun_asm() asm(""test""); ; ^ ; <stdin>:3:46: note: scanning from here ; using C = int ((*))() __attribute__((cdecl)); ; ^ ; <stdin>:4:1: note: possible intended match here ; int fun_asm() asm(R""ATTRDUMP(test)ATTRDUMP""); ; ```. > You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn. So I guess if `R` is enough for ROOT, maybe we can drop `ATTRDUMP`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168753106
https://github.com/root-project/root/pull/10830#issuecomment-1168753106:1230,Availability,error,error,1230,"> This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case. I doubt there's something I don't know, anyway by applying this patch, tests below in LLVM failed:; ```; Failed Tests (23): ; Clang :: AST/ast-dump-attr.cpp ; Clang :: AST/ast-dump-attr.m ; Clang :: AST/ast-dump-c-attr.c ; Clang :: AST/ast-dump-color.cpp ; Clang :: AST/ast-dump-wasm-attr-export.c ; Clang :: AST/ast-dump-wasm-attr-import.c ; Clang :: AST/ast-print-attr.c; Clang :: AST/attr-swift_attr.m; Clang :: AST/attr-swift_bridge.m; Clang :: AST/category-attribute.m; Clang :: AST/pragma-attribute-cxx-subject-match-rules.cpp; Clang :: AST/pragma-attribute-objc-subject-match-rules.m; Clang :: AST/pragma-multiple-attributes.cpp; Clang :: Misc/pragma-attribute-cxx.cpp; Clang :: Misc/pragma-attribute-objc.m; Clang :: Misc/pragma-attribute-strict-subjects.c; Clang :: OpenMP/assumes_codegen.cpp; Clang :: OpenMP/assumes_print.cpp; Clang :: OpenMP/assumes_template_print.cpp; Clang :: Sema/ast-print.c; Clang :: Sema/attr-availability-swift.c; Clang :: SemaCXX/cxx11-attr-print.cpp; Clang :: SemaTemplate/attributes.cpp; ```. A broken example like:; ```; /home/jun/dev/llvm-project/clang/test/AST/ast-print-attr.c:14:11: error: CHECK: expected string not found in input ; // CHECK: int fun_asm() asm(""test""); ; ^ ; <stdin>:3:46: note: scanning from here ; using C = int ((*))() __attribute__((cdecl)); ; ^ ; <stdin>:4:1: note: possible intended match here ; int fun_asm() asm(R""ATTRDUMP(test)ATTRDUMP""); ; ```. > You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn. So I guess if `R` is enough for ROOT, maybe we can drop `ATTRDUMP`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168753106
https://github.com/root-project/root/pull/10830#issuecomment-1168753106:167,Deployability,patch,patch,167,"> This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case. I doubt there's something I don't know, anyway by applying this patch, tests below in LLVM failed:; ```; Failed Tests (23): ; Clang :: AST/ast-dump-attr.cpp ; Clang :: AST/ast-dump-attr.m ; Clang :: AST/ast-dump-c-attr.c ; Clang :: AST/ast-dump-color.cpp ; Clang :: AST/ast-dump-wasm-attr-export.c ; Clang :: AST/ast-dump-wasm-attr-import.c ; Clang :: AST/ast-print-attr.c; Clang :: AST/attr-swift_attr.m; Clang :: AST/attr-swift_bridge.m; Clang :: AST/category-attribute.m; Clang :: AST/pragma-attribute-cxx-subject-match-rules.cpp; Clang :: AST/pragma-attribute-objc-subject-match-rules.m; Clang :: AST/pragma-multiple-attributes.cpp; Clang :: Misc/pragma-attribute-cxx.cpp; Clang :: Misc/pragma-attribute-objc.m; Clang :: Misc/pragma-attribute-strict-subjects.c; Clang :: OpenMP/assumes_codegen.cpp; Clang :: OpenMP/assumes_print.cpp; Clang :: OpenMP/assumes_template_print.cpp; Clang :: Sema/ast-print.c; Clang :: Sema/attr-availability-swift.c; Clang :: SemaCXX/cxx11-attr-print.cpp; Clang :: SemaTemplate/attributes.cpp; ```. A broken example like:; ```; /home/jun/dev/llvm-project/clang/test/AST/ast-print-attr.c:14:11: error: CHECK: expected string not found in input ; // CHECK: int fun_asm() asm(""test""); ; ^ ; <stdin>:3:46: note: scanning from here ; using C = int ((*))() __attribute__((cdecl)); ; ^ ; <stdin>:4:1: note: possible intended match here ; int fun_asm() asm(R""ATTRDUMP(test)ATTRDUMP""); ; ```. > You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn. So I guess if `R` is enough for ROOT, maybe we can drop `ATTRDUMP`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168753106
https://github.com/root-project/root/pull/10830#issuecomment-1168753106:92,Testability,test,test,92,"> This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case. I doubt there's something I don't know, anyway by applying this patch, tests below in LLVM failed:; ```; Failed Tests (23): ; Clang :: AST/ast-dump-attr.cpp ; Clang :: AST/ast-dump-attr.m ; Clang :: AST/ast-dump-c-attr.c ; Clang :: AST/ast-dump-color.cpp ; Clang :: AST/ast-dump-wasm-attr-export.c ; Clang :: AST/ast-dump-wasm-attr-import.c ; Clang :: AST/ast-print-attr.c; Clang :: AST/attr-swift_attr.m; Clang :: AST/attr-swift_bridge.m; Clang :: AST/category-attribute.m; Clang :: AST/pragma-attribute-cxx-subject-match-rules.cpp; Clang :: AST/pragma-attribute-objc-subject-match-rules.m; Clang :: AST/pragma-multiple-attributes.cpp; Clang :: Misc/pragma-attribute-cxx.cpp; Clang :: Misc/pragma-attribute-objc.m; Clang :: Misc/pragma-attribute-strict-subjects.c; Clang :: OpenMP/assumes_codegen.cpp; Clang :: OpenMP/assumes_print.cpp; Clang :: OpenMP/assumes_template_print.cpp; Clang :: Sema/ast-print.c; Clang :: Sema/attr-availability-swift.c; Clang :: SemaCXX/cxx11-attr-print.cpp; Clang :: SemaTemplate/attributes.cpp; ```. A broken example like:; ```; /home/jun/dev/llvm-project/clang/test/AST/ast-print-attr.c:14:11: error: CHECK: expected string not found in input ; // CHECK: int fun_asm() asm(""test""); ; ^ ; <stdin>:3:46: note: scanning from here ; using C = int ((*))() __attribute__((cdecl)); ; ^ ; <stdin>:4:1: note: possible intended match here ; int fun_asm() asm(R""ATTRDUMP(test)ATTRDUMP""); ; ```. > You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn. So I guess if `R` is enough for ROOT, maybe we can drop `ATTRDUMP`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168753106
https://github.com/root-project/root/pull/10830#issuecomment-1168753106:174,Testability,test,tests,174,"> This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case. I doubt there's something I don't know, anyway by applying this patch, tests below in LLVM failed:; ```; Failed Tests (23): ; Clang :: AST/ast-dump-attr.cpp ; Clang :: AST/ast-dump-attr.m ; Clang :: AST/ast-dump-c-attr.c ; Clang :: AST/ast-dump-color.cpp ; Clang :: AST/ast-dump-wasm-attr-export.c ; Clang :: AST/ast-dump-wasm-attr-import.c ; Clang :: AST/ast-print-attr.c; Clang :: AST/attr-swift_attr.m; Clang :: AST/attr-swift_bridge.m; Clang :: AST/category-attribute.m; Clang :: AST/pragma-attribute-cxx-subject-match-rules.cpp; Clang :: AST/pragma-attribute-objc-subject-match-rules.m; Clang :: AST/pragma-multiple-attributes.cpp; Clang :: Misc/pragma-attribute-cxx.cpp; Clang :: Misc/pragma-attribute-objc.m; Clang :: Misc/pragma-attribute-strict-subjects.c; Clang :: OpenMP/assumes_codegen.cpp; Clang :: OpenMP/assumes_print.cpp; Clang :: OpenMP/assumes_template_print.cpp; Clang :: Sema/ast-print.c; Clang :: Sema/attr-availability-swift.c; Clang :: SemaCXX/cxx11-attr-print.cpp; Clang :: SemaTemplate/attributes.cpp; ```. A broken example like:; ```; /home/jun/dev/llvm-project/clang/test/AST/ast-print-attr.c:14:11: error: CHECK: expected string not found in input ; // CHECK: int fun_asm() asm(""test""); ; ^ ; <stdin>:3:46: note: scanning from here ; using C = int ((*))() __attribute__((cdecl)); ; ^ ; <stdin>:4:1: note: possible intended match here ; int fun_asm() asm(R""ATTRDUMP(test)ATTRDUMP""); ; ```. > You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn. So I guess if `R` is enough for ROOT, maybe we can drop `ATTRDUMP`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168753106
https://github.com/root-project/root/pull/10830#issuecomment-1168753106:1197,Testability,test,test,1197,"> This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case. I doubt there's something I don't know, anyway by applying this patch, tests below in LLVM failed:; ```; Failed Tests (23): ; Clang :: AST/ast-dump-attr.cpp ; Clang :: AST/ast-dump-attr.m ; Clang :: AST/ast-dump-c-attr.c ; Clang :: AST/ast-dump-color.cpp ; Clang :: AST/ast-dump-wasm-attr-export.c ; Clang :: AST/ast-dump-wasm-attr-import.c ; Clang :: AST/ast-print-attr.c; Clang :: AST/attr-swift_attr.m; Clang :: AST/attr-swift_bridge.m; Clang :: AST/category-attribute.m; Clang :: AST/pragma-attribute-cxx-subject-match-rules.cpp; Clang :: AST/pragma-attribute-objc-subject-match-rules.m; Clang :: AST/pragma-multiple-attributes.cpp; Clang :: Misc/pragma-attribute-cxx.cpp; Clang :: Misc/pragma-attribute-objc.m; Clang :: Misc/pragma-attribute-strict-subjects.c; Clang :: OpenMP/assumes_codegen.cpp; Clang :: OpenMP/assumes_print.cpp; Clang :: OpenMP/assumes_template_print.cpp; Clang :: Sema/ast-print.c; Clang :: Sema/attr-availability-swift.c; Clang :: SemaCXX/cxx11-attr-print.cpp; Clang :: SemaTemplate/attributes.cpp; ```. A broken example like:; ```; /home/jun/dev/llvm-project/clang/test/AST/ast-print-attr.c:14:11: error: CHECK: expected string not found in input ; // CHECK: int fun_asm() asm(""test""); ; ^ ; <stdin>:3:46: note: scanning from here ; using C = int ((*))() __attribute__((cdecl)); ; ^ ; <stdin>:4:1: note: possible intended match here ; int fun_asm() asm(R""ATTRDUMP(test)ATTRDUMP""); ; ```. > You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn. So I guess if `R` is enough for ROOT, maybe we can drop `ATTRDUMP`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168753106
https://github.com/root-project/root/pull/10830#issuecomment-1168753106:1310,Testability,test,test,1310,"> This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case. I doubt there's something I don't know, anyway by applying this patch, tests below in LLVM failed:; ```; Failed Tests (23): ; Clang :: AST/ast-dump-attr.cpp ; Clang :: AST/ast-dump-attr.m ; Clang :: AST/ast-dump-c-attr.c ; Clang :: AST/ast-dump-color.cpp ; Clang :: AST/ast-dump-wasm-attr-export.c ; Clang :: AST/ast-dump-wasm-attr-import.c ; Clang :: AST/ast-print-attr.c; Clang :: AST/attr-swift_attr.m; Clang :: AST/attr-swift_bridge.m; Clang :: AST/category-attribute.m; Clang :: AST/pragma-attribute-cxx-subject-match-rules.cpp; Clang :: AST/pragma-attribute-objc-subject-match-rules.m; Clang :: AST/pragma-multiple-attributes.cpp; Clang :: Misc/pragma-attribute-cxx.cpp; Clang :: Misc/pragma-attribute-objc.m; Clang :: Misc/pragma-attribute-strict-subjects.c; Clang :: OpenMP/assumes_codegen.cpp; Clang :: OpenMP/assumes_print.cpp; Clang :: OpenMP/assumes_template_print.cpp; Clang :: Sema/ast-print.c; Clang :: Sema/attr-availability-swift.c; Clang :: SemaCXX/cxx11-attr-print.cpp; Clang :: SemaTemplate/attributes.cpp; ```. A broken example like:; ```; /home/jun/dev/llvm-project/clang/test/AST/ast-print-attr.c:14:11: error: CHECK: expected string not found in input ; // CHECK: int fun_asm() asm(""test""); ; ^ ; <stdin>:3:46: note: scanning from here ; using C = int ((*))() __attribute__((cdecl)); ; ^ ; <stdin>:4:1: note: possible intended match here ; int fun_asm() asm(R""ATTRDUMP(test)ATTRDUMP""); ; ```. > You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn. So I guess if `R` is enough for ROOT, maybe we can drop `ATTRDUMP`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168753106
https://github.com/root-project/root/pull/10830#issuecomment-1168753106:1496,Testability,test,test,1496,"> This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case. I doubt there's something I don't know, anyway by applying this patch, tests below in LLVM failed:; ```; Failed Tests (23): ; Clang :: AST/ast-dump-attr.cpp ; Clang :: AST/ast-dump-attr.m ; Clang :: AST/ast-dump-c-attr.c ; Clang :: AST/ast-dump-color.cpp ; Clang :: AST/ast-dump-wasm-attr-export.c ; Clang :: AST/ast-dump-wasm-attr-import.c ; Clang :: AST/ast-print-attr.c; Clang :: AST/attr-swift_attr.m; Clang :: AST/attr-swift_bridge.m; Clang :: AST/category-attribute.m; Clang :: AST/pragma-attribute-cxx-subject-match-rules.cpp; Clang :: AST/pragma-attribute-objc-subject-match-rules.m; Clang :: AST/pragma-multiple-attributes.cpp; Clang :: Misc/pragma-attribute-cxx.cpp; Clang :: Misc/pragma-attribute-objc.m; Clang :: Misc/pragma-attribute-strict-subjects.c; Clang :: OpenMP/assumes_codegen.cpp; Clang :: OpenMP/assumes_print.cpp; Clang :: OpenMP/assumes_template_print.cpp; Clang :: Sema/ast-print.c; Clang :: Sema/attr-availability-swift.c; Clang :: SemaCXX/cxx11-attr-print.cpp; Clang :: SemaTemplate/attributes.cpp; ```. A broken example like:; ```; /home/jun/dev/llvm-project/clang/test/AST/ast-print-attr.c:14:11: error: CHECK: expected string not found in input ; // CHECK: int fun_asm() asm(""test""); ; ^ ; <stdin>:3:46: note: scanning from here ; using C = int ((*))() __attribute__((cdecl)); ; ^ ; <stdin>:4:1: note: possible intended match here ; int fun_asm() asm(R""ATTRDUMP(test)ATTRDUMP""); ; ```. > You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn. So I guess if `R` is enough for ROOT, maybe we can drop `ATTRDUMP`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168753106
https://github.com/root-project/root/pull/10830#issuecomment-1168753106:1653,Usability,clear,clear,1653,"> This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case. I doubt there's something I don't know, anyway by applying this patch, tests below in LLVM failed:; ```; Failed Tests (23): ; Clang :: AST/ast-dump-attr.cpp ; Clang :: AST/ast-dump-attr.m ; Clang :: AST/ast-dump-c-attr.c ; Clang :: AST/ast-dump-color.cpp ; Clang :: AST/ast-dump-wasm-attr-export.c ; Clang :: AST/ast-dump-wasm-attr-import.c ; Clang :: AST/ast-print-attr.c; Clang :: AST/attr-swift_attr.m; Clang :: AST/attr-swift_bridge.m; Clang :: AST/category-attribute.m; Clang :: AST/pragma-attribute-cxx-subject-match-rules.cpp; Clang :: AST/pragma-attribute-objc-subject-match-rules.m; Clang :: AST/pragma-multiple-attributes.cpp; Clang :: Misc/pragma-attribute-cxx.cpp; Clang :: Misc/pragma-attribute-objc.m; Clang :: Misc/pragma-attribute-strict-subjects.c; Clang :: OpenMP/assumes_codegen.cpp; Clang :: OpenMP/assumes_print.cpp; Clang :: OpenMP/assumes_template_print.cpp; Clang :: Sema/ast-print.c; Clang :: Sema/attr-availability-swift.c; Clang :: SemaCXX/cxx11-attr-print.cpp; Clang :: SemaTemplate/attributes.cpp; ```. A broken example like:; ```; /home/jun/dev/llvm-project/clang/test/AST/ast-print-attr.c:14:11: error: CHECK: expected string not found in input ; // CHECK: int fun_asm() asm(""test""); ; ^ ; <stdin>:3:46: note: scanning from here ; using C = int ((*))() __attribute__((cdecl)); ; ^ ; <stdin>:4:1: note: possible intended match here ; int fun_asm() asm(R""ATTRDUMP(test)ATTRDUMP""); ; ```. > You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn. So I guess if `R` is enough for ROOT, maybe we can drop `ATTRDUMP`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168753106
https://github.com/root-project/root/pull/10830#issuecomment-1171474521:39,Availability,reliab,reliably,39,"> Hi @AaronBallman !; > ; > > it isn't reliably maintained and bit rots nearly continually. If that wasn't the case, I'd have no concerns about continuing to carry the functionality in the compiler.; > ; > I understand that perception, but given this, do you prefer to improve the AST printing, remove it, or keep it ""rotten"" as you put it? We have significant coverage of it, and we can witness that it's doing a good job. I have two answers (sorry!). My preference is for someone to step up and maintain it because, as you point out, it can perform useful work that people are already using today and so it should be actively maintained. However, I don't have the time to commit to it myself, and code reviewers have never traditionally required patch authors to spend much effort on -ast-print support, so this maintenance isn't likely to happen without someone dedicating effort to it. If nobody steps up to maintain it, my personal preference would be to remove the feature, but it'd definitely require a community RFC to do so -- that gives everyone an opportunity to speak up about why it's critical to keep it (and hopefully drums up a volunteer to maintain it with more regularity). It's not at all clear to me how the community would react to such an RFC, and it's also not clear to me whether we'd need to do OTHER work to prep for removing the functionality (e.g., if ObjC modernization rewriting relies on -ast-print being ""good enough"", we might want to also rip out ObjC moderanization rewriting at the same time, which is another RFC, and so on). FWIW, I'd be happy to be a reviewer for any reviews maintaining or improving `-ast-print` behavior in community (not trying to apply pressure!). > We'd be happy to keep this change minimal, e.g. escape only what needs to be escaped rather than going all in on showing the original spelling of the source code. I think for something that minimal, the cost / benefit ration would be about right. That's just my opinion; your opinion is what",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1171474521
https://github.com/root-project/root/pull/10830#issuecomment-1171474521:814,Availability,mainten,maintenance,814,"> Hi @AaronBallman !; > ; > > it isn't reliably maintained and bit rots nearly continually. If that wasn't the case, I'd have no concerns about continuing to carry the functionality in the compiler.; > ; > I understand that perception, but given this, do you prefer to improve the AST printing, remove it, or keep it ""rotten"" as you put it? We have significant coverage of it, and we can witness that it's doing a good job. I have two answers (sorry!). My preference is for someone to step up and maintain it because, as you point out, it can perform useful work that people are already using today and so it should be actively maintained. However, I don't have the time to commit to it myself, and code reviewers have never traditionally required patch authors to spend much effort on -ast-print support, so this maintenance isn't likely to happen without someone dedicating effort to it. If nobody steps up to maintain it, my personal preference would be to remove the feature, but it'd definitely require a community RFC to do so -- that gives everyone an opportunity to speak up about why it's critical to keep it (and hopefully drums up a volunteer to maintain it with more regularity). It's not at all clear to me how the community would react to such an RFC, and it's also not clear to me whether we'd need to do OTHER work to prep for removing the functionality (e.g., if ObjC modernization rewriting relies on -ast-print being ""good enough"", we might want to also rip out ObjC moderanization rewriting at the same time, which is another RFC, and so on). FWIW, I'd be happy to be a reviewer for any reviews maintaining or improving `-ast-print` behavior in community (not trying to apply pressure!). > We'd be happy to keep this change minimal, e.g. escape only what needs to be escaped rather than going all in on showing the original spelling of the source code. I think for something that minimal, the cost / benefit ration would be about right. That's just my opinion; your opinion is what",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1171474521
https://github.com/root-project/root/pull/10830#issuecomment-1171474521:2729,Availability,down,downstream,2729,"ast-print support, so this maintenance isn't likely to happen without someone dedicating effort to it. If nobody steps up to maintain it, my personal preference would be to remove the feature, but it'd definitely require a community RFC to do so -- that gives everyone an opportunity to speak up about why it's critical to keep it (and hopefully drums up a volunteer to maintain it with more regularity). It's not at all clear to me how the community would react to such an RFC, and it's also not clear to me whether we'd need to do OTHER work to prep for removing the functionality (e.g., if ObjC modernization rewriting relies on -ast-print being ""good enough"", we might want to also rip out ObjC moderanization rewriting at the same time, which is another RFC, and so on). FWIW, I'd be happy to be a reviewer for any reviews maintaining or improving `-ast-print` behavior in community (not trying to apply pressure!). > We'd be happy to keep this change minimal, e.g. escape only what needs to be escaped rather than going all in on showing the original spelling of the source code. I think for something that minimal, the cost / benefit ration would be about right. That's just my opinion; your opinion is what counts here!. In terms of the changes you need to make to keep -ast-print working for you, I guess I see two ways of going about it. You can either do just the `CreateImplicit()` modifications so that you can do special handling of raw string literals. That'd be the smallest change you can make that'd still be reasonably clean, but it wouldn't be particularly interesting to upstream that change because we don't create implicit annotation attributes upstream that would need this. The other approach is to do the more general fix in addition to the `CreateImplicit()` work; then both are interesting to upstream because it would be fixing a bug with attributes in general (and just so happens to add a feature that's useful downstream but costs basically nothing to carry upstream).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1171474521
https://github.com/root-project/root/pull/10830#issuecomment-1171474521:748,Deployability,patch,patch,748,"> Hi @AaronBallman !; > ; > > it isn't reliably maintained and bit rots nearly continually. If that wasn't the case, I'd have no concerns about continuing to carry the functionality in the compiler.; > ; > I understand that perception, but given this, do you prefer to improve the AST printing, remove it, or keep it ""rotten"" as you put it? We have significant coverage of it, and we can witness that it's doing a good job. I have two answers (sorry!). My preference is for someone to step up and maintain it because, as you point out, it can perform useful work that people are already using today and so it should be actively maintained. However, I don't have the time to commit to it myself, and code reviewers have never traditionally required patch authors to spend much effort on -ast-print support, so this maintenance isn't likely to happen without someone dedicating effort to it. If nobody steps up to maintain it, my personal preference would be to remove the feature, but it'd definitely require a community RFC to do so -- that gives everyone an opportunity to speak up about why it's critical to keep it (and hopefully drums up a volunteer to maintain it with more regularity). It's not at all clear to me how the community would react to such an RFC, and it's also not clear to me whether we'd need to do OTHER work to prep for removing the functionality (e.g., if ObjC modernization rewriting relies on -ast-print being ""good enough"", we might want to also rip out ObjC moderanization rewriting at the same time, which is another RFC, and so on). FWIW, I'd be happy to be a reviewer for any reviews maintaining or improving `-ast-print` behavior in community (not trying to apply pressure!). > We'd be happy to keep this change minimal, e.g. escape only what needs to be escaped rather than going all in on showing the original spelling of the source code. I think for something that minimal, the cost / benefit ration would be about right. That's just my opinion; your opinion is what",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1171474521
https://github.com/root-project/root/pull/10830#issuecomment-1171474521:543,Performance,perform,perform,543,"> Hi @AaronBallman !; > ; > > it isn't reliably maintained and bit rots nearly continually. If that wasn't the case, I'd have no concerns about continuing to carry the functionality in the compiler.; > ; > I understand that perception, but given this, do you prefer to improve the AST printing, remove it, or keep it ""rotten"" as you put it? We have significant coverage of it, and we can witness that it's doing a good job. I have two answers (sorry!). My preference is for someone to step up and maintain it because, as you point out, it can perform useful work that people are already using today and so it should be actively maintained. However, I don't have the time to commit to it myself, and code reviewers have never traditionally required patch authors to spend much effort on -ast-print support, so this maintenance isn't likely to happen without someone dedicating effort to it. If nobody steps up to maintain it, my personal preference would be to remove the feature, but it'd definitely require a community RFC to do so -- that gives everyone an opportunity to speak up about why it's critical to keep it (and hopefully drums up a volunteer to maintain it with more regularity). It's not at all clear to me how the community would react to such an RFC, and it's also not clear to me whether we'd need to do OTHER work to prep for removing the functionality (e.g., if ObjC modernization rewriting relies on -ast-print being ""good enough"", we might want to also rip out ObjC moderanization rewriting at the same time, which is another RFC, and so on). FWIW, I'd be happy to be a reviewer for any reviews maintaining or improving `-ast-print` behavior in community (not trying to apply pressure!). > We'd be happy to keep this change minimal, e.g. escape only what needs to be escaped rather than going all in on showing the original spelling of the source code. I think for something that minimal, the cost / benefit ration would be about right. That's just my opinion; your opinion is what",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1171474521
https://github.com/root-project/root/pull/10830#issuecomment-1171474521:1208,Usability,clear,clear,1208,"ST printing, remove it, or keep it ""rotten"" as you put it? We have significant coverage of it, and we can witness that it's doing a good job. I have two answers (sorry!). My preference is for someone to step up and maintain it because, as you point out, it can perform useful work that people are already using today and so it should be actively maintained. However, I don't have the time to commit to it myself, and code reviewers have never traditionally required patch authors to spend much effort on -ast-print support, so this maintenance isn't likely to happen without someone dedicating effort to it. If nobody steps up to maintain it, my personal preference would be to remove the feature, but it'd definitely require a community RFC to do so -- that gives everyone an opportunity to speak up about why it's critical to keep it (and hopefully drums up a volunteer to maintain it with more regularity). It's not at all clear to me how the community would react to such an RFC, and it's also not clear to me whether we'd need to do OTHER work to prep for removing the functionality (e.g., if ObjC modernization rewriting relies on -ast-print being ""good enough"", we might want to also rip out ObjC moderanization rewriting at the same time, which is another RFC, and so on). FWIW, I'd be happy to be a reviewer for any reviews maintaining or improving `-ast-print` behavior in community (not trying to apply pressure!). > We'd be happy to keep this change minimal, e.g. escape only what needs to be escaped rather than going all in on showing the original spelling of the source code. I think for something that minimal, the cost / benefit ration would be about right. That's just my opinion; your opinion is what counts here!. In terms of the changes you need to make to keep -ast-print working for you, I guess I see two ways of going about it. You can either do just the `CreateImplicit()` modifications so that you can do special handling of raw string literals. That'd be the smallest chan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1171474521
https://github.com/root-project/root/pull/10830#issuecomment-1171474521:1284,Usability,clear,clear,1284,"ST printing, remove it, or keep it ""rotten"" as you put it? We have significant coverage of it, and we can witness that it's doing a good job. I have two answers (sorry!). My preference is for someone to step up and maintain it because, as you point out, it can perform useful work that people are already using today and so it should be actively maintained. However, I don't have the time to commit to it myself, and code reviewers have never traditionally required patch authors to spend much effort on -ast-print support, so this maintenance isn't likely to happen without someone dedicating effort to it. If nobody steps up to maintain it, my personal preference would be to remove the feature, but it'd definitely require a community RFC to do so -- that gives everyone an opportunity to speak up about why it's critical to keep it (and hopefully drums up a volunteer to maintain it with more regularity). It's not at all clear to me how the community would react to such an RFC, and it's also not clear to me whether we'd need to do OTHER work to prep for removing the functionality (e.g., if ObjC modernization rewriting relies on -ast-print being ""good enough"", we might want to also rip out ObjC moderanization rewriting at the same time, which is another RFC, and so on). FWIW, I'd be happy to be a reviewer for any reviews maintaining or improving `-ast-print` behavior in community (not trying to apply pressure!). > We'd be happy to keep this change minimal, e.g. escape only what needs to be escaped rather than going all in on showing the original spelling of the source code. I think for something that minimal, the cost / benefit ration would be about right. That's just my opinion; your opinion is what counts here!. In terms of the changes you need to make to keep -ast-print working for you, I guess I see two ways of going about it. You can either do just the `CreateImplicit()` modifications so that you can do special handling of raw string literals. That'd be the smallest chan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1171474521
https://github.com/root-project/root/pull/10853#issuecomment-1170576376:452,Testability,test,tests,452,"Alright, thank you very much! That's very nice you chose ROOT to contribute to!. If you need any guidance on what you could help with, just ask me. Sometimes it's not easy to find the issues that are actually easy to work on, as the code is quite complex. Are you looking only Python-related issues, or would you also be interested in doing some C++ contributions to beef up your C++ skills and experience?. As for this PR, I'll merge it if the CI bot tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10853#issuecomment-1170576376
https://github.com/root-project/root/pull/10853#issuecomment-1170576376:97,Usability,guid,guidance,97,"Alright, thank you very much! That's very nice you chose ROOT to contribute to!. If you need any guidance on what you could help with, just ask me. Sometimes it's not easy to find the issues that are actually easy to work on, as the code is quite complex. Are you looking only Python-related issues, or would you also be interested in doing some C++ contributions to beef up your C++ skills and experience?. As for this PR, I'll merge it if the CI bot tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10853#issuecomment-1170576376
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:8,Deployability,patch,patch,8,"Applied patch:; ```.diff; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;; ; +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; with result:; ```ConsoleSession; <snip/>; LinkageSpecDecl 0xbf7b930 <<module-includes>:1:1, line:3:1> line:1:8 C; |-CXXRecordDecl 0xbf7b988 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xbf7bad0 <col:9, col:16> col:16 in xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xbf7bb88 parent 0xbf3f498 <line:30:3, col:10> col:10 in xlocale.h hidden struct __locale_data; | |-FieldDecl 0xbf7be08 <col:3, col:37> col:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3281,Energy Efficiency,green,greenc,3281,"3, col:29> col:29 in xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xbf7bf28 <line:34:3, col:14> col:14 in xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xbf7bf98 <line:35:3, col:14> col:14 in xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xbf7c098 <line:38:3, col:25> col:15 in xlocale.h hidden __names 'const char *[13]'; |-TypedefDecl 0xbf7c1c8 <line:27:1, line:39:4> col:4 in xlocale.h hidden referenced __locale_t 'struct __locale_struct *'; | `-PointerType 0xbf7c170 'struct __locale_struct *'; | `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; | `-RecordType 0xbf7ba40 '__locale_struct'; | `-CXXRecord 0xbf7b988 '__locale_struct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scrat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3463,Energy Efficiency,green,greenc,3463,"mes 'const char *[13]'; |-TypedefDecl 0xbf7c1c8 <line:27:1, line:39:4> col:4 in xlocale.h hidden referenced __locale_t 'struct __locale_struct *'; | `-PointerType 0xbf7c170 'struct __locale_struct *'; | `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; | `-RecordType 0xbf7ba40 '__locale_struct'; | `-CXXRecord 0xbf7b988 '__locale_struct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e390",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3639,Energy Efficiency,green,greenc,3639,"t __locale_struct *'; | `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; | `-RecordType 0xbf7ba40 '__locale_struct'; | `-CXXRecord 0xbf7b988 '__locale_struct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3797,Energy Efficiency,green,greenc,3797,"uct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4099,Energy Efficiency,green,greenc,4099,"laboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4334,Energy Efficiency,green,greenc,4334,"/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4560,Energy Efficiency,green,greenc,4560,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4787,Energy Efficiency,green,greenc,4787,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4962,Energy Efficiency,green,greenc,4962,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:5171,Energy Efficiency,green,greenc,5171,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:911,Integrability,inject,injected,911,"Applied patch:; ```.diff; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;; ; +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; with result:; ```ConsoleSession; <snip/>; LinkageSpecDecl 0xbf7b930 <<module-includes>:1:1, line:3:1> line:1:8 C; |-CXXRecordDecl 0xbf7b988 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xbf7bad0 <col:9, col:16> col:16 in xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xbf7bb88 parent 0xbf3f498 <line:30:3, col:10> col:10 in xlocale.h hidden struct __locale_data; | |-FieldDecl 0xbf7be08 <col:3, col:37> col:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:911,Security,inject,injected,911,"Applied patch:; ```.diff; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;; ; +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; with result:; ```ConsoleSession; <snip/>; LinkageSpecDecl 0xbf7b930 <<module-includes>:1:1, line:3:1> line:1:8 C; |-CXXRecordDecl 0xbf7b988 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xbf7bad0 <col:9, col:16> col:16 in xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xbf7bb88 parent 0xbf3f498 <line:30:3, col:10> col:10 in xlocale.h hidden struct __locale_data; | |-FieldDecl 0xbf7be08 <col:3, col:37> col:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3288,Testability,test,test-products,3288,"3, col:29> col:29 in xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xbf7bf28 <line:34:3, col:14> col:14 in xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xbf7bf98 <line:35:3, col:14> col:14 in xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xbf7c098 <line:38:3, col:25> col:15 in xlocale.h hidden __names 'const char *[13]'; |-TypedefDecl 0xbf7c1c8 <line:27:1, line:39:4> col:4 in xlocale.h hidden referenced __locale_t 'struct __locale_struct *'; | `-PointerType 0xbf7c170 'struct __locale_struct *'; | `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; | `-RecordType 0xbf7ba40 '__locale_struct'; | `-CXXRecord 0xbf7b988 '__locale_struct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scrat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3470,Testability,test,test-products,3470,"mes 'const char *[13]'; |-TypedefDecl 0xbf7c1c8 <line:27:1, line:39:4> col:4 in xlocale.h hidden referenced __locale_t 'struct __locale_struct *'; | `-PointerType 0xbf7c170 'struct __locale_struct *'; | `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; | `-RecordType 0xbf7ba40 '__locale_struct'; | `-CXXRecord 0xbf7b988 '__locale_struct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e390",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3646,Testability,test,test-products,3646,"t __locale_struct *'; | `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; | `-RecordType 0xbf7ba40 '__locale_struct'; | `-CXXRecord 0xbf7b988 '__locale_struct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3804,Testability,test,test-products,3804,"uct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4106,Testability,test,test-products,4106,"laboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4341,Testability,test,test-products,4341,"/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4567,Testability,test,test-products,4567,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4794,Testability,test,test-products,4794,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4969,Testability,test,test-products,4969,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:5178,Testability,test,test-products,5178,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:1395,Usability,simpl,simple,1395,"-------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; with result:; ```ConsoleSession; <snip/>; LinkageSpecDecl 0xbf7b930 <<module-includes>:1:1, line:3:1> line:1:8 C; |-CXXRecordDecl 0xbf7b988 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xbf7bad0 <col:9, col:16> col:16 in xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xbf7bb88 parent 0xbf3f498 <line:30:3, col:10> col:10 in xlocale.h hidden struct __locale_data; | |-FieldDecl 0xbf7be08 <col:3, col:37> col:25 in xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xbf7beb8 <line:33:3, col:29> col:29 in xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xbf7bf28 <line:34:3, col:14> col:14 in xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xbf7bf98 <line:35:3, col:14> col:14 in xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xbf7c098 <line:38:3, col:25> col:15 in xlocale.h hidden __names 'const char *[13]'; |-TypedefDec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:1496,Usability,simpl,simple,1496,"-------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; with result:; ```ConsoleSession; <snip/>; LinkageSpecDecl 0xbf7b930 <<module-includes>:1:1, line:3:1> line:1:8 C; |-CXXRecordDecl 0xbf7b988 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xbf7bad0 <col:9, col:16> col:16 in xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xbf7bb88 parent 0xbf3f498 <line:30:3, col:10> col:10 in xlocale.h hidden struct __locale_data; | |-FieldDecl 0xbf7be08 <col:3, col:37> col:25 in xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xbf7beb8 <line:33:3, col:29> col:29 in xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xbf7bf28 <line:34:3, col:14> col:14 in xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xbf7bf98 <line:35:3, col:14> col:14 in xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xbf7c098 <line:38:3, col:25> col:15 in xlocale.h hidden __names 'const char *[13]'; |-TypedefDec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:1548,Usability,simpl,simple,1548,"-------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; with result:; ```ConsoleSession; <snip/>; LinkageSpecDecl 0xbf7b930 <<module-includes>:1:1, line:3:1> line:1:8 C; |-CXXRecordDecl 0xbf7b988 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xbf7bad0 <col:9, col:16> col:16 in xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xbf7bb88 parent 0xbf3f498 <line:30:3, col:10> col:10 in xlocale.h hidden struct __locale_data; | |-FieldDecl 0xbf7be08 <col:3, col:37> col:25 in xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xbf7beb8 <line:33:3, col:29> col:29 in xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xbf7bf28 <line:34:3, col:14> col:14 in xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xbf7bf98 <line:35:3, col:14> col:14 in xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xbf7c098 <line:38:3, col:25> col:15 in xlocale.h hidden __names 'const char *[13]'; |-TypedefDec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:1648,Usability,simpl,simple,1648,"-------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; with result:; ```ConsoleSession; <snip/>; LinkageSpecDecl 0xbf7b930 <<module-includes>:1:1, line:3:1> line:1:8 C; |-CXXRecordDecl 0xbf7b988 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xbf7bad0 <col:9, col:16> col:16 in xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xbf7bb88 parent 0xbf3f498 <line:30:3, col:10> col:10 in xlocale.h hidden struct __locale_data; | |-FieldDecl 0xbf7be08 <col:3, col:37> col:25 in xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xbf7beb8 <line:33:3, col:29> col:29 in xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xbf7bf28 <line:34:3, col:14> col:14 in xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xbf7bf98 <line:35:3, col:14> col:14 in xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xbf7c098 <line:38:3, col:25> col:15 in xlocale.h hidden __names 'const char *[13]'; |-TypedefDec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377744663:1696,Usability,simpl,simple,1696,"-------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; with result:; ```ConsoleSession; <snip/>; LinkageSpecDecl 0xbf7b930 <<module-includes>:1:1, line:3:1> line:1:8 C; |-CXXRecordDecl 0xbf7b988 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xbf7bad0 <col:9, col:16> col:16 in xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xbf7bb88 parent 0xbf3f498 <line:30:3, col:10> col:10 in xlocale.h hidden struct __locale_data; | |-FieldDecl 0xbf7be08 <col:3, col:37> col:25 in xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xbf7beb8 <line:33:3, col:29> col:29 in xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xbf7bf28 <line:34:3, col:14> col:14 in xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xbf7bf98 <line:35:3, col:14> col:14 in xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xbf7c098 <line:38:3, col:25> col:15 in xlocale.h hidden __names 'const char *[13]'; |-TypedefDec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:1154,Energy Efficiency,green,greenc,1154,"0; Submodule=stdio.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; LinkageSpecDecl 0xb598660 <<module-includes>:1:1, line:3:1> line:1:8 C; `-LinkageSpecDecl 0xb5986d8 </usr/include/sys/cdefs.h:99:24, line:100:22> line:99:31 in libc.string.h C; |-TypedefDecl 0xb598748 </scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include/stddef.h:46:1, col:23> col:23 in libc.string.h hidden referenced size_t 'unsigned long'; | `-BuiltinType 0xb55c390 'unsigned long'; |-FunctionDecl 0xb598af0 </usr/include/string.h:42:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:42:14 in libc.string.h hidden memcpy 'void *(void *__restrict, const void *__restrict, size_t) throw()' extern; | |-ParmVarDecl 0xb5987c0 <col:22, col:39> col:39 in libc.string.h hidden __dest 'void *__restrict'; | |-ParmVarDecl 0xb598878 <col:47, col:70> col:70 in libc.string.h hidden __src 'const void *__restrict'; | |-ParmVarDecl 0xb598918 <line:43:8, col:15> col:15 in libc.string.h hidden __n 'size_t':'unsigned long'; | |-NonNullAttr 0xb598ba8 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:43:44> 1 2; | `-BuiltinAttr 0xb598d10 <<invalid sloc>> Implicit 779; |-FunctionDecl 0xb599000 <line:46:1, /usr/include/sys/cdefs.h:285:63> /usr/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37294,Energy Efficiency,green,greenc,37294,"den __string 'char *'; | `-NonNullAttr 0xb605c68 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:586:59> 1; |-FunctionDecl 0xb605f20 <line:589:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:589:14 in libc.string.h hidden memfrob 'void *(void *, size_t) throw()' extern; | |-ParmVarDecl 0xb605d18 <col:23, col:29> col:29 in libc.string.h hidden __s 'void *'; | |-ParmVarDecl 0xb605d98 <col:34, col:41> col:41 in libc.string.h hidden __n 'size_t':'unsigned long'; | `-NonNullAttr 0xb605fd0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37476,Energy Efficiency,green,greenc,37476,"clude/string.h:589:14 in libc.string.h hidden memfrob 'void *(void *, size_t) throw()' extern; | |-ParmVarDecl 0xb605d18 <col:23, col:29> col:29 in libc.string.h hidden __s 'void *'; | |-ParmVarDecl 0xb605d98 <col:34, col:41> col:41 in libc.string.h hidden __n 'size_t':'unsigned long'; | `-NonNullAttr 0xb605fd0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e390",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37652,Energy Efficiency,green,greenc,37652,"*'; | |-ParmVarDecl 0xb605d98 <col:34, col:41> col:41 in libc.string.h hidden __n 'size_t':'unsigned long'; | `-NonNullAttr 0xb605fd0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37810,Energy Efficiency,green,greenc,37810,"44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38112,Energy Efficiency,green,greenc,38112,"libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38347,Energy Efficiency,green,greenc,38347,"/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38573,Energy Efficiency,green,greenc,38573,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38800,Energy Efficiency,green,greenc,38800,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38975,Energy Efficiency,green,greenc,38975,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:39184,Energy Efficiency,green,greenc,39184,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:1161,Testability,test,test-products,1161,"0; Submodule=stdio.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; LinkageSpecDecl 0xb598660 <<module-includes>:1:1, line:3:1> line:1:8 C; `-LinkageSpecDecl 0xb5986d8 </usr/include/sys/cdefs.h:99:24, line:100:22> line:99:31 in libc.string.h C; |-TypedefDecl 0xb598748 </scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include/stddef.h:46:1, col:23> col:23 in libc.string.h hidden referenced size_t 'unsigned long'; | `-BuiltinType 0xb55c390 'unsigned long'; |-FunctionDecl 0xb598af0 </usr/include/string.h:42:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:42:14 in libc.string.h hidden memcpy 'void *(void *__restrict, const void *__restrict, size_t) throw()' extern; | |-ParmVarDecl 0xb5987c0 <col:22, col:39> col:39 in libc.string.h hidden __dest 'void *__restrict'; | |-ParmVarDecl 0xb598878 <col:47, col:70> col:70 in libc.string.h hidden __src 'const void *__restrict'; | |-ParmVarDecl 0xb598918 <line:43:8, col:15> col:15 in libc.string.h hidden __n 'size_t':'unsigned long'; | |-NonNullAttr 0xb598ba8 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:43:44> 1 2; | `-BuiltinAttr 0xb598d10 <<invalid sloc>> Implicit 779; |-FunctionDecl 0xb599000 <line:46:1, /usr/include/sys/cdefs.h:285:63> /usr/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37301,Testability,test,test-products,37301,"den __string 'char *'; | `-NonNullAttr 0xb605c68 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:586:59> 1; |-FunctionDecl 0xb605f20 <line:589:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:589:14 in libc.string.h hidden memfrob 'void *(void *, size_t) throw()' extern; | |-ParmVarDecl 0xb605d18 <col:23, col:29> col:29 in libc.string.h hidden __s 'void *'; | |-ParmVarDecl 0xb605d98 <col:34, col:41> col:41 in libc.string.h hidden __n 'size_t':'unsigned long'; | `-NonNullAttr 0xb605fd0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37483,Testability,test,test-products,37483,"clude/string.h:589:14 in libc.string.h hidden memfrob 'void *(void *, size_t) throw()' extern; | |-ParmVarDecl 0xb605d18 <col:23, col:29> col:29 in libc.string.h hidden __s 'void *'; | |-ParmVarDecl 0xb605d98 <col:34, col:41> col:41 in libc.string.h hidden __n 'size_t':'unsigned long'; | `-NonNullAttr 0xb605fd0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e390",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37659,Testability,test,test-products,37659,"*'; | |-ParmVarDecl 0xb605d98 <col:34, col:41> col:41 in libc.string.h hidden __n 'size_t':'unsigned long'; | `-NonNullAttr 0xb605fd0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37817,Testability,test,test-products,37817,"44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38119,Testability,test,test-products,38119,"libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38354,Testability,test,test-products,38354,"/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38580,Testability,test,test-products,38580,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38807,Testability,test,test-products,38807,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38982,Testability,test,test-products,38982,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:39191,Testability,test,test-products,39191,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:11624,Usability,simpl,simple,11624,"de/string.h:150:15 in libc.string.h hidden strxfrm 'size_t (char *__restrict, const char *__restrict, size_t) throw()' extern; | |-ParmVarDecl 0xb5ea258 <col:24, col:41> col:41 in libc.string.h hidden __dest 'char *__restrict'; | |-ParmVarDecl 0xb5ea2e0 <line:151:10, col:33> col:33 in libc.string.h hidden __src 'const char *__restrict'; | |-ParmVarDecl 0xb5ea360 <col:40, col:47> col:47 in libc.string.h hidden __n 'size_t':'unsigned long'; | |-NonNullAttr 0xb5ea5d0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:152:27> 2; | `-BuiltinAttr 0xb5ea6e0 <<invalid sloc>> Implicit 788; |-CXXRecordDecl 0xb5ea710 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in libc.xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xb5ea850 <col:9, col:16> col:16 in libc.xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xb5ea908 parent 0xb55c1c8 <line:30:3, col:10> col:10 in libc.xlocale.h hidden struct __locale_data; | |-FieldDecl 0xb5ebd48 <col:3, col:37> col:25 in libc.xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xb5ebdf8 <line:33:3, col:29> col:29 in libc.xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xb5ebe68 <line:34:3, col:14> col:14 in libc.xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xb5ebed8 <line:35:3, col:14> col:14 in libc.xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xb5ebfd8 <line:38:3, col:25> col:15 in libc.xlocale.h hidden __na",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:11725,Usability,simpl,simple,11725,"de/string.h:150:15 in libc.string.h hidden strxfrm 'size_t (char *__restrict, const char *__restrict, size_t) throw()' extern; | |-ParmVarDecl 0xb5ea258 <col:24, col:41> col:41 in libc.string.h hidden __dest 'char *__restrict'; | |-ParmVarDecl 0xb5ea2e0 <line:151:10, col:33> col:33 in libc.string.h hidden __src 'const char *__restrict'; | |-ParmVarDecl 0xb5ea360 <col:40, col:47> col:47 in libc.string.h hidden __n 'size_t':'unsigned long'; | |-NonNullAttr 0xb5ea5d0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:152:27> 2; | `-BuiltinAttr 0xb5ea6e0 <<invalid sloc>> Implicit 788; |-CXXRecordDecl 0xb5ea710 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in libc.xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xb5ea850 <col:9, col:16> col:16 in libc.xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xb5ea908 parent 0xb55c1c8 <line:30:3, col:10> col:10 in libc.xlocale.h hidden struct __locale_data; | |-FieldDecl 0xb5ebd48 <col:3, col:37> col:25 in libc.xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xb5ebdf8 <line:33:3, col:29> col:29 in libc.xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xb5ebe68 <line:34:3, col:14> col:14 in libc.xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xb5ebed8 <line:35:3, col:14> col:14 in libc.xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xb5ebfd8 <line:38:3, col:25> col:15 in libc.xlocale.h hidden __na",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:11777,Usability,simpl,simple,11777,"de/string.h:150:15 in libc.string.h hidden strxfrm 'size_t (char *__restrict, const char *__restrict, size_t) throw()' extern; | |-ParmVarDecl 0xb5ea258 <col:24, col:41> col:41 in libc.string.h hidden __dest 'char *__restrict'; | |-ParmVarDecl 0xb5ea2e0 <line:151:10, col:33> col:33 in libc.string.h hidden __src 'const char *__restrict'; | |-ParmVarDecl 0xb5ea360 <col:40, col:47> col:47 in libc.string.h hidden __n 'size_t':'unsigned long'; | |-NonNullAttr 0xb5ea5d0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:152:27> 2; | `-BuiltinAttr 0xb5ea6e0 <<invalid sloc>> Implicit 788; |-CXXRecordDecl 0xb5ea710 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in libc.xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xb5ea850 <col:9, col:16> col:16 in libc.xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xb5ea908 parent 0xb55c1c8 <line:30:3, col:10> col:10 in libc.xlocale.h hidden struct __locale_data; | |-FieldDecl 0xb5ebd48 <col:3, col:37> col:25 in libc.xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xb5ebdf8 <line:33:3, col:29> col:29 in libc.xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xb5ebe68 <line:34:3, col:14> col:14 in libc.xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xb5ebed8 <line:35:3, col:14> col:14 in libc.xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xb5ebfd8 <line:38:3, col:25> col:15 in libc.xlocale.h hidden __na",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:11877,Usability,simpl,simple,11877,"de/string.h:150:15 in libc.string.h hidden strxfrm 'size_t (char *__restrict, const char *__restrict, size_t) throw()' extern; | |-ParmVarDecl 0xb5ea258 <col:24, col:41> col:41 in libc.string.h hidden __dest 'char *__restrict'; | |-ParmVarDecl 0xb5ea2e0 <line:151:10, col:33> col:33 in libc.string.h hidden __src 'const char *__restrict'; | |-ParmVarDecl 0xb5ea360 <col:40, col:47> col:47 in libc.string.h hidden __n 'size_t':'unsigned long'; | |-NonNullAttr 0xb5ea5d0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:152:27> 2; | `-BuiltinAttr 0xb5ea6e0 <<invalid sloc>> Implicit 788; |-CXXRecordDecl 0xb5ea710 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in libc.xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xb5ea850 <col:9, col:16> col:16 in libc.xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xb5ea908 parent 0xb55c1c8 <line:30:3, col:10> col:10 in libc.xlocale.h hidden struct __locale_data; | |-FieldDecl 0xb5ebd48 <col:3, col:37> col:25 in libc.xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xb5ebdf8 <line:33:3, col:29> col:29 in libc.xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xb5ebe68 <line:34:3, col:14> col:14 in libc.xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xb5ebed8 <line:35:3, col:14> col:14 in libc.xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xb5ebfd8 <line:38:3, col:25> col:15 in libc.xlocale.h hidden __na",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1377827282:11925,Usability,simpl,simple,11925,"de/string.h:150:15 in libc.string.h hidden strxfrm 'size_t (char *__restrict, const char *__restrict, size_t) throw()' extern; | |-ParmVarDecl 0xb5ea258 <col:24, col:41> col:41 in libc.string.h hidden __dest 'char *__restrict'; | |-ParmVarDecl 0xb5ea2e0 <line:151:10, col:33> col:33 in libc.string.h hidden __src 'const char *__restrict'; | |-ParmVarDecl 0xb5ea360 <col:40, col:47> col:47 in libc.string.h hidden __n 'size_t':'unsigned long'; | |-NonNullAttr 0xb5ea5d0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:152:27> 2; | `-BuiltinAttr 0xb5ea6e0 <<invalid sloc>> Implicit 788; |-CXXRecordDecl 0xb5ea710 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in libc.xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xb5ea850 <col:9, col:16> col:16 in libc.xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xb5ea908 parent 0xb55c1c8 <line:30:3, col:10> col:10 in libc.xlocale.h hidden struct __locale_data; | |-FieldDecl 0xb5ebd48 <col:3, col:37> col:25 in libc.xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xb5ebdf8 <line:33:3, col:29> col:29 in libc.xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xb5ebe68 <line:34:3, col:14> col:14 in libc.xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xb5ebed8 <line:35:3, col:14> col:14 in libc.xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xb5ebfd8 <line:38:3, col:25> col:15 in libc.xlocale.h hidden __na",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282
https://github.com/root-project/root/issues/10861#issuecomment-1398569350:14,Usability,simpl,simply,14,Unfortunately simply removing `export std_config` as you suggest appears not to be sufficient with a build as described in https://github.com/root-project/root/issues/10861#issuecomment-1378895796. Trying to see if I can get more information...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1398569350
https://github.com/root-project/root/issues/10861#issuecomment-1401209723:152,Availability,failure,failures,152,"The good news is that I have been able to reproduce your success with our build of 6.24/04 and 6.24/06. Unfortunately, I was also able to reproduce our failures with 6.28/00-rc1 in the same environment. I'd be grateful if you could turn your attention to investigating why the fix does not work for more recent ROOT source. BTW: in order to use Ninja, one needs simply to execute `setup ninja` before executing the CMake command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1401209723
https://github.com/root-project/root/issues/10861#issuecomment-1401209723:362,Usability,simpl,simply,362,"The good news is that I have been able to reproduce your success with our build of 6.24/04 and 6.24/06. Unfortunately, I was also able to reproduce our failures with 6.28/00-rc1 in the same environment. I'd be grateful if you could turn your attention to investigating why the fix does not work for more recent ROOT source. BTW: in order to use Ninja, one needs simply to execute `setup ninja` before executing the CMake command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1401209723
https://github.com/root-project/root/issues/10875#issuecomment-1346236983:26,Deployability,upgrade,upgrade,26,"@StephanTLavavej FYI, the upgrade of LLVM 13 is done, and this is now fixed in ROOT master (i.e. the workaround has been removed). Thanks again for your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875#issuecomment-1346236983
https://github.com/root-project/root/issues/10875#issuecomment-1346236983:153,Usability,feedback,feedback,153,"@StephanTLavavej FYI, the upgrade of LLVM 13 is done, and this is now fixed in ROOT master (i.e. the workaround has been removed). Thanks again for your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875#issuecomment-1346236983
https://github.com/root-project/root/pull/10909#issuecomment-1181836400:44,Testability,test,test,44,"Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally. I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181836400
https://github.com/root-project/root/pull/10909#issuecomment-1181836400:73,Testability,test,tested,73,"Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally. I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181836400
https://github.com/root-project/root/pull/10909#issuecomment-1181836400:133,Testability,test,test,133,"Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally. I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181836400
https://github.com/root-project/root/pull/10909#issuecomment-1181836400:178,Testability,test,test,178,"Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally. I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181836400
https://github.com/root-project/root/pull/10909#issuecomment-1181836400:147,Usability,simpl,simple,147,"Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally. I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181836400
https://github.com/root-project/root/pull/10909#issuecomment-1181856704:46,Testability,test,test,46,"> Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally.; > ; > I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons. Actually, if I may @guitargeek 🙂:; Some of the biggest grievances some users had in RF's ""dormant time"" was a non-functioning schema evolution, which prevented users from moving to a newer ROOT version. You lose these users, as they have to disconnect from ROOT's evolution. Therefore, I strongly suggest having schema evolution tests in master. These files only consume a few kB, and they will never be altered.; This becomes even more important if a specific class version was in use for a long time, because the number of workspaces in the wild will scale with the time that a class version was in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181856704
https://github.com/root-project/root/pull/10909#issuecomment-1181856704:75,Testability,test,tested,75,"> Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally.; > ; > I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons. Actually, if I may @guitargeek 🙂:; Some of the biggest grievances some users had in RF's ""dormant time"" was a non-functioning schema evolution, which prevented users from moving to a newer ROOT version. You lose these users, as they have to disconnect from ROOT's evolution. Therefore, I strongly suggest having schema evolution tests in master. These files only consume a few kB, and they will never be altered.; This becomes even more important if a specific class version was in use for a long time, because the number of workspaces in the wild will scale with the time that a class version was in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181856704
https://github.com/root-project/root/pull/10909#issuecomment-1181856704:142,Testability,test,test,142,"> Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally.; > ; > I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons. Actually, if I may @guitargeek 🙂:; Some of the biggest grievances some users had in RF's ""dormant time"" was a non-functioning schema evolution, which prevented users from moving to a newer ROOT version. You lose these users, as they have to disconnect from ROOT's evolution. Therefore, I strongly suggest having schema evolution tests in master. These files only consume a few kB, and they will never be altered.; This becomes even more important if a specific class version was in use for a long time, because the number of workspaces in the wild will scale with the time that a class version was in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181856704
https://github.com/root-project/root/pull/10909#issuecomment-1181856704:187,Testability,test,test,187,"> Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally.; > ; > I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons. Actually, if I may @guitargeek 🙂:; Some of the biggest grievances some users had in RF's ""dormant time"" was a non-functioning schema evolution, which prevented users from moving to a newer ROOT version. You lose these users, as they have to disconnect from ROOT's evolution. Therefore, I strongly suggest having schema evolution tests in master. These files only consume a few kB, and they will never be altered.; This becomes even more important if a specific class version was in use for a long time, because the number of workspaces in the wild will scale with the time that a class version was in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181856704
https://github.com/root-project/root/pull/10909#issuecomment-1181856704:688,Testability,test,tests,688,"> Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally.; > ; > I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons. Actually, if I may @guitargeek 🙂:; Some of the biggest grievances some users had in RF's ""dormant time"" was a non-functioning schema evolution, which prevented users from moving to a newer ROOT version. You lose these users, as they have to disconnect from ROOT's evolution. Therefore, I strongly suggest having schema evolution tests in master. These files only consume a few kB, and they will never be altered.; This becomes even more important if a specific class version was in use for a long time, because the number of workspaces in the wild will scale with the time that a class version was in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181856704
https://github.com/root-project/root/pull/10909#issuecomment-1181856704:156,Usability,simpl,simple,156,"> Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally.; > ; > I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons. Actually, if I may @guitargeek 🙂:; Some of the biggest grievances some users had in RF's ""dormant time"" was a non-functioning schema evolution, which prevented users from moving to a newer ROOT version. You lose these users, as they have to disconnect from ROOT's evolution. Therefore, I strongly suggest having schema evolution tests in master. These files only consume a few kB, and they will never be altered.; This becomes even more important if a specific class version was in use for a long time, because the number of workspaces in the wild will scale with the time that a class version was in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181856704
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:260,Availability,error,error,260,"Here's simpler reproducer for https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154832/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/ ; ```; ❯ cat Demo.C; void Demo() {; auto X = ROOT::TSeqI(42);; } ; ```. The error message is:; ```. Processing Demo.C...; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:67:10: error: instantiation of 'ROOT::TSeq<int>' is different in different modules; class TSeq {; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1910:13: error: 'std::__make_signed_selector<int, true, false>::__type' from module 'std.type_traits' is not present in definition of 'std::__make_signed_selector<int, true, false>' provided earlier; using __type; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1901:11: note: definition has no member '__type'; class __make_signed_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:379,Availability,error,error,379,"Here's simpler reproducer for https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154832/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/ ; ```; ❯ cat Demo.C; void Demo() {; auto X = ROOT::TSeqI(42);; } ; ```. The error message is:; ```. Processing Demo.C...; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:67:10: error: instantiation of 'ROOT::TSeq<int>' is different in different modules; class TSeq {; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1910:13: error: 'std::__make_signed_selector<int, true, false>::__type' from module 'std.type_traits' is not present in definition of 'std::__make_signed_selector<int, true, false>' provided earlier; using __type; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1901:11: note: definition has no member '__type'; class __make_signed_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:608,Availability,error,error,608,"Here's simpler reproducer for https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154832/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/ ; ```; ❯ cat Demo.C; void Demo() {; auto X = ROOT::TSeqI(42);; } ; ```. The error message is:; ```. Processing Demo.C...; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:67:10: error: instantiation of 'ROOT::TSeq<int>' is different in different modules; class TSeq {; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1910:13: error: 'std::__make_signed_selector<int, true, false>::__type' from module 'std.type_traits' is not present in definition of 'std::__make_signed_selector<int, true, false>' provided earlier; using __type; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1901:11: note: definition has no member '__type'; class __make_signed_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:1067,Availability,error,error,1067,"estReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/ ; ```; ❯ cat Demo.C; void Demo() {; auto X = ROOT::TSeqI(42);; } ; ```. The error message is:; ```. Processing Demo.C...; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:67:10: error: instantiation of 'ROOT::TSeq<int>' is different in different modules; class TSeq {; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1910:13: error: 'std::__make_signed_selector<int, true, false>::__type' from module 'std.type_traits' is not present in definition of 'std::__make_signed_selector<int, true, false>' provided earlier; using __type; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1901:11: note: definition has no member '__type'; class __make_signed_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T theStep = 1):; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: note: previous declaration is here; /home/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:1397,Availability,error,error,1397,"module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1910:13: error: 'std::__make_signed_selector<int, true, false>::__type' from module 'std.type_traits' is not present in definition of 'std::__make_signed_selector<int, true, false>' provided earlier; using __type; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1901:11: note: definition has no member '__type'; class __make_signed_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T theStep = 1):; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: error: multiple overloads of 'begin' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator begin() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: error: multiple overloads of 'en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:1876,Availability,error,error,1876,"d_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T theStep = 1):; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: error: multiple overloads of 'begin' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator begin() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: error: multiple overloads of 'end' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator end() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: error: multiple overloads of 'front' instantiate to the same signature 'const int &() const'; T const &front() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: note: previous declaration is here; /home/jun/dev/root/Debug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:2161,Availability,error,error,2161,"+/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T theStep = 1):; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: error: multiple overloads of 'begin' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator begin() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: error: multiple overloads of 'end' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator end() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: error: multiple overloads of 'front' instantiate to the same signature 'const int &() const'; T const &front() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: error: multiple overloads of 'operator[]' instantiate to the same signature 'int (int) const'; T operator[](T s) const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:2445,Availability,error,error,2445,"1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T theStep = 1):; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: error: multiple overloads of 'begin' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator begin() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: error: multiple overloads of 'end' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator end() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: error: multiple overloads of 'front' instantiate to the same signature 'const int &() const'; T const &front() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: error: multiple overloads of 'operator[]' instantiate to the same signature 'int (int) const'; T operator[](T s) const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: error: multiple overloads of 'size' instantiate to the same signature 'std::size_t () const' (aka 'unsigned long () const'); std::size_t size() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: note: previous declaration is here; /home/jun/dev/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:2725,Availability,error,error,2725,"End), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T theStep = 1):; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: error: multiple overloads of 'begin' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator begin() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: error: multiple overloads of 'end' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator end() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: error: multiple overloads of 'front' instantiate to the same signature 'const int &() const'; T const &front() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: error: multiple overloads of 'operator[]' instantiate to the same signature 'int (int) const'; T operator[](T s) const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: error: multiple overloads of 'size' instantiate to the same signature 'std::size_t () const' (aka 'unsigned long () const'); std::size_t size() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: error: multiple overloads of 'step' instantiate to the same signature 'int () const'; T step() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:2993,Availability,error,error,2993,ote: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: error: multiple overloads of 'begin' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator begin() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:172:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: error: multiple overloads of 'end' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator end() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: error: multiple overloads of 'front' instantiate to the same signature 'const int &() const'; T const &front() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: error: multiple overloads of 'operator[]' instantiate to the same signature 'int (int) const'; T operator[](T s) const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: error: multiple overloads of 'size' instantiate to the same signature 'std::size_t () const' (aka 'unsigned long () const'); std::size_t size() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: error: multiple overloads of 'step' instantiate to the same signature 'int () const'; T step() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: error: multiple overloads of 'empty' instantiate to the same signature 'bool () const'; bool empty() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: note: previous declaration is here ; ```; Here's a relevant backtrace:; ```c++; Breakpoi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:3263,Availability,error,error,3263,"te: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: error: multiple overloads of 'end' instantiate to the same signature 'ROOT::TSeq<int>::iterator () const'; iterator end() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:175:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: error: multiple overloads of 'front' instantiate to the same signature 'const int &() const'; T const &front() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: error: multiple overloads of 'operator[]' instantiate to the same signature 'int (int) const'; T operator[](T s) const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: error: multiple overloads of 'size' instantiate to the same signature 'std::size_t () const' (aka 'unsigned long () const'); std::size_t size() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: error: multiple overloads of 'step' instantiate to the same signature 'int () const'; T step() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: error: multiple overloads of 'empty' instantiate to the same signature 'bool () const'; bool empty() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: note: previous declaration is here ; ```; Here's a relevant backtrace:; ```c++; Breakpoint 3, clang::ASTReader::FinishedDeserializing (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:12113; 12113 assert(NumCurrentElementsDeserializing &&; (gdb) bt; #0 clang::ASTReader::FinishedDeserializing (this=0x555555609330)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:3564,Availability,error,error,3564," note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: error: multiple overloads of 'front' instantiate to the same signature 'const int &() const'; T const &front() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:181:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: error: multiple overloads of 'operator[]' instantiate to the same signature 'int (int) const'; T operator[](T s) const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: error: multiple overloads of 'size' instantiate to the same signature 'std::size_t () const' (aka 'unsigned long () const'); std::size_t size() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: error: multiple overloads of 'step' instantiate to the same signature 'int () const'; T step() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: error: multiple overloads of 'empty' instantiate to the same signature 'bool () const'; bool empty() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: note: previous declaration is here ; ```; Here's a relevant backtrace:; ```c++; Breakpoint 3, clang::ASTReader::FinishedDeserializing (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:12113; 12113 assert(NumCurrentElementsDeserializing &&; (gdb) bt; #0 clang::ASTReader::FinishedDeserializing (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:12113; #1 0x00007ffff0811ffc in clang::ExternalASTSource::Deserializing::~Deserializing (this=0x7ffffffdea48) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/include/clang/AST/Extern",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:3816,Availability,error,error,3816,"eq.hxx:181:16: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: error: multiple overloads of 'operator[]' instantiate to the same signature 'int (int) const'; T operator[](T s) const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:185:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: error: multiple overloads of 'size' instantiate to the same signature 'std::size_t () const' (aka 'unsigned long () const'); std::size_t size() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: error: multiple overloads of 'step' instantiate to the same signature 'int () const'; T step() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: error: multiple overloads of 'empty' instantiate to the same signature 'bool () const'; bool empty() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: note: previous declaration is here ; ```; Here's a relevant backtrace:; ```c++; Breakpoint 3, clang::ASTReader::FinishedDeserializing (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:12113; 12113 assert(NumCurrentElementsDeserializing &&; (gdb) bt; #0 clang::ASTReader::FinishedDeserializing (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:12113; #1 0x00007ffff0811ffc in clang::ExternalASTSource::Deserializing::~Deserializing (this=0x7ffffffdea48) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:89; #2 0x00007ffff07f37b2 in clang::ASTReader::FindExternalVisibleDeclsByName (this=0x555555609330, DC=0x555556423dd0, Name=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:8059; #3 0x00007fffef97",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:9852,Availability,error,error,9852,"Type=clang::serialization::MK_PrebuiltModule, ImportLoc=..., ClientLoadCapabilities=0, Imported=0x0); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:4379; #24 0x00007ffff0495e2e in clang::CompilerInstance::loadModule (this=0x55555562fb60, ImportLoc=..., Path=..., Visibility=clang::Module::AllVisible, IsInclusionDirective=false); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1710; #25 0x00007ffff117e1dd in clang::Sema::ActOnModuleImport (this=0x5555556b5680, StartLoc=..., ExportLoc=..., ImportLoc=..., Path=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; #26 0x00007fffef9655fa in cling::Interpreter::loadModule (this=0x5555555ef460, M=0x555555956a90, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; #27 0x00007fffef965326 in cling::Interpreter::loadModule (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; moduleName=, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; #28 0x00007fffef85f5f6 in TClingCallbacks::findInGlobalModuleIndex (this=0x5555563ffde0, Name=..., loadFirstMatchOnly=false) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:339; #29 0x00007fffef85f7ca in TClingCallbacks::LookupObject (this=0x5555563ffde0, DC=0x5555564f80b8, Name=...) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:376; #30 0x00007fffef9735b7 in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x5555556b8b30, DC=0x5555564f80b8, DN=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:70; #31 0x00007fffef97e8f5 in cling::InterpreterExternalSemaSource::FindExternalVisibleDeclsByName (this=0x5555556b8040, DC=0x5555564f80b8, Name=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:278; #32 0x00007ffff09e4a0a in clang::MultiplexExternalSemaSour",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:35758,Availability,error,error,35758,".., DS=0x0, AS=clang::AS_none); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1118; #127 0x00007ffff07af403 in clang::Parser::ParseExternalDeclaration (this=0x555555986c30, attrs=..., DS=0x0) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:938; #128 0x00007ffff07ad84e in clang::Parser::ParseTopLevelDecl (this=0x555555986c30, Result=..., IsFirstDecl=false) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:689; #129 0x00007fffefaf16cb in cling::IncrementalParser::ParseInternal (this=0x5555555ff9a0, input=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:923; #130 0x00007fffefaf36fe in cling::IncrementalParser::Compile (this=0x5555555ff9a0, input=..., Opts=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #131 0x00007fffef964af5 in cling::Interpreter::DeclareInternal (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; input=, CO=..., T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1353; #132 0x00007fffef967c9a in cling::Interpreter::loadHeader (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1491; #133 0x00007fffef9683bd in cling::Interpreter::loadFile (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, allowSharedLib=true, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; #134 0x00007fffefbfe37d in cling::MetaSema::actOnLCommand (this=0x555556003f90, file=..., transaction=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #135 0x00007fffefbfef12 in cling::MetaSema::actOnxCommand (this=0x555556003f90, file=..., args=..., result=0x7fffffffa830) at /home/jun/dev/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:36020,Availability,error,error,36020,"rc/tools/clang/lib/Parse/Parser.cpp:938; #128 0x00007ffff07ad84e in clang::Parser::ParseTopLevelDecl (this=0x555555986c30, Result=..., IsFirstDecl=false) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:689; #129 0x00007fffefaf16cb in cling::IncrementalParser::ParseInternal (this=0x5555555ff9a0, input=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:923; #130 0x00007fffefaf36fe in cling::IncrementalParser::Compile (this=0x5555555ff9a0, input=..., Opts=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #131 0x00007fffef964af5 in cling::Interpreter::DeclareInternal (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; input=, CO=..., T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1353; #132 0x00007fffef967c9a in cling::Interpreter::loadHeader (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1491; #133 0x00007fffef9683bd in cling::Interpreter::loadFile (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, allowSharedLib=true, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; #134 0x00007fffefbfe37d in cling::MetaSema::actOnLCommand (this=0x555556003f90, file=..., transaction=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #135 0x00007fffefbfef12 in cling::MetaSema::actOnxCommand (this=0x555556003f90, file=..., args=..., result=0x7fffffffa830) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146; #136 0x00007fffefc13e0b in cling::MetaParser::isXCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa830); at /home/jun/dev/root/interpreter/cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:36275,Availability,error,error,36275,"6cb in cling::IncrementalParser::ParseInternal (this=0x5555555ff9a0, input=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:923; #130 0x00007fffefaf36fe in cling::IncrementalParser::Compile (this=0x5555555ff9a0, input=..., Opts=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #131 0x00007fffef964af5 in cling::Interpreter::DeclareInternal (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; input=, CO=..., T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1353; #132 0x00007fffef967c9a in cling::Interpreter::loadHeader (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1491; #133 0x00007fffef9683bd in cling::Interpreter::loadFile (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, allowSharedLib=true, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; #134 0x00007fffefbfe37d in cling::MetaSema::actOnLCommand (this=0x555556003f90, file=..., transaction=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #135 0x00007fffefbfef12 in cling::MetaSema::actOnxCommand (this=0x555556003f90, file=..., args=..., result=0x7fffffffa830) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146; #136 0x00007fffefc13e0b in cling::MetaParser::isXCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa830); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315; #137 0x00007fffefc132f9 in cling::MetaParser::isCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa830); at /home/jun/dev/root/interpreter/cling/lib/Meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:38340,Availability,error,error,38340,"MetaCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa830); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96; --Type <RET> for more, q to quit, c to continue without paging--; #139 0x00007fffefbf7506 in cling::MetaProcessor::process (this=0x555556018a10, input_line=..., compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess, result=0x7fffffffa830, disableValuePrinting=false); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #140 0x00007fffef6789ae in HandleInterpreterException (metaProcessor=0x555556018a10, input_line=0x5555564c5110 "".X /home/jun/dev/root/Debug/./Demo2.C"", compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess,; result=0x7fffffffa830) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2517; #141 0x00007fffef6783b9 in TCling::ProcessLine (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2661; #142 0x00007fffef67ad44 in TCling::ProcessLineSynch (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74); at /home/jun/dev/root/core/metacling/src/TCling.cxx:3593; #143 0x00007ffff7b1d58c in TApplication::ExecuteFile (file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1675; #144 0x00007ffff7b1c9e0 in TApplication::ProcessFile (this=0x5555555d5890, file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1547; #145 0x00007ffff7b1c713 in TApplication::ProcessLine (this=0x5555555d5890, line=0x7fffffffbae0 "".x Demo2.C"", sync=false, err=0x7fffffffdb74) at /home/jun/dev/root/core/base/src/TApplication.cxx:1520; #146 0x00007ffff7f9cbe3 in TRint::ProcessLineNr (this=0x5555555d5890, filestem=0x7ffff7fb0449 ""ROOT_cli_"", line=0x7fffffffbae0 "".x Demo2.C"", error=0x7fffffffdb7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:38555,Availability,error,error,38555," more, q to quit, c to continue without paging--; #139 0x00007fffefbf7506 in cling::MetaProcessor::process (this=0x555556018a10, input_line=..., compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess, result=0x7fffffffa830, disableValuePrinting=false); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #140 0x00007fffef6789ae in HandleInterpreterException (metaProcessor=0x555556018a10, input_line=0x5555564c5110 "".X /home/jun/dev/root/Debug/./Demo2.C"", compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess,; result=0x7fffffffa830) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2517; #141 0x00007fffef6783b9 in TCling::ProcessLine (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2661; #142 0x00007fffef67ad44 in TCling::ProcessLineSynch (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74); at /home/jun/dev/root/core/metacling/src/TCling.cxx:3593; #143 0x00007ffff7b1d58c in TApplication::ExecuteFile (file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1675; #144 0x00007ffff7b1c9e0 in TApplication::ProcessFile (this=0x5555555d5890, file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1547; #145 0x00007ffff7b1c713 in TApplication::ProcessLine (this=0x5555555d5890, line=0x7fffffffbae0 "".x Demo2.C"", sync=false, err=0x7fffffffdb74) at /home/jun/dev/root/core/base/src/TApplication.cxx:1520; #146 0x00007ffff7f9cbe3 in TRint::ProcessLineNr (this=0x5555555d5890, filestem=0x7ffff7fb0449 ""ROOT_cli_"", line=0x7fffffffbae0 "".x Demo2.C"", error=0x7fffffffdb74); at /home/jun/dev/root/core/rint/src/TRint.cxx:818; #147 0x00007ffff7f9c564 in TRint::Run (this=0x5555555d5890, retrn=false) at /home/jun/dev/root/core/rint/src/TRint.cxx:461; #148 0x00005555555554a3 in main (argc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:38721,Availability,error,error,38721,"in cling::MetaProcessor::process (this=0x555556018a10, input_line=..., compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess, result=0x7fffffffa830, disableValuePrinting=false); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #140 0x00007fffef6789ae in HandleInterpreterException (metaProcessor=0x555556018a10, input_line=0x5555564c5110 "".X /home/jun/dev/root/Debug/./Demo2.C"", compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess,; result=0x7fffffffa830) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2517; #141 0x00007fffef6783b9 in TCling::ProcessLine (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2661; #142 0x00007fffef67ad44 in TCling::ProcessLineSynch (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74); at /home/jun/dev/root/core/metacling/src/TCling.cxx:3593; #143 0x00007ffff7b1d58c in TApplication::ExecuteFile (file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1675; #144 0x00007ffff7b1c9e0 in TApplication::ProcessFile (this=0x5555555d5890, file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1547; #145 0x00007ffff7b1c713 in TApplication::ProcessLine (this=0x5555555d5890, line=0x7fffffffbae0 "".x Demo2.C"", sync=false, err=0x7fffffffdb74) at /home/jun/dev/root/core/base/src/TApplication.cxx:1520; #146 0x00007ffff7f9cbe3 in TRint::ProcessLineNr (this=0x5555555d5890, filestem=0x7ffff7fb0449 ""ROOT_cli_"", line=0x7fffffffbae0 "".x Demo2.C"", error=0x7fffffffdb74); at /home/jun/dev/root/core/rint/src/TRint.cxx:818; #147 0x00007ffff7f9c564 in TRint::Run (this=0x5555555d5890, retrn=false) at /home/jun/dev/root/core/rint/src/TRint.cxx:461; #148 0x00005555555554a3 in main (argc=1, argv=0x7fffffffdd18) at /home/jun/dev/root/main/src/rmain.cxx:84; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:38920,Availability,error,error,38920,"in cling::MetaProcessor::process (this=0x555556018a10, input_line=..., compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess, result=0x7fffffffa830, disableValuePrinting=false); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #140 0x00007fffef6789ae in HandleInterpreterException (metaProcessor=0x555556018a10, input_line=0x5555564c5110 "".X /home/jun/dev/root/Debug/./Demo2.C"", compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess,; result=0x7fffffffa830) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2517; #141 0x00007fffef6783b9 in TCling::ProcessLine (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2661; #142 0x00007fffef67ad44 in TCling::ProcessLineSynch (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74); at /home/jun/dev/root/core/metacling/src/TCling.cxx:3593; #143 0x00007ffff7b1d58c in TApplication::ExecuteFile (file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1675; #144 0x00007ffff7b1c9e0 in TApplication::ProcessFile (this=0x5555555d5890, file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1547; #145 0x00007ffff7b1c713 in TApplication::ProcessLine (this=0x5555555d5890, line=0x7fffffffbae0 "".x Demo2.C"", sync=false, err=0x7fffffffdb74) at /home/jun/dev/root/core/base/src/TApplication.cxx:1520; #146 0x00007ffff7f9cbe3 in TRint::ProcessLineNr (this=0x5555555d5890, filestem=0x7ffff7fb0449 ""ROOT_cli_"", line=0x7fffffffbae0 "".x Demo2.C"", error=0x7fffffffdb74); at /home/jun/dev/root/core/rint/src/TRint.cxx:818; #147 0x00007ffff7f9c564 in TRint::Run (this=0x5555555d5890, retrn=false) at /home/jun/dev/root/core/rint/src/TRint.cxx:461; #148 0x00005555555554a3 in main (argc=1, argv=0x7fffffffdd18) at /home/jun/dev/root/main/src/rmain.cxx:84; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:39354,Availability,error,error,39354,"in cling::MetaProcessor::process (this=0x555556018a10, input_line=..., compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess, result=0x7fffffffa830, disableValuePrinting=false); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #140 0x00007fffef6789ae in HandleInterpreterException (metaProcessor=0x555556018a10, input_line=0x5555564c5110 "".X /home/jun/dev/root/Debug/./Demo2.C"", compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess,; result=0x7fffffffa830) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2517; #141 0x00007fffef6783b9 in TCling::ProcessLine (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2661; #142 0x00007fffef67ad44 in TCling::ProcessLineSynch (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74); at /home/jun/dev/root/core/metacling/src/TCling.cxx:3593; #143 0x00007ffff7b1d58c in TApplication::ExecuteFile (file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1675; #144 0x00007ffff7b1c9e0 in TApplication::ProcessFile (this=0x5555555d5890, file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1547; #145 0x00007ffff7b1c713 in TApplication::ProcessLine (this=0x5555555d5890, line=0x7fffffffbae0 "".x Demo2.C"", sync=false, err=0x7fffffffdb74) at /home/jun/dev/root/core/base/src/TApplication.cxx:1520; #146 0x00007ffff7f9cbe3 in TRint::ProcessLineNr (this=0x5555555d5890, filestem=0x7ffff7fb0449 ""ROOT_cli_"", line=0x7fffffffbae0 "".x Demo2.C"", error=0x7fffffffdb74); at /home/jun/dev/root/core/rint/src/TRint.cxx:818; #147 0x00007ffff7f9c564 in TRint::Run (this=0x5555555d5890, retrn=false) at /home/jun/dev/root/core/rint/src/TRint.cxx:461; #148 0x00005555555554a3 in main (argc=1, argv=0x7fffffffdd18) at /home/jun/dev/root/main/src/rmain.cxx:84; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:266,Integrability,message,message,266,"Here's simpler reproducer for https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154832/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/ ; ```; ❯ cat Demo.C; void Demo() {; auto X = ROOT::TSeqI(42);; } ; ```. The error message is:; ```. Processing Demo.C...; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:67:10: error: instantiation of 'ROOT::TSeq<int>' is different in different modules; class TSeq {; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1910:13: error: 'std::__make_signed_selector<int, true, false>::__type' from module 'std.type_traits' is not present in definition of 'std::__make_signed_selector<int, true, false>' provided earlier; using __type; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1901:11: note: definition has no member '__type'; class __make_signed_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:9117,Performance,load,loadModule,9117,"(this=0x5555564e7640) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclCXX.h:833; #20 0x00007ffff07fa508 in clang::ASTReader::diagnoseOdrViolations (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:10053; #21 0x00007ffff0806ba3 in clang::ASTReader::FinishedDeserializing (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:12155; #22 0x00007ffff0811ffc in clang::ExternalASTSource::Deserializing::~Deserializing (this=0x7ffffffe27d8) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:89; #23 0x00007ffff07e3cc0 in clang::ASTReader::ReadAST (this=0x555555609330, FileName=..., Type=clang::serialization::MK_PrebuiltModule, ImportLoc=..., ClientLoadCapabilities=0, Imported=0x0); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:4379; #24 0x00007ffff0495e2e in clang::CompilerInstance::loadModule (this=0x55555562fb60, ImportLoc=..., Path=..., Visibility=clang::Module::AllVisible, IsInclusionDirective=false); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1710; #25 0x00007ffff117e1dd in clang::Sema::ActOnModuleImport (this=0x5555556b5680, StartLoc=..., ExportLoc=..., ImportLoc=..., Path=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; #26 0x00007fffef9655fa in cling::Interpreter::loadModule (this=0x5555555ef460, M=0x555555956a90, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; #27 0x00007fffef965326 in cling::Interpreter::loadModule (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; moduleName=, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; #28 0x00007fffef85f5f6 in TClingCallbacks::findInGlobalModuleIndex (this=0x5555563ffde0, Name=..., loadFirstMat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:9601,Performance,load,loadModule,9601,"alizing::~Deserializing (this=0x7ffffffe27d8) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:89; #23 0x00007ffff07e3cc0 in clang::ASTReader::ReadAST (this=0x555555609330, FileName=..., Type=clang::serialization::MK_PrebuiltModule, ImportLoc=..., ClientLoadCapabilities=0, Imported=0x0); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:4379; #24 0x00007ffff0495e2e in clang::CompilerInstance::loadModule (this=0x55555562fb60, ImportLoc=..., Path=..., Visibility=clang::Module::AllVisible, IsInclusionDirective=false); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1710; #25 0x00007ffff117e1dd in clang::Sema::ActOnModuleImport (this=0x5555556b5680, StartLoc=..., ExportLoc=..., ImportLoc=..., Path=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; #26 0x00007fffef9655fa in cling::Interpreter::loadModule (this=0x5555555ef460, M=0x555555956a90, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; #27 0x00007fffef965326 in cling::Interpreter::loadModule (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; moduleName=, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; #28 0x00007fffef85f5f6 in TClingCallbacks::findInGlobalModuleIndex (this=0x5555563ffde0, Name=..., loadFirstMatchOnly=false) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:339; #29 0x00007fffef85f7ca in TClingCallbacks::LookupObject (this=0x5555563ffde0, DC=0x5555564f80b8, Name=...) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:376; #30 0x00007fffef9735b7 in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x5555556b8b30, DC=0x5555564f80b8, DN=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:70; #31 0x00007fffef97e8f5 in cling::InterpreterExternalSemaSour",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:9790,Performance,load,loadModule,9790,"7ffff07e3cc0 in clang::ASTReader::ReadAST (this=0x555555609330, FileName=..., Type=clang::serialization::MK_PrebuiltModule, ImportLoc=..., ClientLoadCapabilities=0, Imported=0x0); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:4379; #24 0x00007ffff0495e2e in clang::CompilerInstance::loadModule (this=0x55555562fb60, ImportLoc=..., Path=..., Visibility=clang::Module::AllVisible, IsInclusionDirective=false); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1710; #25 0x00007ffff117e1dd in clang::Sema::ActOnModuleImport (this=0x5555556b5680, StartLoc=..., ExportLoc=..., ImportLoc=..., Path=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; #26 0x00007fffef9655fa in cling::Interpreter::loadModule (this=0x5555555ef460, M=0x555555956a90, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; #27 0x00007fffef965326 in cling::Interpreter::loadModule (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; moduleName=, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; #28 0x00007fffef85f5f6 in TClingCallbacks::findInGlobalModuleIndex (this=0x5555563ffde0, Name=..., loadFirstMatchOnly=false) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:339; #29 0x00007fffef85f7ca in TClingCallbacks::LookupObject (this=0x5555563ffde0, DC=0x5555564f80b8, Name=...) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:376; #30 0x00007fffef9735b7 in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x5555556b8b30, DC=0x5555564f80b8, DN=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:70; #31 0x00007fffef97e8f5 in cling::InterpreterExternalSemaSource::FindExternalVisibleDeclsByName (this=0x5555556b8040, DC=0x5555564f80b8, Name=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interprete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:10097,Performance,load,loadFirstMatchOnly,10097,"5555562fb60, ImportLoc=..., Path=..., Visibility=clang::Module::AllVisible, IsInclusionDirective=false); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1710; #25 0x00007ffff117e1dd in clang::Sema::ActOnModuleImport (this=0x5555556b5680, StartLoc=..., ExportLoc=..., ImportLoc=..., Path=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; #26 0x00007fffef9655fa in cling::Interpreter::loadModule (this=0x5555555ef460, M=0x555555956a90, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; #27 0x00007fffef965326 in cling::Interpreter::loadModule (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; moduleName=, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; #28 0x00007fffef85f5f6 in TClingCallbacks::findInGlobalModuleIndex (this=0x5555563ffde0, Name=..., loadFirstMatchOnly=false) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:339; #29 0x00007fffef85f7ca in TClingCallbacks::LookupObject (this=0x5555563ffde0, DC=0x5555564f80b8, Name=...) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:376; #30 0x00007fffef9735b7 in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x5555556b8b30, DC=0x5555564f80b8, DN=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:70; #31 0x00007fffef97e8f5 in cling::InterpreterExternalSemaSource::FindExternalVisibleDeclsByName (this=0x5555556b8040, DC=0x5555564f80b8, Name=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:278; #32 0x00007ffff09e4a0a in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName (this=0x5555556b8130, DC=0x5555564f80b8, Name=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:107; #33 0x00007ffff39450f6 in clang::DeclContext::lookup (this=0x5555564f80b8, Nam",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:35958,Performance,load,loadHeader,35958,"his=0x555555986c30, attrs=..., DS=0x0) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:938; #128 0x00007ffff07ad84e in clang::Parser::ParseTopLevelDecl (this=0x555555986c30, Result=..., IsFirstDecl=false) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:689; #129 0x00007fffefaf16cb in cling::IncrementalParser::ParseInternal (this=0x5555555ff9a0, input=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:923; #130 0x00007fffefaf36fe in cling::IncrementalParser::Compile (this=0x5555555ff9a0, input=..., Opts=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #131 0x00007fffef964af5 in cling::Interpreter::DeclareInternal (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; input=, CO=..., T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1353; #132 0x00007fffef967c9a in cling::Interpreter::loadHeader (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1491; #133 0x00007fffef9683bd in cling::Interpreter::loadFile (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, allowSharedLib=true, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; #134 0x00007fffefbfe37d in cling::MetaSema::actOnLCommand (this=0x555556003f90, file=..., transaction=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #135 0x00007fffefbfef12 in cling::MetaSema::actOnxCommand (this=0x555556003f90, file=..., args=..., result=0x7fffffffa830) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146; #136 0x00007fffefc13e0b in cling::MetaParser::isXCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:36215,Performance,load,loadFile,36215,"nterpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:689; #129 0x00007fffefaf16cb in cling::IncrementalParser::ParseInternal (this=0x5555555ff9a0, input=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:923; #130 0x00007fffefaf36fe in cling::IncrementalParser::Compile (this=0x5555555ff9a0, input=..., Opts=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #131 0x00007fffef964af5 in cling::Interpreter::DeclareInternal (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; input=, CO=..., T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1353; #132 0x00007fffef967c9a in cling::Interpreter::loadHeader (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1491; #133 0x00007fffef9683bd in cling::Interpreter::loadFile (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, allowSharedLib=true, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; #134 0x00007fffefbfe37d in cling::MetaSema::actOnLCommand (this=0x555556003f90, file=..., transaction=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #135 0x00007fffefbfef12 in cling::MetaSema::actOnxCommand (this=0x555556003f90, file=..., args=..., result=0x7fffffffa830) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146; #136 0x00007fffefc13e0b in cling::MetaParser::isXCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa830); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315; #137 0x00007fffefc132f9 in cling::MetaParser::isCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema::AR_Success,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:110,Testability,test,testReport,110,"Here's simpler reproducer for https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154832/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/ ; ```; ❯ cat Demo.C; void Demo() {; auto X = ROOT::TSeqI(42);; } ; ```. The error message is:; ```. Processing Demo.C...; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:67:10: error: instantiation of 'ROOT::TSeq<int>' is different in different modules; class TSeq {; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1910:13: error: 'std::__make_signed_selector<int, true, false>::__type' from module 'std.type_traits' is not present in definition of 'std::__make_signed_selector<int, true, false>' provided earlier; using __type; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1901:11: note: definition has no member '__type'; class __make_signed_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:4240,Testability,assert,assert,4240," 'std::size_t () const' (aka 'unsigned long () const'); std::size_t size() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: error: multiple overloads of 'step' instantiate to the same signature 'int () const'; T step() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: error: multiple overloads of 'empty' instantiate to the same signature 'bool () const'; bool empty() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: note: previous declaration is here ; ```; Here's a relevant backtrace:; ```c++; Breakpoint 3, clang::ASTReader::FinishedDeserializing (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:12113; 12113 assert(NumCurrentElementsDeserializing &&; (gdb) bt; #0 clang::ASTReader::FinishedDeserializing (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:12113; #1 0x00007ffff0811ffc in clang::ExternalASTSource::Deserializing::~Deserializing (this=0x7ffffffdea48) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:89; #2 0x00007ffff07f37b2 in clang::ASTReader::FindExternalVisibleDeclsByName (this=0x555555609330, DC=0x555556423dd0, Name=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:8059; #3 0x00007fffef97eed2 in cling::ExternalASTSourceWrapper::FindExternalVisibleDeclsByName (this=0x5555556b8500, DC=0x555556423dd0, Name=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:146; #4 0x00007ffff09e4a0a in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName (this=0x5555556b8130, DC=0x555556423dd0, Name=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSourc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/pull/10910#issuecomment-1253760320:7,Usability,simpl,simpler,7,"Here's simpler reproducer for https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154832/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/ ; ```; ❯ cat Demo.C; void Demo() {; auto X = ROOT::TSeqI(42);; } ; ```. The error message is:; ```. Processing Demo.C...; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:67:10: error: instantiation of 'ROOT::TSeq<int>' is different in different modules; class TSeq {; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1910:13: error: 'std::__make_signed_selector<int, true, false>::__type' from module 'std.type_traits' is not present in definition of 'std::__make_signed_selector<int, true, false>' provided earlier; using __type; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1901:11: note: definition has no member '__type'; class __make_signed_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320
https://github.com/root-project/root/issues/10928#issuecomment-1947173074:150,Energy Efficiency,adapt,adapted,150,Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947173074
https://github.com/root-project/root/issues/10928#issuecomment-1947173074:150,Modifiability,adapt,adapted,150,Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947173074
https://github.com/root-project/root/issues/10928#issuecomment-1947173074:46,Testability,test,tests,46,Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947173074
https://github.com/root-project/root/issues/10928#issuecomment-1947173074:26,Usability,simpl,simplification,26,Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947173074
https://github.com/root-project/root/issues/10928#issuecomment-1947918617:152,Energy Efficiency,adapt,adapted,152,> Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted. Thanks! We're on it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947918617
https://github.com/root-project/root/issues/10928#issuecomment-1947918617:152,Modifiability,adapt,adapted,152,> Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted. Thanks! We're on it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947918617
https://github.com/root-project/root/issues/10928#issuecomment-1947918617:48,Testability,test,tests,48,> Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted. Thanks! We're on it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947918617
https://github.com/root-project/root/issues/10928#issuecomment-1947918617:28,Usability,simpl,simplification,28,> Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted. Thanks! We're on it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947918617
https://github.com/root-project/root/pull/10934#issuecomment-1190273501:216,Availability,error,error,216,"@vepadulano @Axel-Naumann with the last commit the situation is now the following:. explicit column list passed, a necessary size branch was omitted:; - compiled Snapshot throws an exception with a (hopefully) clear error message; - jitted Snapshot silently adds the required size branches. explicit column list passed, a necessary size branch is listed _after_ the branch that needs it:; - compiled and jitted Snapshot both work. no explicit column list passed:; - this is only possible with jitted Snapshots and this now works despite the fact that Snapshot reorders the column names in alphabetical order (which might put a size branch after the branch that needs it). In a subsequent PR I'll try to go back to Snapshot using the same ordering for the output columns as the ordering of the input columns -- it's not super straightforward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10934#issuecomment-1190273501
https://github.com/root-project/root/pull/10934#issuecomment-1190273501:222,Integrability,message,message,222,"@vepadulano @Axel-Naumann with the last commit the situation is now the following:. explicit column list passed, a necessary size branch was omitted:; - compiled Snapshot throws an exception with a (hopefully) clear error message; - jitted Snapshot silently adds the required size branches. explicit column list passed, a necessary size branch is listed _after_ the branch that needs it:; - compiled and jitted Snapshot both work. no explicit column list passed:; - this is only possible with jitted Snapshots and this now works despite the fact that Snapshot reorders the column names in alphabetical order (which might put a size branch after the branch that needs it). In a subsequent PR I'll try to go back to Snapshot using the same ordering for the output columns as the ordering of the input columns -- it's not super straightforward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10934#issuecomment-1190273501
https://github.com/root-project/root/pull/10934#issuecomment-1190273501:210,Usability,clear,clear,210,"@vepadulano @Axel-Naumann with the last commit the situation is now the following:. explicit column list passed, a necessary size branch was omitted:; - compiled Snapshot throws an exception with a (hopefully) clear error message; - jitted Snapshot silently adds the required size branches. explicit column list passed, a necessary size branch is listed _after_ the branch that needs it:; - compiled and jitted Snapshot both work. no explicit column list passed:; - this is only possible with jitted Snapshots and this now works despite the fact that Snapshot reorders the column names in alphabetical order (which might put a size branch after the branch that needs it). In a subsequent PR I'll try to go back to Snapshot using the same ordering for the output columns as the ordering of the input columns -- it's not super straightforward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10934#issuecomment-1190273501
https://github.com/root-project/root/pull/10936#issuecomment-1185376282:108,Usability,clear,clearer,108,"@saisoma123, I have squashed the commits. In future we should do these changes in a single commit to have a clearer history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10936#issuecomment-1185376282
https://github.com/root-project/root/issues/10948#issuecomment-1195998820:24,Usability,simpl,simply,24,The best solution is to simply remove the ClassImp which are deprecated and offer very little value added. Another solution is to simply add an empty line about of the two ClassImp so that there are not on the same line number.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10948#issuecomment-1195998820
https://github.com/root-project/root/issues/10948#issuecomment-1195998820:130,Usability,simpl,simply,130,The best solution is to simply remove the ClassImp which are deprecated and offer very little value added. Another solution is to simply add an empty line about of the two ClassImp so that there are not on the same line number.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10948#issuecomment-1195998820
https://github.com/root-project/root/issues/10984#issuecomment-1739815648:250,Availability,error,error,250,"Just for completeness, here is a simple reproducer of the problem:. ```c++; // compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648
https://github.com/root-project/root/issues/10984#issuecomment-1739815648:702,Availability,error,error,702,"Just for completeness, here is a simple reproducer of the problem:. ```c++; // compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648
https://github.com/root-project/root/issues/10984#issuecomment-1739815648:1096,Modifiability,inherit,inherited,1096," compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648
https://github.com/root-project/root/issues/10984#issuecomment-1739815648:1687,Modifiability,inherit,inherited,1687,"texpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >&&) [with _Tp = int; _Dp = std::default_delete<int>; bool <anonymous> = true; bool <anonymous> = true]’; 242 | __uniq_ptr_data(__uniq_ptr_data&&) = default;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate expects 1 argument, 0 provided; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648
https://github.com/root-project/root/issues/10984#issuecomment-1739815648:115,Testability,test,test,115,"Just for completeness, here is a simple reproducer of the problem:. ```c++; // compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648
https://github.com/root-project/root/issues/10984#issuecomment-1739815648:120,Testability,test,test,120,"Just for completeness, here is a simple reproducer of the problem:. ```c++; // compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648
https://github.com/root-project/root/issues/10984#issuecomment-1739815648:329,Testability,test,test,329,"Just for completeness, here is a simple reproducer of the problem:. ```c++; // compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648
https://github.com/root-project/root/issues/10984#issuecomment-1739815648:619,Testability,test,test,619,"Just for completeness, here is a simple reproducer of the problem:. ```c++; // compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648
https://github.com/root-project/root/issues/10984#issuecomment-1739815648:33,Usability,simpl,simple,33,"Just for completeness, here is a simple reproducer of the problem:. ```c++; // compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648
https://github.com/root-project/root/issues/11004#issuecomment-1618360139:371,Testability,log,logic,371,"Sorry Olivier, I missed your reply. The loop was just to see if the offset of 4 pixels appeared always, or only if the canvas was big enough. Or also to see if the offset was proportional to canvas size or not. I am not creating PNGs in the snippet above, but rather looking at the graphics are size without borders, which is what the PNG should become later. I took the logic out of the ROOT documentation:. ```; To define precisely the graphics area size of a canvas in the interactive mode, the following four lines of code should be used:; {; Double_t w = 600;; Double_t h = 600;; auto c = new TCanvas(""c"", ""c"", w, h);; c->SetWindowSize(w + (w - c->GetWw()), h + (h - c->GetWh()));; }. and in the batch mode simply do:; c->SetCanvasSize(w,h);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11004#issuecomment-1618360139
https://github.com/root-project/root/issues/11004#issuecomment-1618360139:712,Usability,simpl,simply,712,"Sorry Olivier, I missed your reply. The loop was just to see if the offset of 4 pixels appeared always, or only if the canvas was big enough. Or also to see if the offset was proportional to canvas size or not. I am not creating PNGs in the snippet above, but rather looking at the graphics are size without borders, which is what the PNG should become later. I took the logic out of the ROOT documentation:. ```; To define precisely the graphics area size of a canvas in the interactive mode, the following four lines of code should be used:; {; Double_t w = 600;; Double_t h = 600;; auto c = new TCanvas(""c"", ""c"", w, h);; c->SetWindowSize(w + (w - c->GetWw()), h + (h - c->GetWh()));; }. and in the batch mode simply do:; c->SetCanvasSize(w,h);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11004#issuecomment-1618360139
https://github.com/root-project/root/pull/11027#issuecomment-1192710542:127,Availability,failure,failures,127,"Correct - and I wanted to start small (`vector`, `string`) and see what roottest has to say about that. I did expect some test failures?! That would guide me what else we should expose. Which makes me wonder whether this works at all - nope, it doesn't. Let me fix that...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1192710542
https://github.com/root-project/root/pull/11027#issuecomment-1192710542:178,Security,expose,expose,178,"Correct - and I wanted to start small (`vector`, `string`) and see what roottest has to say about that. I did expect some test failures?! That would guide me what else we should expose. Which makes me wonder whether this works at all - nope, it doesn't. Let me fix that...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1192710542
https://github.com/root-project/root/pull/11027#issuecomment-1192710542:122,Testability,test,test,122,"Correct - and I wanted to start small (`vector`, `string`) and see what roottest has to say about that. I did expect some test failures?! That would guide me what else we should expose. Which makes me wonder whether this works at all - nope, it doesn't. Let me fix that...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1192710542
https://github.com/root-project/root/pull/11027#issuecomment-1192710542:149,Usability,guid,guide,149,"Correct - and I wanted to start small (`vector`, `string`) and see what roottest has to say about that. I did expect some test failures?! That would guide me what else we should expose. Which makes me wonder whether this works at all - nope, it doesn't. Let me fix that...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1192710542
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:464,Availability,error,error,464,Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174395/console).; ### Errors:; - [2023-05-11T12:18:54.188Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:695,Availability,error,error,695,Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174395/console).; ### Errors:; - [2023-05-11T12:18:54.188Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:926,Availability,error,error,926,Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174395/console).; ### Errors:; - [2023-05-11T12:18:54.188Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:1158,Availability,error,error,1158,uests-build/174395/console).; ### Errors:; - [2023-05-11T12:18:54.188Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:1389,Availability,error,error,1389,ts-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:1618,Availability,error,error,1618,ts-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:1847,Availability,error,error,1847,ts-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:2077,Availability,error,error,2077,ts-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:2306,Availability,error,error,2306,ts-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:541,Usability,simpl,simply,541,Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174395/console).; ### Errors:; - [2023-05-11T12:18:54.188Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:772,Usability,simpl,simply,772,Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174395/console).; ### Errors:; - [2023-05-11T12:18:54.188Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:1003,Usability,simpl,simply,1003,Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174395/console).; ### Errors:; - [2023-05-11T12:18:54.188Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:1235,Usability,simpl,simply,1235,uests-build/174395/console).; ### Errors:; - [2023-05-11T12:18:54.188Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:1465,Usability,simpl,simply,1465,ts-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:1694,Usability,simpl,simply,1694,ts-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:1923,Usability,simpl,simply,1923,ts-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:2153,Usability,simpl,simply,2153,ts-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543894216:2383,Usability,simpl,simply,2383,ts-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:448,Availability,error,error,448,Build failed on mac11/cxx14.; Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174396/console).; ### Errors:; - [2023-05-11T12:52:41.022Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:671,Availability,error,error,671,Build failed on mac11/cxx14.; Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174396/console).; ### Errors:; - [2023-05-11T12:52:41.022Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:894,Availability,error,error,894,Build failed on mac11/cxx14.; Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174396/console).; ### Errors:; - [2023-05-11T12:52:41.022Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:1118,Availability,error,error,1118,ch/root-jenkins/job/root-pullrequests-build/174396/console).; ### Errors:; - [2023-05-11T12:52:41.022Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:1341,Availability,error,error,1341,1T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:1562,Availability,error,error,1562,1T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:1783,Availability,error,error,1783,1T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:2005,Availability,error,error,2005,1T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:2226,Availability,error,error,2226,1T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:525,Usability,simpl,simply,525,Build failed on mac11/cxx14.; Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174396/console).; ### Errors:; - [2023-05-11T12:52:41.022Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:748,Usability,simpl,simply,748,Build failed on mac11/cxx14.; Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174396/console).; ### Errors:; - [2023-05-11T12:52:41.022Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:971,Usability,simpl,simply,971,Build failed on mac11/cxx14.; Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174396/console).; ### Errors:; - [2023-05-11T12:52:41.022Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:1195,Usability,simpl,simply,1195,ch/root-jenkins/job/root-pullrequests-build/174396/console).; ### Errors:; - [2023-05-11T12:52:41.022Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:1417,Usability,simpl,simply,1417,1T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:1638,Usability,simpl,simply,1638,1T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:1859,Usability,simpl,simply,1859,1T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:2081,Usability,simpl,simply,2081,1T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11027#issuecomment-1543945512:2303,Usability,simpl,simply,2303,1T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512
https://github.com/root-project/root/pull/11037#issuecomment-1200360373:47,Modifiability,variab,variables,47,"I am realizing that making removing the global variables which are meant to hold the values from the argument parser is probably not a good idea after all. It makes the code less clear for me. Is there a way to make a global variable in python read only?. I know we merged already at least one PR of that kind but I fear we might need to revert it... @saisoma123, @jalopezg-r00t, what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11037#issuecomment-1200360373
https://github.com/root-project/root/pull/11037#issuecomment-1200360373:225,Modifiability,variab,variable,225,"I am realizing that making removing the global variables which are meant to hold the values from the argument parser is probably not a good idea after all. It makes the code less clear for me. Is there a way to make a global variable in python read only?. I know we merged already at least one PR of that kind but I fear we might need to revert it... @saisoma123, @jalopezg-r00t, what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11037#issuecomment-1200360373
https://github.com/root-project/root/pull/11037#issuecomment-1200360373:179,Usability,clear,clear,179,"I am realizing that making removing the global variables which are meant to hold the values from the argument parser is probably not a good idea after all. It makes the code less clear for me. Is there a way to make a global variable in python read only?. I know we merged already at least one PR of that kind but I fear we might need to revert it... @saisoma123, @jalopezg-r00t, what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11037#issuecomment-1200360373
https://github.com/root-project/root/pull/11049#issuecomment-1194998699:507,Energy Efficiency,reduce,reduce,507,"Hi, I had to rebase to change the code format to pass the clang-tools code analysis check (is this new? I didn't have to do this in my previous pull request which had the same formatting as this PR which it is now unhappy with. Also weirdly one of the things it required was in LinkDef.h putting a space before and after ""+"" which isn't consistent with the other lines. Also it required some very weird/bad formatting for calling the function ""plotTwoTGraphs"" in the tutorial added, I think it is trying to reduce the number of characters per line, but it does it in a quite poor way. Also the command that the script ""https://github.com/root-project/root/blob/master/.ci/format_script.sh"" which does this format check says to run to rebase is incorrect. It says to do:. ```; git rebase -i -x ""git-clang-format-7 master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i master; ```; But this does not run and complains that master does not exist. It should be; ```; git rebase -i -x ""git-clang-format-8 origin/master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i origin/master; ```; [i.e. master-> origin/master]; ). This rebase added some spurious commit messages. When (/if) this pull request is accepted, could you please select ""squash and merge"", it's a lot simpler than me having to rebase and squashing manually in the terminal (which last time I tried I messed up so bad I ended up just having to delete my fork and start over), the title of the PR works as a commit message for the full thing ""Add Relativistic Voigt Function to TMath"". Thanks in advance for any help,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1194998699
https://github.com/root-project/root/pull/11049#issuecomment-1194998699:1284,Integrability,message,messages,1284,"Hi, I had to rebase to change the code format to pass the clang-tools code analysis check (is this new? I didn't have to do this in my previous pull request which had the same formatting as this PR which it is now unhappy with. Also weirdly one of the things it required was in LinkDef.h putting a space before and after ""+"" which isn't consistent with the other lines. Also it required some very weird/bad formatting for calling the function ""plotTwoTGraphs"" in the tutorial added, I think it is trying to reduce the number of characters per line, but it does it in a quite poor way. Also the command that the script ""https://github.com/root-project/root/blob/master/.ci/format_script.sh"" which does this format check says to run to rebase is incorrect. It says to do:. ```; git rebase -i -x ""git-clang-format-7 master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i master; ```; But this does not run and complains that master does not exist. It should be; ```; git rebase -i -x ""git-clang-format-8 origin/master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i origin/master; ```; [i.e. master-> origin/master]; ). This rebase added some spurious commit messages. When (/if) this pull request is accepted, could you please select ""squash and merge"", it's a lot simpler than me having to rebase and squashing manually in the terminal (which last time I tried I messed up so bad I ended up just having to delete my fork and start over), the title of the PR works as a commit message for the full thing ""Add Relativistic Voigt Function to TMath"". Thanks in advance for any help,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1194998699
https://github.com/root-project/root/pull/11049#issuecomment-1194998699:1603,Integrability,message,message,1603,"Hi, I had to rebase to change the code format to pass the clang-tools code analysis check (is this new? I didn't have to do this in my previous pull request which had the same formatting as this PR which it is now unhappy with. Also weirdly one of the things it required was in LinkDef.h putting a space before and after ""+"" which isn't consistent with the other lines. Also it required some very weird/bad formatting for calling the function ""plotTwoTGraphs"" in the tutorial added, I think it is trying to reduce the number of characters per line, but it does it in a quite poor way. Also the command that the script ""https://github.com/root-project/root/blob/master/.ci/format_script.sh"" which does this format check says to run to rebase is incorrect. It says to do:. ```; git rebase -i -x ""git-clang-format-7 master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i master; ```; But this does not run and complains that master does not exist. It should be; ```; git rebase -i -x ""git-clang-format-8 origin/master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i origin/master; ```; [i.e. master-> origin/master]; ). This rebase added some spurious commit messages. When (/if) this pull request is accepted, could you please select ""squash and merge"", it's a lot simpler than me having to rebase and squashing manually in the terminal (which last time I tried I messed up so bad I ended up just having to delete my fork and start over), the title of the PR works as a commit message for the full thing ""Add Relativistic Voigt Function to TMath"". Thanks in advance for any help,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1194998699
https://github.com/root-project/root/pull/11049#issuecomment-1194998699:1391,Usability,simpl,simpler,1391,"Hi, I had to rebase to change the code format to pass the clang-tools code analysis check (is this new? I didn't have to do this in my previous pull request which had the same formatting as this PR which it is now unhappy with. Also weirdly one of the things it required was in LinkDef.h putting a space before and after ""+"" which isn't consistent with the other lines. Also it required some very weird/bad formatting for calling the function ""plotTwoTGraphs"" in the tutorial added, I think it is trying to reduce the number of characters per line, but it does it in a quite poor way. Also the command that the script ""https://github.com/root-project/root/blob/master/.ci/format_script.sh"" which does this format check says to run to rebase is incorrect. It says to do:. ```; git rebase -i -x ""git-clang-format-7 master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i master; ```; But this does not run and complains that master does not exist. It should be; ```; git rebase -i -x ""git-clang-format-8 origin/master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i origin/master; ```; [i.e. master-> origin/master]; ). This rebase added some spurious commit messages. When (/if) this pull request is accepted, could you please select ""squash and merge"", it's a lot simpler than me having to rebase and squashing manually in the terminal (which last time I tried I messed up so bad I ended up just having to delete my fork and start over), the title of the PR works as a commit message for the full thing ""Add Relativistic Voigt Function to TMath"". Thanks in advance for any help,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1194998699
https://github.com/root-project/root/pull/11049#issuecomment-1202195997:268,Performance,cache,cache,268,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997
https://github.com/root-project/root/pull/11049#issuecomment-1202195997:321,Testability,test,test,321,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997
https://github.com/root-project/root/pull/11049#issuecomment-1202195997:404,Testability,test,test,404,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997
https://github.com/root-project/root/pull/11049#issuecomment-1202195997:448,Testability,test,test,448,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997
https://github.com/root-project/root/pull/11049#issuecomment-1202195997:505,Testability,test,test,505,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997
https://github.com/root-project/root/pull/11049#issuecomment-1202195997:634,Testability,test,test,634,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997
https://github.com/root-project/root/pull/11049#issuecomment-1202195997:749,Testability,test,test,749,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997
https://github.com/root-project/root/pull/11049#issuecomment-1202195997:185,Usability,simpl,simple,185,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997
https://github.com/root-project/root/pull/11049#issuecomment-1202195997:440,Usability,simpl,simpler,440,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997
https://github.com/root-project/root/pull/11060#issuecomment-1198355345:52,Availability,toler,tolerance,52,"Here you go!; - It checks pdg against TGeoROOT with tolerance; - It checks pdg against TGeoG4 with tolerance; - It checks TGeoROOT against TGeoG4 with numerical tolerance 1e-15 (some math simply is different); ```; $> root.exe test_material_units.C; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 14:22:00 |; | From heads/fix_radlen_g4units@v6-25-01-4723-g1344269685 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ../test_material_units.C...; Using ROOT system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Mat_Si_TGeo A=28.0855 Z=14 rho=2.329 radlen=9.35361 intlen=45.7729 index=0; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Mat_Fe_TGeo A=55.845 Z=26 rho=7.874 radlen=1.75666 intlen=16.9589 index=4; Element: U Z=92 N=238.000000 A=238.028900 [g/mole]; Material Mat_U_TGeo A=238.029 Z=92 rho=18.95 radlen=0.316948 intlen=11.4473 index=8; Info in <TGeoManager>: Changing system of units to Geant4 units (mm, ns, MeV).; Using Geant4 system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Mat_Si_G4 A=28.0855 Z=14 rho=2.329 radlen=93.5361 intlen=457.729 index=0; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Mat_Fe_G4 A=55.845 Z=26 rho=7.874 radlen=17.5666 intlen=169.589 index=4; Element: U Z=92 N=238.000000 A=238.028900 [g/mole]; Material Mat_U_G4 A=238.029 Z=92 rho=18.95 radlen=3.16948 intlen=114.473 index=8; TEST PASSED Si vs. Mat_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST PASSED Si vs. Mix_1_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.0015 % IntLen: 1.6 % ; TEST PASSED Si vs. Mix_2_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198355345
https://github.com/root-project/root/pull/11060#issuecomment-1198355345:99,Availability,toler,tolerance,99,"Here you go!; - It checks pdg against TGeoROOT with tolerance; - It checks pdg against TGeoG4 with tolerance; - It checks TGeoROOT against TGeoG4 with numerical tolerance 1e-15 (some math simply is different); ```; $> root.exe test_material_units.C; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 14:22:00 |; | From heads/fix_radlen_g4units@v6-25-01-4723-g1344269685 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ../test_material_units.C...; Using ROOT system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Mat_Si_TGeo A=28.0855 Z=14 rho=2.329 radlen=9.35361 intlen=45.7729 index=0; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Mat_Fe_TGeo A=55.845 Z=26 rho=7.874 radlen=1.75666 intlen=16.9589 index=4; Element: U Z=92 N=238.000000 A=238.028900 [g/mole]; Material Mat_U_TGeo A=238.029 Z=92 rho=18.95 radlen=0.316948 intlen=11.4473 index=8; Info in <TGeoManager>: Changing system of units to Geant4 units (mm, ns, MeV).; Using Geant4 system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Mat_Si_G4 A=28.0855 Z=14 rho=2.329 radlen=93.5361 intlen=457.729 index=0; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Mat_Fe_G4 A=55.845 Z=26 rho=7.874 radlen=17.5666 intlen=169.589 index=4; Element: U Z=92 N=238.000000 A=238.028900 [g/mole]; Material Mat_U_G4 A=238.029 Z=92 rho=18.95 radlen=3.16948 intlen=114.473 index=8; TEST PASSED Si vs. Mat_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST PASSED Si vs. Mix_1_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.0015 % IntLen: 1.6 % ; TEST PASSED Si vs. Mix_2_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198355345
https://github.com/root-project/root/pull/11060#issuecomment-1198355345:161,Availability,toler,tolerance,161,"Here you go!; - It checks pdg against TGeoROOT with tolerance; - It checks pdg against TGeoG4 with tolerance; - It checks TGeoROOT against TGeoG4 with numerical tolerance 1e-15 (some math simply is different); ```; $> root.exe test_material_units.C; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 14:22:00 |; | From heads/fix_radlen_g4units@v6-25-01-4723-g1344269685 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ../test_material_units.C...; Using ROOT system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Mat_Si_TGeo A=28.0855 Z=14 rho=2.329 radlen=9.35361 intlen=45.7729 index=0; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Mat_Fe_TGeo A=55.845 Z=26 rho=7.874 radlen=1.75666 intlen=16.9589 index=4; Element: U Z=92 N=238.000000 A=238.028900 [g/mole]; Material Mat_U_TGeo A=238.029 Z=92 rho=18.95 radlen=0.316948 intlen=11.4473 index=8; Info in <TGeoManager>: Changing system of units to Geant4 units (mm, ns, MeV).; Using Geant4 system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Mat_Si_G4 A=28.0855 Z=14 rho=2.329 radlen=93.5361 intlen=457.729 index=0; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Mat_Fe_G4 A=55.845 Z=26 rho=7.874 radlen=17.5666 intlen=169.589 index=4; Element: U Z=92 N=238.000000 A=238.028900 [g/mole]; Material Mat_U_G4 A=238.029 Z=92 rho=18.95 radlen=3.16948 intlen=114.473 index=8; TEST PASSED Si vs. Mat_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST PASSED Si vs. Mix_1_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.0015 % IntLen: 1.6 % ; TEST PASSED Si vs. Mix_2_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198355345
https://github.com/root-project/root/pull/11060#issuecomment-1198355345:5250,Availability,failure,failures,5250,e vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.028 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Mat_Fe_TGeo vs. Mat_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_1_Fe_TGeo vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_Fe_TGeo vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_3_Fe_TGeo vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED U vs. Mat_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED Mat_U_TGeo vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_1_U_TGeo vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_U_TGeo vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_3_U_TGeo vs. Mix_3_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % . TEST PASSED Hurray!!!! 0 failures detected.; ```; [test_material_units.C.txt](https://github.com/root-project/root/files/9212397/test_material_units.C.txt),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198355345
https://github.com/root-project/root/pull/11060#issuecomment-1198355345:5259,Safety,detect,detected,5259,e vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.028 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Mat_Fe_TGeo vs. Mat_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_1_Fe_TGeo vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_Fe_TGeo vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_3_Fe_TGeo vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED U vs. Mat_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED Mat_U_TGeo vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_1_U_TGeo vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_U_TGeo vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_3_U_TGeo vs. Mix_3_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % . TEST PASSED Hurray!!!! 0 failures detected.; ```; [test_material_units.C.txt](https://github.com/root-project/root/files/9212397/test_material_units.C.txt),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198355345
https://github.com/root-project/root/pull/11060#issuecomment-1198355345:188,Usability,simpl,simply,188,"Here you go!; - It checks pdg against TGeoROOT with tolerance; - It checks pdg against TGeoG4 with tolerance; - It checks TGeoROOT against TGeoG4 with numerical tolerance 1e-15 (some math simply is different); ```; $> root.exe test_material_units.C; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 14:22:00 |; | From heads/fix_radlen_g4units@v6-25-01-4723-g1344269685 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ../test_material_units.C...; Using ROOT system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Mat_Si_TGeo A=28.0855 Z=14 rho=2.329 radlen=9.35361 intlen=45.7729 index=0; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Mat_Fe_TGeo A=55.845 Z=26 rho=7.874 radlen=1.75666 intlen=16.9589 index=4; Element: U Z=92 N=238.000000 A=238.028900 [g/mole]; Material Mat_U_TGeo A=238.029 Z=92 rho=18.95 radlen=0.316948 intlen=11.4473 index=8; Info in <TGeoManager>: Changing system of units to Geant4 units (mm, ns, MeV).; Using Geant4 system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Mat_Si_G4 A=28.0855 Z=14 rho=2.329 radlen=93.5361 intlen=457.729 index=0; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Mat_Fe_G4 A=55.845 Z=26 rho=7.874 radlen=17.5666 intlen=169.589 index=4; Element: U Z=92 N=238.000000 A=238.028900 [g/mole]; Material Mat_U_G4 A=238.029 Z=92 rho=18.95 radlen=3.16948 intlen=114.473 index=8; TEST PASSED Si vs. Mat_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST PASSED Si vs. Mix_1_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.0015 % IntLen: 1.6 % ; TEST PASSED Si vs. Mix_2_Si_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198355345
https://github.com/root-project/root/pull/11063#issuecomment-1198458818:87,Availability,error,error,87,"Indeed, I should have updated the PR with a comment earlier. At least we can raise the error on the python side though, the call to the pythonization happens before the C++ constructor is called. Maybe the check can be something more specific like; ```python; url = ROOT.TUrl(filename); if url.GetProtocol() != ""file"":; raise ValueError(); ```; instead of the current more simplistic check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063#issuecomment-1198458818
https://github.com/root-project/root/pull/11063#issuecomment-1198458818:22,Deployability,update,updated,22,"Indeed, I should have updated the PR with a comment earlier. At least we can raise the error on the python side though, the call to the pythonization happens before the C++ constructor is called. Maybe the check can be something more specific like; ```python; url = ROOT.TUrl(filename); if url.GetProtocol() != ""file"":; raise ValueError(); ```; instead of the current more simplistic check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063#issuecomment-1198458818
https://github.com/root-project/root/pull/11063#issuecomment-1198458818:373,Usability,simpl,simplistic,373,"Indeed, I should have updated the PR with a comment earlier. At least we can raise the error on the python side though, the call to the pythonization happens before the C++ constructor is called. Maybe the check can be something more specific like; ```python; url = ROOT.TUrl(filename); if url.GetProtocol() != ""file"":; raise ValueError(); ```; instead of the current more simplistic check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063#issuecomment-1198458818
https://github.com/root-project/root/issues/11071#issuecomment-1199109958:107,Usability,clear,clear,107,"Please use https://root-forum.cern.ch to discuss issues. A GitHub bug report is most useful only once it's clear that it is indeed an issue with ROOT and that we know how to reproduce it. This here is *not* and issue with ROOT, at least it's all but obvious why it would be. The crash happens in `Fatima::ReadSensitive(G4Event const*)` or something called by it, and that's not ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071#issuecomment-1199109958
https://github.com/root-project/root/pull/11079#issuecomment-1204165478:295,Availability,error,error,295,"I don't think this is used by anyone, as it is not clear to the users that copy assignment does for RooFit objects. More complicated user codes like for example are CMS combine are still compiling with these changes. If someone was using this functionality, they will get warned with a compiler error now and can find a workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11079#issuecomment-1204165478
https://github.com/root-project/root/pull/11079#issuecomment-1204165478:51,Usability,clear,clear,51,"I don't think this is used by anyone, as it is not clear to the users that copy assignment does for RooFit objects. More complicated user codes like for example are CMS combine are still compiling with these changes. If someone was using this functionality, they will get warned with a compiler error now and can find a workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11079#issuecomment-1204165478
https://github.com/root-project/root/pull/11090#issuecomment-1202401228:194,Availability,redundant,redundant,194,"> Hi Hanna, thank you very much for the PR!; > ; > Code changes look fine, but can you please change the commit message to explain why it was possible to use `setValFast` in `setBin`? That it's redundant to do the range, check in `getVal`, because the value you pass to `setBin` is a bin center which is in the variable range by definition anyway. Thank you for the comment, I hope the new commit message is clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11090#issuecomment-1202401228
https://github.com/root-project/root/pull/11090#issuecomment-1202401228:112,Integrability,message,message,112,"> Hi Hanna, thank you very much for the PR!; > ; > Code changes look fine, but can you please change the commit message to explain why it was possible to use `setValFast` in `setBin`? That it's redundant to do the range, check in `getVal`, because the value you pass to `setBin` is a bin center which is in the variable range by definition anyway. Thank you for the comment, I hope the new commit message is clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11090#issuecomment-1202401228
https://github.com/root-project/root/pull/11090#issuecomment-1202401228:397,Integrability,message,message,397,"> Hi Hanna, thank you very much for the PR!; > ; > Code changes look fine, but can you please change the commit message to explain why it was possible to use `setValFast` in `setBin`? That it's redundant to do the range, check in `getVal`, because the value you pass to `setBin` is a bin center which is in the variable range by definition anyway. Thank you for the comment, I hope the new commit message is clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11090#issuecomment-1202401228
https://github.com/root-project/root/pull/11090#issuecomment-1202401228:311,Modifiability,variab,variable,311,"> Hi Hanna, thank you very much for the PR!; > ; > Code changes look fine, but can you please change the commit message to explain why it was possible to use `setValFast` in `setBin`? That it's redundant to do the range, check in `getVal`, because the value you pass to `setBin` is a bin center which is in the variable range by definition anyway. Thank you for the comment, I hope the new commit message is clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11090#issuecomment-1202401228
https://github.com/root-project/root/pull/11090#issuecomment-1202401228:194,Safety,redund,redundant,194,"> Hi Hanna, thank you very much for the PR!; > ; > Code changes look fine, but can you please change the commit message to explain why it was possible to use `setValFast` in `setBin`? That it's redundant to do the range, check in `getVal`, because the value you pass to `setBin` is a bin center which is in the variable range by definition anyway. Thank you for the comment, I hope the new commit message is clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11090#issuecomment-1202401228
https://github.com/root-project/root/pull/11090#issuecomment-1202401228:408,Usability,clear,clearer,408,"> Hi Hanna, thank you very much for the PR!; > ; > Code changes look fine, but can you please change the commit message to explain why it was possible to use `setValFast` in `setBin`? That it's redundant to do the range, check in `getVal`, because the value you pass to `setBin` is a bin center which is in the variable range by definition anyway. Thank you for the comment, I hope the new commit message is clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11090#issuecomment-1202401228
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:134,Energy Efficiency,power,power,134,"> > I am almost certain that non-critical changes won’t make it back upstream.; > ; > I think all of us appreciate the time and brain power Vincenzo invests in improving the code. I bet it's useful to propose changes coming out of this upstream where relevant, @sudo-panda ?. Hi @Axel-Naumann ,. I am really grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:2625,Energy Efficiency,schedul,schedule,2625,"o thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even though the answer is more than ten years old, I experienced this firsthand when I started using Python (about four years back). So even though Python changed how it treats the variable binding in the newer versions, I would say it doesn't harm us by keeping them and might benefit us in the future. If these counterpoints do not convince you, I will remove the global statements in the PR. :). Sorry for the long comment. **TL;DR:** I am thankful to Vincenzo for taking the time out of his busy schedule to review this PR. I have some counterpoints to his arguments against `global` and if he doesn't agree to them I will remove them ASAP.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:970,Modifiability,variab,variable,970,"> > I am almost certain that non-critical changes won’t make it back upstream.; > ; > I think all of us appreciate the time and brain power Vincenzo invests in improving the code. I bet it's useful to propose changes coming out of this upstream where relevant, @sudo-panda ?. Hi @Axel-Naumann ,. I am really grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1507,Modifiability,variab,variable,1507,"` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even though the answer is more than ten years old, I experienced this firsthand when I started using Python (about four years back). So even though Python changed how it treats the variable binding in the newer versions, I would say it doesn't harm us by keeping them and might benefit us in the future. If these counterpoints do not convince you, I will",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:2306,Modifiability,variab,variable,2306,"o thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even though the answer is more than ten years old, I experienced this firsthand when I started using Python (about four years back). So even though Python changed how it treats the variable binding in the newer versions, I would say it doesn't harm us by keeping them and might benefit us in the future. If these counterpoints do not convince you, I will remove the global statements in the PR. :). Sorry for the long comment. **TL;DR:** I am thankful to Vincenzo for taking the time out of his busy schedule to review this PR. I have some counterpoints to his arguments against `global` and if he doesn't agree to them I will remove them ASAP.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1060,Performance,cache,cache,1060,"e it back upstream.; > ; > I think all of us appreciate the time and brain power Vincenzo invests in improving the code. I bet it's useful to propose changes coming out of this upstream where relevant, @sudo-panda ?. Hi @Axel-Naumann ,. I am really grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1127,Performance,cache,cache,1127,"power Vincenzo invests in improving the code. I bet it's useful to propose changes coming out of this upstream where relevant, @sudo-panda ?. Hi @Axel-Naumann ,. I am really grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even thoug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1242,Performance,cache,cache,1242,"elevant, @sudo-panda ?. Hi @Axel-Naumann ,. I am really grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even though the answer is more than ten years old, I experienced this firsthand when I started using Python (about four years b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1329,Performance,cache,cache,1329,"lly grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even though the answer is more than ten years old, I experienced this firsthand when I started using Python (about four years back). So even though Python changed how it treats the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1356,Performance,cache,cache,1356,"gesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even though the answer is more than ten years old, I experienced this firsthand when I started using Python (about four years back). So even though Python changed how it treats the variable binding in the newer versions, I would say it doesn't harm us by keeping them",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:516,Usability,simpl,simplify,516,"> > I am almost certain that non-critical changes won’t make it back upstream.; > ; > I think all of us appreciate the time and brain power Vincenzo invests in improving the code. I bet it's useful to propose changes coming out of this upstream where relevant, @sudo-panda ?. Hi @Axel-Naumann ,. I am really grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1540,Usability,guid,guide,1540,"vassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even though the answer is more than ten years old, I experienced this firsthand when I started using Python (about four years back). So even though Python changed how it treats the variable binding in the newer versions, I would say it doesn't harm us by keeping them and might benefit us in the future. If these counterpoints do not convince you, I will remove the global statements in the PR. :). Sorry for the long comment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912
https://github.com/root-project/root/pull/11097#issuecomment-1404930474:34,Usability,clear,clearly,34,"I'll just close this, for me it's clearly off-topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11097#issuecomment-1404930474
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:493,Availability,error,error,493,"Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151341/console).; ### Errors:; - [2022-08-05T22:57:53.738Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_vary.dir/dataframe_vary.cxx.o ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 1&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TH1D]’ ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:1039,Availability,error,error,1039,"rn.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151341/console).; ### Errors:; - [2022-08-05T22:57:53.738Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_vary.dir/dataframe_vary.cxx.o ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 1&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TH1D]’ ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:1237,Availability,error,error,1237,"rame/test/CMakeFiles/dataframe_vary.dir/dataframe_vary.cxx.o ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 1&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TH1D]’ ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:1480,Availability,error,error,1480,"‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 1&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TH1D]’ ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:2094,Availability,error,error,2094," /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 2&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile]’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:2292,Availability,error,error,2292,"kspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 2&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile]’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:2611,Availability,error,error,2611,"er&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 2&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile]’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ . And 9 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:3192,Availability,error,error,3192,"er&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 2&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile]’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ . And 9 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:3390,Availability,error,error,3390,"er&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 2&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile]’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ . And 9 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:302,Testability,test,test,302,"Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151341/console).; ### Errors:; - [2022-08-05T22:57:53.738Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_vary.dir/dataframe_vary.cxx.o ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 1&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TH1D]’ ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:1070,Usability,usab,usable,1070,"rn.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151341/console).; ### Errors:; - [2022-08-05T22:57:53.738Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_vary.dir/dataframe_vary.cxx.o ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 1&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TH1D]’ ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:2125,Usability,usab,usable,2125," /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 2&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile]’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/pull/11127#issuecomment-1207076516:3223,Usability,usab,usable,3223,"er&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 2&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile]’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ . And 9 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516
https://github.com/root-project/root/issues/11128#issuecomment-1208232344:74,Usability,simpl,simple,74,"Wow, you were fast in spotting this :smiley: I think there's a relatively simple fix, see https://github.com/root-project/root/pull/11148",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128#issuecomment-1208232344
https://github.com/root-project/root/issues/11130#issuecomment-1208998994:10,Testability,test,test,10,"I not yet test latest `nlohmann/json.hpp`, but seems to be it is incompatible with previous versions.; The simple solution for now would be ignoring incompatible versions of `nlohmann/json.hpp` and use builtin one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1208998994
https://github.com/root-project/root/issues/11130#issuecomment-1208998994:107,Usability,simpl,simple,107,"I not yet test latest `nlohmann/json.hpp`, but seems to be it is incompatible with previous versions.; The simple solution for now would be ignoring incompatible versions of `nlohmann/json.hpp` and use builtin one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1208998994
https://github.com/root-project/root/issues/11130#issuecomment-1216411826:140,Usability,simpl,simply,140,"Ok, then I still don't understand the issue. Yesterday I understood that it's *not* related to LLVM, but that ROOT's forward declaration is simply ""wrong"" for newer versions of `nlohmann/json` because it changed some template parameters...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1216411826
https://github.com/root-project/root/issues/11130#issuecomment-1218222161:179,Availability,avail,available,179,"@kgizdov the problem is the two cases are non-exhaustive: For versions before 3.11.0, our own forward declaration will always work. Starting with 3.11.2, `json_fwd.hpp` is always available. But in between, for 3.11.0 and 3.11.1, we can hit an ""external"" version of the library without `json_fwd.hpp` where our own forward declaration doesn't work (because of https://github.com/nlohmann/json/pull/3590). It's not clear to me how to make this case work, but I also don't think it's really that important.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1218222161
https://github.com/root-project/root/issues/11130#issuecomment-1218222161:413,Usability,clear,clear,413,"@kgizdov the problem is the two cases are non-exhaustive: For versions before 3.11.0, our own forward declaration will always work. Starting with 3.11.2, `json_fwd.hpp` is always available. But in between, for 3.11.0 and 3.11.1, we can hit an ""external"" version of the library without `json_fwd.hpp` where our own forward declaration doesn't work (because of https://github.com/nlohmann/json/pull/3590). It's not clear to me how to make this case work, but I also don't think it's really that important.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1218222161
https://github.com/root-project/root/issues/11130#issuecomment-1218228421:9,Usability,simpl,simple,9,"Another ""simple"" approach to compile ROOT is specify `-Droot7=OFF`. This will disable eve7 compilation which has such problem with forward declarations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1218228421
https://github.com/root-project/root/pull/11147#issuecomment-1774992019:18,Usability,clear,clear,18,"Ok, if there's no clear way here, I will close this for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11147#issuecomment-1774992019
https://github.com/root-project/root/issues/11173#issuecomment-1218093192:824,Usability,clear,clear,824,"Okay. I used htmls in every possible SaveGraph ""bubble type"" (e.g. datasource/define/filter/actions for consistency). The actual reason to move to html is that in the action node, I want to use a smaller font to say that the action has run, e.g.:; ```; <BR/><FONT POINT-SIZE=\""10.0\"">Already Run</FONT>; ```. There are 2 possible solutions:. 1. Keep only the actions as an html, (so as in current master) this would give:; ![out](https://user-images.githubusercontent.com/46775299/185161238-f0dd3d47-9bc3-49ee-90c6-766b860d2a90.png). 2. Move all ""bubble types"" to plain text -- `Already Run` would appear slightly larger:; ![out2](https://user-images.githubusercontent.com/46775299/185161401-c014eb40-5423-4907-b3c0-4934e21f27c0.png). I am currently migrating to solution 2, as I think it is more consistent and still it is clear that the action has run (it is also in different color because it is run).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173#issuecomment-1218093192
https://github.com/root-project/root/pull/11228#issuecomment-1270167122:217,Usability,clear,clear,217,"Hi! I'm still not 100 % sure this is the right fix, and I didn't have the time to think more about this so far. I will come back to this, but right now this PR is not ready yet. I'll change it to a draft to make this clear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228#issuecomment-1270167122
https://github.com/root-project/root/pull/11230#issuecomment-1237232362:614,Testability,test,tests,614,"Hi @j-mathe , I think you used `clang-format filename1 filename2 ...` instead of `git clang-format --diff ...`, right? because the clang-format commit introduces many formatting changes that are unrelated to the PR and that we should not apply here. It also makes it a bit harder to review the PR. Please remove that commit and only format your changes (e.g. with `git clang-format --diff master kahan | git apply`). I guess you will need to do an interactive git rebase -- you could also take this chance to clean the commit history, leaving only one commit or one for the new implementation plus one for the new tests. That would make it simpler for me to do a last review pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1237232362
https://github.com/root-project/root/pull/11230#issuecomment-1237232362:640,Usability,simpl,simpler,640,"Hi @j-mathe , I think you used `clang-format filename1 filename2 ...` instead of `git clang-format --diff ...`, right? because the clang-format commit introduces many formatting changes that are unrelated to the PR and that we should not apply here. It also makes it a bit harder to review the PR. Please remove that commit and only format your changes (e.g. with `git clang-format --diff master kahan | git apply`). I guess you will need to do an interactive git rebase -- you could also take this chance to clean the commit history, leaving only one commit or one for the new implementation plus one for the new tests. That would make it simpler for me to do a last review pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1237232362
https://github.com/root-project/root/pull/11252#issuecomment-1251578429:276,Usability,simpl,simple,276,"For bench-marking the change can you run and compare with and without the PR:; ```; #include ""TChain.h"". void callfuncbench(int repeat = 1000) ; {; TChain ch(""ntuple""); ; for(int i = 0 ; i < repeat; ++i); ch.Draw(""TMath::TanH(px)"", """", ""goff""););; }; ```; This demonstrates a simple common (indirect) usage of CallFunc. . Thanks,; Philippe. They are also usage of CallFunc in Signal/Slot mechanism and QT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251578429
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:477,Availability,failure,failure,477,"> For bench-marking the change can you run and compare with and without the PR:; > ; > ```; > #include ""TChain.h""; > ; > void callfuncbench(int repeat = 1000) ; > {; > TChain ch(""ntuple""); ; > for(int i = 0 ; i < repeat; ++i); > ch.Draw(""TMath::TanH(px)"", """", ""goff""););; > }; > ```; > ; > This demonstrates a simple common (indirect) usage of CallFunc.; > ; > Thanks, Philippe.; > ; > They are also usage of CallFunc in Signal/Slot mechanism and QT. I used `ctest --output-on-failure -R .*treefor.*` and `ctest -j12 --output-on-failure -R .*callfunc.*` to benchmark. I noticed around 20% slowdown and I decided to go with the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:529,Availability,failure,failure,529,"> For bench-marking the change can you run and compare with and without the PR:; > ; > ```; > #include ""TChain.h""; > ; > void callfuncbench(int repeat = 1000) ; > {; > TChain ch(""ntuple""); ; > for(int i = 0 ; i < repeat; ++i); > ch.Draw(""TMath::TanH(px)"", """", ""goff""););; > }; > ```; > ; > This demonstrates a simple common (indirect) usage of CallFunc.; > ; > Thanks, Philippe.; > ; > They are also usage of CallFunc in Signal/Slot mechanism and QT. I used `ctest --output-on-failure -R .*treefor.*` and `ctest -j12 --output-on-failure -R .*callfunc.*` to benchmark. I noticed around 20% slowdown and I decided to go with the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:1567,Availability,fault,faults,1567,"th the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Mino",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:1611,Availability,fault,faults,1611,"th the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Mino",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:2604,Availability,fault,faults,2604,"ld/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 27019; 	Voluntary context switches: 211; 	Involuntary context switches: 7; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:2648,Availability,fault,faults,2648,"ld/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 27019; 	Voluntary context switches: 211; 	Involuntary context switches: 7; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:867,Deployability,release,release,867,"> For bench-marking the change can you run and compare with and without the PR:; > ; > ```; > #include ""TChain.h""; > ; > void callfuncbench(int repeat = 1000) ; > {; > TChain ch(""ntuple""); ; > for(int i = 0 ; i < repeat; ++i); > ch.Draw(""TMath::TanH(px)"", """", ""goff""););; > }; > ```; > ; > This demonstrates a simple common (indirect) usage of CallFunc.; > ; > Thanks, Philippe.; > ; > They are also usage of CallFunc in Signal/Slot mechanism and QT. I used `ctest --output-on-failure -R .*treefor.*` and `ctest -j12 --output-on-failure -R .*callfunc.*` to benchmark. I noticed around 20% slowdown and I decided to go with the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:934,Deployability,release,release-master,934,"> For bench-marking the change can you run and compare with and without the PR:; > ; > ```; > #include ""TChain.h""; > ; > void callfuncbench(int repeat = 1000) ; > {; > TChain ch(""ntuple""); ; > for(int i = 0 ; i < repeat; ++i); > ch.Draw(""TMath::TanH(px)"", """", ""goff""););; > }; > ```; > ; > This demonstrates a simple common (indirect) usage of CallFunc.; > ; > Thanks, Philippe.; > ; > They are also usage of CallFunc in Signal/Slot mechanism and QT. I used `ctest --output-on-failure -R .*treefor.*` and `ctest -j12 --output-on-failure -R .*callfunc.*` to benchmark. I noticed around 20% slowdown and I decided to go with the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:1010,Deployability,release,release-master,1010,"ench-marking the change can you run and compare with and without the PR:; > ; > ```; > #include ""TChain.h""; > ; > void callfuncbench(int repeat = 1000) ; > {; > TChain ch(""ntuple""); ; > for(int i = 0 ; i < repeat; ++i); > ch.Draw(""TMath::TanH(px)"", """", ""goff""););; > }; > ```; > ; > This demonstrates a simple common (indirect) usage of CallFunc.; > ; > Thanks, Philippe.; > ; > They are also usage of CallFunc in Signal/Slot mechanism and QT. I used `ctest --output-on-failure -R .*treefor.*` and `ctest -j12 --output-on-failure -R .*callfunc.*` to benchmark. I noticed around 20% slowdown and I decided to go with the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(10000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:1117,Deployability,release,release-master,1117," > ; > void callfuncbench(int repeat = 1000) ; > {; > TChain ch(""ntuple""); ; > for(int i = 0 ; i < repeat; ++i); > ch.Draw(""TMath::TanH(px)"", """", ""goff""););; > }; > ```; > ; > This demonstrates a simple common (indirect) usage of CallFunc.; > ; > Thanks, Philippe.; > ; > They are also usage of CallFunc in Signal/Slot mechanism and QT. I used `ctest --output-on-failure -R .*treefor.*` and `ctest -j12 --output-on-failure -R .*callfunc.*` to benchmark. I noticed around 20% slowdown and I decided to go with the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: """,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:1971,Deployability,release,release-master,1971,"ld/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 27019; 	Voluntary context switches: 211; 	Involuntary context switches: 7; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:2047,Deployability,release,release-master,2047,"ld/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 27019; 	Voluntary context switches: 211; 	Involuntary context switches: 7; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:2154,Deployability,release,release-master,2154,"ld/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 27019; 	Voluntary context switches: 211; 	Involuntary context switches: 7; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:1762,Integrability,message,messages,1762,"th the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Mino",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:1788,Integrability,message,messages,1788,"th the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Mino",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:2799,Integrability,message,messages,2799,"ld/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 27019; 	Voluntary context switches: 211; 	Involuntary context switches: 7; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:2825,Integrability,message,messages,2825,"ld/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 27019; 	Voluntary context switches: 211; 	Involuntary context switches: 7; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:557,Testability,benchmark,benchmark,557,"> For bench-marking the change can you run and compare with and without the PR:; > ; > ```; > #include ""TChain.h""; > ; > void callfuncbench(int repeat = 1000) ; > {; > TChain ch(""ntuple""); ; > for(int i = 0 ; i < repeat; ++i); > ch.Draw(""TMath::TanH(px)"", """", ""goff""););; > }; > ```; > ; > This demonstrates a simple common (indirect) usage of CallFunc.; > ; > Thanks, Philippe.; > ; > They are also usage of CallFunc in Signal/Slot mechanism and QT. I used `ctest --output-on-failure -R .*treefor.*` and `ctest -j12 --output-on-failure -R .*callfunc.*` to benchmark. I noticed around 20% slowdown and I decided to go with the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:782,Testability,benchmark,benchmark,782,"> For bench-marking the change can you run and compare with and without the PR:; > ; > ```; > #include ""TChain.h""; > ; > void callfuncbench(int repeat = 1000) ; > {; > TChain ch(""ntuple""); ; > for(int i = 0 ; i < repeat; ++i); > ch.Draw(""TMath::TanH(px)"", """", ""goff""););; > }; > ```; > ; > This demonstrates a simple common (indirect) usage of CallFunc.; > ; > Thanks, Philippe.; > ; > They are also usage of CallFunc in Signal/Slot mechanism and QT. I used `ctest --output-on-failure -R .*treefor.*` and `ctest -j12 --output-on-failure -R .*callfunc.*` to benchmark. I noticed around 20% slowdown and I decided to go with the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1251821611:310,Usability,simpl,simple,310,"> For bench-marking the change can you run and compare with and without the PR:; > ; > ```; > #include ""TChain.h""; > ; > void callfuncbench(int repeat = 1000) ; > {; > TChain ch(""ntuple""); ; > for(int i = 0 ; i < repeat; ++i); > ch.Draw(""TMath::TanH(px)"", """", ""goff""););; > }; > ```; > ; > This demonstrates a simple common (indirect) usage of CallFunc.; > ; > Thanks, Philippe.; > ; > They are also usage of CallFunc in Signal/Slot mechanism and QT. I used `ctest --output-on-failure -R .*treefor.*` and `ctest -j12 --output-on-failure -R .*callfunc.*` to benchmark. I noticed around 20% slowdown and I decided to go with the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611
https://github.com/root-project/root/pull/11252#issuecomment-1261020879:353,Availability,down,down,353,"My version of os/compiler/valgrind seems to work better and I got some useful information. For `root.exe -b -l -q callfuncbench.cxx+(1000)`. The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`. Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions). The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions). So it is getting better and `Value::Value` is a potential source of further optimization (see related comment). [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1261020879
https://github.com/root-project/root/pull/11252#issuecomment-1261020879:654,Performance,optimiz,optimization,654,"My version of os/compiler/valgrind seems to work better and I got some useful information. For `root.exe -b -l -q callfuncbench.cxx+(1000)`. The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`. Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions). The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions). So it is getting better and `Value::Value` is a potential source of further optimization (see related comment). [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1261020879
https://github.com/root-project/root/pull/11252#issuecomment-1261020879:478,Usability,simpl,simplifications,478,"My version of os/compiler/valgrind seems to work better and I got some useful information. For `root.exe -b -l -q callfuncbench.cxx+(1000)`. The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`. Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions). The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions). So it is getting better and `Value::Value` is a potential source of further optimization (see related comment). [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1261020879
https://github.com/root-project/root/pull/11252#issuecomment-1262680556:375,Availability,down,down,375,"> My version of os/compiler/valgrind seems to work better and I got some useful information.; > ; > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > ; > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > ; > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > ; > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > ; > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > ; > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz). Thanks for the details. I've pushed the further optimization of `Value::Value`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262680556
https://github.com/root-project/root/pull/11252#issuecomment-1262680556:690,Performance,optimiz,optimization,690,"> My version of os/compiler/valgrind seems to work better and I got some useful information.; > ; > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > ; > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > ; > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > ; > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > ; > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > ; > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz). Thanks for the details. I've pushed the further optimization of `Value::Value`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262680556
https://github.com/root-project/root/pull/11252#issuecomment-1262680556:888,Performance,optimiz,optimization,888,"> My version of os/compiler/valgrind seems to work better and I got some useful information.; > ; > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > ; > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > ; > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > ; > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > ; > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > ; > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz). Thanks for the details. I've pushed the further optimization of `Value::Value`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262680556
https://github.com/root-project/root/pull/11252#issuecomment-1262680556:507,Usability,simpl,simplifications,507,"> My version of os/compiler/valgrind seems to work better and I got some useful information.; > ; > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > ; > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > ; > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > ; > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > ; > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > ; > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz). Thanks for the details. I've pushed the further optimization of `Value::Value`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262680556
https://github.com/root-project/root/pull/11252#issuecomment-1262860929:371,Availability,down,down,371,"> > My version of os/compiler/valgrind seems to work better and I got some useful information.; > > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz); > ; > Thanks for the details. I've pushed the further optimization of `Value::Value`. Can you remeasure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262860929
https://github.com/root-project/root/pull/11252#issuecomment-1262860929:682,Performance,optimiz,optimization,682,"> > My version of os/compiler/valgrind seems to work better and I got some useful information.; > > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz); > ; > Thanks for the details. I've pushed the further optimization of `Value::Value`. Can you remeasure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262860929
https://github.com/root-project/root/pull/11252#issuecomment-1262860929:884,Performance,optimiz,optimization,884,"> > My version of os/compiler/valgrind seems to work better and I got some useful information.; > > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz); > ; > Thanks for the details. I've pushed the further optimization of `Value::Value`. Can you remeasure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262860929
https://github.com/root-project/root/pull/11252#issuecomment-1262860929:501,Usability,simpl,simplifications,501,"> > My version of os/compiler/valgrind seems to work better and I got some useful information.; > > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz); > ; > Thanks for the details. I've pushed the further optimization of `Value::Value`. Can you remeasure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262860929
https://github.com/root-project/root/pull/11262#issuecomment-1229254493:79,Modifiability,config,config,79,"cling startup scripts are different from rootlogon.C and rootrc .; rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter). Question:; 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1229254493
https://github.com/root-project/root/pull/11262#issuecomment-1229254493:402,Modifiability,config,config,402,"cling startup scripts are different from rootlogon.C and rootrc .; rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter). Question:; 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1229254493
https://github.com/root-project/root/pull/11262#issuecomment-1229254493:451,Modifiability,config,config,451,"cling startup scripts are different from rootlogon.C and rootrc .; rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter). Question:; 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1229254493
https://github.com/root-project/root/pull/11262#issuecomment-1229254493:894,Security,access,access,894,"cling startup scripts are different from rootlogon.C and rootrc .; rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter). Question:; 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1229254493
https://github.com/root-project/root/pull/11262#issuecomment-1229254493:873,Usability,simpl,simple,873,"cling startup scripts are different from rootlogon.C and rootrc .; rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter). Question:; 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1229254493
https://github.com/root-project/root/pull/11262#issuecomment-1251040944:51,Usability,feedback,feedback,51,"@Axel-Naumann , @vgvassilev Could you provide some feedback?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1251040944
https://github.com/root-project/root/pull/11262#issuecomment-1255476176:80,Modifiability,config,config,80,"> cling startup scripts are different from rootlogon.C and rootrc . rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter).; > ; > Question:; > ; > 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; > ; > 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; > Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; > ; > 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`. How about a `~/.cling.d` folder where we glob all files and execute?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1255476176
https://github.com/root-project/root/pull/11262#issuecomment-1255476176:422,Modifiability,config,config,422,"> cling startup scripts are different from rootlogon.C and rootrc . rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter).; > ; > Question:; > ; > 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; > ; > 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; > Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; > ; > 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`. How about a `~/.cling.d` folder where we glob all files and execute?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1255476176
https://github.com/root-project/root/pull/11262#issuecomment-1255476176:473,Modifiability,config,config,473,"> cling startup scripts are different from rootlogon.C and rootrc . rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter).; > ; > Question:; > ; > 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; > ; > 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; > Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; > ; > 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`. How about a `~/.cling.d` folder where we glob all files and execute?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1255476176
https://github.com/root-project/root/pull/11262#issuecomment-1255476176:922,Security,access,access,922,"> cling startup scripts are different from rootlogon.C and rootrc . rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter).; > ; > Question:; > ; > 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; > ; > 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; > Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; > ; > 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`. How about a `~/.cling.d` folder where we glob all files and execute?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1255476176
https://github.com/root-project/root/pull/11262#issuecomment-1255476176:901,Usability,simpl,simple,901,"> cling startup scripts are different from rootlogon.C and rootrc . rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter).; > ; > Question:; > ; > 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; > ; > 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; > Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; > ; > 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`. How about a `~/.cling.d` folder where we glob all files and execute?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1255476176
https://github.com/root-project/root/pull/11263#issuecomment-1483286941:27,Availability,failure,failure,27,"I am able to reproduce the failure with a simple standalone reproducer (2 threads one loading and unloading a library, the other interogating `TClassTable`). I will prepare a PR with the fine grained locking (or whatever is needed to make the crash go away :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1483286941
https://github.com/root-project/root/pull/11263#issuecomment-1483286941:86,Performance,load,loading,86,"I am able to reproduce the failure with a simple standalone reproducer (2 threads one loading and unloading a library, the other interogating `TClassTable`). I will prepare a PR with the fine grained locking (or whatever is needed to make the crash go away :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1483286941
https://github.com/root-project/root/pull/11263#issuecomment-1483286941:42,Usability,simpl,simple,42,"I am able to reproduce the failure with a simple standalone reproducer (2 threads one loading and unloading a library, the other interogating `TClassTable`). I will prepare a PR with the fine grained locking (or whatever is needed to make the crash go away :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1483286941
https://github.com/root-project/root/pull/11268#issuecomment-1230200939:276,Availability,error,error,276,"> It removes the requirement for version 3.9. Technically code works with all 3.x versions of `nlohmann/json.hpp`. I add requirement for 3.9 recently just because we were not using and not testing for `json_fwd.hpp`. Now version restriction is not necessary. > It worsens the error message in case json_fwd.h when it is required for recent versions. They were written based on feedback from upstream, so I would like to keep the detailed messages. `json_fwd.hpp` now always required - not only for 3.11. Just as workaround for time been we allow to use [3.10 .. 3.11] versions without it. After LLVM upgrade we could completely skip usage of `json_fwd.h`. I hope it will happen before 6.28 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230200939
https://github.com/root-project/root/pull/11268#issuecomment-1230200939:600,Deployability,upgrade,upgrade,600,"> It removes the requirement for version 3.9. Technically code works with all 3.x versions of `nlohmann/json.hpp`. I add requirement for 3.9 recently just because we were not using and not testing for `json_fwd.hpp`. Now version restriction is not necessary. > It worsens the error message in case json_fwd.h when it is required for recent versions. They were written based on feedback from upstream, so I would like to keep the detailed messages. `json_fwd.hpp` now always required - not only for 3.11. Just as workaround for time been we allow to use [3.10 .. 3.11] versions without it. After LLVM upgrade we could completely skip usage of `json_fwd.h`. I hope it will happen before 6.28 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230200939
https://github.com/root-project/root/pull/11268#issuecomment-1230200939:690,Deployability,release,release,690,"> It removes the requirement for version 3.9. Technically code works with all 3.x versions of `nlohmann/json.hpp`. I add requirement for 3.9 recently just because we were not using and not testing for `json_fwd.hpp`. Now version restriction is not necessary. > It worsens the error message in case json_fwd.h when it is required for recent versions. They were written based on feedback from upstream, so I would like to keep the detailed messages. `json_fwd.hpp` now always required - not only for 3.11. Just as workaround for time been we allow to use [3.10 .. 3.11] versions without it. After LLVM upgrade we could completely skip usage of `json_fwd.h`. I hope it will happen before 6.28 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230200939
https://github.com/root-project/root/pull/11268#issuecomment-1230200939:282,Integrability,message,message,282,"> It removes the requirement for version 3.9. Technically code works with all 3.x versions of `nlohmann/json.hpp`. I add requirement for 3.9 recently just because we were not using and not testing for `json_fwd.hpp`. Now version restriction is not necessary. > It worsens the error message in case json_fwd.h when it is required for recent versions. They were written based on feedback from upstream, so I would like to keep the detailed messages. `json_fwd.hpp` now always required - not only for 3.11. Just as workaround for time been we allow to use [3.10 .. 3.11] versions without it. After LLVM upgrade we could completely skip usage of `json_fwd.h`. I hope it will happen before 6.28 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230200939
https://github.com/root-project/root/pull/11268#issuecomment-1230200939:438,Integrability,message,messages,438,"> It removes the requirement for version 3.9. Technically code works with all 3.x versions of `nlohmann/json.hpp`. I add requirement for 3.9 recently just because we were not using and not testing for `json_fwd.hpp`. Now version restriction is not necessary. > It worsens the error message in case json_fwd.h when it is required for recent versions. They were written based on feedback from upstream, so I would like to keep the detailed messages. `json_fwd.hpp` now always required - not only for 3.11. Just as workaround for time been we allow to use [3.10 .. 3.11] versions without it. After LLVM upgrade we could completely skip usage of `json_fwd.h`. I hope it will happen before 6.28 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230200939
https://github.com/root-project/root/pull/11268#issuecomment-1230200939:189,Testability,test,testing,189,"> It removes the requirement for version 3.9. Technically code works with all 3.x versions of `nlohmann/json.hpp`. I add requirement for 3.9 recently just because we were not using and not testing for `json_fwd.hpp`. Now version restriction is not necessary. > It worsens the error message in case json_fwd.h when it is required for recent versions. They were written based on feedback from upstream, so I would like to keep the detailed messages. `json_fwd.hpp` now always required - not only for 3.11. Just as workaround for time been we allow to use [3.10 .. 3.11] versions without it. After LLVM upgrade we could completely skip usage of `json_fwd.h`. I hope it will happen before 6.28 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230200939
https://github.com/root-project/root/pull/11268#issuecomment-1230200939:377,Usability,feedback,feedback,377,"> It removes the requirement for version 3.9. Technically code works with all 3.x versions of `nlohmann/json.hpp`. I add requirement for 3.9 recently just because we were not using and not testing for `json_fwd.hpp`. Now version restriction is not necessary. > It worsens the error message in case json_fwd.h when it is required for recent versions. They were written based on feedback from upstream, so I would like to keep the detailed messages. `json_fwd.hpp` now always required - not only for 3.11. Just as workaround for time been we allow to use [3.10 .. 3.11] versions without it. After LLVM upgrade we could completely skip usage of `json_fwd.h`. I hope it will happen before 6.28 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230200939
https://github.com/root-project/root/pull/11268#issuecomment-1230211903:97,Deployability,upgrade,upgrade,97,> I still don't understand this. All discussions we had so far ended with agreeing that the LLVM upgrade will change nothing wrt the JSON library. After LLVM upgrade we can use `json.hpp` directly in header files.; Thus one can simply avoid complication with `json_fwd.hpp`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230211903
https://github.com/root-project/root/pull/11268#issuecomment-1230211903:158,Deployability,upgrade,upgrade,158,> I still don't understand this. All discussions we had so far ended with agreeing that the LLVM upgrade will change nothing wrt the JSON library. After LLVM upgrade we can use `json.hpp` directly in header files.; Thus one can simply avoid complication with `json_fwd.hpp`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230211903
https://github.com/root-project/root/pull/11268#issuecomment-1230211903:235,Safety,avoid,avoid,235,> I still don't understand this. All discussions we had so far ended with agreeing that the LLVM upgrade will change nothing wrt the JSON library. After LLVM upgrade we can use `json.hpp` directly in header files.; Thus one can simply avoid complication with `json_fwd.hpp`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230211903
https://github.com/root-project/root/pull/11268#issuecomment-1230211903:228,Usability,simpl,simply,228,> I still don't understand this. All discussions we had so far ended with agreeing that the LLVM upgrade will change nothing wrt the JSON library. After LLVM upgrade we can use `json.hpp` directly in header files.; Thus one can simply avoid complication with `json_fwd.hpp`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230211903
https://github.com/root-project/root/pull/11268#issuecomment-1245012584:137,Testability,test,testing,137,"> I don't understand why we would want to allow older versions than we did in the past. The reason why we restrict version - we were not testing for `json_fwd.hpp`. ; With 3.11.x version such simple restriction no longer working. But now we testing `json_fwd.hpp` and can use it, and restriction making no sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1245012584
https://github.com/root-project/root/pull/11268#issuecomment-1245012584:241,Testability,test,testing,241,"> I don't understand why we would want to allow older versions than we did in the past. The reason why we restrict version - we were not testing for `json_fwd.hpp`. ; With 3.11.x version such simple restriction no longer working. But now we testing `json_fwd.hpp` and can use it, and restriction making no sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1245012584
https://github.com/root-project/root/pull/11268#issuecomment-1245012584:192,Usability,simpl,simple,192,"> I don't understand why we would want to allow older versions than we did in the past. The reason why we restrict version - we were not testing for `json_fwd.hpp`. ; With 3.11.x version such simple restriction no longer working. But now we testing `json_fwd.hpp` and can use it, and restriction making no sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1245012584
https://github.com/root-project/root/issues/11272#issuecomment-1232170822:54,Deployability,integrat,integration,54,"The fix works in my standalone ROOT test. To test the integration with DD4hep and the LHCb detector, the simplest is to add it to the SFT nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232170822
https://github.com/root-project/root/issues/11272#issuecomment-1232170822:54,Integrability,integrat,integration,54,"The fix works in my standalone ROOT test. To test the integration with DD4hep and the LHCb detector, the simplest is to add it to the SFT nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232170822
https://github.com/root-project/root/issues/11272#issuecomment-1232170822:91,Safety,detect,detector,91,"The fix works in my standalone ROOT test. To test the integration with DD4hep and the LHCb detector, the simplest is to add it to the SFT nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232170822
https://github.com/root-project/root/issues/11272#issuecomment-1232170822:36,Testability,test,test,36,"The fix works in my standalone ROOT test. To test the integration with DD4hep and the LHCb detector, the simplest is to add it to the SFT nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232170822
https://github.com/root-project/root/issues/11272#issuecomment-1232170822:45,Testability,test,test,45,"The fix works in my standalone ROOT test. To test the integration with DD4hep and the LHCb detector, the simplest is to add it to the SFT nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232170822
https://github.com/root-project/root/issues/11272#issuecomment-1232170822:105,Usability,simpl,simplest,105,"The fix works in my standalone ROOT test. To test the integration with DD4hep and the LHCb detector, the simplest is to add it to the SFT nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232170822
https://github.com/root-project/root/pull/11286#issuecomment-1268422584:53,Deployability,pipeline,pipeline,53,@vgvassilev Test is added. Please help resume github pipeline.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11286#issuecomment-1268422584
https://github.com/root-project/root/pull/11286#issuecomment-1268422584:39,Usability,resume,resume,39,@vgvassilev Test is added. Please help resume github pipeline.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11286#issuecomment-1268422584
https://github.com/root-project/root/pull/11286#issuecomment-1401028920:208,Usability,feedback,feedback,208,"> Many thanks for the contribution, @jiangyilism! 🙂; > ; > In principle, LGTM, but I will defer the approval to @vgvassilev. Could you apply the included suggestions in the interim?; > . Sure. Thanks for the feedback.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11286#issuecomment-1401028920
https://github.com/root-project/root/issues/11294#issuecomment-1597506324:168,Usability,simpl,simply,168,"Fixed in #11553 with the caveat that in order to be able to pass temporaries one should use e.g. `""const RVecF""` in the signature passed to `Numba.Declare` rather than simply `""RVecF""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11294#issuecomment-1597506324
https://github.com/root-project/root/issues/11299#issuecomment-1235433090:94,Usability,simpl,simply,94,"As a side note, C++ already has a notion of onload so another option could be for the user to simply use:; ```; int anyfunction( .... ) { ... }; int execthefunctonload = anyfunction();; ```; (and on-unload can also be done (using a class destructor for example) but requires a bit more scaffolding)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235433090
https://github.com/root-project/root/issues/11299#issuecomment-1235581331:269,Availability,error,error,269,"Using `.L` or `__attribute__((constructor))` or static initialization are good alternatives. However that does not improve usability of `.x` .; As mentioned in the first post, entry function still need renaming when file get renamed.; Also we get function redefinition error when `.x` or `.L` two scripts with same name. For example `dir0/test.C` and `dir1/dir2/test.C` (with completely different content) cannot both define their `test(...)` entry functions. They cannot be put into different namespaces either otherwise cling does not recognize them as entry functions. However, `__main__(...)` approach suffers from multiple definitions too. Unless cling unloads/drops symbol `__main__` after executing it (btw. In this case will static variables of `__main__` get destructed too?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235581331
https://github.com/root-project/root/issues/11299#issuecomment-1235581331:740,Modifiability,variab,variables,740,"Using `.L` or `__attribute__((constructor))` or static initialization are good alternatives. However that does not improve usability of `.x` .; As mentioned in the first post, entry function still need renaming when file get renamed.; Also we get function redefinition error when `.x` or `.L` two scripts with same name. For example `dir0/test.C` and `dir1/dir2/test.C` (with completely different content) cannot both define their `test(...)` entry functions. They cannot be put into different namespaces either otherwise cling does not recognize them as entry functions. However, `__main__(...)` approach suffers from multiple definitions too. Unless cling unloads/drops symbol `__main__` after executing it (btw. In this case will static variables of `__main__` get destructed too?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235581331
https://github.com/root-project/root/issues/11299#issuecomment-1235581331:339,Testability,test,test,339,"Using `.L` or `__attribute__((constructor))` or static initialization are good alternatives. However that does not improve usability of `.x` .; As mentioned in the first post, entry function still need renaming when file get renamed.; Also we get function redefinition error when `.x` or `.L` two scripts with same name. For example `dir0/test.C` and `dir1/dir2/test.C` (with completely different content) cannot both define their `test(...)` entry functions. They cannot be put into different namespaces either otherwise cling does not recognize them as entry functions. However, `__main__(...)` approach suffers from multiple definitions too. Unless cling unloads/drops symbol `__main__` after executing it (btw. In this case will static variables of `__main__` get destructed too?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235581331
https://github.com/root-project/root/issues/11299#issuecomment-1235581331:362,Testability,test,test,362,"Using `.L` or `__attribute__((constructor))` or static initialization are good alternatives. However that does not improve usability of `.x` .; As mentioned in the first post, entry function still need renaming when file get renamed.; Also we get function redefinition error when `.x` or `.L` two scripts with same name. For example `dir0/test.C` and `dir1/dir2/test.C` (with completely different content) cannot both define their `test(...)` entry functions. They cannot be put into different namespaces either otherwise cling does not recognize them as entry functions. However, `__main__(...)` approach suffers from multiple definitions too. Unless cling unloads/drops symbol `__main__` after executing it (btw. In this case will static variables of `__main__` get destructed too?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235581331
https://github.com/root-project/root/issues/11299#issuecomment-1235581331:432,Testability,test,test,432,"Using `.L` or `__attribute__((constructor))` or static initialization are good alternatives. However that does not improve usability of `.x` .; As mentioned in the first post, entry function still need renaming when file get renamed.; Also we get function redefinition error when `.x` or `.L` two scripts with same name. For example `dir0/test.C` and `dir1/dir2/test.C` (with completely different content) cannot both define their `test(...)` entry functions. They cannot be put into different namespaces either otherwise cling does not recognize them as entry functions. However, `__main__(...)` approach suffers from multiple definitions too. Unless cling unloads/drops symbol `__main__` after executing it (btw. In this case will static variables of `__main__` get destructed too?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235581331
https://github.com/root-project/root/issues/11299#issuecomment-1235581331:123,Usability,usab,usability,123,"Using `.L` or `__attribute__((constructor))` or static initialization are good alternatives. However that does not improve usability of `.x` .; As mentioned in the first post, entry function still need renaming when file get renamed.; Also we get function redefinition error when `.x` or `.L` two scripts with same name. For example `dir0/test.C` and `dir1/dir2/test.C` (with completely different content) cannot both define their `test(...)` entry functions. They cannot be put into different namespaces either otherwise cling does not recognize them as entry functions. However, `__main__(...)` approach suffers from multiple definitions too. Unless cling unloads/drops symbol `__main__` after executing it (btw. In this case will static variables of `__main__` get destructed too?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235581331
https://github.com/root-project/root/pull/11311#issuecomment-1252761771:318,Availability,avail,available,318,"> In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available). In fact, I have a project that uses C++20, and uses ROOT compiled with C++17, and I encountered compilation errors in the ROOT header file RSpan.hxx as mentioned (redefinition of std::span). However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. I also checked RStringView.hxx, this header file also uses a similar technique, so I submitted this patch. I believe that I may not be considerate about this in depth, but I hope that the issues of ""mixing standards"", which seems not to be issues, can be solved. If there are indeed many restrictions/issues on this issue, I admit that this is not such simple...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252761771
https://github.com/root-project/root/pull/11311#issuecomment-1252761771:438,Availability,error,errors,438,"> In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available). In fact, I have a project that uses C++20, and uses ROOT compiled with C++17, and I encountered compilation errors in the ROOT header file RSpan.hxx as mentioned (redefinition of std::span). However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. I also checked RStringView.hxx, this header file also uses a similar technique, so I submitted this patch. I believe that I may not be considerate about this in depth, but I hope that the issues of ""mixing standards"", which seems not to be issues, can be solved. If there are indeed many restrictions/issues on this issue, I admit that this is not such simple...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252761771
https://github.com/root-project/root/pull/11311#issuecomment-1252761771:123,Deployability,install,installed,123,"> In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available). In fact, I have a project that uses C++20, and uses ROOT compiled with C++17, and I encountered compilation errors in the ROOT header file RSpan.hxx as mentioned (redefinition of std::span). However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. I also checked RStringView.hxx, this header file also uses a similar technique, so I submitted this patch. I believe that I may not be considerate about this in depth, but I hope that the issues of ""mixing standards"", which seems not to be issues, can be solved. If there are indeed many restrictions/issues on this issue, I admit that this is not such simple...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252761771
https://github.com/root-project/root/pull/11311#issuecomment-1252761771:785,Deployability,patch,patch,785,"> In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available). In fact, I have a project that uses C++20, and uses ROOT compiled with C++17, and I encountered compilation errors in the ROOT header file RSpan.hxx as mentioned (redefinition of std::span). However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. I also checked RStringView.hxx, this header file also uses a similar technique, so I submitted this patch. I believe that I may not be considerate about this in depth, but I hope that the issues of ""mixing standards"", which seems not to be issues, can be solved. If there are indeed many restrictions/issues on this issue, I admit that this is not such simple...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252761771
https://github.com/root-project/root/pull/11311#issuecomment-1252761771:76,Modifiability,config,configured,76,"> In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available). In fact, I have a project that uses C++20, and uses ROOT compiled with C++17, and I encountered compilation errors in the ROOT header file RSpan.hxx as mentioned (redefinition of std::span). However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. I also checked RStringView.hxx, this header file also uses a similar technique, so I submitted this patch. I believe that I may not be considerate about this in depth, but I hope that the issues of ""mixing standards"", which seems not to be issues, can be solved. If there are indeed many restrictions/issues on this issue, I admit that this is not such simple...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252761771
https://github.com/root-project/root/pull/11311#issuecomment-1252761771:269,Modifiability,config,configure,269,"> In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available). In fact, I have a project that uses C++20, and uses ROOT compiled with C++17, and I encountered compilation errors in the ROOT header file RSpan.hxx as mentioned (redefinition of std::span). However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. I also checked RStringView.hxx, this header file also uses a similar technique, so I submitted this patch. I believe that I may not be considerate about this in depth, but I hope that the issues of ""mixing standards"", which seems not to be issues, can be solved. If there are indeed many restrictions/issues on this issue, I admit that this is not such simple...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252761771
https://github.com/root-project/root/pull/11311#issuecomment-1252761771:298,Safety,detect,detected,298,"> In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available). In fact, I have a project that uses C++20, and uses ROOT compiled with C++17, and I encountered compilation errors in the ROOT header file RSpan.hxx as mentioned (redefinition of std::span). However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. I also checked RStringView.hxx, this header file also uses a similar technique, so I submitted this patch. I believe that I may not be considerate about this in depth, but I hope that the issues of ""mixing standards"", which seems not to be issues, can be solved. If there are indeed many restrictions/issues on this issue, I admit that this is not such simple...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252761771
https://github.com/root-project/root/pull/11311#issuecomment-1252761771:1038,Usability,simpl,simple,1038,"> In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available). In fact, I have a project that uses C++20, and uses ROOT compiled with C++17, and I encountered compilation errors in the ROOT header file RSpan.hxx as mentioned (redefinition of std::span). However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. I also checked RStringView.hxx, this header file also uses a similar technique, so I submitted this patch. I believe that I may not be considerate about this in depth, but I hope that the issues of ""mixing standards"", which seems not to be issues, can be solved. If there are indeed many restrictions/issues on this issue, I admit that this is not such simple...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252761771
https://github.com/root-project/root/pull/11311#issuecomment-1254026839:1817,Safety,safe,safe-to-link-,1817," with the same compiler ABI) to compile libA and libB (this is a common behavior), the compiler ABI condition is automatically met. On the other hand, the C++ standard library API is specified by ISO C++, and we can believe that the implementation of the standard library is compatible between different standards. So generally speaking, libA and libB are compatible even if they are compiled by different standards. However, in practice, the sequence of tokens of the same entity in the library may be different between different C++ standards, so the same symbol (such as a function) may correspond to different binaries, which indeed violates the ODR. However, as long as their behaviors are compatible, no matter which version of the linker is selected, there should be no serious problems. In other words, it can be considered that this is only a minor ODR violation, because it does not produce observable effects. The GCC document does not seem to clearly indicate whether compiling with mixed standards would work, but its [ABI policy](https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) seems to imply that this is feasible. In addition, this issue has also been [discussed on StackOverflow](https://stackoverflow.com/questions/46746878/is-it-safe-to-link-c17-c14-and-c11-objects), and the view is that it is feasible to do so. Back to our current issue, ideally, as long as there is no explicit ODR violation in the header file, the only thing left is to ensure ABI compatibility, which should be guaranteed by the compiler. It can be said that if the current `span` implementation of ROOT is compatible with the implementation of the standard library, the problem of mixed standards is not serious, but it is difficult to always guarantee. But as I said, if there is something like `cxx20::span` instead of crashing with the standard library, this issue can be solved from its source. The rest is just the ABI compatibility of this `cxx20::span`, which is guaranteed by the compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1254026839
https://github.com/root-project/root/pull/11311#issuecomment-1254026839:1514,Usability,clear,clearly,1514,"st compilers with the same compiler ABI) to compile libA and libB (this is a common behavior), the compiler ABI condition is automatically met. On the other hand, the C++ standard library API is specified by ISO C++, and we can believe that the implementation of the standard library is compatible between different standards. So generally speaking, libA and libB are compatible even if they are compiled by different standards. However, in practice, the sequence of tokens of the same entity in the library may be different between different C++ standards, so the same symbol (such as a function) may correspond to different binaries, which indeed violates the ODR. However, as long as their behaviors are compatible, no matter which version of the linker is selected, there should be no serious problems. In other words, it can be considered that this is only a minor ODR violation, because it does not produce observable effects. The GCC document does not seem to clearly indicate whether compiling with mixed standards would work, but its [ABI policy](https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) seems to imply that this is feasible. In addition, this issue has also been [discussed on StackOverflow](https://stackoverflow.com/questions/46746878/is-it-safe-to-link-c17-c14-and-c11-objects), and the view is that it is feasible to do so. Back to our current issue, ideally, as long as there is no explicit ODR violation in the header file, the only thing left is to ensure ABI compatibility, which should be guaranteed by the compiler. It can be said that if the current `span` implementation of ROOT is compatible with the implementation of the standard library, the problem of mixed standards is not serious, but it is difficult to always guarantee. But as I said, if there is something like `cxx20::span` instead of crashing with the standard library, this issue can be solved from its source. The rest is just the ABI compatibility of this `cxx20::span`, which is guaranteed by t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1254026839
https://github.com/root-project/root/issues/11390#issuecomment-1253381156:944,Usability,simpl,simply,944,"It turns out this is due to an integer underflow that is triggered by the machinery of `DisplayHelper`:. https://github.com/root-project/root/blob/3160daafc008d8080cb9b3c602f4134b521ca8ad/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L1334-L1337. The intended workflow is:; 1. Add the next row to be displayed to the `RDisplay` object. The `AddRow` method decreases an internal counter of how many entries are left to be displayed at https://github.com/root-project/root/blob/3160daafc008d8080cb9b3c602f4134b521ca8ad/tree/dataframe/inc/ROOT/RDF/RDisplay.hxx#L227; 2. Check whether there are no more entries to be displayed (`!fDisplayerHelper->HasNext()`).; 3. If so, signal the previous node that this node has finished its job through the `StopProcessing` method. There are a bunch of flaws in this workflow. Uncoditionally calling `AddRow` may trigger the integer underflow by calling `fEntries--` when `fEntries==0`. This can be seen quite simply with the following example; ```cpp; root [0] ROOT::RDataFrame d{1};; root [1] auto dd = d.Define(""b1"", [] { return 42; }).Display<int>({""b1""}, 0);; root [2] dd->Print(); +-----+----+; | Row | b1 | ; +-----+----+; | 0 | 42 | ; +-----+----+. ```; The row is printed even though the user asked for `0` entries to be displayed. The other problem, more subtle and the actual culprit of the reproducer above, is when there is more than just the `Display` operation in the computation graph. `DisplayHelper::Exec` is called once per entry to be processed, as this is the normal working condition in `RLoopManager::Run`. When there is only the `Display` operation, the moment there are no more entries to be displayed, `DisplayHelper` will tell `RLoopManager` that it has finished, thus triggering an early stop of the execution (e.g. if a tree has 100 entries but we only want to display 5). When there is more than one operation, i.e. more than one child of the `RLoopManager`, the call to `StopProcessing` coming from `DisplayHelper::Exec` is not enough t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11390#issuecomment-1253381156
https://github.com/root-project/root/issues/11397#issuecomment-1432035579:73,Usability,clear,clear,73,"There is still no fix for this yet, but I have changed the title to make clear that this problem is more general. Also there is the same issue in JIRA, that I'll now close because it is a duplicate of this GitHub issue:; https://sft.its.cern.ch/jira/browse/ROOT-9776. The proper fix would be in my opinion to tag the relevant functions in C++ with an attribute, and then have these considered by PyROOT to set the `_creates` attribute automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11397#issuecomment-1432035579
https://github.com/root-project/root/pull/11409#issuecomment-1255079351:13,Deployability,patch,patch,13,"Applying the patch causes a crash when cloning a `THnD`. Here is a simple code reproducing this:; ```; int bins[] = {10}; double xmin[] = {0}; double xmax[] = {10}; ; auto h = new THnD(""h"",""h"",1,bins,xmin,xmax);; h->Sumw2();; h->Clone();; ```. @pcanal , any idea what could be the problem ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11409#issuecomment-1255079351
https://github.com/root-project/root/pull/11409#issuecomment-1255079351:67,Usability,simpl,simple,67,"Applying the patch causes a crash when cloning a `THnD`. Here is a simple code reproducing this:; ```; int bins[] = {10}; double xmin[] = {0}; double xmax[] = {10}; ; auto h = new THnD(""h"",""h"",1,bins,xmin,xmax);; h->Sumw2();; h->Clone();; ```. @pcanal , any idea what could be the problem ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11409#issuecomment-1255079351
https://github.com/root-project/root/issues/11421#issuecomment-1257762156:632,Availability,alive,alive,632,"Thanks a lot for your comment!. > * sometimes I would have found useful to be able to pass python number anywhere a RooAbsReal is required, although I suspect this may require a pythonization for each pdf. Yes, I would like this too, but it's technically not easy to implement without changing the source for all PDFs. Maybe I will have an idea at some point as I learn more about PyROOT, but for now I have none. > * `RooSimultaneous` map constructor does not accept a python dictionary yet. That's a very good idea!. > * one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. That's a pretty good idea too. I guess one can simply create new Python references to each server that are set as an attribute of the server, such that they are always kept alive. But you're right, server redirection would break this, unless there are Pythonizations for that one too.... So I still need to think if this is worth it, also considering that users can also use the RooWorkspace factory interface to create PDFs, which doesn't have this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421#issuecomment-1257762156
https://github.com/root-project/root/issues/11421#issuecomment-1257762156:798,Availability,alive,alive,798,"Thanks a lot for your comment!. > * sometimes I would have found useful to be able to pass python number anywhere a RooAbsReal is required, although I suspect this may require a pythonization for each pdf. Yes, I would like this too, but it's technically not easy to implement without changing the source for all PDFs. Maybe I will have an idea at some point as I learn more about PyROOT, but for now I have none. > * `RooSimultaneous` map constructor does not accept a python dictionary yet. That's a very good idea!. > * one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. That's a pretty good idea too. I guess one can simply create new Python references to each server that are set as an attribute of the server, such that they are always kept alive. But you're right, server redirection would break this, unless there are Pythonizations for that one too.... So I still need to think if this is worth it, also considering that users can also use the RooWorkspace factory interface to create PDFs, which doesn't have this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421#issuecomment-1257762156
https://github.com/root-project/root/issues/11421#issuecomment-1257762156:1072,Availability,alive,alive,1072,"Thanks a lot for your comment!. > * sometimes I would have found useful to be able to pass python number anywhere a RooAbsReal is required, although I suspect this may require a pythonization for each pdf. Yes, I would like this too, but it's technically not easy to implement without changing the source for all PDFs. Maybe I will have an idea at some point as I learn more about PyROOT, but for now I have none. > * `RooSimultaneous` map constructor does not accept a python dictionary yet. That's a very good idea!. > * one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. That's a pretty good idea too. I guess one can simply create new Python references to each server that are set as an attribute of the server, such that they are always kept alive. But you're right, server redirection would break this, unless there are Pythonizations for that one too.... So I still need to think if this is worth it, also considering that users can also use the RooWorkspace factory interface to create PDFs, which doesn't have this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421#issuecomment-1257762156
https://github.com/root-project/root/issues/11421#issuecomment-1257762156:1299,Integrability,interface,interface,1299,"Thanks a lot for your comment!. > * sometimes I would have found useful to be able to pass python number anywhere a RooAbsReal is required, although I suspect this may require a pythonization for each pdf. Yes, I would like this too, but it's technically not easy to implement without changing the source for all PDFs. Maybe I will have an idea at some point as I learn more about PyROOT, but for now I have none. > * `RooSimultaneous` map constructor does not accept a python dictionary yet. That's a very good idea!. > * one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. That's a pretty good idea too. I guess one can simply create new Python references to each server that are set as an attribute of the server, such that they are always kept alive. But you're right, server redirection would break this, unless there are Pythonizations for that one too.... So I still need to think if this is worth it, also considering that users can also use the RooWorkspace factory interface to create PDFs, which doesn't have this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421#issuecomment-1257762156
https://github.com/root-project/root/issues/11421#issuecomment-1257762156:364,Usability,learn,learn,364,"Thanks a lot for your comment!. > * sometimes I would have found useful to be able to pass python number anywhere a RooAbsReal is required, although I suspect this may require a pythonization for each pdf. Yes, I would like this too, but it's technically not easy to implement without changing the source for all PDFs. Maybe I will have an idea at some point as I learn more about PyROOT, but for now I have none. > * `RooSimultaneous` map constructor does not accept a python dictionary yet. That's a very good idea!. > * one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. That's a pretty good idea too. I guess one can simply create new Python references to each server that are set as an attribute of the server, such that they are always kept alive. But you're right, server redirection would break this, unless there are Pythonizations for that one too.... So I still need to think if this is worth it, also considering that users can also use the RooWorkspace factory interface to create PDFs, which doesn't have this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421#issuecomment-1257762156
https://github.com/root-project/root/issues/11421#issuecomment-1257762156:946,Usability,simpl,simply,946,"Thanks a lot for your comment!. > * sometimes I would have found useful to be able to pass python number anywhere a RooAbsReal is required, although I suspect this may require a pythonization for each pdf. Yes, I would like this too, but it's technically not easy to implement without changing the source for all PDFs. Maybe I will have an idea at some point as I learn more about PyROOT, but for now I have none. > * `RooSimultaneous` map constructor does not accept a python dictionary yet. That's a very good idea!. > * one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. That's a pretty good idea too. I guess one can simply create new Python references to each server that are set as an attribute of the server, such that they are always kept alive. But you're right, server redirection would break this, unless there are Pythonizations for that one too.... So I still need to think if this is worth it, also considering that users can also use the RooWorkspace factory interface to create PDFs, which doesn't have this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11421#issuecomment-1257762156
https://github.com/root-project/root/pull/11466#issuecomment-1359215581:256,Deployability,update,updated,256,"This PR has been rebased and simplified to leverage the changes introduced by #11828. Accessing single pages that are remotely caged is now unsupported unless page buffering is enabled as a source option (which is by default the case). More details in the updated PR description. The change precludes storing the cage sizes in metadata or upper-bounding it in `RPageSourceDaos`, though it constrains that the entire page-group is requested and fetched - as the allocated buffer size for a cage depends on the sum of all the compressed sizes stored in the individual locators of requested pages belonging to that cage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466#issuecomment-1359215581
https://github.com/root-project/root/pull/11466#issuecomment-1359215581:461,Energy Efficiency,allocate,allocated,461,"This PR has been rebased and simplified to leverage the changes introduced by #11828. Accessing single pages that are remotely caged is now unsupported unless page buffering is enabled as a source option (which is by default the case). More details in the updated PR description. The change precludes storing the cage sizes in metadata or upper-bounding it in `RPageSourceDaos`, though it constrains that the entire page-group is requested and fetched - as the allocated buffer size for a cage depends on the sum of all the compressed sizes stored in the individual locators of requested pages belonging to that cage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466#issuecomment-1359215581
https://github.com/root-project/root/pull/11466#issuecomment-1359215581:494,Integrability,depend,depends,494,"This PR has been rebased and simplified to leverage the changes introduced by #11828. Accessing single pages that are remotely caged is now unsupported unless page buffering is enabled as a source option (which is by default the case). More details in the updated PR description. The change precludes storing the cage sizes in metadata or upper-bounding it in `RPageSourceDaos`, though it constrains that the entire page-group is requested and fetched - as the allocated buffer size for a cage depends on the sum of all the compressed sizes stored in the individual locators of requested pages belonging to that cage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466#issuecomment-1359215581
https://github.com/root-project/root/pull/11466#issuecomment-1359215581:29,Usability,simpl,simplified,29,"This PR has been rebased and simplified to leverage the changes introduced by #11828. Accessing single pages that are remotely caged is now unsupported unless page buffering is enabled as a source option (which is by default the case). More details in the updated PR description. The change precludes storing the cage sizes in metadata or upper-bounding it in `RPageSourceDaos`, though it constrains that the entire page-group is requested and fetched - as the allocated buffer size for a cage depends on the sum of all the compressed sizes stored in the individual locators of requested pages belonging to that cage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11466#issuecomment-1359215581
https://github.com/root-project/root/pull/11480#issuecomment-1312341311:172,Availability,avail,available,172,"Thank you @jalopezg-r00t :partying_face: I'll rebase the commits shortly and a bit indiscriminately. > I would just suggest testing it again on `olsky-03` or similar, when available. All clear on our (thankfully operational) HPE cluster with daos / libdaos 2.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480#issuecomment-1312341311
https://github.com/root-project/root/pull/11480#issuecomment-1312341311:124,Testability,test,testing,124,"Thank you @jalopezg-r00t :partying_face: I'll rebase the commits shortly and a bit indiscriminately. > I would just suggest testing it again on `olsky-03` or similar, when available. All clear on our (thankfully operational) HPE cluster with daos / libdaos 2.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480#issuecomment-1312341311
https://github.com/root-project/root/pull/11480#issuecomment-1312341311:187,Usability,clear,clear,187,"Thank you @jalopezg-r00t :partying_face: I'll rebase the commits shortly and a bit indiscriminately. > I would just suggest testing it again on `olsky-03` or similar, when available. All clear on our (thankfully operational) HPE cluster with daos / libdaos 2.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11480#issuecomment-1312341311
https://github.com/root-project/root/pull/11526#issuecomment-1340908063:6,Availability,error,errors,6,"> The errors seen in the CI such as; > ; > ```; > Error in <TFile::TFile>: file /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/roottest/python/distrdf/dask/distrdf_check_friend_trees_alignment_dask_file_1.root/distrdf_check_friend_trees_alignment_dask_tree_1.root does not exist; > ```; > ; > Show that something is wrong with the file names. Notice the double file name above. Probably in the creation of the spec passed to the task-local RDF something is wrong. Hmm that is very strange. I grepped for `distrdf_check_friend_trees_alignment_dask_tree`. It is present only in `python/distrdf/dask/check_friend_trees_alignment.py`. I see that there the chain is created like:; ```py; def create_chain():. main = ROOT.TChain(); for i in range(3):; main.Add(f""{FILENAMES[i]}?#{TREENAMES[i]}""). friend = ROOT.TChain(); for i in range(3, 6):; friend.Add(f""{FILENAMES[i]}?#{TREENAMES[i]}""). main.AddFriend(friend, ""friend""). # import pdb; pdb.set_trace() --> a breakpoint I added. return main; ```; Then calling `df = Dask.RDataFrame(chain, daskclient=connection, npartitions=nparts)`. 1. Is it intentional not to use a spec instead?; 2. From the breakpoint I printed the contents of file and tree names and they looked all file:; ```py; (Pdb) p FILENAMES; ['distrdf_check_friend_trees_alignment_dask_file_1.root', 'distrdf_check_friend_trees_alignment_dask_file_2.root', 'distrdf_check_friend_trees_alignment_dask_file_3.root', 'distrdf_check_friend_trees_alignment_dask_file_4.root', 'distrdf_check_friend_trees_alignment_dask_file_5.root', 'distrdf_check_friend_trees_alignment_dask_file_6.root']; (Pdb) p TREENAMES; ['distrdf_check_friend_trees_alignment_dask_tree_1.root', 'distrdf_check_friend_trees_alignment_dask_tree_2.root', 'distrdf_check_friend_trees_alignment_dask_tree_3.root', 'distrdf_check_friend_trees_alignment_dask_tree_4.root', 'distrdf_check_friend_trees_alignment_dask_tree_5.root', 'distrdf_check_friend_trees_alignment_dask_tree_6.root']; ```; 3. Locally this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11526#issuecomment-1340908063
https://github.com/root-project/root/pull/11526#issuecomment-1340908063:2002,Testability,test,test,2002,"urn main; ```; Then calling `df = Dask.RDataFrame(chain, daskclient=connection, npartitions=nparts)`. 1. Is it intentional not to use a spec instead?; 2. From the breakpoint I printed the contents of file and tree names and they looked all file:; ```py; (Pdb) p FILENAMES; ['distrdf_check_friend_trees_alignment_dask_file_1.root', 'distrdf_check_friend_trees_alignment_dask_file_2.root', 'distrdf_check_friend_trees_alignment_dask_file_3.root', 'distrdf_check_friend_trees_alignment_dask_file_4.root', 'distrdf_check_friend_trees_alignment_dask_file_5.root', 'distrdf_check_friend_trees_alignment_dask_file_6.root']; (Pdb) p TREENAMES; ['distrdf_check_friend_trees_alignment_dask_tree_1.root', 'distrdf_check_friend_trees_alignment_dask_tree_2.root', 'distrdf_check_friend_trees_alignment_dask_tree_3.root', 'distrdf_check_friend_trees_alignment_dask_tree_4.root', 'distrdf_check_friend_trees_alignment_dask_tree_5.root', 'distrdf_check_friend_trees_alignment_dask_tree_6.root']; ```; 3. Locally this test fails for me on `s1val = s1.GetValue()`. From pdb I get this stack strace:; ```py; ... > rdf_node = rdf_operation(*in_task_op.args, **in_task_op.kwargs); E cppyy.ll.SegmentationViolation: Template method resolution failed:; E ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Sum(basic_string_view<char,char_traits<char> > columnName = """", double& initValue = RDFDetail::SumReturnType_t<RInferredType>{}) =>; E SegmentationViolation: segfault in C++; program state was reset; E ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Sum(basic_string_view<char,char_traits<char> > columnName = """", double& initValue = RDFDetail::SumReturnType_t<RInferredType>{}) =>; E SegmentationViolation: segfault in C++; program state was reset. ../../../../rb/lib/DistRDF/ComputationGraphGenerator.py:134: SegmentationViolation; ```; This is also what jenkins complains about. I don't clearly see what is wrong. Investigating ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11526#issuecomment-1340908063
https://github.com/root-project/root/pull/11526#issuecomment-1340908063:2957,Usability,clear,clearly,2957,"urn main; ```; Then calling `df = Dask.RDataFrame(chain, daskclient=connection, npartitions=nparts)`. 1. Is it intentional not to use a spec instead?; 2. From the breakpoint I printed the contents of file and tree names and they looked all file:; ```py; (Pdb) p FILENAMES; ['distrdf_check_friend_trees_alignment_dask_file_1.root', 'distrdf_check_friend_trees_alignment_dask_file_2.root', 'distrdf_check_friend_trees_alignment_dask_file_3.root', 'distrdf_check_friend_trees_alignment_dask_file_4.root', 'distrdf_check_friend_trees_alignment_dask_file_5.root', 'distrdf_check_friend_trees_alignment_dask_file_6.root']; (Pdb) p TREENAMES; ['distrdf_check_friend_trees_alignment_dask_tree_1.root', 'distrdf_check_friend_trees_alignment_dask_tree_2.root', 'distrdf_check_friend_trees_alignment_dask_tree_3.root', 'distrdf_check_friend_trees_alignment_dask_tree_4.root', 'distrdf_check_friend_trees_alignment_dask_tree_5.root', 'distrdf_check_friend_trees_alignment_dask_tree_6.root']; ```; 3. Locally this test fails for me on `s1val = s1.GetValue()`. From pdb I get this stack strace:; ```py; ... > rdf_node = rdf_operation(*in_task_op.args, **in_task_op.kwargs); E cppyy.ll.SegmentationViolation: Template method resolution failed:; E ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Sum(basic_string_view<char,char_traits<char> > columnName = """", double& initValue = RDFDetail::SumReturnType_t<RInferredType>{}) =>; E SegmentationViolation: segfault in C++; program state was reset; E ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Sum(basic_string_view<char,char_traits<char> > columnName = """", double& initValue = RDFDetail::SumReturnType_t<RInferredType>{}) =>; E SegmentationViolation: segfault in C++; program state was reset. ../../../../rb/lib/DistRDF/ComputationGraphGenerator.py:134: SegmentationViolation; ```; This is also what jenkins complains about. I don't clearly see what is wrong. Investigating ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11526#issuecomment-1340908063
https://github.com/root-project/root/issues/11603#issuecomment-2102644827:122,Usability,clear,clear,122,"The fix seems fine (we are indeed using `fail-on-missing` by default through the spack package). It is still not entirely clear in advance which features require connectivity, and which don't (or even what to do in advance in order to pre-populate the FetchContent locations). There is also confusion with the names of the features: `builtin_` would lead one to think it's provided with the source tree but it isn't, except for `builtin_openui5` where it is the opposite.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603#issuecomment-2102644827
https://github.com/root-project/root/issues/11603#issuecomment-2102765857:249,Deployability,install,install,249,"Cool, good to hear that the PR goes in the right direction then!. > It is still not entirely clear in advance which features require connectivity. All features of builtins that do require network note this in their description:; * https://root.cern/install/build_from_source/#all-build-options; * https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L87. I agree that `builtin_openui5` should explicitly say that it requires network if `OFF`. For the confusing name with `builtin_`, do you have a suggestion to make this clearer? I don't think there are many options there, we meant of course builtin to the ROOT build, not the source tree :slightly_smiling_face: . About the pre-populating of FetchContent locations: I was facing the same problem recently for nix packages. I fixed it in the end by patching the CMake code of ROOT:; https://github.com/NixOS/nixpkgs/pull/308497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603#issuecomment-2102765857
https://github.com/root-project/root/issues/11603#issuecomment-2102765857:833,Deployability,patch,patching,833,"Cool, good to hear that the PR goes in the right direction then!. > It is still not entirely clear in advance which features require connectivity. All features of builtins that do require network note this in their description:; * https://root.cern/install/build_from_source/#all-build-options; * https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L87. I agree that `builtin_openui5` should explicitly say that it requires network if `OFF`. For the confusing name with `builtin_`, do you have a suggestion to make this clearer? I don't think there are many options there, we meant of course builtin to the ROOT build, not the source tree :slightly_smiling_face: . About the pre-populating of FetchContent locations: I was facing the same problem recently for nix packages. I fixed it in the end by patching the CMake code of ROOT:; https://github.com/NixOS/nixpkgs/pull/308497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603#issuecomment-2102765857
https://github.com/root-project/root/issues/11603#issuecomment-2102765857:93,Usability,clear,clear,93,"Cool, good to hear that the PR goes in the right direction then!. > It is still not entirely clear in advance which features require connectivity. All features of builtins that do require network note this in their description:; * https://root.cern/install/build_from_source/#all-build-options; * https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L87. I agree that `builtin_openui5` should explicitly say that it requires network if `OFF`. For the confusing name with `builtin_`, do you have a suggestion to make this clearer? I don't think there are many options there, we meant of course builtin to the ROOT build, not the source tree :slightly_smiling_face: . About the pre-populating of FetchContent locations: I was facing the same problem recently for nix packages. I fixed it in the end by patching the CMake code of ROOT:; https://github.com/NixOS/nixpkgs/pull/308497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603#issuecomment-2102765857
https://github.com/root-project/root/issues/11603#issuecomment-2102765857:554,Usability,clear,clearer,554,"Cool, good to hear that the PR goes in the right direction then!. > It is still not entirely clear in advance which features require connectivity. All features of builtins that do require network note this in their description:; * https://root.cern/install/build_from_source/#all-build-options; * https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L87. I agree that `builtin_openui5` should explicitly say that it requires network if `OFF`. For the confusing name with `builtin_`, do you have a suggestion to make this clearer? I don't think there are many options there, we meant of course builtin to the ROOT build, not the source tree :slightly_smiling_face: . About the pre-populating of FetchContent locations: I was facing the same problem recently for nix packages. I fixed it in the end by patching the CMake code of ROOT:; https://github.com/NixOS/nixpkgs/pull/308497",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11603#issuecomment-2102765857
https://github.com/root-project/root/pull/11614#issuecomment-1305640008:53,Availability,error,error,53,"It is more tricky than I thought. Actually I see the error ""sometimes"" on fresh builds only. That's not clear yet ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11614#issuecomment-1305640008
https://github.com/root-project/root/pull/11614#issuecomment-1305640008:104,Usability,clear,clear,104,"It is more tricky than I thought. Actually I see the error ""sometimes"" on fresh builds only. That's not clear yet ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11614#issuecomment-1305640008
https://github.com/root-project/root/issues/11624#issuecomment-1293743624:3212,Availability,error,error,3212," modes and joins across rather heterogenous datasets. This can make things much easier in the case that, for instance, some random machine learning tool cannot output root files but can produce some other usefully structured data format. . *** - The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of friends in TTree/RNtuple, which is limiting in scope for what is possible for dataset augmentation. Moreover, this allows the definition of left/right/inner/outer joins at the metadata level which is extremely useful for understanding how that additional data is intended to be used (are you just augmenting the number of columns in the dataset, are you x-referencing two datasets, etc.). It is then up to the system ingesting this data to implement the join specified by the user correctly (which can be tested for). For the second *** reference, this is also a restriction of your program, not the metadata, an error should be thrown by whatever is executing and cannot handle a case rather than restricting concepts for describing a dataset. Furthermore, going to joins as a metadata concept allows the user to specify an entire dataset for a join rather than individual files, resulting in significant reduction of doubly-bookkept data. . Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user (since it is often the case they will want to run over a limited piece of the data to test things and then run over the full dataset). Re-writing the metadata on each run would get cumbersome quickly. To take all this and mutate your original suggestion (I haven't defined all the types but hopefully it's intelligible):; ```; {; ""datasets"":{; ""dataset"":{; ""treenames"": Union[List[String], String],; ""files"": List[String],; ""friends"":{; ""treenames"": Union[List[String], String],; ""files"": List[String],; ""joinType"": One",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624
https://github.com/root-project/root/issues/11624#issuecomment-1293743624:792,Integrability,depend,depending,792,"Hi - this is an excellent start but I'd like to offer a few considerations given that not everyone uses root files these days. Specifically, friend trees are not a widely accepted concept outside of TTrees and RNtuple. It is, however, easy to abstract away from this so that this metadata specification is more universal. In coffea, we didn't go all the way to formalizing it in a schema since there are many details but you can see the basic validation we do here:; https://github.com/CoffeaTeam/coffea/blob/master/coffea/processor/executor.py#L1353; We allow forms like:; ```; fileset = { ""dataset"" : [""some"", ""list"", ""of"", ""files""], ...}; # and; fileset = { ""dataset"": { ""files"": [""file1"", ""file2"", ...], ""treename"": ""Events"", ""metadata"": { ""stuff"": ""about stuff""}, ...}, { .... } }; ```; depending on user need.; I think optional and union types are very convenient here since not every user will need or want to specify all components of the full schema on each use (but uniformizing the description when needed is very important). . To repeat from above here is the suggested metadata requirements (with annotations).; """"""; This new standard schema should support a few key features of the definition of a dataset:. * Specify groups of several input files, each with associated metadata; * Decide what term to use instead of ""groups"" (dataset is probably best); * Cover TTree but plan for RNTuple support (metadata should not care about file formats, your program does); * Should support friend trees per group *** (see below); * Should support entry ranges per group (why? this makes little operational sense from the POV of an analyst); * No indexed friend trees (at least for now) *** (also); """"""; This specification of requirements mixes things that are describing the data (metadata) and and how to react to it (something in a program, not part of the schema). I believe a clean factorization along these lines is very important to creating a well-adopted schema if you intend to develop a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624
https://github.com/root-project/root/issues/11624#issuecomment-1293743624:443,Security,validat,validation,443,"Hi - this is an excellent start but I'd like to offer a few considerations given that not everyone uses root files these days. Specifically, friend trees are not a widely accepted concept outside of TTrees and RNtuple. It is, however, easy to abstract away from this so that this metadata specification is more universal. In coffea, we didn't go all the way to formalizing it in a schema since there are many details but you can see the basic validation we do here:; https://github.com/CoffeaTeam/coffea/blob/master/coffea/processor/executor.py#L1353; We allow forms like:; ```; fileset = { ""dataset"" : [""some"", ""list"", ""of"", ""files""], ...}; # and; fileset = { ""dataset"": { ""files"": [""file1"", ""file2"", ...], ""treename"": ""Events"", ""metadata"": { ""stuff"": ""about stuff""}, ...}, { .... } }; ```; depending on user need.; I think optional and union types are very convenient here since not every user will need or want to specify all components of the full schema on each use (but uniformizing the description when needed is very important). . To repeat from above here is the suggested metadata requirements (with annotations).; """"""; This new standard schema should support a few key features of the definition of a dataset:. * Specify groups of several input files, each with associated metadata; * Decide what term to use instead of ""groups"" (dataset is probably best); * Cover TTree but plan for RNTuple support (metadata should not care about file formats, your program does); * Should support friend trees per group *** (see below); * Should support entry ranges per group (why? this makes little operational sense from the POV of an analyst); * No indexed friend trees (at least for now) *** (also); """"""; This specification of requirements mixes things that are describing the data (metadata) and and how to react to it (something in a program, not part of the schema). I believe a clean factorization along these lines is very important to creating a well-adopted schema if you intend to develop a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624
https://github.com/root-project/root/issues/11624#issuecomment-1293743624:3104,Testability,test,tested,3104,"people do use parquet or hdf5 in analysis. Removing those formats as concepts to describe a dataset is rather limiting. Allowing them opens up many possibilities, including mixed modes and joins across rather heterogenous datasets. This can make things much easier in the case that, for instance, some random machine learning tool cannot output root files but can produce some other usefully structured data format. . *** - The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of friends in TTree/RNtuple, which is limiting in scope for what is possible for dataset augmentation. Moreover, this allows the definition of left/right/inner/outer joins at the metadata level which is extremely useful for understanding how that additional data is intended to be used (are you just augmenting the number of columns in the dataset, are you x-referencing two datasets, etc.). It is then up to the system ingesting this data to implement the join specified by the user correctly (which can be tested for). For the second *** reference, this is also a restriction of your program, not the metadata, an error should be thrown by whatever is executing and cannot handle a case rather than restricting concepts for describing a dataset. Furthermore, going to joins as a metadata concept allows the user to specify an entire dataset for a join rather than individual files, resulting in significant reduction of doubly-bookkept data. . Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user (since it is often the case they will want to run over a limited piece of the data to test things and then run over the full dataset). Re-writing the metadata on each run would get cumbersome quickly. To take all this and mutate your original suggestion (I haven't defined all the types but hopefully it's intelligible):; ```; {; ""datasets"":",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624
https://github.com/root-project/root/issues/11624#issuecomment-1293743624:3797,Testability,test,test,3797,"at concept here rather than the precise concept of friends in TTree/RNtuple, which is limiting in scope for what is possible for dataset augmentation. Moreover, this allows the definition of left/right/inner/outer joins at the metadata level which is extremely useful for understanding how that additional data is intended to be used (are you just augmenting the number of columns in the dataset, are you x-referencing two datasets, etc.). It is then up to the system ingesting this data to implement the join specified by the user correctly (which can be tested for). For the second *** reference, this is also a restriction of your program, not the metadata, an error should be thrown by whatever is executing and cannot handle a case rather than restricting concepts for describing a dataset. Furthermore, going to joins as a metadata concept allows the user to specify an entire dataset for a join rather than individual files, resulting in significant reduction of doubly-bookkept data. . Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user (since it is often the case they will want to run over a limited piece of the data to test things and then run over the full dataset). Re-writing the metadata on each run would get cumbersome quickly. To take all this and mutate your original suggestion (I haven't defined all the types but hopefully it's intelligible):; ```; {; ""datasets"":{; ""dataset"":{; ""treenames"": Union[List[String], String],; ""files"": List[String],; ""friends"":{; ""treenames"": Union[List[String], String],; ""files"": List[String],; ""joinType"": OneOf[""inner"", ""outer"", ""left"", ""right"", ""cross""], #this should just be made into a type; } or List[Dict[As in Single Dict]],; ""metadata"": Optional[Dict[JsonSerialiableAny:JsonSerializableAny]]; },; # ...; },; # other optional values from here on; ""metadata"": Optional[Dict[JsonSerialiableAny:JsonSerialiableAny]]; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624
https://github.com/root-project/root/issues/11624#issuecomment-1293743624:2368,Usability,learn,learning,2368,"r TTree but plan for RNTuple support (metadata should not care about file formats, your program does); * Should support friend trees per group *** (see below); * Should support entry ranges per group (why? this makes little operational sense from the POV of an analyst); * No indexed friend trees (at least for now) *** (also); """"""; This specification of requirements mixes things that are describing the data (metadata) and and how to react to it (something in a program, not part of the schema). I believe a clean factorization along these lines is very important to creating a well-adopted schema if you intend to develop a standard. As to files - it is not very common but people do use parquet or hdf5 in analysis. Removing those formats as concepts to describe a dataset is rather limiting. Allowing them opens up many possibilities, including mixed modes and joins across rather heterogenous datasets. This can make things much easier in the case that, for instance, some random machine learning tool cannot output root files but can produce some other usefully structured data format. . *** - The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of friends in TTree/RNtuple, which is limiting in scope for what is possible for dataset augmentation. Moreover, this allows the definition of left/right/inner/outer joins at the metadata level which is extremely useful for understanding how that additional data is intended to be used (are you just augmenting the number of columns in the dataset, are you x-referencing two datasets, etc.). It is then up to the system ingesting this data to implement the join specified by the user correctly (which can be tested for). For the second *** reference, this is also a restriction of your program, not the metadata, an error should be thrown by whatever is executing and cannot handle a case rather than restricting concepts for describing a dataset. Furthermore, going to joins as",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624
https://github.com/root-project/root/issues/11624#issuecomment-1297411993:4040,Availability,error,error,4040," a large consensus on this information being useful when written at the datasets/samples level. I also agree with you that an entry range is usually specified when testing before running the full thing. Nonetheless, the important part of this feature was the ability to tie a specific entry range to a specific dataset/sample and not to the global dataset, so that even when testing at least N entries from each dataset/sample would be processed. If this is not specified when definining the dataset metadata, then I suppose we should expose some API like:. ```python; entry_ranges = [(0,1000), (50000, 60000)] # taken from my initial specification example; df = RDataFrame(...); df.SetEntryRanges(entry_ranges); ```; And similarly for coffea and other frameworks. What I don't like about this is that I need to remember how many datasets/samples I have in my specification so that `len(entry_ranges)` corresponds to that number. Of course the tool can error and say ""You have specified too many entry ranges, please use only N"", maybe that's good enough but I'm not sure. One other comment could be that we don't need to have exactly one entry range per dataset/sample, maybe some datasets just need to be processed fully. But the API from above would not be able to distinguish whether the user actually didn't want to provide an entry range for a certain dataset or just forgot how many datasets were there. How would you address this part?. > To take all this and mutate your original suggestion. Thanks for taking the time to include this example. I am happy that you agree on having a single top-level key ""datasets"" in which all the various datasets can be defined. I think this opens possibilities to use the rest of the JSON file for describing more parts of the analysis while not touching the dataset specification. I just wanted to ask you a clarification regarding the type `List[Dict[As in Single Dict]]` mentioned in the ""friends"" key. This is practically saying that instead of a singl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993
https://github.com/root-project/root/issues/11624#issuecomment-1297411993:1501,Deployability,pipeline,pipeline,1501," the other. Do you think we should poll the larger audience at some point, for this and probably other questions? One other option could be just accepting both ""datasets"" and ""samples"" as the top-level key in the JSON object. > Cover TTree but plan for RNTuple support (metadata should not care about file formats, your program does). Indeed, this point was more directed towards us developers rather than user-facing. Metadata will definitely be orthogonal to the data format. > Allowing them opens up many possibilities, including mixed modes and joins across rather heterogenous datasets. This is an interesting comment, something that I hadn't put too much thought into. I think that it is much related with the other comment regarding joins. Mixed modes sounds intriguing although I can't see a clear path for its implementation in the I/O layer, rather we may be better off doing this at the analysis tool layer directly. In general, the usecase of reading the output of some ML pipeline during the execution of the analysis is definitely something we want to address. For what concerns this specification, the easy part is just deciding for something more generic than ""treenames"" when specifying these other data formats; the trickier part is deciding how these other input data should be read. See the next comment for more discussion about this. > The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of friends in TTree/RNtuple. Yes I agree we can describe adding more columns to the main dataset as a join, with the implicit but crucial clarification that it is a view on the join operation and not a concrete join operation that would involve copying the two operands. With this sense, a friend TTree is equivalent to a left join where both unique IDs correspond to the event index and are the same number. I completely agree that this is a limit, indexed friends only extend it a little bit by allowing different sets o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993
https://github.com/root-project/root/issues/11624#issuecomment-1297411993:2466,Modifiability,extend,extend,2466,"g the output of some ML pipeline during the execution of the analysis is definitely something we want to address. For what concerns this specification, the easy part is just deciding for something more generic than ""treenames"" when specifying these other data formats; the trickier part is deciding how these other input data should be read. See the next comment for more discussion about this. > The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of friends in TTree/RNtuple. Yes I agree we can describe adding more columns to the main dataset as a join, with the implicit but crucial clarification that it is a view on the join operation and not a concrete join operation that would involve copying the two operands. With this sense, a friend TTree is equivalent to a left join where both unique IDs correspond to the event index and are the same number. I completely agree that this is a limit, indexed friends only extend it a little bit by allowing different sets of event indexes in the two tables. The idea of an heterogeneous dataset layout, with some datasets/samples having to be left-joined and others having to be inner-joined (for example), involves some design work and I would like to discuss it further, although I'd like to get a better idea of the use cases that need any joins other than left join. > Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user. During the meeting a few weeks ago there was quite a large consensus on this information being useful when written at the datasets/samples level. I also agree with you that an entry range is usually specified when testing before running the full thing. Nonetheless, the important part of this feature was the ability to tie a specific entry range to a specific dataset/sample and not to the global dataset, so that even when testing at leas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993
https://github.com/root-project/root/issues/11624#issuecomment-1297411993:212,Security,validat,validation,212,"Dear @lgray,. Thanks a lot for your input! Let me try to comment on the various parts. > I think optional and union types are very convenient here. Absolutely, I agree. Thank you also for the info about the data validation in coffea. The decision on the keys that need a union type should also be part of this formalization effort. > Decide what term to use instead of ""groups"" (dataset is probably best). I see there are these two schools of thought but I cannot grasp how much of the community leans towards one vs the other. Do you think we should poll the larger audience at some point, for this and probably other questions? One other option could be just accepting both ""datasets"" and ""samples"" as the top-level key in the JSON object. > Cover TTree but plan for RNTuple support (metadata should not care about file formats, your program does). Indeed, this point was more directed towards us developers rather than user-facing. Metadata will definitely be orthogonal to the data format. > Allowing them opens up many possibilities, including mixed modes and joins across rather heterogenous datasets. This is an interesting comment, something that I hadn't put too much thought into. I think that it is much related with the other comment regarding joins. Mixed modes sounds intriguing although I can't see a clear path for its implementation in the I/O layer, rather we may be better off doing this at the analysis tool layer directly. In general, the usecase of reading the output of some ML pipeline during the execution of the analysis is definitely something we want to address. For what concerns this specification, the easy part is just deciding for something more generic than ""treenames"" when specifying these other data formats; the trickier part is deciding how these other input data should be read. See the next comment for more discussion about this. > The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of fri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993
https://github.com/root-project/root/issues/11624#issuecomment-1297411993:3622,Security,expose,expose,3622," layout, with some datasets/samples having to be left-joined and others having to be inner-joined (for example), involves some design work and I would like to discuss it further, although I'd like to get a better idea of the use cases that need any joins other than left join. > Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user. During the meeting a few weeks ago there was quite a large consensus on this information being useful when written at the datasets/samples level. I also agree with you that an entry range is usually specified when testing before running the full thing. Nonetheless, the important part of this feature was the ability to tie a specific entry range to a specific dataset/sample and not to the global dataset, so that even when testing at least N entries from each dataset/sample would be processed. If this is not specified when definining the dataset metadata, then I suppose we should expose some API like:. ```python; entry_ranges = [(0,1000), (50000, 60000)] # taken from my initial specification example; df = RDataFrame(...); df.SetEntryRanges(entry_ranges); ```; And similarly for coffea and other frameworks. What I don't like about this is that I need to remember how many datasets/samples I have in my specification so that `len(entry_ranges)` corresponds to that number. Of course the tool can error and say ""You have specified too many entry ranges, please use only N"", maybe that's good enough but I'm not sure. One other comment could be that we don't need to have exactly one entry range per dataset/sample, maybe some datasets just need to be processed fully. But the API from above would not be able to distinguish whether the user actually didn't want to provide an entry range for a certain dataset or just forgot how many datasets were there. How would you address this part?. > To take all this and mutate your original suggestion. T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993
https://github.com/root-project/root/issues/11624#issuecomment-1297411993:3251,Testability,test,testing,3251,"olve copying the two operands. With this sense, a friend TTree is equivalent to a left join where both unique IDs correspond to the event index and are the same number. I completely agree that this is a limit, indexed friends only extend it a little bit by allowing different sets of event indexes in the two tables. The idea of an heterogeneous dataset layout, with some datasets/samples having to be left-joined and others having to be inner-joined (for example), involves some design work and I would like to discuss it further, although I'd like to get a better idea of the use cases that need any joins other than left join. > Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user. During the meeting a few weeks ago there was quite a large consensus on this information being useful when written at the datasets/samples level. I also agree with you that an entry range is usually specified when testing before running the full thing. Nonetheless, the important part of this feature was the ability to tie a specific entry range to a specific dataset/sample and not to the global dataset, so that even when testing at least N entries from each dataset/sample would be processed. If this is not specified when definining the dataset metadata, then I suppose we should expose some API like:. ```python; entry_ranges = [(0,1000), (50000, 60000)] # taken from my initial specification example; df = RDataFrame(...); df.SetEntryRanges(entry_ranges); ```; And similarly for coffea and other frameworks. What I don't like about this is that I need to remember how many datasets/samples I have in my specification so that `len(entry_ranges)` corresponds to that number. Of course the tool can error and say ""You have specified too many entry ranges, please use only N"", maybe that's good enough but I'm not sure. One other comment could be that we don't need to have exactly one entry rang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993
https://github.com/root-project/root/issues/11624#issuecomment-1297411993:3462,Testability,test,testing,3462,"etely agree that this is a limit, indexed friends only extend it a little bit by allowing different sets of event indexes in the two tables. The idea of an heterogeneous dataset layout, with some datasets/samples having to be left-joined and others having to be inner-joined (for example), involves some design work and I would like to discuss it further, although I'd like to get a better idea of the use cases that need any joins other than left join. > Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user. During the meeting a few weeks ago there was quite a large consensus on this information being useful when written at the datasets/samples level. I also agree with you that an entry range is usually specified when testing before running the full thing. Nonetheless, the important part of this feature was the ability to tie a specific entry range to a specific dataset/sample and not to the global dataset, so that even when testing at least N entries from each dataset/sample would be processed. If this is not specified when definining the dataset metadata, then I suppose we should expose some API like:. ```python; entry_ranges = [(0,1000), (50000, 60000)] # taken from my initial specification example; df = RDataFrame(...); df.SetEntryRanges(entry_ranges); ```; And similarly for coffea and other frameworks. What I don't like about this is that I need to remember how many datasets/samples I have in my specification so that `len(entry_ranges)` corresponds to that number. Of course the tool can error and say ""You have specified too many entry ranges, please use only N"", maybe that's good enough but I'm not sure. One other comment could be that we don't need to have exactly one entry range per dataset/sample, maybe some datasets just need to be processed fully. But the API from above would not be able to distinguish whether the user actually didn't want to pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993
https://github.com/root-project/root/issues/11624#issuecomment-1297411993:1316,Usability,clear,clear,1316,"o use instead of ""groups"" (dataset is probably best). I see there are these two schools of thought but I cannot grasp how much of the community leans towards one vs the other. Do you think we should poll the larger audience at some point, for this and probably other questions? One other option could be just accepting both ""datasets"" and ""samples"" as the top-level key in the JSON object. > Cover TTree but plan for RNTuple support (metadata should not care about file formats, your program does). Indeed, this point was more directed towards us developers rather than user-facing. Metadata will definitely be orthogonal to the data format. > Allowing them opens up many possibilities, including mixed modes and joins across rather heterogenous datasets. This is an interesting comment, something that I hadn't put too much thought into. I think that it is much related with the other comment regarding joins. Mixed modes sounds intriguing although I can't see a clear path for its implementation in the I/O layer, rather we may be better off doing this at the analysis tool layer directly. In general, the usecase of reading the output of some ML pipeline during the execution of the analysis is definitely something we want to address. For what concerns this specification, the easy part is just deciding for something more generic than ""treenames"" when specifying these other data formats; the trickier part is deciding how these other input data should be read. See the next comment for more discussion about this. > The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of friends in TTree/RNtuple. Yes I agree we can describe adding more columns to the main dataset as a join, with the implicit but crucial clarification that it is a view on the join operation and not a concrete join operation that would involve copying the two operands. With this sense, a friend TTree is equivalent to a left join where both unique IDs corr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993
https://github.com/root-project/root/pull/11627#issuecomment-1330826120:380,Deployability,update,update,380,"Ah, no, actually that first part can also be non-increasing, for instance if the reception of tasks on the queue for some reason pauses half way through, so e.g. you could get:; 1 [ reception pauses on queue here ]; 0 [ reception continues now, 2 comes in ]; 2 [ while executing 2, everything else is received ]; 9; 8; 7; 6; ... And that is still valid. I will just push one more update with a refactoring to not have this complicated expectation correction code duplicate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1330826120
https://github.com/root-project/root/pull/11627#issuecomment-1330826120:394,Modifiability,refactor,refactoring,394,"Ah, no, actually that first part can also be non-increasing, for instance if the reception of tasks on the queue for some reason pauses half way through, so e.g. you could get:; 1 [ reception pauses on queue here ]; 0 [ reception continues now, 2 comes in ]; 2 [ while executing 2, everything else is received ]; 9; 8; 7; 6; ... And that is still valid. I will just push one more update with a refactoring to not have this complicated expectation correction code duplicate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1330826120
https://github.com/root-project/root/pull/11627#issuecomment-1330826120:107,Performance,queue,queue,107,"Ah, no, actually that first part can also be non-increasing, for instance if the reception of tasks on the queue for some reason pauses half way through, so e.g. you could get:; 1 [ reception pauses on queue here ]; 0 [ reception continues now, 2 comes in ]; 2 [ while executing 2, everything else is received ]; 9; 8; 7; 6; ... And that is still valid. I will just push one more update with a refactoring to not have this complicated expectation correction code duplicate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1330826120
https://github.com/root-project/root/pull/11627#issuecomment-1330826120:202,Performance,queue,queue,202,"Ah, no, actually that first part can also be non-increasing, for instance if the reception of tasks on the queue for some reason pauses half way through, so e.g. you could get:; 1 [ reception pauses on queue here ]; 0 [ reception continues now, 2 comes in ]; 2 [ while executing 2, everything else is received ]; 9; 8; 7; 6; ... And that is still valid. I will just push one more update with a refactoring to not have this complicated expectation correction code duplicate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1330826120
https://github.com/root-project/root/pull/11627#issuecomment-1330826120:129,Usability,pause,pauses,129,"Ah, no, actually that first part can also be non-increasing, for instance if the reception of tasks on the queue for some reason pauses half way through, so e.g. you could get:; 1 [ reception pauses on queue here ]; 0 [ reception continues now, 2 comes in ]; 2 [ while executing 2, everything else is received ]; 9; 8; 7; 6; ... And that is still valid. I will just push one more update with a refactoring to not have this complicated expectation correction code duplicate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1330826120
https://github.com/root-project/root/pull/11627#issuecomment-1330826120:192,Usability,pause,pauses,192,"Ah, no, actually that first part can also be non-increasing, for instance if the reception of tasks on the queue for some reason pauses half way through, so e.g. you could get:; 1 [ reception pauses on queue here ]; 0 [ reception continues now, 2 comes in ]; 2 [ while executing 2, everything else is received ]; 9; 8; 7; 6; ... And that is still valid. I will just push one more update with a refactoring to not have this complicated expectation correction code duplicate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1330826120
https://github.com/root-project/root/issues/11629#issuecomment-1406573290:188,Availability,failure,failure,188,"And when building with gcc and only asan like:; ```; cmake -DCMAKE_BUILD_TYPE=""Release"" -Dasan=ON -Dtesting=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 /home/linev/git/webgui ; ```; I getting failure by simply starting ROOT: . ```; ==11405==ERROR: AddressSanitizer: use-after-poison on address 0x621000160c68 at pc 0x7fae6dbe9aa1 bp 0x7fff179941b0 sp 0x7fff179941a8; READ of size 8 at 0x621000160c68 thread T0; #0 0x7fae6dbe9aa0 in clang::LookupResult::configure() (/home/linev/build/asan/lib/libCling.so+0x9be9aa0) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); #1 0x7fae66c6d0ec in clad::plugin::CladPlugin::CheckBuiltins() [clone .part.0] (/home/linev/build/asan/lib/libCling.so+0x2c6d0ec) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); ```. Full error output: [start_log.txt](https://github.com/root-project/root/files/10519690/start_log.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629#issuecomment-1406573290
https://github.com/root-project/root/issues/11629#issuecomment-1406573290:758,Availability,error,error,758,"And when building with gcc and only asan like:; ```; cmake -DCMAKE_BUILD_TYPE=""Release"" -Dasan=ON -Dtesting=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 /home/linev/git/webgui ; ```; I getting failure by simply starting ROOT: . ```; ==11405==ERROR: AddressSanitizer: use-after-poison on address 0x621000160c68 at pc 0x7fae6dbe9aa1 bp 0x7fff179941b0 sp 0x7fff179941a8; READ of size 8 at 0x621000160c68 thread T0; #0 0x7fae6dbe9aa0 in clang::LookupResult::configure() (/home/linev/build/asan/lib/libCling.so+0x9be9aa0) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); #1 0x7fae66c6d0ec in clad::plugin::CladPlugin::CheckBuiltins() [clone .part.0] (/home/linev/build/asan/lib/libCling.so+0x2c6d0ec) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); ```. Full error output: [start_log.txt](https://github.com/root-project/root/files/10519690/start_log.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629#issuecomment-1406573290
https://github.com/root-project/root/issues/11629#issuecomment-1406573290:449,Modifiability,config,configure,449,"And when building with gcc and only asan like:; ```; cmake -DCMAKE_BUILD_TYPE=""Release"" -Dasan=ON -Dtesting=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 /home/linev/git/webgui ; ```; I getting failure by simply starting ROOT: . ```; ==11405==ERROR: AddressSanitizer: use-after-poison on address 0x621000160c68 at pc 0x7fae6dbe9aa1 bp 0x7fff179941b0 sp 0x7fff179941a8; READ of size 8 at 0x621000160c68 thread T0; #0 0x7fae6dbe9aa0 in clang::LookupResult::configure() (/home/linev/build/asan/lib/libCling.so+0x9be9aa0) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); #1 0x7fae66c6d0ec in clad::plugin::CladPlugin::CheckBuiltins() [clone .part.0] (/home/linev/build/asan/lib/libCling.so+0x2c6d0ec) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); ```. Full error output: [start_log.txt](https://github.com/root-project/root/files/10519690/start_log.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629#issuecomment-1406573290
https://github.com/root-project/root/issues/11629#issuecomment-1406573290:592,Modifiability,plugin,plugin,592,"And when building with gcc and only asan like:; ```; cmake -DCMAKE_BUILD_TYPE=""Release"" -Dasan=ON -Dtesting=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 /home/linev/git/webgui ; ```; I getting failure by simply starting ROOT: . ```; ==11405==ERROR: AddressSanitizer: use-after-poison on address 0x621000160c68 at pc 0x7fae6dbe9aa1 bp 0x7fff179941b0 sp 0x7fff179941a8; READ of size 8 at 0x621000160c68 thread T0; #0 0x7fae6dbe9aa0 in clang::LookupResult::configure() (/home/linev/build/asan/lib/libCling.so+0x9be9aa0) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); #1 0x7fae66c6d0ec in clad::plugin::CladPlugin::CheckBuiltins() [clone .part.0] (/home/linev/build/asan/lib/libCling.so+0x2c6d0ec) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); ```. Full error output: [start_log.txt](https://github.com/root-project/root/files/10519690/start_log.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629#issuecomment-1406573290
https://github.com/root-project/root/issues/11629#issuecomment-1406573290:199,Usability,simpl,simply,199,"And when building with gcc and only asan like:; ```; cmake -DCMAKE_BUILD_TYPE=""Release"" -Dasan=ON -Dtesting=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 /home/linev/git/webgui ; ```; I getting failure by simply starting ROOT: . ```; ==11405==ERROR: AddressSanitizer: use-after-poison on address 0x621000160c68 at pc 0x7fae6dbe9aa1 bp 0x7fff179941b0 sp 0x7fff179941a8; READ of size 8 at 0x621000160c68 thread T0; #0 0x7fae6dbe9aa0 in clang::LookupResult::configure() (/home/linev/build/asan/lib/libCling.so+0x9be9aa0) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); #1 0x7fae66c6d0ec in clad::plugin::CladPlugin::CheckBuiltins() [clone .part.0] (/home/linev/build/asan/lib/libCling.so+0x2c6d0ec) (BuildId: b992d84f780d9cdfaac57feecd814f7d11e56300); ```. Full error output: [start_log.txt](https://github.com/root-project/root/files/10519690/start_log.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11629#issuecomment-1406573290
https://github.com/root-project/root/issues/11637#issuecomment-1297108209:1112,Deployability,release,release,1112,"The issue in CMSSW is fixed now by just not doing a ranged fit, but in ROOT master this performance regression still needs to be fixed. Here is a simple reproducer for the problem, with the code extracted from the CMSSW source linked in the initial post:; ```c++; void script(); {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 10);. RooRealVar mean(""mu"", """", 5.0, 0, 10);; RooRealVar width(""width"", """", 1.0, 0.1, 10);; RooRealVar sigma(""sigma"", """", 2.0, 0.1, 10);; RooVoigtian voigt(""voigt"", """", x, mean, width, sigma);. RooRealVar lambda(""lambda"", """", -0.01, -100., 1.);; RooExponential expo(""expo"", """", x, lambda);. RooRealVar b(""n_bkg"", """", 100., 0, 1000);; RooRealVar s(""n_sig"", """", 1000., 0, 10000);. RooAddPdf model(""model"", """", {voigt, expo}, {s, b});. std::unique_ptr<RooDataSet> data{model.generate(x)};. model.fitTo(*data, Range(0.0, 10.0), PrintLevel(-1));; }; ```. Most likely, this issue was caused by https://github.com/root-project/root/pull/11455. I set the priority to `high` now, because this is a regression that also affects experiment workflows and it needs to be fixed before the 6.28 release for sure! Therefore, this issue is also added to the 6.28 milestone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1297108209
https://github.com/root-project/root/issues/11637#issuecomment-1297108209:88,Performance,perform,performance,88,"The issue in CMSSW is fixed now by just not doing a ranged fit, but in ROOT master this performance regression still needs to be fixed. Here is a simple reproducer for the problem, with the code extracted from the CMSSW source linked in the initial post:; ```c++; void script(); {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 10);. RooRealVar mean(""mu"", """", 5.0, 0, 10);; RooRealVar width(""width"", """", 1.0, 0.1, 10);; RooRealVar sigma(""sigma"", """", 2.0, 0.1, 10);; RooVoigtian voigt(""voigt"", """", x, mean, width, sigma);. RooRealVar lambda(""lambda"", """", -0.01, -100., 1.);; RooExponential expo(""expo"", """", x, lambda);. RooRealVar b(""n_bkg"", """", 100., 0, 1000);; RooRealVar s(""n_sig"", """", 1000., 0, 10000);. RooAddPdf model(""model"", """", {voigt, expo}, {s, b});. std::unique_ptr<RooDataSet> data{model.generate(x)};. model.fitTo(*data, Range(0.0, 10.0), PrintLevel(-1));; }; ```. Most likely, this issue was caused by https://github.com/root-project/root/pull/11455. I set the priority to `high` now, because this is a regression that also affects experiment workflows and it needs to be fixed before the 6.28 release for sure! Therefore, this issue is also added to the 6.28 milestone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1297108209
https://github.com/root-project/root/issues/11637#issuecomment-1297108209:146,Usability,simpl,simple,146,"The issue in CMSSW is fixed now by just not doing a ranged fit, but in ROOT master this performance regression still needs to be fixed. Here is a simple reproducer for the problem, with the code extracted from the CMSSW source linked in the initial post:; ```c++; void script(); {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 10);. RooRealVar mean(""mu"", """", 5.0, 0, 10);; RooRealVar width(""width"", """", 1.0, 0.1, 10);; RooRealVar sigma(""sigma"", """", 2.0, 0.1, 10);; RooVoigtian voigt(""voigt"", """", x, mean, width, sigma);. RooRealVar lambda(""lambda"", """", -0.01, -100., 1.);; RooExponential expo(""expo"", """", x, lambda);. RooRealVar b(""n_bkg"", """", 100., 0, 1000);; RooRealVar s(""n_sig"", """", 1000., 0, 10000);. RooAddPdf model(""model"", """", {voigt, expo}, {s, b});. std::unique_ptr<RooDataSet> data{model.generate(x)};. model.fitTo(*data, Range(0.0, 10.0), PrintLevel(-1));; }; ```. Most likely, this issue was caused by https://github.com/root-project/root/pull/11455. I set the priority to `high` now, because this is a regression that also affects experiment workflows and it needs to be fixed before the 6.28 release for sure! Therefore, this issue is also added to the 6.28 milestone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1297108209
https://github.com/root-project/root/issues/11637#issuecomment-1297295506:21,Availability,down,down,21,"I narrowed the issue down to a more simple reproducer:; ```C++; void script(); {; RooRealVar x{""x"", """", -10, 10};; x.setRange(""fit"", 0, 10);. RooGenericPdf gauss{""gauss"", ""std::exp(-0.5 * (x*x))"", x};; RooRealVar s{""n_sig"", """", 1000., 0, 10000};; RooAddPdf model{""model"", """", {gauss}, {s}};. std::unique_ptr<RooDataSet> data{model.generate(x)};. // Comment this out and it is fast again; model.setNormRange(""fit"");. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. for(std::size_t i = 0; i < 1000; ++i) {; s.setVal(s.getVal() + (i % 2 ? +1 : -1));; nll->getVal();; }; }; ```. The problem might have something to do with the old test statistics, because if you use the new BatchMode things are going fine. Probably, the dirty flags to the integral are propagated wrongly, causing a numeric integral to be computed for each event.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1297295506
https://github.com/root-project/root/issues/11637#issuecomment-1297295506:637,Testability,test,test,637,"I narrowed the issue down to a more simple reproducer:; ```C++; void script(); {; RooRealVar x{""x"", """", -10, 10};; x.setRange(""fit"", 0, 10);. RooGenericPdf gauss{""gauss"", ""std::exp(-0.5 * (x*x))"", x};; RooRealVar s{""n_sig"", """", 1000., 0, 10000};; RooAddPdf model{""model"", """", {gauss}, {s}};. std::unique_ptr<RooDataSet> data{model.generate(x)};. // Comment this out and it is fast again; model.setNormRange(""fit"");. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. for(std::size_t i = 0; i < 1000; ++i) {; s.setVal(s.getVal() + (i % 2 ? +1 : -1));; nll->getVal();; }; }; ```. The problem might have something to do with the old test statistics, because if you use the new BatchMode things are going fine. Probably, the dirty flags to the integral are propagated wrongly, causing a numeric integral to be computed for each event.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1297295506
https://github.com/root-project/root/issues/11637#issuecomment-1297295506:36,Usability,simpl,simple,36,"I narrowed the issue down to a more simple reproducer:; ```C++; void script(); {; RooRealVar x{""x"", """", -10, 10};; x.setRange(""fit"", 0, 10);. RooGenericPdf gauss{""gauss"", ""std::exp(-0.5 * (x*x))"", x};; RooRealVar s{""n_sig"", """", 1000., 0, 10000};; RooAddPdf model{""model"", """", {gauss}, {s}};. std::unique_ptr<RooDataSet> data{model.generate(x)};. // Comment this out and it is fast again; model.setNormRange(""fit"");. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. for(std::size_t i = 0; i < 1000; ++i) {; s.setVal(s.getVal() + (i % 2 ? +1 : -1));; nll->getVal();; }; }; ```. The problem might have something to do with the old test statistics, because if you use the new BatchMode things are going fine. Probably, the dirty flags to the integral are propagated wrongly, causing a numeric integral to be computed for each event.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1297295506
https://github.com/root-project/root/pull/11644#issuecomment-1308989870:98,Testability,test,test,98,"Thanks, @pcanal. I will move the code. Hopefully after that we can merge. I also had a request to test this “across the ocean”, so if you could try to compare before/after by running something simple using data at CERN (or let me know of a file publicly avaiable via XRootD in Fermilab or other location in the US), I would appreciate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1308989870
https://github.com/root-project/root/pull/11644#issuecomment-1308989870:193,Usability,simpl,simple,193,"Thanks, @pcanal. I will move the code. Hopefully after that we can merge. I also had a request to test this “across the ocean”, so if you could try to compare before/after by running something simple using data at CERN (or let me know of a file publicly avaiable via XRootD in Fermilab or other location in the US), I would appreciate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1308989870
https://github.com/root-project/root/pull/11644#issuecomment-1309267711:189,Security,certificate,certificate,189,> so if you could try to compare before/after by running something simple using data at CERN. CMS currently does not mount CERN's eos through fuse at FNAL and does not export (without grid certificate) any data.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1309267711
https://github.com/root-project/root/pull/11644#issuecomment-1309267711:67,Usability,simpl,simple,67,> so if you could try to compare before/after by running something simple using data at CERN. CMS currently does not mount CERN's eos through fuse at FNAL and does not export (without grid certificate) any data.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1309267711
https://github.com/root-project/root/pull/11650#issuecomment-1330379864:21,Testability,test,tests,21,"Right, of course the tests are correctly failing now where they still use `Offset` for the `NewStyle` likelihoods :). We should probably do two things to finish this PR:; 1. Add a test somewhere (I guess `testLikelihoodGradientJob.cxx` is as good a place as any) that fails when creating a likelihood with the two arguments together. The test can simply check whether the output of `createNLL` is `0`.; 2. Remove `Offset` from the `NewStyle` likelihood creation lines. _Side note:_ I think it would be much better if [`createNLL` just throws here](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1032) instead of returning zero and causing segfaults along the way. But this is probably an issue for a different PR. Would probably be good to run by Wouter to make sure there are no valid usecases of returning a `nullptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11650#issuecomment-1330379864
https://github.com/root-project/root/pull/11650#issuecomment-1330379864:180,Testability,test,test,180,"Right, of course the tests are correctly failing now where they still use `Offset` for the `NewStyle` likelihoods :). We should probably do two things to finish this PR:; 1. Add a test somewhere (I guess `testLikelihoodGradientJob.cxx` is as good a place as any) that fails when creating a likelihood with the two arguments together. The test can simply check whether the output of `createNLL` is `0`.; 2. Remove `Offset` from the `NewStyle` likelihood creation lines. _Side note:_ I think it would be much better if [`createNLL` just throws here](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1032) instead of returning zero and causing segfaults along the way. But this is probably an issue for a different PR. Would probably be good to run by Wouter to make sure there are no valid usecases of returning a `nullptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11650#issuecomment-1330379864
https://github.com/root-project/root/pull/11650#issuecomment-1330379864:205,Testability,test,testLikelihoodGradientJob,205,"Right, of course the tests are correctly failing now where they still use `Offset` for the `NewStyle` likelihoods :). We should probably do two things to finish this PR:; 1. Add a test somewhere (I guess `testLikelihoodGradientJob.cxx` is as good a place as any) that fails when creating a likelihood with the two arguments together. The test can simply check whether the output of `createNLL` is `0`.; 2. Remove `Offset` from the `NewStyle` likelihood creation lines. _Side note:_ I think it would be much better if [`createNLL` just throws here](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1032) instead of returning zero and causing segfaults along the way. But this is probably an issue for a different PR. Would probably be good to run by Wouter to make sure there are no valid usecases of returning a `nullptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11650#issuecomment-1330379864
https://github.com/root-project/root/pull/11650#issuecomment-1330379864:338,Testability,test,test,338,"Right, of course the tests are correctly failing now where they still use `Offset` for the `NewStyle` likelihoods :). We should probably do two things to finish this PR:; 1. Add a test somewhere (I guess `testLikelihoodGradientJob.cxx` is as good a place as any) that fails when creating a likelihood with the two arguments together. The test can simply check whether the output of `createNLL` is `0`.; 2. Remove `Offset` from the `NewStyle` likelihood creation lines. _Side note:_ I think it would be much better if [`createNLL` just throws here](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1032) instead of returning zero and causing segfaults along the way. But this is probably an issue for a different PR. Would probably be good to run by Wouter to make sure there are no valid usecases of returning a `nullptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11650#issuecomment-1330379864
https://github.com/root-project/root/pull/11650#issuecomment-1330379864:347,Usability,simpl,simply,347,"Right, of course the tests are correctly failing now where they still use `Offset` for the `NewStyle` likelihoods :). We should probably do two things to finish this PR:; 1. Add a test somewhere (I guess `testLikelihoodGradientJob.cxx` is as good a place as any) that fails when creating a likelihood with the two arguments together. The test can simply check whether the output of `createNLL` is `0`.; 2. Remove `Offset` from the `NewStyle` likelihood creation lines. _Side note:_ I think it would be much better if [`createNLL` just throws here](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1032) instead of returning zero and causing segfaults along the way. But this is probably an issue for a different PR. Would probably be good to run by Wouter to make sure there are no valid usecases of returning a `nullptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11650#issuecomment-1330379864
https://github.com/root-project/root/issues/11699#issuecomment-1312791296:731,Performance,multi-thread,multi-threading,731,"If we enable ORCV2 asynchronous compilation, it is clear we have to enable threading support in LLVM. So the question is whether we do want to enable ORCV2 asynchronous compilation or not, some things to consider:; * cost to all or most (?) of the interpreter calls (which then would likely takes 2 locks instead of one); * risk of dead locks; now that the interpreter takes 2 locks, if there is any way that code that takes the LLVM lock calls code directly or indirectly (via user function or even dlopen) take the ROOT locks then they will be dead locks.; * risk of over-subscribing the CPU (i.e. see the many back and forth in the PPP between the way we setup resource sharing between the experiment framework and the implicit multi-threading). ; * size of the gain; given than most (but indeed not all) compilation are very small, is it worth the costs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11699#issuecomment-1312791296
https://github.com/root-project/root/issues/11699#issuecomment-1312791296:324,Safety,risk,risk,324,"If we enable ORCV2 asynchronous compilation, it is clear we have to enable threading support in LLVM. So the question is whether we do want to enable ORCV2 asynchronous compilation or not, some things to consider:; * cost to all or most (?) of the interpreter calls (which then would likely takes 2 locks instead of one); * risk of dead locks; now that the interpreter takes 2 locks, if there is any way that code that takes the LLVM lock calls code directly or indirectly (via user function or even dlopen) take the ROOT locks then they will be dead locks.; * risk of over-subscribing the CPU (i.e. see the many back and forth in the PPP between the way we setup resource sharing between the experiment framework and the implicit multi-threading). ; * size of the gain; given than most (but indeed not all) compilation are very small, is it worth the costs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11699#issuecomment-1312791296
https://github.com/root-project/root/issues/11699#issuecomment-1312791296:561,Safety,risk,risk,561,"If we enable ORCV2 asynchronous compilation, it is clear we have to enable threading support in LLVM. So the question is whether we do want to enable ORCV2 asynchronous compilation or not, some things to consider:; * cost to all or most (?) of the interpreter calls (which then would likely takes 2 locks instead of one); * risk of dead locks; now that the interpreter takes 2 locks, if there is any way that code that takes the LLVM lock calls code directly or indirectly (via user function or even dlopen) take the ROOT locks then they will be dead locks.; * risk of over-subscribing the CPU (i.e. see the many back and forth in the PPP between the way we setup resource sharing between the experiment framework and the implicit multi-threading). ; * size of the gain; given than most (but indeed not all) compilation are very small, is it worth the costs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11699#issuecomment-1312791296
https://github.com/root-project/root/issues/11699#issuecomment-1312791296:51,Usability,clear,clear,51,"If we enable ORCV2 asynchronous compilation, it is clear we have to enable threading support in LLVM. So the question is whether we do want to enable ORCV2 asynchronous compilation or not, some things to consider:; * cost to all or most (?) of the interpreter calls (which then would likely takes 2 locks instead of one); * risk of dead locks; now that the interpreter takes 2 locks, if there is any way that code that takes the LLVM lock calls code directly or indirectly (via user function or even dlopen) take the ROOT locks then they will be dead locks.; * risk of over-subscribing the CPU (i.e. see the many back and forth in the PPP between the way we setup resource sharing between the experiment framework and the implicit multi-threading). ; * size of the gain; given than most (but indeed not all) compilation are very small, is it worth the costs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11699#issuecomment-1312791296
https://github.com/root-project/root/issues/11707#issuecomment-1315410117:713,Availability,error,error,713,"I do not get this crash:; ```; % root -l main.cpp ; root [0] ; Processing main.cpp...; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 15 2022, 10:28:34 |; | From heads/master@v6-25-02-2747-g7a90392f2a |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; ```; For me, on Mac, it is protected. Seems to me the error is not cryptic at all. It makes it clear that `main()` already exists.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315410117
https://github.com/root-project/root/issues/11707#issuecomment-1315410117:754,Usability,clear,clear,754,"I do not get this crash:; ```; % root -l main.cpp ; root [0] ; Processing main.cpp...; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 15 2022, 10:28:34 |; | From heads/master@v6-25-02-2747-g7a90392f2a |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; ```; For me, on Mac, it is protected. Seems to me the error is not cryptic at all. It makes it clear that `main()` already exists.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315410117
https://github.com/root-project/root/issues/11707#issuecomment-1315414134:18,Availability,error,error,18,"> Seems to me the error is not cryptic at all. It makes it clear that `main()` already exists. Newbie users do not know what TApplication is, and how that should be related with main(). See https://stackoverflow.com/questions/74247557/warning-failed-to-call-main-to-execute-the-macro/74445395#74445395",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315414134
https://github.com/root-project/root/issues/11707#issuecomment-1315414134:59,Usability,clear,clear,59,"> Seems to me the error is not cryptic at all. It makes it clear that `main()` already exists. Newbie users do not know what TApplication is, and how that should be related with main(). See https://stackoverflow.com/questions/74247557/warning-failed-to-call-main-to-execute-the-macro/74445395#74445395",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315414134
https://github.com/root-project/root/issues/11707#issuecomment-1315426448:200,Availability,error,error,200,Maybe it can be made more clear but the message comes from [here](https://github.com/root-project/root/blob/bd200315c50ac1520f75f959a852c6d3333f8aa9/core/base/src/TApplication.cxx#L147). I guess this error can occur for many more reasons than a macro called `main.cpp`. So it will not be easy to make it clearer there. Maybe @Axel-Naumann or @pcanal can comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315426448
https://github.com/root-project/root/issues/11707#issuecomment-1315426448:40,Integrability,message,message,40,Maybe it can be made more clear but the message comes from [here](https://github.com/root-project/root/blob/bd200315c50ac1520f75f959a852c6d3333f8aa9/core/base/src/TApplication.cxx#L147). I guess this error can occur for many more reasons than a macro called `main.cpp`. So it will not be easy to make it clearer there. Maybe @Axel-Naumann or @pcanal can comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315426448
https://github.com/root-project/root/issues/11707#issuecomment-1315426448:26,Usability,clear,clear,26,Maybe it can be made more clear but the message comes from [here](https://github.com/root-project/root/blob/bd200315c50ac1520f75f959a852c6d3333f8aa9/core/base/src/TApplication.cxx#L147). I guess this error can occur for many more reasons than a macro called `main.cpp`. So it will not be easy to make it clearer there. Maybe @Axel-Naumann or @pcanal can comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315426448
https://github.com/root-project/root/issues/11707#issuecomment-1315426448:304,Usability,clear,clearer,304,Maybe it can be made more clear but the message comes from [here](https://github.com/root-project/root/blob/bd200315c50ac1520f75f959a852c6d3333f8aa9/core/base/src/TApplication.cxx#L147). I guess this error can occur for many more reasons than a macro called `main.cpp`. So it will not be easy to make it clearer there. Maybe @Axel-Naumann or @pcanal can comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315426448
https://github.com/root-project/root/pull/11731#issuecomment-1334547546:101,Availability,avail,available,101,"> I think we need to think about mapping and the view interface, which uses `RField<T>::Map()` where available. I'd be in favor of ignoring read callbacks for mapping. Mapping should be the interface to get the fastest possible performance. Of course, that would break views on simple types with read callback. One way to deal with it is to simply not allow creating a view on a field with a mappable type and a read callback. Good point; I agree on that :+1:. However, given that any `RField<T>` instance that has an on-disk field ID set (such as the one internally kept by `RNTupleView`) can be connected to a page source, additional bookkeeping is required somewhere else. (**EDIT:** see the pull request description - everything discussed there)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731#issuecomment-1334547546
https://github.com/root-project/root/pull/11731#issuecomment-1334547546:54,Integrability,interface,interface,54,"> I think we need to think about mapping and the view interface, which uses `RField<T>::Map()` where available. I'd be in favor of ignoring read callbacks for mapping. Mapping should be the interface to get the fastest possible performance. Of course, that would break views on simple types with read callback. One way to deal with it is to simply not allow creating a view on a field with a mappable type and a read callback. Good point; I agree on that :+1:. However, given that any `RField<T>` instance that has an on-disk field ID set (such as the one internally kept by `RNTupleView`) can be connected to a page source, additional bookkeeping is required somewhere else. (**EDIT:** see the pull request description - everything discussed there)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731#issuecomment-1334547546
https://github.com/root-project/root/pull/11731#issuecomment-1334547546:190,Integrability,interface,interface,190,"> I think we need to think about mapping and the view interface, which uses `RField<T>::Map()` where available. I'd be in favor of ignoring read callbacks for mapping. Mapping should be the interface to get the fastest possible performance. Of course, that would break views on simple types with read callback. One way to deal with it is to simply not allow creating a view on a field with a mappable type and a read callback. Good point; I agree on that :+1:. However, given that any `RField<T>` instance that has an on-disk field ID set (such as the one internally kept by `RNTupleView`) can be connected to a page source, additional bookkeeping is required somewhere else. (**EDIT:** see the pull request description - everything discussed there)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731#issuecomment-1334547546
https://github.com/root-project/root/pull/11731#issuecomment-1334547546:228,Performance,perform,performance,228,"> I think we need to think about mapping and the view interface, which uses `RField<T>::Map()` where available. I'd be in favor of ignoring read callbacks for mapping. Mapping should be the interface to get the fastest possible performance. Of course, that would break views on simple types with read callback. One way to deal with it is to simply not allow creating a view on a field with a mappable type and a read callback. Good point; I agree on that :+1:. However, given that any `RField<T>` instance that has an on-disk field ID set (such as the one internally kept by `RNTupleView`) can be connected to a page source, additional bookkeeping is required somewhere else. (**EDIT:** see the pull request description - everything discussed there)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731#issuecomment-1334547546
https://github.com/root-project/root/pull/11731#issuecomment-1334547546:278,Usability,simpl,simple,278,"> I think we need to think about mapping and the view interface, which uses `RField<T>::Map()` where available. I'd be in favor of ignoring read callbacks for mapping. Mapping should be the interface to get the fastest possible performance. Of course, that would break views on simple types with read callback. One way to deal with it is to simply not allow creating a view on a field with a mappable type and a read callback. Good point; I agree on that :+1:. However, given that any `RField<T>` instance that has an on-disk field ID set (such as the one internally kept by `RNTupleView`) can be connected to a page source, additional bookkeeping is required somewhere else. (**EDIT:** see the pull request description - everything discussed there)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731#issuecomment-1334547546
https://github.com/root-project/root/pull/11731#issuecomment-1334547546:341,Usability,simpl,simply,341,"> I think we need to think about mapping and the view interface, which uses `RField<T>::Map()` where available. I'd be in favor of ignoring read callbacks for mapping. Mapping should be the interface to get the fastest possible performance. Of course, that would break views on simple types with read callback. One way to deal with it is to simply not allow creating a view on a field with a mappable type and a read callback. Good point; I agree on that :+1:. However, given that any `RField<T>` instance that has an on-disk field ID set (such as the one internally kept by `RNTupleView`) can be connected to a page source, additional bookkeeping is required somewhere else. (**EDIT:** see the pull request description - everything discussed there)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11731#issuecomment-1334547546
https://github.com/root-project/root/issues/11750#issuecomment-1339375009:10,Usability,simpl,simply,10,Can't you simply use the `-Dbuiltin_xrootd=ON` option?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11750#issuecomment-1339375009
https://github.com/root-project/root/pull/11755#issuecomment-1357810874:37,Security,expose,expose,37,"I think we gain by having in 6.28 to expose this to the users. This will fix issues happening with fits using the `G` option (external gradient) and in addition, will give us more feedback on using an external Hessian computation. This will be certainly useful. ; In addition, the PR, improves significantly the Minuit2/Fumili algorithm, especially for the case of binned likelihood fit. I think also this is worth having in 6.28.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11755#issuecomment-1357810874
https://github.com/root-project/root/pull/11755#issuecomment-1357810874:180,Usability,feedback,feedback,180,"I think we gain by having in 6.28 to expose this to the users. This will fix issues happening with fits using the `G` option (external gradient) and in addition, will give us more feedback on using an external Hessian computation. This will be certainly useful. ; In addition, the PR, improves significantly the Minuit2/Fumili algorithm, especially for the case of binned likelihood fit. I think also this is worth having in 6.28.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11755#issuecomment-1357810874
https://github.com/root-project/root/pull/11782#issuecomment-1327938951:89,Usability,simpl,simpler,89,"> Thanks for noticing, @bellenot! I think that the suggestion should also fix it (and is simpler) 🙂. You're right, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782#issuecomment-1327938951
https://github.com/root-project/root/pull/11782#issuecomment-1327939751:91,Usability,simpl,simpler,91,"> > Thanks for noticing, @bellenot! I think that the suggestion should also fix it (and is simpler) slightly_smiling_face.; > ; > You're right, thanks!. Can we squash the changes in a single commit on merge? Many thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782#issuecomment-1327939751
https://github.com/root-project/root/pull/11782#issuecomment-1327943698:93,Usability,simpl,simpler,93,"> > > Thanks for noticing, @bellenot! I think that the suggestion should also fix it (and is simpler) slightly_smiling_face.; > > ; > > ; > > You're right, thanks!; > ; > Can we squash the changes in a single commit on merge? Many thanks!. Indeed!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782#issuecomment-1327943698
https://github.com/root-project/root/pull/11789#issuecomment-1329220374:209,Usability,simpl,simple,209,"> Another question is if gGeometryLocked should be a member of the TGeoManager and the; > TGeoElement checks via the gGeoManager->SetDefaultUnits(...), but this sure is a change of; > behavior and also not so simple to implement rigorously. It would however bind units to an instance of the TGeoManager. I'm not sure we want to support the complications coming from handling 2 geometries in memory with different systems of units. If we bump into a real use case that cannot live without this, we may change this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789#issuecomment-1329220374
https://github.com/root-project/root/pull/11791#issuecomment-1354447607:249,Testability,test,test,249,"Hi @guitargeek, I've addressed your changes and rebased to master. I've also changed `LogTimings` to `TimingAnalysis` to it is clear that it is different to the existing profiling and allows for a bit more of an in-depth analysis. I did not add the test that you requested yet since I noticed it required some more changes to the `RooFit::MultiProcessing` then simply implementing the test. I am happy to look into this later though, but I think out of the scope of this MR. But for now we have the unit tests of the HeatmapAnalyzer and the ProcessTimer themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791#issuecomment-1354447607
https://github.com/root-project/root/pull/11791#issuecomment-1354447607:385,Testability,test,test,385,"Hi @guitargeek, I've addressed your changes and rebased to master. I've also changed `LogTimings` to `TimingAnalysis` to it is clear that it is different to the existing profiling and allows for a bit more of an in-depth analysis. I did not add the test that you requested yet since I noticed it required some more changes to the `RooFit::MultiProcessing` then simply implementing the test. I am happy to look into this later though, but I think out of the scope of this MR. But for now we have the unit tests of the HeatmapAnalyzer and the ProcessTimer themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791#issuecomment-1354447607
https://github.com/root-project/root/pull/11791#issuecomment-1354447607:504,Testability,test,tests,504,"Hi @guitargeek, I've addressed your changes and rebased to master. I've also changed `LogTimings` to `TimingAnalysis` to it is clear that it is different to the existing profiling and allows for a bit more of an in-depth analysis. I did not add the test that you requested yet since I noticed it required some more changes to the `RooFit::MultiProcessing` then simply implementing the test. I am happy to look into this later though, but I think out of the scope of this MR. But for now we have the unit tests of the HeatmapAnalyzer and the ProcessTimer themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791#issuecomment-1354447607
https://github.com/root-project/root/pull/11791#issuecomment-1354447607:127,Usability,clear,clear,127,"Hi @guitargeek, I've addressed your changes and rebased to master. I've also changed `LogTimings` to `TimingAnalysis` to it is clear that it is different to the existing profiling and allows for a bit more of an in-depth analysis. I did not add the test that you requested yet since I noticed it required some more changes to the `RooFit::MultiProcessing` then simply implementing the test. I am happy to look into this later though, but I think out of the scope of this MR. But for now we have the unit tests of the HeatmapAnalyzer and the ProcessTimer themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791#issuecomment-1354447607
https://github.com/root-project/root/pull/11791#issuecomment-1354447607:361,Usability,simpl,simply,361,"Hi @guitargeek, I've addressed your changes and rebased to master. I've also changed `LogTimings` to `TimingAnalysis` to it is clear that it is different to the existing profiling and allows for a bit more of an in-depth analysis. I did not add the test that you requested yet since I noticed it required some more changes to the `RooFit::MultiProcessing` then simply implementing the test. I am happy to look into this later though, but I think out of the scope of this MR. But for now we have the unit tests of the HeatmapAnalyzer and the ProcessTimer themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791#issuecomment-1354447607
https://github.com/root-project/root/issues/11797#issuecomment-1339057027:4174,Availability,robust,robust,4174,"; + find_dependency(Vdt); +endif(); ; #----------------------------------------------------------------------------; # Now set them to ROOT_LIBRARIES; ```. Though on this latter part I wasn't sure how you prefer to pass configuration options from the build to the generated `ROOTConfig.cmake` file. :thinking:. 2. Just use `VDT_INCLUDE_DIRS` and `VDT_LIBRARIES` correctly. Like:. ```diff; diff --git a/math/vecops/CMakeLists.txt b/math/vecops/CMakeLists.txt; index 09fde3eb40..dd998c1a9b 100644; --- a/math/vecops/CMakeLists.txt; +++ b/math/vecops/CMakeLists.txt; @@ -8,10 +8,6 @@; # CMakeLists.txt file for building ROOT math/vecops package; ############################################################################; ; -if(builtin_vdt); - link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY}); -endif(); -; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; HEADERS; ROOT/RVec.hxx; @@ -23,13 +19,13 @@ ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; Core; ); ; -if(builtin_vdt OR vdt); - target_include_directories(ROOTVecOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); + target_include_directories(ROOTVecOps PUBLIC $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>; + $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>); + target_link_libraries(ROOTVecOps PUBLIC $<BUILD_INTERFACE:${VDT_LIBRARIES}>; + $<INSTALL_INTERFACE:${CMAKE_INSTALL_LIBDIR}/${CMAKE_STATIC_LIBRARY_PREFIX}vdt${CMAKE_SHARED_LIBRARY_SUFFIX}>); elseif(vdt); + target_include_directories(ROOTVecOps PUBLIC ${VDT_INCLUDE_DIRS}); target_link_libraries(ROOTVecOps PUBLIC ${VDT_LIBRARIES}); endif(); ```. I personally favour option 1, as it should be a bit more robust in the long run in my mind. But option 2 could work as well. Though it makes relocatabiity harder. (If VDT is in a different place after relocation, the `ROOTConfig-targets.cmake` file now needs to be manually updated as part of the relocation. Which is not great.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339057027
https://github.com/root-project/root/issues/11797#issuecomment-1339057027:1027,Deployability,configurat,configuration,1027,"utorial time... You basically have 2 ways in my mind to solve this nicely.; 1. Switch to using the `VDT::VDT` library during the build.; - For this you need to introduce a global imported library for `builtin_vdt`. Something like:. ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 7947fddfc0..7ad5fd91af 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1678,6 +1678,12 @@ if(vdt OR builtin_vdt); DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT extra-headers); set(vdt ON CACHE BOOL ""Enabled because builtin_vdt enabled (${vdt_description})"" FORCE); set_property(GLOBAL APPEND PROPERTY ROOT_BUILTIN_TARGETS VDT); + add_library(VDT::VDT UNKNOWN IMPORTED GLOBAL); + set_target_properties(VDT::VDT; + PROPERTIES; + IMPORTED_LOCATION ""${VDT_LIBRARIES}""; + INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + ); endif(); endif(); ```. - At this point you could simplify the build configuration to:. ```diff; diff --git a/math/vecops/CMakeLists.txt b/math/vecops/CMakeLists.txt; index 09fde3eb40..e15b5ea186 100644; --- a/math/vecops/CMakeLists.txt; +++ b/math/vecops/CMakeLists.txt; @@ -8,10 +8,6 @@; # CMakeLists.txt file for building ROOT math/vecops package; ############################################################################; ; -if(builtin_vdt); - link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY}); -endif(); -; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; HEADERS; ROOT/RVec.hxx; @@ -24,13 +20,7 @@ ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; ); ; if(builtin_vdt OR vdt); - target_include_directories(ROOTVecOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; -if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); -elseif(vdt); - target_link_libraries(ROOTVecOps PUBLIC ${VDT_LIBRARIES}); + target_link_libraries(ROOTVecOps PUBLIC VDT::VDT); endif(); ; if(MSVC); ```. - Finally, you w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339057027
https://github.com/root-project/root/issues/11797#issuecomment-1339057027:2666,Deployability,configurat,configuration,2666,"cOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; -if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); -elseif(vdt); - target_link_libraries(ROOTVecOps PUBLIC ${VDT_LIBRARIES}); + target_link_libraries(ROOTVecOps PUBLIC VDT::VDT); endif(); ; if(MSVC); ```. - Finally, you would have to ensure that `find_package(ROOT)` would look for VDT if it needs to. Like:. ```diff; diff --git a/cmake/scripts/ROOTConfig.cmake.in b/cmake/scripts/ROOTConfig.cmake.in; index 54f1a17140..054954ac8c 100644; --- a/cmake/scripts/ROOTConfig.cmake.in; +++ b/cmake/scripts/ROOTConfig.cmake.in; @@ -97,6 +97,9 @@ if(ROOT_minuit2_omp_FOUND); find_dependency(OpenMP); find_dependency(Threads); endif(); +if(@vdt@ OR @builtin_vdt@); + find_dependency(Vdt); +endif(); ; #----------------------------------------------------------------------------; # Now set them to ROOT_LIBRARIES; ```. Though on this latter part I wasn't sure how you prefer to pass configuration options from the build to the generated `ROOTConfig.cmake` file. :thinking:. 2. Just use `VDT_INCLUDE_DIRS` and `VDT_LIBRARIES` correctly. Like:. ```diff; diff --git a/math/vecops/CMakeLists.txt b/math/vecops/CMakeLists.txt; index 09fde3eb40..dd998c1a9b 100644; --- a/math/vecops/CMakeLists.txt; +++ b/math/vecops/CMakeLists.txt; @@ -8,10 +8,6 @@; # CMakeLists.txt file for building ROOT math/vecops package; ############################################################################; ; -if(builtin_vdt); - link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY}); -endif(); -; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; HEADERS; ROOT/RVec.hxx; @@ -23,13 +19,13 @@ ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; Core; ); ; -if(builtin_vdt OR vdt); - target_include_directories(ROOTVecOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); + target_include_directories(ROOTVecO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339057027
https://github.com/root-project/root/issues/11797#issuecomment-1339057027:4391,Deployability,update,updated,4391,"; + find_dependency(Vdt); +endif(); ; #----------------------------------------------------------------------------; # Now set them to ROOT_LIBRARIES; ```. Though on this latter part I wasn't sure how you prefer to pass configuration options from the build to the generated `ROOTConfig.cmake` file. :thinking:. 2. Just use `VDT_INCLUDE_DIRS` and `VDT_LIBRARIES` correctly. Like:. ```diff; diff --git a/math/vecops/CMakeLists.txt b/math/vecops/CMakeLists.txt; index 09fde3eb40..dd998c1a9b 100644; --- a/math/vecops/CMakeLists.txt; +++ b/math/vecops/CMakeLists.txt; @@ -8,10 +8,6 @@; # CMakeLists.txt file for building ROOT math/vecops package; ############################################################################; ; -if(builtin_vdt); - link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY}); -endif(); -; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; HEADERS; ROOT/RVec.hxx; @@ -23,13 +19,13 @@ ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; Core; ); ; -if(builtin_vdt OR vdt); - target_include_directories(ROOTVecOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); + target_include_directories(ROOTVecOps PUBLIC $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>; + $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>); + target_link_libraries(ROOTVecOps PUBLIC $<BUILD_INTERFACE:${VDT_LIBRARIES}>; + $<INSTALL_INTERFACE:${CMAKE_INSTALL_LIBDIR}/${CMAKE_STATIC_LIBRARY_PREFIX}vdt${CMAKE_SHARED_LIBRARY_SUFFIX}>); elseif(vdt); + target_include_directories(ROOTVecOps PUBLIC ${VDT_INCLUDE_DIRS}); target_link_libraries(ROOTVecOps PUBLIC ${VDT_LIBRARIES}); endif(); ```. I personally favour option 1, as it should be a bit more robust in the long run in my mind. But option 2 could work as well. Though it makes relocatabiity harder. (If VDT is in a different place after relocation, the `ROOTConfig-targets.cmake` file now needs to be manually updated as part of the relocation. Which is not great.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339057027
https://github.com/root-project/root/issues/11797#issuecomment-1339057027:1027,Modifiability,config,configuration,1027,"utorial time... You basically have 2 ways in my mind to solve this nicely.; 1. Switch to using the `VDT::VDT` library during the build.; - For this you need to introduce a global imported library for `builtin_vdt`. Something like:. ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 7947fddfc0..7ad5fd91af 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1678,6 +1678,12 @@ if(vdt OR builtin_vdt); DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT extra-headers); set(vdt ON CACHE BOOL ""Enabled because builtin_vdt enabled (${vdt_description})"" FORCE); set_property(GLOBAL APPEND PROPERTY ROOT_BUILTIN_TARGETS VDT); + add_library(VDT::VDT UNKNOWN IMPORTED GLOBAL); + set_target_properties(VDT::VDT; + PROPERTIES; + IMPORTED_LOCATION ""${VDT_LIBRARIES}""; + INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + ); endif(); endif(); ```. - At this point you could simplify the build configuration to:. ```diff; diff --git a/math/vecops/CMakeLists.txt b/math/vecops/CMakeLists.txt; index 09fde3eb40..e15b5ea186 100644; --- a/math/vecops/CMakeLists.txt; +++ b/math/vecops/CMakeLists.txt; @@ -8,10 +8,6 @@; # CMakeLists.txt file for building ROOT math/vecops package; ############################################################################; ; -if(builtin_vdt); - link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY}); -endif(); -; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; HEADERS; ROOT/RVec.hxx; @@ -24,13 +20,7 @@ ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; ); ; if(builtin_vdt OR vdt); - target_include_directories(ROOTVecOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; -if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); -elseif(vdt); - target_link_libraries(ROOTVecOps PUBLIC ${VDT_LIBRARIES}); + target_link_libraries(ROOTVecOps PUBLIC VDT::VDT); endif(); ; if(MSVC); ```. - Finally, you w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339057027
https://github.com/root-project/root/issues/11797#issuecomment-1339057027:2666,Modifiability,config,configuration,2666,"cOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; -if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); -elseif(vdt); - target_link_libraries(ROOTVecOps PUBLIC ${VDT_LIBRARIES}); + target_link_libraries(ROOTVecOps PUBLIC VDT::VDT); endif(); ; if(MSVC); ```. - Finally, you would have to ensure that `find_package(ROOT)` would look for VDT if it needs to. Like:. ```diff; diff --git a/cmake/scripts/ROOTConfig.cmake.in b/cmake/scripts/ROOTConfig.cmake.in; index 54f1a17140..054954ac8c 100644; --- a/cmake/scripts/ROOTConfig.cmake.in; +++ b/cmake/scripts/ROOTConfig.cmake.in; @@ -97,6 +97,9 @@ if(ROOT_minuit2_omp_FOUND); find_dependency(OpenMP); find_dependency(Threads); endif(); +if(@vdt@ OR @builtin_vdt@); + find_dependency(Vdt); +endif(); ; #----------------------------------------------------------------------------; # Now set them to ROOT_LIBRARIES; ```. Though on this latter part I wasn't sure how you prefer to pass configuration options from the build to the generated `ROOTConfig.cmake` file. :thinking:. 2. Just use `VDT_INCLUDE_DIRS` and `VDT_LIBRARIES` correctly. Like:. ```diff; diff --git a/math/vecops/CMakeLists.txt b/math/vecops/CMakeLists.txt; index 09fde3eb40..dd998c1a9b 100644; --- a/math/vecops/CMakeLists.txt; +++ b/math/vecops/CMakeLists.txt; @@ -8,10 +8,6 @@; # CMakeLists.txt file for building ROOT math/vecops package; ############################################################################; ; -if(builtin_vdt); - link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY}); -endif(); -; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; HEADERS; ROOT/RVec.hxx; @@ -23,13 +19,13 @@ ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; Core; ); ; -if(builtin_vdt OR vdt); - target_include_directories(ROOTVecOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); + target_include_directories(ROOTVecO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339057027
https://github.com/root-project/root/issues/11797#issuecomment-1339057027:1008,Usability,simpl,simplify,1008,"utorial time... You basically have 2 ways in my mind to solve this nicely.; 1. Switch to using the `VDT::VDT` library during the build.; - For this you need to introduce a global imported library for `builtin_vdt`. Something like:. ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 7947fddfc0..7ad5fd91af 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1678,6 +1678,12 @@ if(vdt OR builtin_vdt); DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT extra-headers); set(vdt ON CACHE BOOL ""Enabled because builtin_vdt enabled (${vdt_description})"" FORCE); set_property(GLOBAL APPEND PROPERTY ROOT_BUILTIN_TARGETS VDT); + add_library(VDT::VDT UNKNOWN IMPORTED GLOBAL); + set_target_properties(VDT::VDT; + PROPERTIES; + IMPORTED_LOCATION ""${VDT_LIBRARIES}""; + INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + ); endif(); endif(); ```. - At this point you could simplify the build configuration to:. ```diff; diff --git a/math/vecops/CMakeLists.txt b/math/vecops/CMakeLists.txt; index 09fde3eb40..e15b5ea186 100644; --- a/math/vecops/CMakeLists.txt; +++ b/math/vecops/CMakeLists.txt; @@ -8,10 +8,6 @@; # CMakeLists.txt file for building ROOT math/vecops package; ############################################################################; ; -if(builtin_vdt); - link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY}); -endif(); -; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; HEADERS; ROOT/RVec.hxx; @@ -24,13 +20,7 @@ ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; ); ; if(builtin_vdt OR vdt); - target_include_directories(ROOTVecOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; -if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); -elseif(vdt); - target_link_libraries(ROOTVecOps PUBLIC ${VDT_LIBRARIES}); + target_link_libraries(ROOTVecOps PUBLIC VDT::VDT); endif(); ; if(MSVC); ```. - Finally, you w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339057027
https://github.com/root-project/root/issues/11797#issuecomment-1339660363:471,Availability,error,errors,471,"I'm totally +1 for using target-based CMake, and I believe I have fixed the issue of ROOT picking up its own headers here:; https://github.com/root-project/root/pull/8709 (needs rebasing). This fixed it at least for many builtins. There still might be more builtins that have the same problem, but let's go one step at a time. I solved the VDT-related part a bit differently. If I rebased, the diff would approximately read (done manually, sorry for possible indentation errors):; ```diff; DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT extra-headers); set(vdt ON CACHE BOOL ""Enabled because builtin_vdt enabled (${vdt_description})"" FORCE); set_property(GLOBAL APPEND PROPERTY ROOT_BUILTIN_TARGETS VDT); - add_library(VDT::VDT STATIC IMPORTED GLOBAL); - set_target_properties(VDT::VDT; - PROPERTIES; - IMPORTED_LOCATION ""${VDT_LIBRARIES}""; - INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + add_library(VDT IMPORTED SHARED); + add_dependencies(VDT BUILTIN_VDT); + set_target_properties(VDT PROPERTIES IMPORTED_LOCATION ""${VDT_LIBRARIES}""); + target_include_directories(VDT INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIR}> $<INSTALL_INTERFACE:include/>); ); endif(); endif(); ```; Whether the target is declared global, static or shared, I'm not sure if it makes a big difference. I'm happy to call it `VDT::VDT`, though. I think the important part was to switch the include directories via generator expressions, and to use **SYSTEM** includes instead of includes in `FindVDT`. #11844 is missing the usage of the `VDT::VDT` target in RooFit and in tmva, but that would come into effect after a rebase of #8709. I guess therefore that we could proceed with merging #11844 if it's green, and then I rebase #8709, so I have to do the rebase work only once. Does that sound reasonable for @amadio, @krasznaa, @bellenot ?. ### Edit ; And to be clear, for `SearchInstalledSoftware` I would leave everything as proposed in Attila's commit but the change to `target_include_directories` with the two ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339660363
https://github.com/root-project/root/issues/11797#issuecomment-1339660363:1688,Energy Efficiency,green,green,1688,"g target-based CMake, and I believe I have fixed the issue of ROOT picking up its own headers here:; https://github.com/root-project/root/pull/8709 (needs rebasing). This fixed it at least for many builtins. There still might be more builtins that have the same problem, but let's go one step at a time. I solved the VDT-related part a bit differently. If I rebased, the diff would approximately read (done manually, sorry for possible indentation errors):; ```diff; DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT extra-headers); set(vdt ON CACHE BOOL ""Enabled because builtin_vdt enabled (${vdt_description})"" FORCE); set_property(GLOBAL APPEND PROPERTY ROOT_BUILTIN_TARGETS VDT); - add_library(VDT::VDT STATIC IMPORTED GLOBAL); - set_target_properties(VDT::VDT; - PROPERTIES; - IMPORTED_LOCATION ""${VDT_LIBRARIES}""; - INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + add_library(VDT IMPORTED SHARED); + add_dependencies(VDT BUILTIN_VDT); + set_target_properties(VDT PROPERTIES IMPORTED_LOCATION ""${VDT_LIBRARIES}""); + target_include_directories(VDT INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIR}> $<INSTALL_INTERFACE:include/>); ); endif(); endif(); ```; Whether the target is declared global, static or shared, I'm not sure if it makes a big difference. I'm happy to call it `VDT::VDT`, though. I think the important part was to switch the include directories via generator expressions, and to use **SYSTEM** includes instead of includes in `FindVDT`. #11844 is missing the usage of the `VDT::VDT` target in RooFit and in tmva, but that would come into effect after a rebase of #8709. I guess therefore that we could proceed with merging #11844 if it's green, and then I rebase #8709, so I have to do the rebase work only once. Does that sound reasonable for @amadio, @krasznaa, @bellenot ?. ### Edit ; And to be clear, for `SearchInstalledSoftware` I would leave everything as proposed in Attila's commit but the change to `target_include_directories` with the two generator expressions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339660363
https://github.com/root-project/root/issues/11797#issuecomment-1339660363:1848,Usability,clear,clear,1848,"g target-based CMake, and I believe I have fixed the issue of ROOT picking up its own headers here:; https://github.com/root-project/root/pull/8709 (needs rebasing). This fixed it at least for many builtins. There still might be more builtins that have the same problem, but let's go one step at a time. I solved the VDT-related part a bit differently. If I rebased, the diff would approximately read (done manually, sorry for possible indentation errors):; ```diff; DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT extra-headers); set(vdt ON CACHE BOOL ""Enabled because builtin_vdt enabled (${vdt_description})"" FORCE); set_property(GLOBAL APPEND PROPERTY ROOT_BUILTIN_TARGETS VDT); - add_library(VDT::VDT STATIC IMPORTED GLOBAL); - set_target_properties(VDT::VDT; - PROPERTIES; - IMPORTED_LOCATION ""${VDT_LIBRARIES}""; - INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + add_library(VDT IMPORTED SHARED); + add_dependencies(VDT BUILTIN_VDT); + set_target_properties(VDT PROPERTIES IMPORTED_LOCATION ""${VDT_LIBRARIES}""); + target_include_directories(VDT INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIR}> $<INSTALL_INTERFACE:include/>); ); endif(); endif(); ```; Whether the target is declared global, static or shared, I'm not sure if it makes a big difference. I'm happy to call it `VDT::VDT`, though. I think the important part was to switch the include directories via generator expressions, and to use **SYSTEM** includes instead of includes in `FindVDT`. #11844 is missing the usage of the `VDT::VDT` target in RooFit and in tmva, but that would come into effect after a rebase of #8709. I guess therefore that we could proceed with merging #11844 if it's green, and then I rebase #8709, so I have to do the rebase work only once. Does that sound reasonable for @amadio, @krasznaa, @bellenot ?. ### Edit ; And to be clear, for `SearchInstalledSoftware` I would leave everything as proposed in Attila's commit but the change to `target_include_directories` with the two generator expressions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339660363
https://github.com/root-project/root/issues/11823#issuecomment-1337020095:13,Deployability,update,update,13,"Just a small update,; I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:; ```python; import ROOT; f = ROOT.TFile(""file1.root"", ""recreate""); f.Close(); f.Close(); ```; So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823#issuecomment-1337020095
https://github.com/root-project/root/issues/11823#issuecomment-1337020095:187,Usability,simpl,simpler,187,"Just a small update,; I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:; ```python; import ROOT; f = ROOT.TFile(""file1.root"", ""recreate""); f.Close(); f.Close(); ```; So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823#issuecomment-1337020095
https://github.com/root-project/root/issues/11823#issuecomment-1347823222:130,Availability,error,errors,130,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823#issuecomment-1347823222
https://github.com/root-project/root/issues/11823#issuecomment-1347823222:207,Availability,reboot,rebooted,207,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823#issuecomment-1347823222
https://github.com/root-project/root/issues/11823#issuecomment-1347823222:92,Usability,simpl,simpler,92,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823#issuecomment-1347823222
https://github.com/root-project/root/pull/11844#issuecomment-1339205080:461,Availability,error,error,461,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080
https://github.com/root-project/root/pull/11844#issuecomment-1339205080:114,Deployability,configurat,configuration,114,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080
https://github.com/root-project/root/pull/11844#issuecomment-1339205080:278,Deployability,configurat,configuration,278,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080
https://github.com/root-project/root/pull/11844#issuecomment-1339205080:673,Deployability,install,install,673,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080
https://github.com/root-project/root/pull/11844#issuecomment-1339205080:733,Deployability,configurat,configuration,733,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080
https://github.com/root-project/root/pull/11844#issuecomment-1339205080:114,Modifiability,config,configuration,114,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080
https://github.com/root-project/root/pull/11844#issuecomment-1339205080:278,Modifiability,config,configuration,278,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080
https://github.com/root-project/root/pull/11844#issuecomment-1339205080:733,Modifiability,config,configuration,733,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080
https://github.com/root-project/root/pull/11844#issuecomment-1339205080:161,Usability,learn,learned,161,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080
https://github.com/root-project/root/pull/11844#issuecomment-1339364132:383,Availability,error,error,383,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132
https://github.com/root-project/root/pull/11844#issuecomment-1339364132:1162,Availability,avail,available,1162,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132
https://github.com/root-project/root/pull/11844#issuecomment-1339364132:1198,Availability,robust,robust,1198,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132
https://github.com/root-project/root/pull/11844#issuecomment-1339364132:687,Deployability,update,updated,687,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132
https://github.com/root-project/root/pull/11844#issuecomment-1339364132:854,Deployability,configurat,configuration,854,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132
https://github.com/root-project/root/pull/11844#issuecomment-1339364132:930,Deployability,configurat,configurations,930,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132
https://github.com/root-project/root/pull/11844#issuecomment-1339364132:389,Integrability,message,message,389,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132
https://github.com/root-project/root/pull/11844#issuecomment-1339364132:854,Modifiability,config,configuration,854,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132
https://github.com/root-project/root/pull/11844#issuecomment-1339364132:930,Modifiability,config,configurations,930,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132
https://github.com/root-project/root/pull/11844#issuecomment-1339364132:99,Testability,test,testing,99,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132
https://github.com/root-project/root/pull/11844#issuecomment-1339364132:1062,Usability,usab,usable,1062,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132
https://github.com/root-project/root/issues/11853#issuecomment-1343199135:94,Usability,simpl,simply,94,Do you see the same memory usage?. Also notice that the issue with the first reproducer might simply be some issue with my attempt to swap the arrow buffers for the std::vector.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853#issuecomment-1343199135
https://github.com/root-project/root/issues/11854#issuecomment-1341802449:38,Integrability,depend,depend,38,"An even simpler example which doesn't depend on RDF:. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper); print(res); ```. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. Output (again with centos stream 8, root 6.26/10):; ```; declare ret True; creating helper; IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'!; You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const; Maybe you need to load the corresponding shared library?; 18446744073709551615; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1341802449
https://github.com/root-project/root/issues/11854#issuecomment-1341802449:916,Performance,load,load,916,"An even simpler example which doesn't depend on RDF:. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper); print(res); ```. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. Output (again with centos stream 8, root 6.26/10):; ```; declare ret True; creating helper; IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'!; You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const; Maybe you need to load the corresponding shared library?; 18446744073709551615; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1341802449
https://github.com/root-project/root/issues/11854#issuecomment-1341802449:121,Testability,test,test,121,"An even simpler example which doesn't depend on RDF:. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper); print(res); ```. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. Output (again with centos stream 8, root 6.26/10):; ```; declare ret True; creating helper; IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'!; You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const; Maybe you need to load the corresponding shared library?; 18446744073709551615; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1341802449
https://github.com/root-project/root/issues/11854#issuecomment-1341802449:285,Testability,test,test,285,"An even simpler example which doesn't depend on RDF:. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper); print(res); ```. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. Output (again with centos stream 8, root 6.26/10):; ```; declare ret True; creating helper; IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'!; You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const; Maybe you need to load the corresponding shared library?; 18446744073709551615; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1341802449
https://github.com/root-project/root/issues/11854#issuecomment-1341802449:8,Usability,simpl,simpler,8,"An even simpler example which doesn't depend on RDF:. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper); print(res); ```. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. Output (again with centos stream 8, root 6.26/10):; ```; declare ret True; creating helper; IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'!; You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const; Maybe you need to load the corresponding shared library?; 18446744073709551615; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1341802449
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:1047,Availability,error,error,1047,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:1121,Availability,error,error,1121,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:1399,Availability,error,error,1399,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:1471,Availability,error,errors,1471,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:1053,Integrability,message,message,1053,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:134,Testability,test,test,134,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:242,Testability,test,test,242,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:319,Testability,test,test,319,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:622,Testability,test,test,622,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:948,Testability,test,test,948,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:1093,Testability,test,test,1093,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:1108,Testability,test,test,1108,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:1225,Testability,test,test,1225,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1410720055:13,Usability,simpl,simple,13,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055
https://github.com/root-project/root/issues/11854#issuecomment-1455544084:154,Availability,failure,failure,154,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1455544084
https://github.com/root-project/root/issues/11854#issuecomment-1455544084:200,Availability,error,error,200,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1455544084
https://github.com/root-project/root/issues/11854#issuecomment-1455544084:218,Performance,perform,performance,218,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1455544084
https://github.com/root-project/root/issues/11854#issuecomment-1455544084:101,Usability,simpl,simply,101,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1455544084
https://github.com/root-project/root/issues/11854#issuecomment-1455544084:259,Usability,simpl,simplifies,259,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1455544084
https://github.com/root-project/root/pull/11874#issuecomment-1361406497:383,Availability,error,error,383,"Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162985/console).; ### Errors:; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497
https://github.com/root-project/root/pull/11874#issuecomment-1361406497:549,Availability,error,error,549,"Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162985/console).; ### Errors:; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497
https://github.com/root-project/root/pull/11874#issuecomment-1361406497:727,Availability,error,error,727,"Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162985/console).; ### Errors:; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497
https://github.com/root-project/root/pull/11874#issuecomment-1361406497:895,Availability,error,error,895,"Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162985/console).; ### Errors:; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497
https://github.com/root-project/root/pull/11874#issuecomment-1361406497:1086,Availability,error,error,1086,"ullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162985/console).; ### Errors:; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-21T14:26:00.154Z] /home/sf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497
https://github.com/root-project/root/pull/11874#issuecomment-1361406497:1254,Availability,error,error,1254," - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-21T14:26:00.154Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497
https://github.com/root-project/root/pull/11874#issuecomment-1361406497:1423,Availability,error,error,1423,"] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-21T14:26:00.154Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-21T14:26:23.830Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497
https://github.com/root-project/root/pull/11874#issuecomment-1361406497:1594,Availability,error,error,1594,"ight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-21T14:26:00.154Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-21T14:26:23.830Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2022-12-2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497
https://github.com/root-project/root/pull/11874#issuecomment-1361406497:1780,Availability,error,error,1780,"pace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-21T14:26:00.154Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-21T14:26:23.830Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2022-12-21T14:26:23.830Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497
https://github.com/root-project/root/pull/11874#issuecomment-1361406497:1985,Availability,error,error,1985,"no.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-21T14:26:00.154Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-21T14:26:23.830Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2022-12-21T14:26:23.830Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497
https://github.com/root-project/root/pull/11874#issuecomment-1361406497:2230,Usability,simpl,simple,2230,"no.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-21T14:26:00.154Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-21T14:26:23.830Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2022-12-21T14:26:23.830Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497
https://github.com/root-project/root/pull/11874#issuecomment-1366467620:383,Availability,error,error,383,"Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163232/console).; ### Errors:; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620
https://github.com/root-project/root/pull/11874#issuecomment-1366467620:549,Availability,error,error,549,"Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163232/console).; ### Errors:; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620
https://github.com/root-project/root/pull/11874#issuecomment-1366467620:727,Availability,error,error,727,"Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163232/console).; ### Errors:; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620
https://github.com/root-project/root/pull/11874#issuecomment-1366467620:895,Availability,error,error,895,"Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163232/console).; ### Errors:; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620
https://github.com/root-project/root/pull/11874#issuecomment-1366467620:1086,Availability,error,error,1086,"ullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163232/console).; ### Errors:; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-28T08:32:20.829Z] /home/sf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620
https://github.com/root-project/root/pull/11874#issuecomment-1366467620:1254,Availability,error,error,1254," - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-28T08:32:20.829Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620
https://github.com/root-project/root/pull/11874#issuecomment-1366467620:1423,Availability,error,error,1423,"] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-28T08:32:20.829Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-28T08:32:21.099Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620
https://github.com/root-project/root/pull/11874#issuecomment-1366467620:1594,Availability,error,error,1594,"ight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-28T08:32:20.829Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-28T08:32:21.099Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2022-12-2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620
https://github.com/root-project/root/pull/11874#issuecomment-1366467620:1780,Availability,error,error,1780,"pace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-28T08:32:20.829Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-28T08:32:21.099Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2022-12-28T08:32:21.099Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620
https://github.com/root-project/root/pull/11874#issuecomment-1366467620:1985,Availability,error,error,1985,"no.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-28T08:32:20.829Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-28T08:32:21.099Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2022-12-28T08:32:21.099Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620
https://github.com/root-project/root/pull/11874#issuecomment-1366467620:2230,Usability,simpl,simple,2230,"no.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-28T08:32:20.829Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-28T08:32:21.099Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2022-12-28T08:32:21.099Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620
https://github.com/root-project/root/pull/11874#issuecomment-1368960482:396,Availability,error,error,396,Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163311/console).; ### Errors:; - [2023-01-02T13:46:22.128Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:307:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ ; - [2023-01-02T13:46:22.128Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:701:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ . ### Warnings:; - [2023-01-02T13:41:26.055Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2023-01-02T13:41:26.575Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:41:26.575Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:42:45.530Z] /home/sftnight/build/workspace/root-pullrequests-build/root/io/io/src/TEmulatedMapProxy.cxx:144:25: warning: bitwise operation between different enumeration types ‘EProperty’ and ‘TGenCollectionProxy::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1368960482
https://github.com/root-project/root/pull/11874#issuecomment-1368960482:689,Availability,error,error,689,Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163311/console).; ### Errors:; - [2023-01-02T13:46:22.128Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:307:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ ; - [2023-01-02T13:46:22.128Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:701:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ . ### Warnings:; - [2023-01-02T13:41:26.055Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2023-01-02T13:41:26.575Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:41:26.575Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:42:45.530Z] /home/sftnight/build/workspace/root-pullrequests-build/root/io/io/src/TEmulatedMapProxy.cxx:144:25: warning: bitwise operation between different enumeration types ‘EProperty’ and ‘TGenCollectionProxy::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1368960482
https://github.com/root-project/root/pull/11874#issuecomment-1368960482:1011,Usability,simpl,simple,1011, on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163311/console).; ### Errors:; - [2023-01-02T13:46:22.128Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:307:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ ; - [2023-01-02T13:46:22.128Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:701:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ . ### Warnings:; - [2023-01-02T13:41:26.055Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2023-01-02T13:41:26.575Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:41:26.575Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:42:45.530Z] /home/sftnight/build/workspace/root-pullrequests-build/root/io/io/src/TEmulatedMapProxy.cxx:144:25: warning: bitwise operation between different enumeration types ‘EProperty’ and ‘TGenCollectionProxy::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:42:45.530Z] /home/sftnig,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1368960482
https://github.com/root-project/root/pull/11874#issuecomment-1376839076:396,Availability,error,error,396,Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163670/console).; ### Errors:; - [2023-01-10T07:30:15.222Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:307:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ ; - [2023-01-10T07:30:15.222Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:701:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ . ### Warnings:; - [2023-01-10T07:26:17.045Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2023-01-10T07:26:17.322Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:17.322Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:46.426Z] /home/sftnight/build/workspace/root-pullrequests-build/root/io/io/src/TEmulatedMapProxy.cxx:144:25: warning: bitwise operation between different enumeration types ‘EProperty’ and ‘TGenCollectionProxy::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1376839076
https://github.com/root-project/root/pull/11874#issuecomment-1376839076:689,Availability,error,error,689,Build failed on ROOT-ubuntu2204/cxx20.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163670/console).; ### Errors:; - [2023-01-10T07:30:15.222Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:307:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ ; - [2023-01-10T07:30:15.222Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:701:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ . ### Warnings:; - [2023-01-10T07:26:17.045Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2023-01-10T07:26:17.322Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:17.322Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:46.426Z] /home/sftnight/build/workspace/root-pullrequests-build/root/io/io/src/TEmulatedMapProxy.cxx:144:25: warning: bitwise operation between different enumeration types ‘EProperty’ and ‘TGenCollectionProxy::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1376839076
https://github.com/root-project/root/pull/11874#issuecomment-1376839076:1011,Usability,simpl,simple,1011, on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163670/console).; ### Errors:; - [2023-01-10T07:30:15.222Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:307:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ ; - [2023-01-10T07:30:15.222Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:701:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ . ### Warnings:; - [2023-01-10T07:26:17.045Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2023-01-10T07:26:17.322Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:17.322Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:46.426Z] /home/sftnight/build/workspace/root-pullrequests-build/root/io/io/src/TEmulatedMapProxy.cxx:144:25: warning: bitwise operation between different enumeration types ‘EProperty’ and ‘TGenCollectionProxy::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:46.426Z] /home/sftnig,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1376839076
https://github.com/root-project/root/pull/11892#issuecomment-1351098247:205,Usability,simpl,simply,205,"> You should probably just delete that commit from the branch history, e.g. with an interactive rebase (`git rebase -i master` + `git push --force`). Isn't ""squash and merge"" good enough? Otherwise I will simply make another PR, so I'm sure not to screw up ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11892#issuecomment-1351098247
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:8606,Availability,error,errors,8606,"developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test CXX_HAS_Wno_nested_anon_types; -- Performing Test CXX_HAS_Wno_nested_anon_types - Success; -- Performing Test CXX_HAS_Wno_covered_switch_default; -- Performing Test CXX_HAS_Wno_covered_switch_default - Success; -- Performing Test CXX_HAS_Wno_unused_local_typedef; -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success; -- Cling version (from VERSION file): 1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime.; -- And if not found, will invoke: '/usr/bin/c++ ' for them.; CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. -- Configuring incomplete, errors occurred!; See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"".; See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"".; jonesmz@ymir ~ $; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:1095,Modifiability,config,config,1095,"Also reproducible on gentoo. ```; jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git; Cloning into 'cling'...; remote: Enumerating objects: 31202, done.; remote: Counting objects: 100% (651/651), done.; remote: Compressing objects: 100% (193/193), done.; remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551; Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done.; Resolving deltas: 100% (23380/23380), done.; jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF; -- The C compiler identification is GNU 11.3.1; -- The CXX compiler identification is GNU 11.3.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config; -- Performing Test HAVE_FFI_CALL; -- Performing Test HAVE_FFI_CALL - Success; -- Found FFI: /usr/lib64/libffi.so; -- Performing Test Terminfo_LINKABLE; -- Performing Test Terminfo_LINKABLE - Success; -- Found Terminfo: /usr/lib64/libtinfo.so; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""); -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:2225,Modifiability,variab,variables,2225," /usr/lib64/libffi.so; -- Performing Test Terminfo_LINKABLE; -- Performing Test Terminfo_LINKABLE - Success; -- Found Terminfo: /usr/lib64/libtinfo.so; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""); -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_WARNINGS'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME; -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG; -- Performing Tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:2445,Modifiability,variab,variable,2445,"2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_WARNINGS'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME; -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test CXX_SUPPORTS_IMPLICIT_FAL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:5902,Modifiability,variab,variables,5902,"ERSION_FLAG; -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed; -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FDATA_SECTIONS; -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6122,Modifiability,variab,variable,6122," CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FDATA_SECTIONS; -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6431,Modifiability,variab,variables,6431,"ORTS_FFUNCTION_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FDATA_SECTIONS; -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for proje",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6651,Modifiability,variab,variable,6651,"FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6956,Modifiability,variab,variables,6956,"-help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test CXX_HAS_Wno_nested_anon_types; -- Performing Test CXX_HAS_Wno_nested_anon_types - Success; -- Performing Test CXX_HAS_Wno_covered_switch_default; -- Performing Test CXX_HAS_Wno_covered_switch_default - Success; -- Performing Test CXX_HAS_Wno_unused_local_typedef; -- Performing Test CXX_HAS_Wno_unuse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:7176,Modifiability,variab,variable,7176,"ack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test CXX_HAS_Wno_nested_anon_types; -- Performing Test CXX_HAS_Wno_nested_anon_types - Success; -- Performing Test CXX_HAS_Wno_covered_switch_default; -- Performing Test CXX_HAS_Wno_covered_switch_default - Success; -- Performing Test CXX_HAS_Wno_unused_local_typedef; -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success; -- Cling version (from VERSION file): 1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:8561,Modifiability,config,configuring,8561,"developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test CXX_HAS_Wno_nested_anon_types; -- Performing Test CXX_HAS_Wno_nested_anon_types - Success; -- Performing Test CXX_HAS_Wno_covered_switch_default; -- Performing Test CXX_HAS_Wno_covered_switch_default - Success; -- Performing Test CXX_HAS_Wno_unused_local_typedef; -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success; -- Cling version (from VERSION file): 1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime.; -- And if not found, will invoke: '/usr/bin/c++ ' for them.; CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. -- Configuring incomplete, errors occurred!; See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"".; See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"".; jonesmz@ymir ~ $; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:1482,Safety,detect,detection,1482,"le features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config; -- Performing Test HAVE_FFI_CALL; -- Performing Test HAVE_FFI_CALL - Success; -- Found FFI: /usr/lib64/libffi.so; -- Performing Test Terminfo_LINKABLE; -- Performing Test Terminfo_LINKABLE - Success; -- Found Terminfo: /usr/lib64/libtinfo.so; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""); -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_WARNINGS'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME; -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:8683,Testability,log,log,8683,"developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test CXX_HAS_Wno_nested_anon_types; -- Performing Test CXX_HAS_Wno_nested_anon_types - Success; -- Performing Test CXX_HAS_Wno_covered_switch_default; -- Performing Test CXX_HAS_Wno_covered_switch_default - Success; -- Performing Test CXX_HAS_Wno_unused_local_typedef; -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success; -- Cling version (from VERSION file): 1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime.; -- And if not found, will invoke: '/usr/bin/c++ ' for them.; CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. -- Configuring incomplete, errors occurred!; See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"".; See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"".; jonesmz@ymir ~ $; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:8748,Testability,log,log,8748,"developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test CXX_HAS_Wno_nested_anon_types; -- Performing Test CXX_HAS_Wno_nested_anon_types - Success; -- Performing Test CXX_HAS_Wno_covered_switch_default; -- Performing Test CXX_HAS_Wno_covered_switch_default - Success; -- Performing Test CXX_HAS_Wno_unused_local_typedef; -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success; -- Cling version (from VERSION file): 1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime.; -- And if not found, will invoke: '/usr/bin/c++ ' for them.; CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. -- Configuring incomplete, errors occurred!; See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"".; See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"".; jonesmz@ymir ~ $; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:2424,Usability,clear,clearing,2424,"2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_WARNINGS'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME; -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test CXX_SUPPORTS_IMPLICIT_FAL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6101,Usability,clear,clearing,6101," CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FDATA_SECTIONS; -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6630,Usability,clear,clearing,6630,"FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11920#issuecomment-1370394653:7155,Usability,clear,clearing,7155,"ack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test CXX_HAS_Wno_nested_anon_types; -- Performing Test CXX_HAS_Wno_nested_anon_types - Success; -- Performing Test CXX_HAS_Wno_covered_switch_default; -- Performing Test CXX_HAS_Wno_covered_switch_default - Success; -- Performing Test CXX_HAS_Wno_unused_local_typedef; -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success; -- Cling version (from VERSION file): 1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653
https://github.com/root-project/root/issues/11927#issuecomment-1361002552:179,Availability,echo,echo,179,@Axel-Naumann ; In case simple `-m profile` can be helpful:. ```; ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) ; ... ; real	0m14.144s; user	0m10.412s; sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ); ... real	0m45.779s; user	0m36.429s; sys	0m4.734s. ```; output files: ; [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70); [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361002552
https://github.com/root-project/root/issues/11927#issuecomment-1361002552:420,Availability,echo,echo,420,@Axel-Naumann ; In case simple `-m profile` can be helpful:. ```; ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) ; ... ; real	0m14.144s; user	0m10.412s; sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ); ... real	0m45.779s; user	0m36.429s; sys	0m4.734s. ```; output files: ; [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70); [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361002552
https://github.com/root-project/root/issues/11927#issuecomment-1361002552:24,Usability,simpl,simple,24,@Axel-Naumann ; In case simple `-m profile` can be helpful:. ```; ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) ; ... ; real	0m14.144s; user	0m10.412s; sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ); ... real	0m45.779s; user	0m36.429s; sys	0m4.734s. ```; output files: ; [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70); [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361002552
https://github.com/root-project/root/issues/11927#issuecomment-1361014198:158,Availability,echo,echo,158,"For completeness dev3/Fri vs dev3/Thu. ```; ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt ; ...; real	0m45.976s; user	0m36.305s; sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ); ... real	0m31.001s; user	0m12.790s; sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361014198
https://github.com/root-project/root/issues/11927#issuecomment-1361014198:401,Availability,echo,echo,401,"For completeness dev3/Fri vs dev3/Thu. ```; ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt ; ...; real	0m45.976s; user	0m36.305s; sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ); ... real	0m31.001s; user	0m12.790s; sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361014198
https://github.com/root-project/root/issues/11927#issuecomment-1361014198:825,Performance,perform,performance,825,"For completeness dev3/Fri vs dev3/Thu. ```; ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt ; ...; real	0m45.976s; user	0m36.305s; sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ); ... real	0m31.001s; user	0m12.790s; sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361014198
https://github.com/root-project/root/issues/11927#issuecomment-1361014198:574,Testability,log,log-files,574,"For completeness dev3/Fri vs dev3/Thu. ```; ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt ; ...; real	0m45.976s; user	0m36.305s; sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ); ... real	0m31.001s; user	0m12.790s; sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361014198
https://github.com/root-project/root/issues/11927#issuecomment-1361014198:754,Testability,test,tests,754,"For completeness dev3/Fri vs dev3/Thu. ```; ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt ; ...; real	0m45.976s; user	0m36.305s; sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ); ... real	0m31.001s; user	0m12.790s; sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361014198
https://github.com/root-project/root/issues/11927#issuecomment-1361014198:780,Usability,clear,clearly,780,"For completeness dev3/Fri vs dev3/Thu. ```; ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt ; ...; real	0m45.976s; user	0m36.305s; sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ); ... real	0m31.001s; user	0m12.790s; sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361014198
https://github.com/root-project/root/issues/11927#issuecomment-1399911161:93,Performance,perform,performance,93,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1399911161
https://github.com/root-project/root/issues/11927#issuecomment-1399911161:45,Testability,test,tests,45,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1399911161
https://github.com/root-project/root/issues/11927#issuecomment-1399911161:16,Usability,pause,pause,16,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1399911161
https://github.com/root-project/root/issues/11938#issuecomment-1372092925:2,Usability,simpl,simpler,2,"a simpler reproducer:; ```; void HV_comp_red(){; Double_t biasVoltage[28] = {80., 70., 60., 50., 40., 30., 20., 10., 9., 8., 7., 6., 5., 4., 3., 2., 1., 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.08, 0.06};; Double_t mean0[28] = {0., -4.45, -3.81, -14.65, -11.81, -12.56, -12.25, -6.26, -9.40, -7.98, -7.14, -17.87, -12.26, -11.41, -13.35, -14.51, -7.51, -16.15, -12.67, -18.58, -8.76, -8.94, -13.75, -14.31, -12.76, -14.16, -8.24, -135.4};. auto graph0 = new TGraph(28, biasVoltage, mean0);. graph0->SetMarkerColor(2);; graph0->SetMarkerStyle(20);. TCanvas *canvas = new TCanvas(""c"", ""c"", 200,10,900,600);; canvas->SetLogx();; graph0->Draw(""a p rx"");; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938#issuecomment-1372092925
https://github.com/root-project/root/pull/11949#issuecomment-1361867780:3064,Availability,error,error,3064,high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00024412700; root [3] .q; [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x23be190; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();; ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'; std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();; ~~~ ^; root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();; [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'; root [3] .q; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x1d86820; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - st,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949#issuecomment-1361867780
https://github.com/root-project/root/pull/11949#issuecomment-1361867780:64,Testability,benchmark,benchmark,64,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x372cc00; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00026606600; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/; [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x3c458b0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00024825600; root [3] .q; [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x2b9a7d0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re; solution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00027867100; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949#issuecomment-1361867780
https://github.com/root-project/root/pull/11949#issuecomment-1361867780:135,Testability,benchmark,benchmark,135,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x372cc00; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00026606600; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/; [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x3c458b0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00024825600; root [3] .q; [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x2b9a7d0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re; solution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00027867100; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949#issuecomment-1361867780
https://github.com/root-project/root/pull/11949#issuecomment-1361867780:128,Usability,simpl,simple,128,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x372cc00; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00026606600; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/; [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x3c458b0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00024825600; root [3] .q; [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x2b9a7d0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re; solution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00027867100; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949#issuecomment-1361867780
https://github.com/root-project/root/issues/11971#issuecomment-1371082629:167,Usability,simpl,simpler,167,"Hi @HenryDayHall ,. yes that line is a leftover and #11972 will remove it (thanks to @ferdymercury ). I suggest looking at RCsvDS, RNTupleDS or RArrowDS (ordered from simpler to more complex) for existing implementations of data sources. RRootDS is unused and we might remove it in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11971#issuecomment-1371082629
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:249,Testability,test,tests,249,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:272,Testability,test,test,272,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:390,Testability,test,testReport,390,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:413,Testability,test,test,413,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:499,Testability,test,test,499,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:621,Testability,test,testReport,621,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:675,Testability,test,test,675,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:871,Testability,test,testReport,871,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:1106,Testability,test,testReport,1106,rkspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-ser,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:1366,Testability,test,testReport,1366,ns/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:1652,Testability,test,testReport,1652,zations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:1914,Testability,test,testReport,1914,zations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:2154,Testability,test,testReport,2154,zations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:2402,Testability,test,testReport,2402,zations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:1511,Usability,simpl,simple,1511,zations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380358995:1698,Usability,simpl,simple,1698,zations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:249,Testability,test,tests,249,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-3.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/console).; ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:425,Testability,test,testReport,425,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-3.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/console).; ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:681,Testability,test,testReport,681,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-3.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/console).; ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:939,Testability,test,testReport,939,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-3.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/console).; ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:1188,Testability,test,testReport,1188,.ch/root-jenkins/job/root-pullrequests-build/164079/console).; ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:1441,Testability,test,testReport,1441,stReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.fastcloning.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:1710,Testability,test,testReport,1710,ts-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:1982,Testability,test,testReport,1982,ts-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:2268,Testability,test,testReport,2268,ts-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:2557,Testability,test,testReport,2557,ts-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:2127,Usability,simpl,simple,2127,ts-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380875995:2314,Usability,simpl,simple,2314,ts-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995
https://github.com/root-project/root/pull/12018#issuecomment-1380914798:263,Testability,test,tests,263,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380914798
https://github.com/root-project/root/pull/12018#issuecomment-1380914798:286,Testability,test,test,286,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380914798
https://github.com/root-project/root/pull/12018#issuecomment-1380914798:404,Testability,test,testReport,404,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380914798
https://github.com/root-project/root/pull/12018#issuecomment-1380914798:427,Testability,test,test,427,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380914798
https://github.com/root-project/root/pull/12018#issuecomment-1380914798:632,Testability,test,testReport,632,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380914798
https://github.com/root-project/root/pull/12018#issuecomment-1380914798:906,Testability,test,testReport,906,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380914798
https://github.com/root-project/root/pull/12018#issuecomment-1380914798:1168,Testability,test,testReport,1168,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380914798
https://github.com/root-project/root/pull/12018#issuecomment-1380914798:765,Usability,simpl,simple,765,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380914798
https://github.com/root-project/root/pull/12018#issuecomment-1380914798:952,Usability,simpl,simple,952,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380914798
https://github.com/root-project/root/pull/12045#issuecomment-1385813529:274,Usability,undo,undocumented,274,"Additional mention of the original issue (chained lookups): https://developer.apple.com/forums/thread/719961, https://github.com/python/cpython/issues/97524 ; and https://openradar.appspot.com/radar?id=5536824084660224. Instead of `-Wl,-w` (which suppress all warnings), an undocumented options seems to be `-Xlinker -no_fixup_chains` (humm I guess actually maybe `-Wl,-no_fixup_chains`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12045#issuecomment-1385813529
https://github.com/root-project/root/pull/12045#issuecomment-1386778190:54,Usability,undo,undocumented,54,"> Instead of -Wl,-w (which suppress all warnings), an undocumented options seems to be -Xlinker -no_fixup_chains (humm I guess actually maybe -Wl,-no_fixup_chains). I am afraid that older linkers will not know `-no_fixup_chains` as that seems to be a new concern. So `-w` it is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12045#issuecomment-1386778190
https://github.com/root-project/root/pull/12061#issuecomment-1397463096:347,Integrability,message,message,347,"Good question, but unfortunately I have to admit I don't really know why. I didn't have that much time to investigate but needed a fix for 6.28 for which I'm already late. The TFoam class is quite fundamental to RooFit, and the memory increase has affected many users. All I had was this hint by valgrind when checked the reproducer in the commit message:; ```; Conditional jump or move depends on uninitialised value(s); at 0x402E09: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); by 0x501B33D: TDirectory::TDirectory() (in /usr/lib64/root/libCore.so.6.26.10); by 0x5816D81: TDirectoryFile::TDirectoryFile() (in /usr/lib64/root/libRIO.so.6.26.10); by 0x5833AF8: TFile::TFile(char const*, char const*, char const*, int) (in /usr/lib64/root/libRIO.so.6.26.10); by 0xE2D86A6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (in /usr/lib64/root/libCling.so.6.26.10); by 0xE2D9A17: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,; allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (in /usr/lib64/root/libCling.so.6.26.10); by 0x4FF098E: TROOT::InitInterpreter() (in /usr/lib64/root/libCore.so.6.26.10); by 0x4FF0C9E: ROOT::Internal::GetROOT2() (in /usr/lib64/root/libCore.so.6.26.10); by 0x510209C: ROOT::TGenericClassInfo::GetClass() (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B67CA: TFoamCell::Class() (in /usr/lib64/root/libFoam.so.6.26.10); by 0x504BE7A: TRef::operator=(TObject*) (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B126F: TFoamCell::Fill(int, TFoamCell*, TFoamCell*, TFoamCell*) (in /usr/lib64/root/libFoam.so.6.26.10); Uninitialised value was created by a stack allocation; at 0xE2D8106: TCling::LoadPCM(std::__cxx11::basic_string<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12061#issuecomment-1397463096
https://github.com/root-project/root/pull/12061#issuecomment-1397463096:387,Integrability,depend,depends,387,"Good question, but unfortunately I have to admit I don't really know why. I didn't have that much time to investigate but needed a fix for 6.28 for which I'm already late. The TFoam class is quite fundamental to RooFit, and the memory increase has affected many users. All I had was this hint by valgrind when checked the reproducer in the commit message:; ```; Conditional jump or move depends on uninitialised value(s); at 0x402E09: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); by 0x501B33D: TDirectory::TDirectory() (in /usr/lib64/root/libCore.so.6.26.10); by 0x5816D81: TDirectoryFile::TDirectoryFile() (in /usr/lib64/root/libRIO.so.6.26.10); by 0x5833AF8: TFile::TFile(char const*, char const*, char const*, int) (in /usr/lib64/root/libRIO.so.6.26.10); by 0xE2D86A6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (in /usr/lib64/root/libCling.so.6.26.10); by 0xE2D9A17: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,; allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (in /usr/lib64/root/libCling.so.6.26.10); by 0x4FF098E: TROOT::InitInterpreter() (in /usr/lib64/root/libCore.so.6.26.10); by 0x4FF0C9E: ROOT::Internal::GetROOT2() (in /usr/lib64/root/libCore.so.6.26.10); by 0x510209C: ROOT::TGenericClassInfo::GetClass() (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B67CA: TFoamCell::Class() (in /usr/lib64/root/libFoam.so.6.26.10); by 0x504BE7A: TRef::operator=(TObject*) (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B126F: TFoamCell::Fill(int, TFoamCell*, TFoamCell*, TFoamCell*) (in /usr/lib64/root/libFoam.so.6.26.10); Uninitialised value was created by a stack allocation; at 0xE2D8106: TCling::LoadPCM(std::__cxx11::basic_string<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12061#issuecomment-1397463096
https://github.com/root-project/root/pull/12061#issuecomment-1397463096:2188,Usability,simpl,simple,2188,"nt by valgrind when checked the reproducer in the commit message:; ```; Conditional jump or move depends on uninitialised value(s); at 0x402E09: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); by 0x501B33D: TDirectory::TDirectory() (in /usr/lib64/root/libCore.so.6.26.10); by 0x5816D81: TDirectoryFile::TDirectoryFile() (in /usr/lib64/root/libRIO.so.6.26.10); by 0x5833AF8: TFile::TFile(char const*, char const*, char const*, int) (in /usr/lib64/root/libRIO.so.6.26.10); by 0xE2D86A6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (in /usr/lib64/root/libCling.so.6.26.10); by 0xE2D9A17: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,; allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (in /usr/lib64/root/libCling.so.6.26.10); by 0x4FF098E: TROOT::InitInterpreter() (in /usr/lib64/root/libCore.so.6.26.10); by 0x4FF0C9E: ROOT::Internal::GetROOT2() (in /usr/lib64/root/libCore.so.6.26.10); by 0x510209C: ROOT::TGenericClassInfo::GetClass() (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B67CA: TFoamCell::Class() (in /usr/lib64/root/libFoam.so.6.26.10); by 0x504BE7A: TRef::operator=(TObject*) (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B126F: TFoamCell::Fill(int, TFoamCell*, TFoamCell*, TFoamCell*) (in /usr/lib64/root/libFoam.so.6.26.10); Uninitialised value was created by a stack allocation; at 0xE2D8106: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (in /usr/lib64/root/libCling.so.6.26.10); ```. This made me think that maybe TRef is the problem, and indeed replacind the TRef with simple indices solved the problem. Is there something that you can make of that valgrind output maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12061#issuecomment-1397463096
https://github.com/root-project/root/pull/12062#issuecomment-1419006181:128,Usability,simpl,simplified,128,"Some further debugging (but really just dumping notes from some experiments):; * The problem of `histhistdrawv7testUnit` can be simplified, in some approximation, to:; ```; root [0] TClass::GetClass(""ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>""); root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; ```; * Even simpler, just trying to create an object of that template instantiation fails:; ```; root [0] ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> h;; root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; ```; * Funnily enough, the `using RH1D = RHist<1, double, RHistStatContent, RHistStatUncertainty>` works just fine; same if I remove the second `STAT` template and only leave `RHistStatContent`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1419006181
https://github.com/root-project/root/pull/12062#issuecomment-1419006181:510,Usability,simpl,simpler,510,"Some further debugging (but really just dumping notes from some experiments):; * The problem of `histhistdrawv7testUnit` can be simplified, in some approximation, to:; ```; root [0] TClass::GetClass(""ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>""); root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; ```; * Even simpler, just trying to create an object of that template instantiation fails:; ```; root [0] ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> h;; root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; ```; * Funnily enough, the `using RH1D = RHist<1, double, RHistStatContent, RHistStatUncertainty>` works just fine; same if I remove the second `STAT` template and only leave `RHistStatContent`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1419006181
https://github.com/root-project/root/pull/12062#issuecomment-1419265262:1278,Modifiability,inherit,inheritance,1278,"> Some further debugging (but really just dumping notes from some experiments):; > ; > * The problem of `histhistdrawv7testUnit` can be simplified, in some approximation, to:; > ; > ; > ```; > root [0] TClass::GetClass(""ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>""); > root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; > ```; > ; > * Even simpler, just trying to create an object of that template instantiation fails:; > ; > ; > ```; > root [0] ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> h;; > root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; > ```; > ; > * Funnily enough, the `using RH1D = RHist<1, double, RHistStatContent, RHistStatUncertainty>` works just fine; same if I remove the second `STAT` template and only leave `RHistStatContent`. I've been stumbling upon these before: this is not simple as it has some template parameter pack expansion as part of the class inheritance chain...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1419265262
